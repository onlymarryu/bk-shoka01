<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>每天进步一点点，就是成功的开始</title>
        <subtitle></subtitle>
        <icon>https://eth168.top/images/favicon.ico</icon>
        <link>https://eth168.top</link>
        <author>
          <name>雾都</name>
        </author>
        <description>花非花，雾非雾</description>
        <language>zh-CN</language>
        <pubDate>Sat, 22 Jul 2023 23:02:29 +0800</pubDate>
        <lastBuildDate>Sat, 22 Jul 2023 23:02:29 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">https://eth168.top/tools/MobaXterm/</guid>
            <title>mobaxerm</title>
            <link>https://eth168.top/tools/MobaXterm/</link>
            <category term="工具软件安装" scheme="https://eth168.top/categories/%E5%B7%A5%E5%85%B7%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/" />
            <category term="工具软件安装 - Terminal" scheme="https://eth168.top/tags/%E5%B7%A5%E5%85%B7%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85-Terminal/" />
            <pubDate>Sat, 22 Jul 2023 23:02:29 +0800</pubDate>
            <description><![CDATA[ &lt;img data-src=&#34;/tools/MobaXterm/87e694d6f3fb4e70a2e9a7ae839ab68a.png&#34; class=&#34;&#34;&gt;
&lt;p&gt;中文版下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21vYmF4dGVybS5pbmZvL3NvZnQvTW9iYVh0ZXJtJUU0JUI4JUFEJUU2JTk2JTg3JUU3JTg5JTg4LnppcA==&#34;&gt;http://mobaxterm.info/soft/MobaXterm 中文版.zip&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT1Nb2JhWHRlcm0mYW1wO3NwbT0xMDAxLjIxMDEuMzAwMS43MDIw&#34;&gt;MobaXterm&lt;/span&gt; 又名 MobaXVT，是一款增强型终端、X 服务器和 Unix 命令集（GNU/ Cygwin）工具箱。可以开启多个终端视窗，以最新的 X 服务器为基础的 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL1guT3Jn&#34;&gt;X.Org&lt;/span&gt;，可以轻松地来试用 Unix/Linux 上的 GNU Unix 命令。这样一来，我们可以不用安装虚拟机来试用虚拟环境，然后只要通过 MobaXterm 就可以使用大多数的 linux 命令。MobaXterm 还有很强的扩展能力，可以集成插件来运行 Emacs、Fontforge、Gcc, G++ and development tools、MPlayer、Perl、Curl、Corkscrew、 Tcl / Tk / Expect、 Screen、 Png2Ico 、 NEdit  Midnight Commander 等程序。&lt;/p&gt;
&lt;p&gt;MobaXterm 分免费开源版和收费专业版。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;免费开源版：免费开源版又分便捷版（解压即用）和安装版（需要一步步安装）。免费版在终端底部还多了一个 &amp;quot;UNREGISTERED VERSION&amp;quot; 提示。&lt;/li&gt;
&lt;li&gt;专业版（Professional）：专业版会在 sessions 数、SSH tunnels 数和其他一些定制化配置进行限制。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PuTTY 足够成熟、小巧、专注核心任务，支持设置编码，键盘映射，通过 plink 做 ssh 隧道，通过 pscp 实现 scp 文件传输，通过 psftp 做 sftp 客户端，通过 puttygen 生成和管理 ssh 证书。可以说 putty 虽然小，但是功能一个也没落下，麻雀虽小，五脏俱全。但是 Putty 没有多服务管理和标签页切换等的功能。&lt;/p&gt;
&lt;h1 id=&#34;1-主要功能&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-主要功能&#34;&gt;#&lt;/a&gt; 1、主要功能&lt;/h1&gt;
&lt;p&gt;支持各种连接 SSH，X11，RDP，VNC，FTP，MOSH&lt;br /&gt;
 支持 Unix 命令（bash，ls，cat，sed，grep，awk，rsync，…）&lt;br /&gt;
连接 SSH 终端后支持 SFTP 传输文件&lt;br /&gt;
各种丰富的插件（git/dig/aria2…）&lt;br /&gt;
可运行 Windows 或软件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1. 会话管理 ：MobaXterm 允许您启动远程会话。您可以选择创建 SSH，远程登录，Rlogin 的，RDP，VNC，XDMCP，FTP，SFTP 或串行会话。你开始每个会话会自动保存，并在左侧边栏显示。&lt;/li&gt;
&lt;li&gt;2. 图形化 SFTP 浏览器 ：当您登录到使用 SSH 远程服务器，图形 SFTP 浏览器弹出在左侧边栏。它可以让你拖动并直接从 / 到远程服务器使用安全 SFTP 连接拖放文件。&lt;/li&gt;
&lt;li&gt;3.X11 服务器 ：当您运行 SSH，TELNET 或 RLOGIN/RSH 会话。你将能够直接在本地 WindowsPC 上显示您的远程应用程序。在一个 SSH 会话，也没有&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY3IxNzMuY29tL2svYml5YW8vP2xvZ2luPWZyb21fY3Nkbg==&#34;&gt;必要&lt;/span&gt;为 MobaXterm 使用 X11 转发。以缓解并保护您的工作设置 “DISPLAY” 变量。&lt;/li&gt;
&lt;li&gt;4. 增强 X 扩展 ：基于 X.org 嵌入式 X 服务器提供了最近的 X 服务器的实现提供最新的功能：扩展功能，如 OpenGL 的，复合或 RANDR 都包括在内。还支持 XDMCP 协议。&lt;/li&gt;
&lt;li&gt;5. 多执行 ：编写一次，到处运行：这个工具可以让你在同一时间运行在许多不同的服务器相同的命令。&lt;/li&gt;
&lt;li&gt;6. 嵌入式服务器 ：MobaXterm 可以启动网络守护程序进行远程访问。无需额外的工具或运行时需要的，以便使用这些守护程序。&lt;/li&gt;
&lt;li&gt;7. 嵌入式工具 ：MobaXterm 带来了一些有用的工具，系统管理员，developpers，网站管理员。谁需要用计算机高效工作的所有用户。&lt;/li&gt;
&lt;li&gt;8. 远程 UNIX 的桌面（XDMCP）：由于 MobaXterm 您可以将远程 Solaris 桌面上工作。因为如果你是在本地 Windows 计算机上使用 XDMCP 协议工作。&lt;/li&gt;
&lt;li&gt;9. 远程 Windows 桌面（RDP） ： 利用远程 Windows 计算机 / 使用 RDP 协议的服务器控制。许多 RDP 配置设置在会话管理器可用。&lt;/li&gt;
&lt;li&gt;10.SSH 网关 ：在 SSH，TELNET，RDP，VNC 会话，您可以选择 “SSH - 网关”（又名 “跳跃主机”）。以告诉 MobaXterm 先连接到 SSH 服务器连接到终端服务器之前要达到结束。这让你达到一个防火墙后面的一些服务器，并保护您的连接。&lt;/li&gt;
&lt;li&gt;11.SSH 隧道（端口转发） ：图形 SSH 隧道管理器允许您使用直观的图形化的工具来创建你的 SSH 隧道。&lt;/li&gt;
&lt;li&gt;12.MobApt 包管理器 ：MobaXterm 包管理器（MobApt/apt-get 的）。可以下载和使用更多的 Unix 工具直接进入 MobaXterm 终端。MobApt 包管理器（apt-get 的）&lt;/li&gt;
&lt;li&gt;13. 文本编辑器 ：当您使用 SSH 连接到远程服务器上。您将可以直接使用嵌入式文本编辑器 “MobaTextEditor” 编辑远程文件。&lt;/li&gt;
&lt;li&gt;只需双击他们！通过 SSH/SFTP 直版&lt;/li&gt;
&lt;li&gt;14. 宏支持 ：您可以记录在 MobaXterm 终端宏：一切你在终端类型将被记录。以便在以后重播其他服务器上。&lt;/li&gt;
&lt;li&gt;15. 密码管理 ： MobaXterm 就是能救你的会话密码，并让他们安全使用 “主密码”。&lt;/li&gt;
&lt;li&gt;16. 专业定制 ：MobaXterm 专业版，您可以访问专业支持，并以 “定制” 的软件。这个程序可以生成 MobaXterm 的定制副本用自己的徽标和默认设置。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;多终端-分屏&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多终端-分屏&#34;&gt;#&lt;/a&gt; &lt;strong&gt;多终端 分屏&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;MobaXterm 内置多标签页、横向纵向 2 分屏和田字形 4 分屏，用于一个窗口内管理多个连接。管理多台服务器不必开多个窗口。&lt;/p&gt;
&lt;img data-src=&#34;/tools/MobaXterm/a75a17982bbe4157a00bb0c5696f06f4.png&#34; class=&#34;&#34;&gt;
&lt;h2 id=&#34;多窗口同时执行相同命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多窗口同时执行相同命令&#34;&gt;#&lt;/a&gt; 多窗口同时执行相同命令&lt;/h2&gt;
&lt;p&gt;编写一次，到处执行：该工具允许您同时在许多不同的服务器上执行相同的命令。&lt;/p&gt;
&lt;img data-src=&#34;/tools/MobaXterm/30496d10fd334e09a86366057cf708ba.png&#34; class=&#34;&#34;&gt;
&lt;h2 id=&#34;内建-sftp-文件传输&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#内建-sftp-文件传输&#34;&gt;#&lt;/a&gt; 内建 SFTP 文件传输&lt;/h2&gt;
&lt;p&gt;如果用 SSH 连接远程主机，则左侧就会自动启动 SFTP 连接，列出服务器上的文件列表，无需任何配置。可以直接上传下载，更方便的是，还可以让文件列表的当前目录，直接跟随终端当前目录同步切换！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关闭自动弹出 SFTP&lt;/strong&gt;：Moba 在连接上远程电脑之后，将自动打开左侧的 SFTP 侧边栏。有时我们并不需要 SFTP，同时主窗口是黑色的，SFTP 又是白色的，显得有点刺眼，因此可以将自动弹出 SFTP 功能关闭掉。在菜单栏点击 「settings」 --&amp;gt; 「Configuration」，在弹出的对话框中选择 「SSH」，再将 「automaticall switch to SSH-browser tab after login」 前面的对勾去掉即可。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/tools/MobaXterm/887ad8833e3645428b9c2b61d10b9275.png&#34; class=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;会话管理-sshtelnetrshxdmcprdpvncftpsftp-等&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#会话管理-sshtelnetrshxdmcprdpvncftpsftp-等&#34;&gt;#&lt;/a&gt; 会话管理 (SSH/Telnet/Rsh/Xdmcp/RDP/VNC/FTP/SFTP 等 )&lt;/h2&gt;
&lt;img data-src=&#34;/tools/MobaXterm/a9118a62021e46da964709e2ce4c514d.png&#34; class=&#34;&#34;&gt;
&lt;p&gt;MobaXterm 允许您启动远程会话。 您可以选择创建 SSH、Telnet、Rlogin、RDP、VNC、XDMCP、FTP、SFTP 或串行会话。 您开始的每个会话都会自动保存并显示在左侧边栏中。&lt;/p&gt;
&lt;p&gt;可以看到 MobaXterm 支持完整的远程桌面。Windows 服务器管理员特别推荐。&lt;/p&gt;
&lt;p&gt;打开软件后，点击左上角的 会话（会话控制），在弹出的窗口中选择 SSH：&lt;/p&gt;
&lt;img data-src=&#34;/tools/MobaXterm/0f615bb37161473ea9f42aa56f428700.png&#34; class=&#34;&#34;&gt;
&lt;h3 id=&#34;windows-远程桌面-rdp&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#windows-远程桌面-rdp&#34;&gt;#&lt;/a&gt; windows 远程桌面 (RDP)&lt;/h3&gt;
&lt;p&gt;使用 RDP 协议控制远程 Windows 计算机 / 服务器。在会话管理器中可以使用许多 RDP 配置设置。&lt;/p&gt;
&lt;img data-src=&#34;/tools/MobaXterm/173da950e00548ba993158203e42024f.png&#34; class=&#34;&#34;&gt;
&lt;p&gt;更加友好的串口连接设置。MobaXterm 不仅支持串口连接，并且直接提供下拉框选择串口号和波特率，选择串口号时还会自动显示串口设备的名称。这一点对于开源硬件玩家是相当幸福的。&lt;/p&gt;
&lt;img data-src=&#34;/tools/MobaXterm/02655708e853425c85ff862300eab23b.png&#34; class=&#34;&#34;&gt;
&lt;h3 id=&#34;linux-远程桌面-xdmcp&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#linux-远程桌面-xdmcp&#34;&gt;#&lt;/a&gt; linux 远程桌面 (XDMCP)&lt;/h3&gt;
&lt;p&gt;通过 MobaXterm 您可以在远程 Solaris 桌面上工作，就像使用 XDMCP 协议在 Windows 计算机上本地工作一样。&lt;/p&gt;
&lt;img data-src=&#34;/tools/MobaXterm/2a283d0429254cb8ad10cfe47ad32735.png&#34; class=&#34;&#34;&gt;
&lt;h2 id=&#34;ssh-gateway-跳转主机&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ssh-gateway-跳转主机&#34;&gt;#&lt;/a&gt; SSH gateway ( 跳转主机)&lt;/h2&gt;
&lt;p&gt;在 ssh, telnet, RDP, VNC 会话中，您可以选择一个 “ssh -gateway”(又称 “ssh -gateway”)。“跳转主机”)，以便告诉 MobaXterm 首先连接到 SSH 服务器，然后再连接到您最终想要到达的端服务器。这允许您访问防火墙后的一些服务器，并保护您的连接。&lt;/p&gt;
&lt;img data-src=&#34;/tools/MobaXterm/87384a124c604b9597adb03378771db2.png&#34; class=&#34;&#34;&gt;
&lt;img data-src=&#34;/tools/MobaXterm/d93315ee953a4d6c85cacd0c0e8bc22f.png&#34; class=&#34;&#34;&gt;
&lt;h2 id=&#34;ssh-隧道-端口转发&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ssh-隧道-端口转发&#34;&gt;#&lt;/a&gt; SSH 隧道 (端口转发)&lt;/h2&gt;
&lt;p&gt;图形化 SSH 隧道管理器允许您使用直观的图形化工具创建 SSH 隧道。&lt;/p&gt;
&lt;img data-src=&#34;/tools/MobaXterm/1625eb720e964e93b59a327811cf8bd6.png&#34; class=&#34;&#34;&gt;
&lt;h2 id=&#34;mobapt-包管理器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mobapt-包管理器&#34;&gt;#&lt;/a&gt; MobApt 包管理器&lt;/h2&gt;
&lt;p&gt;MobaXterm 包管理器 (MobApt /apt-get) 允许您直接下载和使用更多 Unix 工具到 MobaXterm 终端。&lt;/p&gt;
&lt;img data-src=&#34;/tools/MobaXterm/bd865f1ec14f4e7e9d409028723a83de.png&#34; class=&#34;&#34;&gt;
&lt;h2 id=&#34;密码-管理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#密码-管理&#34;&gt;#&lt;/a&gt; 密码 管理&lt;/h2&gt;
&lt;p&gt;MobaXterm 能够保存您的会话密码，并通过使用 “主密码” 来保持它们的安全。&lt;/p&gt;
&lt;img data-src=&#34;/tools/MobaXterm/d865bed401194d7ca50284e0c6f57a5c.png&#34; class=&#34;&#34;&gt;
&lt;h2 id=&#34;在终端语法高亮显示&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#在终端语法高亮显示&#34;&gt;#&lt;/a&gt; 在终端语法高亮显示&lt;/h2&gt;
&lt;p&gt;MobaXterm 嵌入式终端可以突出显示语法或为关键字使用颜色，即使您连接到不支持颜色的远程服务器。这在分析日志文件、编辑代码或试图检测重要关键字时尤其有用。您甚至可以轻松地构建自己的语法定义。&lt;/p&gt;
&lt;img data-src=&#34;/tools/MobaXterm/77ef1a0c4d214830a6712d375b866b30.png&#34; class=&#34;&#34;&gt;
&lt;h1 id=&#34;2-常用设置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-常用设置&#34;&gt;#&lt;/a&gt; 2、常用设置&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;注意：任何配置修改后都需要重启下 MobaXterm，否则不会生效。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;取消自动关闭连接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#取消自动关闭连接&#34;&gt;#&lt;/a&gt; 取消自动关闭连接&lt;/h2&gt;
&lt;p&gt;MobaXterm 使用 ssh 直接连接远程主机，或者通过跳板机登陆远程服务器可能会出现一段时候不操作就会自动关闭连接。要解决这个过一会就断开连接的问题，我们需要在勾选 Setting 下的 SSH Keepalive 选项。&lt;/p&gt;
&lt;img data-src=&#34;/tools/MobaXterm/3b23a55b7afb4d8499defadbcee115df.png&#34; class=&#34;&#34;&gt;
&lt;h2 id=&#34;右键快速复制粘贴&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#右键快速复制粘贴&#34;&gt;#&lt;/a&gt; 右键快速复制粘贴&lt;/h2&gt;
&lt;p&gt;在 Moba 及很多终端工具里，都有这样的功能：鼠标左键划选复制文件，右键粘贴文本。但在 Moba 中右键粘贴功能默认不打开，我们可以手动打开。&lt;/p&gt;
&lt;img data-src=&#34;/tools/MobaXterm/66d5f727fa9c4ac0b6d7952dd5e4fdce.png&#34; class=&#34;&#34;&gt;
&lt;h2 id=&#34;使用-windows-环境变量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用-windows-环境变量&#34;&gt;#&lt;/a&gt; 使用 Windows 环境变量&lt;/h2&gt;
&lt;p&gt;如果您 Windows 下安装了 node、Python 等环境，发现相关命令无法在 MobaXterm 使用，打开 Settings – Configuration – Terminal – 使用 Windows 环境变量，如下截图。&lt;/p&gt;
&lt;img data-src=&#34;/tools/MobaXterm/fa1e1c8cfc84409db9f90e3d7d8118b7.png&#34; class=&#34;&#34;&gt;
&lt;h2 id=&#34;导出导入当先配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#导出导入当先配置&#34;&gt;#&lt;/a&gt; 导出 / 导入当先配置&lt;/h2&gt;
&lt;h3 id=&#34;导出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#导出&#34;&gt;#&lt;/a&gt; 导出&lt;/h3&gt;
&lt;img data-src=&#34;/tools/MobaXterm/image-20230722224913345.png&#34; class=&#34;&#34; title=&#34;image-20230722224913345&#34;&gt;
&lt;p&gt;这样就回自动导出配置文件，是在安装目录同目录下的一个压缩文件&lt;/p&gt;
&lt;h3 id=&#34;导入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#导入&#34;&gt;#&lt;/a&gt; 导入&lt;/h3&gt;
&lt;img data-src=&#34;/tools/MobaXterm/image-20230722225250349.png&#34; class=&#34;&#34; title=&#34;image-20230722225250349&#34;&gt;
&lt;h3 id=&#34;补充&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#补充&#34;&gt;#&lt;/a&gt; 补充&lt;/h3&gt;
&lt;img data-src=&#34;/tools/MobaXterm/image-20230722225242501.png&#34; class=&#34;&#34; title=&#34;image-20230722225242501&#34;&gt;
&lt;img data-src=&#34;/tools/MobaXterm/image-20230722225423840.png&#34; class=&#34;&#34; title=&#34;image-20230722225423840&#34;&gt;
&lt;h1 id=&#34;3-我习惯的快捷键&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-我习惯的快捷键&#34;&gt;#&lt;/a&gt; 3、我习惯的快捷键&lt;/h1&gt;
&lt;img data-src=&#34;/tools/MobaXterm/image-20230722225641315.png&#34; class=&#34;&#34; title=&#34;image-20230722225641315&#34;&gt;

&lt;div id=&#34;gitalk-container&#34;&gt;&lt;/div&gt;
&lt;script src=&#34;https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js&#34;&gt;&lt;/script&gt;&lt;link rel=&#34;stylesheet&#34; href=&#34;https://unpkg.com/gitalk/dist/gitalk.css&#34;&gt;&lt;script src=&#34;https://unpkg.com/gitalk/dist/gitalk.min.js&#34;&gt;&lt;/script&gt;

		&lt;script&gt;
		var gitalkConfig = {&#34;clientID&#34;:&#34;6db178ba46c8af8f6a6f&#34;,&#34;clientSecret&#34;:&#34;90f730e5956024596558df00975cd8eae28cae3d&#34;,&#34;repo&#34;:&#34;bk-comment01&#34;,&#34;owner&#34;:&#34;onlymarryu&#34;,&#34;admin&#34;:[&#34;onlymarryu&#34;],&#34;distractionFreeMode&#34;:false,&#34;language&#34;:&#34;zh-CN&#34;,&#34;proxy&#34;:&#34;https://gitalk-comments.netlify.app/github_access_token&#34;,&#34;perPage&#34;:15};
	    gitalkConfig.id = md5(location.pathname);
		var gitalk = new Gitalk(gitalkConfig);
	    gitalk.render(&#34;gitalk-container&#34;);
	    &lt;/script&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://eth168.top/Spring_Family/spring-cloud-alibaba/Problem/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%8A%A0%E8%BD%BD%E9%85%8D%E7%BD%AE%E9%A1%BA%E5%BA%8F/</guid>
            <title>微服务加载配置顺序</title>
            <link>https://eth168.top/Spring_Family/spring-cloud-alibaba/Problem/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%8A%A0%E8%BD%BD%E9%85%8D%E7%BD%AE%E9%A1%BA%E5%BA%8F/</link>
            <category term="微服务" scheme="https://eth168.top/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/" />
            <category term="spring-cloud-alibaba" scheme="https://eth168.top/tags/spring-cloud-alibaba/" />
            <category term="nacos" scheme="https://eth168.top/tags/nacos/" />
            <pubDate>Mon, 10 Jul 2023 22:43:56 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;过程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#过程&#34;&gt;#&lt;/a&gt; 过程&lt;/h1&gt;
&lt;p&gt;在 springboot 项目中，我们有 bootstrap.yml 以及 application.yml 还有在 nacos 上的 application.yml 我们部分的配置需要去读 nacos 上的配置，所以基于这三个配置文件我们在项目启动的过程中读取的流程是什么，当相同的配置出现后哪一个配置文件中的配置会最终生效&lt;/p&gt;
&lt;p&gt;在 Spring Boot 项目中，有多个配置文件可以用于配置应用程序，包括 bootstrap.yml、application.yml 以及在 Nacos 上的 application.yml。下面是在项目启动过程中读取配置的流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先，Spring Boot 会读取 bootstrap.yml 文件中的配置。这个文件通常用于配置应用程序的基础设置，如连接到配置服务器的配置信息。它被用于引导应用程序的上下文。&lt;/li&gt;
&lt;li&gt;接下来，Spring Boot 会读取 application.yml 文件中的配置。这个文件包含了应用程序的核心配置，如数据库连接、日志级别等。这些配置将覆盖 bootstrap.yml 中的相同配置。&lt;/li&gt;
&lt;li&gt;如果配置了 Nacos 作为配置中心，Spring Boot 会尝试从 Nacos 服务器上读取与应用程序相关的配置。它会根据在 bootstrap.yml 或 application.yml 中配置的相关信息，连接到 Nacos 服务器，并获取相应的配置。&lt;/li&gt;
&lt;li&gt;如果有相同的配置在多个配置文件中都定义了，以及优先级的选择是：Nacos 上的 application.yml &amp;gt; application.yml &amp;gt; bootstrap.yml。也就是说，Nacos 上的配置优先级最高，其次是 application.yml，最后是 bootstrap.yml。如果在高优先级的配置中找不到某个配置项，就会继续向低优先级配置文件中查找。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;总结起来，配置的优先级是根据配置文件的读取顺序来确定的：Nacos 上的 application.yml &amp;gt; application.yml &amp;gt; bootstrap.yml。&lt;/p&gt;

&lt;p&gt;那如果在优先级高的配置文件中找到了相对应的配置还会向下继续读取吗？最终导致配置覆盖的问题&lt;/p&gt;
&lt;p&gt;如果在优先级高的配置文件中找到了相应的配置，Spring Boot 不会继续向下查找低优先级的配置文件。这意味着高优先级的配置文件中的配置会覆盖低优先级配置文件中的相同配置。&lt;/p&gt;
&lt;p&gt;例如，如果在 Nacos 上的 application.yml 中定义了一个配置项，并且该配置项在 application.yml 和 bootstrap.yml 中也存在，那么 Nacos 上的配置将覆盖 application.yml 和 bootstrap.yml 中的相同配置。&lt;/p&gt;
&lt;p&gt;因此，需要注意在不同的配置文件中避免定义相同的配置项，以免出现配置覆盖的问题。如果需要使用不同的配置值，建议在不同的配置文件中使用不同的配置项名称，或者通过条件属性来区分不同的配置文件。&lt;/p&gt;
&lt;h1 id=&#34;结论待定&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#结论待定&#34;&gt;#&lt;/a&gt; 结论（待定）&lt;/h1&gt;
&lt;p&gt;spring cloud alibaba&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;bootstrap.yml &amp;gt; nacos-*.yml &amp;gt; application.yml&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;解释：&lt;/p&gt;
&lt;p&gt;我们配置配置中心就是为了实现服务的动态配置，避免重复的写配置文件，所以我们在所有服务通用的情况下我们一旦配置了配置中心，我们仅仅需要再 &lt;code&gt;bootstrap&lt;/code&gt;  中告诉他 nacos 的地址，这个时候那就会根据 &lt;strong&gt;配置中心的命名规则&lt;/strong&gt; 找到对应的配置文件 从而加载配置。&lt;/p&gt;
&lt;p&gt;有趣的是，我们一旦配置了配置中心，我们&lt;strong&gt;读取配置一旦读到即可返回，不在寻找&lt;/strong&gt; ，也就意味着 nacos 中的配置一旦获取，application.yml 就没啥用了&lt;/p&gt;

&lt;div id=&#34;gitalk-container&#34;&gt;&lt;/div&gt;
&lt;script src=&#34;https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js&#34;&gt;&lt;/script&gt;&lt;link rel=&#34;stylesheet&#34; href=&#34;https://unpkg.com/gitalk/dist/gitalk.css&#34;&gt;&lt;script src=&#34;https://unpkg.com/gitalk/dist/gitalk.min.js&#34;&gt;&lt;/script&gt;

		&lt;script&gt;
		var gitalkConfig = {&#34;clientID&#34;:&#34;6db178ba46c8af8f6a6f&#34;,&#34;clientSecret&#34;:&#34;90f730e5956024596558df00975cd8eae28cae3d&#34;,&#34;repo&#34;:&#34;bk-comment01&#34;,&#34;owner&#34;:&#34;onlymarryu&#34;,&#34;admin&#34;:[&#34;onlymarryu&#34;],&#34;distractionFreeMode&#34;:false,&#34;language&#34;:&#34;zh-CN&#34;,&#34;proxy&#34;:&#34;https://gitalk-comments.netlify.app/github_access_token&#34;,&#34;perPage&#34;:15};
	    gitalkConfig.id = md5(location.pathname);
		var gitalk = new Gitalk(gitalkConfig);
	    gitalk.render(&#34;gitalk-container&#34;);
	    &lt;/script&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://eth168.top/Spring_Family/spring-cloud-alibaba/Problem/%E5%85%B3%E4%BA%8E%E5%85%B3%E4%BA%8ENacos%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E7%9A%84%E9%85%8D%E7%BD%AE/</guid>
            <title>关于关于Nacos配置中心的配置</title>
            <link>https://eth168.top/Spring_Family/spring-cloud-alibaba/Problem/%E5%85%B3%E4%BA%8E%E5%85%B3%E4%BA%8ENacos%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E7%9A%84%E9%85%8D%E7%BD%AE/</link>
            <category term="微服务" scheme="https://eth168.top/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/" />
            <category term="spring-cloud-alibaba" scheme="https://eth168.top/tags/spring-cloud-alibaba/" />
            <category term="nacos" scheme="https://eth168.top/tags/nacos/" />
            <pubDate>Mon, 10 Jul 2023 21:58:56 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;一-共享配置shared-configs和扩展配extension-config&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-共享配置shared-configs和扩展配extension-config&#34;&gt;#&lt;/a&gt; 一、共享配置 (shared-configs) 和扩展配 (extension-config)&lt;/h1&gt;
&lt;p&gt;日常开发中，多个模块可能会有很多共用的配置，比如数据库连接信息，Redis 连接信息，RabbitMQ 连接信息，监控配置等等。那么此时，我们就希望可以加载多个配置，多个项目共享同一个配置之类等功能，Nacos Config 也确实支持。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nacos 在配置路径 &lt;code&gt;spring.cloud.nacos.config.extension-config&lt;/code&gt;  下，允许我们指定⼀个或多个额外配置。&lt;/li&gt;
&lt;li&gt;Nacos 在配置路径 &lt;code&gt;spring.cloud.nacos.config.shared-configs&lt;/code&gt;  下，允许我们指定⼀个或多个共享配置。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上述两类配置都⽀持三个属性： &lt;code&gt;data-id&lt;/code&gt; 、 &lt;code&gt;group&lt;/code&gt;  (默认为字符串 &lt;code&gt;DEFAULT_GROUP&lt;/code&gt; )、 &lt;code&gt;refresh&lt;/code&gt;  (默认为 &lt;code&gt;true&lt;/code&gt; )。&lt;/p&gt;
&lt;h2 id=&#34;11-版本说明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-版本说明&#34;&gt;#&lt;/a&gt; 1.1 版本说明&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Nacos：2.0.0&lt;/li&gt;
&lt;li&gt;spring-cloud.version：Hoxton.SR9&lt;/li&gt;
&lt;li&gt;spring-boot.version：2.3.6.RELEASE&lt;/li&gt;
&lt;li&gt;alibaba.cloud.version：2.2.3.RELEASE&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;12-maven依赖&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12-maven依赖&#34;&gt;#&lt;/a&gt; 1.2 maven 依赖&lt;/h2&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com.alibaba.cloud&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;2.2.3.RELEASE&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com.alibaba.cloud&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring-cloud-starter-alibaba-nacos-config&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;2.2.3.RELEASE&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;13-配置文件将application改成bootstrap&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13-配置文件将application改成bootstrap&#34;&gt;#&lt;/a&gt; 1.3 配置文件将 application 改成 bootstrap&lt;/h2&gt;
&lt;p&gt;application.yml 作用域在于当前应用有效，bootstrap.yml 系统级别的配置有效（一般采用远程配置的时候才会用到）。&lt;/p&gt;
&lt;p&gt;因此，将项目中原来的 application.yml、application-dev.yml 对应改成 bootstrap.yml、bootstrap-dev.yml 。&lt;/p&gt;
&lt;h1 id=&#34;二-配置实例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-配置实例&#34;&gt;#&lt;/a&gt; 二、配置实例&lt;/h1&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;figcaption data-lang=&#34;YAML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;spring&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;application&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; nacos&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;multi&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;allow-bean-definition-overriding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;cloud&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;nacos&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token key atrule&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; $&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;nacos.username&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token key atrule&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; $&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;nacos.password&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token key atrule&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token key atrule&#34;&gt;server-addr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; $&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;nacos.server&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;addr&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token key atrule&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; $&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;nacos.namespace&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;# 用于共享的配置文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token key atrule&#34;&gt;shared-configs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token key atrule&#34;&gt;data-id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; common&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;mysql.yaml&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token key atrule&#34;&gt;group&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; SPRING_CLOUD_EXAMPLE_GROUP&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token key atrule&#34;&gt;data-id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; common&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;redis.yaml&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token key atrule&#34;&gt;group&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; SPRING_CLOUD_EXAMPLE_GROUP&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token key atrule&#34;&gt;data-id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; common&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;base.yaml&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token key atrule&#34;&gt;group&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; SPRING_CLOUD_EXAMPLE_GROUP&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;# 常规配置文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;# 优先级大于 shared-configs，在 shared-configs 之后加载&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token key atrule&#34;&gt;extension-configs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token key atrule&#34;&gt;data-id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; nacos&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;advanced.yaml&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token key atrule&#34;&gt;group&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; SPRING_CLOUD_EXAMPLE_GROUP&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token key atrule&#34;&gt;refresh&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token key atrule&#34;&gt;data-id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; nacos&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;base.yaml&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token key atrule&#34;&gt;group&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; SPRING_CLOUD_EXAMPLE_GROUP&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token key atrule&#34;&gt;refresh&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;参数解析：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;data-id : Data Id&lt;/li&gt;
&lt;li&gt;group：自定义 Data Id 所在的组，不明确配置的话，默认是 DEFAULT_GROUP。&lt;/li&gt;
&lt;li&gt;refresh: 控制该 Data Id 在配置变更时，是否支持应用中可动态刷新， 感知到最新的配置值。默认是不支持的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意：这里的 &lt;code&gt;Data ID&lt;/code&gt;  后面是加 &lt;code&gt;.yaml&lt;/code&gt;  后缀的，且不需要指定 &lt;code&gt;file-extension&lt;/code&gt; 。&lt;/p&gt;
&lt;h1 id=&#34;三-共享配置和扩展配置的区&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-共享配置和扩展配置的区&#34;&gt;#&lt;/a&gt; 三、共享配置和扩展配置的区&lt;/h1&gt;
&lt;p&gt;实际上，Nacos 中并未对 &lt;code&gt;extension-configs&lt;/code&gt;  和 &lt;code&gt;shared-configs&lt;/code&gt;  的差别进⾏详细阐述。我们从他们的结构，看不出本质差别；除了优先级不同以外，也没有其他差别。那么，Nacos 项⽬组为什么要引⼊两个类似的配置呢？我们可以从当初该功能的需求（issue）上找到其原始⽬的。&lt;/p&gt;
&lt;h2 id=&#34;31-nacos对配置的默认理念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#31-nacos对配置的默认理念&#34;&gt;#&lt;/a&gt; 3.1 Nacos 对配置的默认理念&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;namespace&lt;/code&gt;  区分环境：开发环境、测试环境、预发布环境、⽣产环境。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;group&lt;/code&gt;  区分不同应⽤：同⼀个环境内，不同应⽤的配置，通过 &lt;code&gt;group&lt;/code&gt;  来区分。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;32-主配置是应用专有的配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#32-主配置是应用专有的配置&#34;&gt;#&lt;/a&gt; 3.2 主配置是应⽤专有的配置&lt;/h2&gt;
&lt;p&gt;因此，主配置应当在 &lt;code&gt;dataId&lt;/code&gt;  上要区分，同时最好还要有 &lt;code&gt;group&lt;/code&gt;  的区分，因为 &lt;code&gt;group&lt;/code&gt;  区分应⽤（虽然 &lt;code&gt;dataId&lt;/code&gt;  上区分了，不⽤设置 &lt;code&gt;group&lt;/code&gt;  也能按应⽤单独加载）。&lt;/p&gt;
&lt;h2 id=&#34;33-要在各应用之间共享一个配置请使用上面的-shared-configs&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#33-要在各应用之间共享一个配置请使用上面的-shared-configs&#34;&gt;#&lt;/a&gt; 3.3 要在各应⽤之间共享⼀个配置，请使⽤上⾯的 shared-configs&lt;/h2&gt;
&lt;p&gt;因此按该理念， &lt;code&gt;shared-configs&lt;/code&gt;  指定的配置，本来应该是不指定 &lt;code&gt;group&lt;/code&gt;  的，也就是应当归⼊ &lt;code&gt;DEFAULT_GROUP&lt;/code&gt;  这个公共分组。&lt;/p&gt;
&lt;h2 id=&#34;34-如果要在特定范围内比如某个应用上覆盖某个共享dataid上的特定属性请使用-extension-config&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#34-如果要在特定范围内比如某个应用上覆盖某个共享dataid上的特定属性请使用-extension-config&#34;&gt;#&lt;/a&gt; 3.4 如果要在特定范围内（⽐如某个应⽤上）覆盖某个共享 dataId 上的特定属性，请使⽤ extension-config&lt;/h2&gt;
&lt;p&gt;⽐如，其他应⽤的数据库 url，都是⼀个固定的 url，使⽤ &lt;code&gt;shared-configs.dataId = mysql&lt;/code&gt;  的共享配置。但其中有⼀个应⽤ &lt;code&gt;ddd-demo&lt;/code&gt;  是特例，需要为该应⽤配置扩展属性来覆盖。&lt;/p&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;figcaption data-lang=&#34;YAML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;spring&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token key atrule&#34;&gt;application&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token key atrule&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; ddd&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;demo&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;service&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token key atrule&#34;&gt;cloud&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token key atrule&#34;&gt;nacos&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token key atrule&#34;&gt;config&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token key atrule&#34;&gt;server-addr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; nacos&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;2.nacos&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;headless.public.svc.cluster.local&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token key atrule&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; ygjpro&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;test2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token key atrule&#34;&gt;group&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; ddd&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;demo&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       shared&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;configs&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         &lt;span class=&#34;token key atrule&#34;&gt;data-id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; mysql.yaml&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         &lt;span class=&#34;token key atrule&#34;&gt;refresh&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       extension&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;configs&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         &lt;span class=&#34;token key atrule&#34;&gt;data-id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; mysql.yaml&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         &lt;span class=&#34;token key atrule&#34;&gt;group&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; ddd&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;demo&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         &lt;span class=&#34;token key atrule&#34;&gt;refresh&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;35-关于优先级&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#35-关于优先级&#34;&gt;#&lt;/a&gt; 3.5 关于优先级&lt;/h2&gt;
&lt;p&gt;1、上述两类配置都是数组，对同种配置，数组元素对应的下标越⼤，优先级越⾼。也就是排在后⾯的相同配置，将覆盖排在前⾯的同名配置。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;同为扩展配置，存在如下优先级关系： &lt;code&gt;extension-configs[3] &amp;gt; extension-configs[2] &amp;gt; extension-configs[1] &amp;gt; extension-configs[0&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;同为共享配置，存在如下优先级关系： &lt;code&gt;shared-configs[3] &amp;gt; shared-configs[2] &amp;gt; shared-configs[1] &amp;gt; shared-configs[0]&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2、不同种类配置之间，优先级按顺序如下：主配置 &amp;gt; 扩展配置 (extension-configs) &amp;gt; 共享配置 (shared-configs)&lt;/p&gt;
&lt;p&gt;作者：AC 编程&lt;br /&gt;
链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC84NzE1MDcyZDNmNGM=&#34;&gt;https://www.jianshu.com/p/8715072d3f4c&lt;/span&gt;&lt;br /&gt;
 来源：简书&lt;br /&gt;
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。&lt;/p&gt;

&lt;div id=&#34;gitalk-container&#34;&gt;&lt;/div&gt;
&lt;script src=&#34;https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js&#34;&gt;&lt;/script&gt;&lt;link rel=&#34;stylesheet&#34; href=&#34;https://unpkg.com/gitalk/dist/gitalk.css&#34;&gt;&lt;script src=&#34;https://unpkg.com/gitalk/dist/gitalk.min.js&#34;&gt;&lt;/script&gt;

		&lt;script&gt;
		var gitalkConfig = {&#34;clientID&#34;:&#34;6db178ba46c8af8f6a6f&#34;,&#34;clientSecret&#34;:&#34;90f730e5956024596558df00975cd8eae28cae3d&#34;,&#34;repo&#34;:&#34;bk-comment01&#34;,&#34;owner&#34;:&#34;onlymarryu&#34;,&#34;admin&#34;:[&#34;onlymarryu&#34;],&#34;distractionFreeMode&#34;:false,&#34;language&#34;:&#34;zh-CN&#34;,&#34;proxy&#34;:&#34;https://gitalk-comments.netlify.app/github_access_token&#34;,&#34;perPage&#34;:15};
	    gitalkConfig.id = md5(location.pathname);
		var gitalk = new Gitalk(gitalkConfig);
	    gitalk.render(&#34;gitalk-container&#34;);
	    &lt;/script&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://eth168.top/Spring_Family/spring-cloud-alibaba/Seata%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/</guid>
            <title>Seata系统学习</title>
            <link>https://eth168.top/Spring_Family/spring-cloud-alibaba/Seata%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/</link>
            <category term="微服务" scheme="https://eth168.top/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/" />
            <category term="spring-cloud-alibaba" scheme="https://eth168.top/tags/spring-cloud-alibaba/" />
            <category term="Seate" scheme="https://eth168.top/tags/Seate/" />
            <category term="分布式事务" scheme="https://eth168.top/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/" />
            <pubDate>Mon, 10 Jul 2023 21:56:23 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;分布式事务简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分布式事务简介&#34;&gt;#&lt;/a&gt; 分布式事务简介&lt;/h1&gt;
&lt;h2 id=&#34;概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概念&#34;&gt;#&lt;/a&gt; 概念&lt;/h2&gt;
&lt;p&gt;基础概念：事务 ACID&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A（Atomic）：原子性，构成事务的所有操作，要么都执行完成，要么全部不执行，不可能出现部分成功部分失 败的情况。&lt;/li&gt;
&lt;li&gt;C（Consistency）：一致性，在事务执行前后，数据库的一致性约束没有被破坏。比如：张三向李四转 100 元， 转账前和转账后的数据是正确状态这叫一致性，如果出现张三转出 100 元，李四账户没有增加 100 元这就出现了数 据错误，就没有达到一致性。&lt;/li&gt;
&lt;li&gt;I（Isolation）：隔离性，数据库中的事务一般都是并发的，隔离性是指并发的两个事务的执行互不干扰，一个事 务不能看到其他事务运行过程的中间状态。通过配置事务隔离级别可以避脏读、重复读等问题。&lt;/li&gt;
&lt;li&gt;D（Durability）：持久性，事务完成之后，该事务对数据的更改会被持久化到数据库，且不会被回滚。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;事务&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#事务&#34;&gt;#&lt;/a&gt; 事务&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;本地事务：同一数据库和服务器，称为本地事务&lt;br /&gt;
在计算机系统中，更多的是通过关系型数据库来控制事务，这是利用数据库本身的事务特性来实现的，因此叫数据库事务，由于应用主要靠关系数据库来控制事务，而数据库通常和应用在同一个服务器，所以基于关系型数据库的事务又被称为本地事务。&lt;/li&gt;
&lt;li&gt;分布式事务：&lt;br /&gt;
分布式事务指事务的参与者、支持事务的服务器、资源服务器以及事务管理器分别位于&lt;strong&gt;不同的分布式系统&lt;/strong&gt;的不同节点之上，且属于不同的应用，分布式事务需要保证这些操作要么全部成功，要么全部失败。本质上来说，分布式事务就是为了保证不同数据库的数据一致性。&lt;/li&gt;
&lt;li&gt;举例：&lt;br /&gt;
分布式系统会把一个应用系统拆分为可独立部署的多个服务，因此需要服务与服务之间远程协作才能完成事务操 作，这种分布式系统环境下由不同的服务之间通过网络远程协作完成事务称之为分布式事务，例如用户注册送积分事务、创建订单减库存事务，银行转账事务等都是分布式事务。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641998761000/4544996c3b5c4c619b58e6a9dba391ab.png&#34; alt=&#34;image20220111162727304.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;通过以上的图中我们可以看出，其实只要涉及到操作多个数据源，就可能会产生事务问题，当然在实际开发中我们要尽量避免这种问题的出现，当然如果避免不了，我们就需要进行解决，在我们的微服务系统架构中，目前比较好，比较常用的解决方案就是 Seata。&lt;/p&gt;
&lt;h2 id=&#34;分布式事务理论&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分布式事务理论&#34;&gt;#&lt;/a&gt; 分布式事务理论&lt;/h2&gt;
&lt;p&gt;随着互联化的蔓延，各种项目都逐渐向分布式服务做转换。如今微服务已经普遍存在，本地事务已经无法满足分布式的要求，由此分布式事务问题诞生。 分布式事务被称为世界性的难题，目前分布式事务存在两大理论依据：CAP 定律 BASE 理论。&lt;/p&gt;
&lt;h3 id=&#34;cap定律&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cap定律&#34;&gt;#&lt;/a&gt; CAP 定律&lt;/h3&gt;
&lt;p&gt;这个定理的内容是指的是在一个分布式系统中、Consistency（一致性）、 Availability（可用性）、Partition tolerance（分区容错性），三者不可得兼。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一致性（C）&lt;br /&gt;
在分布式系统中的所有数据备份，在同一时刻是否同样的值。（等同于所有节点访问同一份最新的数据副本）&lt;/li&gt;
&lt;li&gt;可用性（A）&lt;br /&gt;
在集群中一部分节点故障后，集群整体是否还能响应客户端的读写请求。（对数据更新具备高可用性）&lt;/li&gt;
&lt;li&gt;分区容错性（P）&lt;br /&gt;
以实际效果而言，分区相当于对通信的时限要求。系统如果不能在时限内达成数据一致性，就意味着发生了分区的情况，必须就当前操作在 C 和 A 之间做出选择&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CAP 是无法同时存在的，一下通过这个例子来说明&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641998761000/89536f53b26048e18ac8a9a34ba6894d.png&#34; alt=&#34;image20220113155408713.png&#34; /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当库存服务减库存以后，那么需要将数据同步到其他的服务上，这是为了保证数据一致性 C，但是网络是不可靠的，所以我们系统就需要保证分区容错性 P，也就是我们必须容忍网络所带来的的一些问题，此时如果我们想保证 C 那么就需要舍弃 A，也就是说我们在保证 C 的情况下，就必须舍弃 A，也就是 CP 无法保证高可用。&lt;/li&gt;
&lt;li&gt;如果为了保证 A，高可用的情况下，也就是必须在限定时间内给出响应，同样由于网络不可靠 P，订单服务就有可能无法拿到新的数据，但是也要给用户作出响应，那么也就无法保证 C 一致性。所以 AP 是无法保证强一致性的。&lt;/li&gt;
&lt;li&gt;如果我们想保证 CA，也就是高可用和一致性，也就是必须保证网络良好才能实现，那么也就是说我们需要将库存、订单、用户放到一起，但是这种情况也就丧失了 P 这个保证，这个时候系统也就不是分布式系统了。&lt;/li&gt;
&lt;li&gt;总结：在分布式系统中，p 是必然的存在的，所以我们只能在 C 和 A 之间进行取舍，在这种条件下就诞生了 BASE 理论&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;base理论&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#base理论&#34;&gt;#&lt;/a&gt; BASE 理论&lt;/h3&gt;
&lt;p&gt;BASE 是 Basically Available（基本可用）、Soft state（软状态）和 Eventually consistent（最终一致性）三个短语的缩写。BASE 理论是对 CAP 中一致性和可用性权衡的结果，其来源于对大规模互联网系统分布式实践的总结， 是基于 CAP 定理逐步演化而来的。BASE 理论的核心思想是：即使无法做到强一致性，但每个应用都可以根据自身业务特点，采用适当的方式来使系统达到最终一致性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基本可用&lt;br /&gt;
基本可用是指分布式系统在出现不可预知故障的时候，允许损失部分可用性 —- 注意，这绝不等价于系统不可用。比如：&lt;br /&gt;
（1）响应时间上的损失。正常情况下，一个在线搜索引擎需要在 0.5 秒之内返回给用户相应的查询结果，但由于出现故障，查询结果的响应时间增加了 1~2 秒&lt;br /&gt;
（2）系统功能上的损失：正常情况下，在一个电子商务网站上进行购物的时候，消费者几乎能够顺利完成每一笔订单，但是在一些节日大促购物高峰的时候，由于消费者的购物行为激增，为了保护购物系统的稳定性，部分消费者可能会被引导到一个降级页面&lt;/li&gt;
&lt;li&gt;软状态&lt;br /&gt;
软状态指允许系统中的数据存在中间状态，并认为该中间状态的存在不会影响系统的整体可用性，即允许系统在不同节点的数据副本之间进行数据同步的过程存在延时&lt;/li&gt;
&lt;li&gt;最终一致性&lt;br /&gt;
最终一致性强调的是所有的数据副本，在经过一段时间的同步之后，最终都能够达到一个一致的状态。因此，最终一致性的本质是需要系统保证最终数据能够达到一致，而不需要实时保证系统数据的强一致性。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那这个位置我们依旧可以用我们刚才的例子来进行说明&lt;/p&gt;
&lt;p&gt;** 基本可用：** 保证核心服务是可以使用的，至于其他的服务可以适当的降低响应时间，甚至是服务降级&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641998761000/6e34be5dc9114b5f9a10a5b790446333.png&#34; alt=&#34;image20220113162344531.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;** 软状态：** 存在中间状态，不影响整体系统使用，数据同步存在延时&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641998761000/8477ce5071124a21a3c44b61de31318c.png&#34; alt=&#34;image20220113162554630.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;** 最终一致性：** 再过了流量高峰期以后，经过一段时间的同步，保持各服务数据的一致&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641998761000/e060172f628f4baaad06b8f03cc57dd6.png&#34; alt=&#34;image20220113162813542.png&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;seata简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#seata简介&#34;&gt;#&lt;/a&gt; Seata 简介&lt;/h1&gt;
&lt;h2 id=&#34;分布式事务解决方案&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分布式事务解决方案&#34;&gt;#&lt;/a&gt; 分布式事务解决方案&lt;/h2&gt;
&lt;p&gt;2PC 即两阶段提交协议，是将整个事务流程分为两个阶段，P 是指准备阶段，C 是指提交阶段。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;准备阶段（Prepare phase）&lt;/li&gt;
&lt;li&gt;提交阶段（commit phase）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;举例：比如说相亲对象两个人去吃饭，店老板要求，先付钱在吃饭，这是男女双方提出了 AA，也就是说只有男女双方都付钱，才能落座吃饭，但是只要两个人中有一个不同意付款就不能落座吃饭。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;准备阶段：老板要求男方付款，男方付款。老板要求女方付款，女方付款&lt;/li&gt;
&lt;li&gt;提交阶段：老板出餐，两人纷纷落座&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其实此例子就形成了一个事务，如果男女双方有一个人拒绝付款，那么老板就不会出餐，并且会把已收取的钱原路退回。&lt;/p&gt;
&lt;p&gt;整个事务过程是由事务管理器和参与者组成的，店老板就是事务管管理器，男女双发就是参与者，事务管理器决策整个分布式事务在计算机中关系数据库支持的两阶段提交协议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;准备阶段（Prepare phase）：事务管理器给每个参与者发送 Prepare 消息，每个数据库参与者在本地执行事务，并写本地的 Undo/Redo 日志，此时事务没有提交。&lt;/li&gt;
&lt;li&gt;（Undo 日志是记录修改前的数据，用于数据库回滚，Redo 日志是记录修改后的数据，用于提交事务后写入数据文件）&lt;/li&gt;
&lt;li&gt;提交阶段（commit phase）：如果事务管理器收到了参与者的执行失败或者超时消息时，直接给每个参与者发送回滚 (Rollback) 消息；否则，发送提交 (Commit) 消息；参与者根据事务管理器的指令执行提交或者回滚操作，并释放事务处理过程中使用的资源。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具体步骤图例：&lt;/p&gt;
&lt;p&gt;成功：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641998834000/9a5b66ef19a4446a8a1f3cce3730de73.png&#34; alt=&#34;image20220113180953684.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;失败：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641998834000/22d602b59e6d420c83b42625d146bf29.png&#34; alt=&#34;image20220113181028153.png&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;seata简介-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#seata简介-2&#34;&gt;#&lt;/a&gt; Seata 简介&lt;/h2&gt;
&lt;p&gt;官网：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZWF0YS5pby96aC1jbi9kb2NzL292ZXJ2aWV3L3doYXQtaXMtc2VhdGEuaHRtbA==&#34;&gt;https://seata.io/zh-cn/docs/overview/what-is-seata.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;概念：Seata 是一款开源的分布式事务解决方案，致力于提供高性能和简单易用的分布式事务服务。Seata 将为用户提供了 AT、TCC、SAGA 和 XA 事务模式，为用户打造一站式的分布式解决方案。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641998834000/7a247a0424714a2ba4bdc43ef6ae6dd0.png&#34; alt=&#34;1459421917a2d469f94c84cd28c7e46ad75683636.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;在我们的微服务系统中，对应业务被对应的拆分成独立模块，在官方提供的架构图中，我们可以看出当前是三个服务：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;仓储服务：对给定的商品进行增删操作记录数量&lt;/li&gt;
&lt;li&gt;订单服务：根据采购者的需求创建订单&lt;/li&gt;
&lt;li&gt;账户服务：从用户账户中扣除余额、积分等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在这套架构中，用户下单购买商品的业务，就需要三个服务来完成，每个服务内部的数据一致性由本地事务来保证，但是全局的数据一致性问题就没办法保证，Seata 就是来进行解决这种问题的解决方案。&lt;/p&gt;
&lt;h2 id=&#34;seata术语&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#seata术语&#34;&gt;#&lt;/a&gt; Seata 术语&lt;/h2&gt;
&lt;p&gt;官网地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZWF0YS5pby96aC1jbi9kb2NzL292ZXJ2aWV3L3Rlcm1pbm9sb2d5Lmh0bWw=&#34;&gt;https://seata.io/zh-cn/docs/overview/terminology.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;要了解 Seata，首先我们要了解一下 Seata 的几个关键的概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TC (Transaction Coordinator) - 事务协调者&lt;br /&gt;
维护全局和分支事务的状态，驱动全局事务提交或回滚。&lt;/li&gt;
&lt;li&gt;TM (Transaction Manager) - 事务管理器（发起者，同时也是 RM 的一种）&lt;br /&gt;
定义全局事务的范围：开始全局事务、提交或回滚全局事务。&lt;/li&gt;
&lt;li&gt;RM (Resource Manager) - 资源管理器（每个参与事务的微服务）&lt;br /&gt;
管理分支事务处理的资源，与 TC 交谈以注册分支事务和报告分支事务的状态，并驱动分支事务提交或回滚。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641998834000/fab8a67b90834a58b7accbb86726eea2.png&#34; alt=&#34;image20220111191919517.png&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;seata-server下载&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#seata-server下载&#34;&gt;#&lt;/a&gt; Seata-Server 下载&lt;/h2&gt;
&lt;p&gt;官方下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3NlYXRhL3NlYXRhL3JlbGVhc2Vz&#34;&gt;https://github.com/seata/seata/releases&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641998834000/b3f0f8ae28e44ad49c7144448f6c625a.png&#34; alt=&#34;image20220112191252083.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;下载完成之后需要解压&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641998834000/6e9471205cd9417c979fec4f79146437.png&#34; alt=&#34;image20220112191449051.png&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;seata-server配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#seata-server配置&#34;&gt;#&lt;/a&gt; Seata-Server 配置&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;需要打开 conf 目录&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641998834000/d79c502c145f4d9e9bc1b0269d86b00a.png&#34; alt=&#34;image20220112192512498.png&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;先配置 registry.conf 配置文件，修改 Seata 的注册中心和配置中心为 Nacos&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641998834000/278d4105c1e8490893fe49b9c3ae5d11.png&#34; alt=&#34;image20220112192010321.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641998834000/5bfd3ee2a99e496087b69d5d8632607c.png&#34; alt=&#34;image20220112192038314.png&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;figcaption data-lang=&#34;sh&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;registry &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;# file 、nacos 、eureka、redis、zk、consul、etcd3、sofa&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token builtin class-name&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;nacos&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  nacos &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    application &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;seata-server&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    serverAddr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1:8848&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    group &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;SEATA_GROUP&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    namespace &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    cluster &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;default&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    password &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  eureka &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    serviceUrl &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;http://localhost:8761/eureka&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    application &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;default&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    weight &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;1&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  redis &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    serverAddr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;localhost:6379&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    db &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    password &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    cluster &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;default&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;timeout&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  zk &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    cluster &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;default&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    serverAddr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1:2181&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sessionTimeout &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    connectTimeout &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    password &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  consul &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    cluster &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;default&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    serverAddr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1:8500&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    aclToken &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  etcd3 &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    cluster &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;default&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    serverAddr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;http://localhost:2379&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  sofa &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    serverAddr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1:9603&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    application &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;default&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    region &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;DEFAULT_ZONE&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    datacenter &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;DefaultDataCenter&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    cluster &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;default&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    group &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;SEATA_GROUP&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    addressWaitTime &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;3000&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;file.conf&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;config &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;# file、nacos 、apollo、zk、consul、etcd3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token builtin class-name&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;nacos&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  nacos &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    serverAddr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1:8848&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    namespace &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    group &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;SEATA_GROUP&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    password &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    dataId &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;seataServer.properties&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  consul &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    serverAddr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1:8500&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    aclToken &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  apollo &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    appId &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;seata-server&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;## apolloConfigService will cover apolloMeta&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    apolloMeta &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;http://192.168.1.204:8801&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    apolloConfigService &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;http://192.168.1.204:8080&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    namespace &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;application&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    apolloAccesskeySecret &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    cluster &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;seata&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;82&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  zk &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;83&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    serverAddr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1:2181&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;84&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sessionTimeout &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;85&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    connectTimeout &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;86&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;87&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    password &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;88&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    nodePath &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;/seata/seata.properties&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;89&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;90&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  etcd3 &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;91&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    serverAddr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;http://localhost:2379&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;92&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;93&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;file&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;94&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;file.conf&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;95&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;96&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;接着我们需要修改 Seata 的存储模式，修改 file.conf 文件，把 Seata 的默认存储模式修改为数据库 &amp;quot;DB&amp;quot;，同时需要配置 JDBC&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641998834000/6b91ce75509148978c15ac2f3118be5d.png&#34; alt=&#34;image20220112192451611.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641998834000/827ac59ad07a46f790b90a40fdf12e4c.png&#34; alt=&#34;image20220112192620774.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641998834000/69d55657feeb4093b1b629a3118aec2e.png&#34; alt=&#34;image20220112193120164.png&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## transaction log store, only used in seata-server
store &amp;#123;
  ## store mode: file、db、redis
  mode = &amp;quot;db&amp;quot;
  ## rsa decryption public key
  publicKey = &amp;quot;&amp;quot;
  ## file store property
  file &amp;#123;
    ## store location dir
    dir = &amp;quot;sessionStore&amp;quot;
    # branch session size , if exceeded first try compress lockkey, still exceeded throws exceptions
    maxBranchSessionSize = 16384
    # globe session size , if exceeded throws exceptions
    maxGlobalSessionSize = 512
    # file buffer size , if exceeded allocate new buffer
    fileWriteBufferCacheSize = 16384
    # when recover batch read size
    sessionReloadReadSize = 100
    # async, sync
    flushDiskMode = async
  &amp;#125;

  ## database store property
  db &amp;#123;
    ## the implement of javax.sql.DataSource, such as DruidDataSource(druid)/BasicDataSource(dbcp)/HikariDataSource(hikari) etc.
    datasource = &amp;quot;druid&amp;quot;
    ## mysql/oracle/postgresql/h2/oceanbase etc.
    dbType = &amp;quot;mysql&amp;quot;
    driverClassName = &amp;quot;com.mysql.jdbc.Driver&amp;quot;
    ## if using mysql to store the data, recommend add rewriteBatchedStatements=true in jdbc connection param
    url = &amp;quot;jdbc:mysql://localhost:3306/seata?useUnicode=true&amp;amp;characterEncoding=UTF-8&amp;quot;
    user = &amp;quot;root&amp;quot;
    password = &amp;quot;root&amp;quot;
    minConn = 5
    maxConn = 100
    globalTable = &amp;quot;global_table&amp;quot;
    branchTable = &amp;quot;branch_table&amp;quot;
    lockTable = &amp;quot;lock_table&amp;quot;
    queryLimit = 100
    maxWait = 5000
  &amp;#125;

  ## redis store property
  redis &amp;#123;
    ## redis mode: single、sentinel
    mode = &amp;quot;single&amp;quot;
    ## single mode property
    single &amp;#123;
      host = &amp;quot;127.0.0.1&amp;quot;
      port = &amp;quot;6379&amp;quot;
    &amp;#125;
    ## sentinel mode property
    sentinel &amp;#123;
      masterName = &amp;quot;&amp;quot;
      ## such as &amp;quot;10.28.235.65:26379,10.28.235.65:26380,10.28.235.65:26381&amp;quot;
      sentinelHosts = &amp;quot;&amp;quot;
    &amp;#125;
    password = &amp;quot;&amp;quot;
    database = &amp;quot;0&amp;quot;
    minConn = 1
    maxConn = 10
    maxTotal = 100
    queryLimit = 100
  &amp;#125;
&amp;#125;

&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;启动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#启动&#34;&gt;#&lt;/a&gt; 启动&lt;/h2&gt;
&lt;p&gt;启动步骤为，先启动 nacos 然后在启动 Seata-Server&lt;/p&gt;
&lt;p&gt;启动 Seata-Server 的方式非常简单，直接双击此文件即可:seata-server-1.4.2\bin\seata-server.bat&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641998834000/20f23172834f4a10b2bd93fa5386f0c9.png&#34; alt=&#34;image20220112193257424.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;启动完成效果&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641998834000/d008d69fc45645e788d4aedd879091ce.png&#34; alt=&#34;image20220112193410847.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;然后在 nacos 控制台上就可以看到 Seata-Server&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641998834000/382313d0fd6f43c19f9d7d4b23d321b5.png&#34; alt=&#34;image20220112193500935.png&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;seata-servertc环境搭建详解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#seata-servertc环境搭建详解&#34;&gt;#&lt;/a&gt; Seata Server（TC）环境搭建详解&lt;/h2&gt;
&lt;p&gt;Server 端存储模式（store.mode）支持三种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;file：单机模式，全局事务会话信息内存中读写并持久化本地文件 root.data，性能较高（默认）&lt;/li&gt;
&lt;li&gt;DB：高可用模式，全局事务会话信息通过 DB 共享，相对性能差一些&lt;/li&gt;
&lt;li&gt;redis：Seata-Server1.3 及以上版本支持，性能较高，存在事务信息丢失风险，需要配合实际场景使用。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;具体操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#具体操作&#34;&gt;#&lt;/a&gt; 具体操作&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;修改 Seata-Server 模式为 DB 高可用模式&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1642518497000/9dbad8c2dacf488488e655535ccbc0d8.png&#34; alt=&#34;image20220118173041657.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;找到以下对应的 db 配置，要修改其中的 jdbc 连接，以及要注意其中涉及到了三个表，分别是 global_table，branch_table，lock_table 分别是全局事务会话表，分支事务会话表，锁数据表；&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1642518497000/bcbeb0859cbd498c95f516e983292c58.png&#34; alt=&#34;image20220118231142489.png&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;建表语句地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3NlYXRhL3NlYXRhL2Jsb2IvZGV2ZWxvcC9zY3JpcHQvc2VydmVyL2RiL215c3FsLnNxbA==&#34;&gt;https://github.com/seata/seata/blob/develop/script/server/db/mysql.sql&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- the table to store GlobalSession data&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;IF&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;EXISTS&lt;/span&gt; &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;global_table&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;xid&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;                       &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;transaction_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;            &lt;span class=&#34;token keyword&#34;&gt;BIGINT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;status&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;                    &lt;span class=&#34;token keyword&#34;&gt;TINYINT&lt;/span&gt;      &lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;application_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;            &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;transaction_service_group&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;transaction_name&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;          &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;timeout&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;                   &lt;span class=&#34;token keyword&#34;&gt;INT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;begin_time&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;                &lt;span class=&#34;token keyword&#34;&gt;BIGINT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;application_data&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;          &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;gmt_create&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;                &lt;span class=&#34;token keyword&#34;&gt;DATETIME&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;gmt_modified&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;              &lt;span class=&#34;token keyword&#34;&gt;DATETIME&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;PRIMARY&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;KEY&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;xid&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;KEY&lt;/span&gt; &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;idx_gmt_modified_status&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;gmt_modified&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;status&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;KEY&lt;/span&gt; &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;idx_transaction_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;transaction_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ENGINE&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;InnoDB&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;DEFAULT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;CHARSET&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; utf8&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- the table to store BranchSession data&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;IF&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;EXISTS&lt;/span&gt; &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;branch_table&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;branch_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;         &lt;span class=&#34;token keyword&#34;&gt;BIGINT&lt;/span&gt;       &lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;xid&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;               &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;transaction_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;    &lt;span class=&#34;token keyword&#34;&gt;BIGINT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;resource_group_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;resource_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;       &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;256&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;branch_type&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;       &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;status&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;            &lt;span class=&#34;token keyword&#34;&gt;TINYINT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;client_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;         &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;64&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;application_data&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;  &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;gmt_create&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;        &lt;span class=&#34;token keyword&#34;&gt;DATETIME&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;gmt_modified&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;      &lt;span class=&#34;token keyword&#34;&gt;DATETIME&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;PRIMARY&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;KEY&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;branch_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;KEY&lt;/span&gt; &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;idx_xid&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;xid&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ENGINE&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;InnoDB&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;DEFAULT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;CHARSET&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; utf8&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;-- the table to store lock data&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;IF&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;EXISTS&lt;/span&gt; &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;lock_table&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;row_key&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;        &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;xid&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;            &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;transaction_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;BIGINT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;branch_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;      &lt;span class=&#34;token keyword&#34;&gt;BIGINT&lt;/span&gt;       &lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;resource_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;    &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;256&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;table_name&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;     &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;pk&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;             &lt;span class=&#34;token keyword&#34;&gt;VARCHAR&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;36&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;status&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;         &lt;span class=&#34;token keyword&#34;&gt;TINYINT&lt;/span&gt;      &lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;DEFAULT&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;0&#39;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;COMMENT&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;0:locked ,1:rollbacking&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;gmt_create&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;     &lt;span class=&#34;token keyword&#34;&gt;DATETIME&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;gmt_modified&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;   &lt;span class=&#34;token keyword&#34;&gt;DATETIME&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;PRIMARY&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;KEY&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;row_key&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;KEY&lt;/span&gt; &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;idx_status&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;status&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;KEY&lt;/span&gt; &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;idx_branch_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;branch_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ENGINE&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;InnoDB&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;DEFAULT&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;CHARSET&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; utf8&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;重启 Seata 即可生效。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;seata配置nacos注册中心和配置中心&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#seata配置nacos注册中心和配置中心&#34;&gt;#&lt;/a&gt; Seata 配置 Nacos 注册中心和配置中心&lt;/h1&gt;
&lt;p&gt;Seata 支持注册服务到 Nacos，以及支持 Seata 所有配置放到 Nacos 配置中心，在 Nacos 中统一维护；&lt;/p&gt;
&lt;p&gt;高可用模式下就需要配合 Nacos 来完成&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1642524267000/a556e2af96964faea8dc93380cf52c83.png&#34; alt=&#34;image20220118234555417.png&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;具体配置如下&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#具体配置如下&#34;&gt;#&lt;/a&gt; 具体配置如下&lt;/h2&gt;
&lt;h3 id=&#34;注册中心&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#注册中心&#34;&gt;#&lt;/a&gt; 注册中心&lt;/h3&gt;
&lt;p&gt;Seata-server 端配置注册中心，在 registry.conf 中加入配置注册中心 nacos&lt;br /&gt;
&lt;strong&gt; 注意：确保 client 与 server 的注册处于同一个 namespace 和 group，不然会找不到服务。&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;figcaption data-lang=&#34;sh&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;registry &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;# file 、nacos 、eureka、redis、zk、consul、etcd3、sofa&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token builtin class-name&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;nacos&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  nacos &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    application &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;seata-server&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    serverAddr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1:8848&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    group &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;SEATA_GROUP&#34;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 这里的配置要和客户端保持一致&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    namespace &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 这里的配置要和客户端保持一致&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    cluster &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;default&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;nacos&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    password &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;nacos&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;配置中心&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置中心&#34;&gt;#&lt;/a&gt; 配置中心&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Seata-server 端配置配置中心，在 registry.conf 中加入配置使用 nacos 作为配置中心&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;figcaption data-lang=&#34;sh&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;config &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;# file、nacos 、apollo、zk、consul、etcd3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token builtin class-name&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;nacos&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  nacos &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    serverAddr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;127.0.0.1:8848&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    namespace &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    group &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;SEATA_GROUP&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;nacos&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    password &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    dataId &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;seataServer.properties&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;..&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;我们需要把 Seata 的一些配置上传到 Nacos 中，配置比较多，所以官方给我们提供了一个 config.txt，我们下载并且修改其中参数，上传到 Nacos 中&lt;br /&gt;
下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3NlYXRhL3NlYXRhL3RyZWUvZGV2ZWxvcC9zY3JpcHQvY29uZmlnLWNlbnRlcg==&#34;&gt;https://github.com/seata/seata/tree/develop/script/config-center&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;figcaption data-lang=&#34;sh&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#For details about configuration items, see https://seata.io/zh-cn/docs/user/configurations.html&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#Transport configuration, for client and server&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;transport.type&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;TCP&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;transport.server&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;NIO&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;transport.heartbeat&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;true&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;transport.enableTmClientBatchSendRequest&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;false&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;transport.enableRmClientBatchSendRequest&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;true&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;transport.enableTcServerBatchSendResponse&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;false&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;transport.rpcRmRequestTimeout&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;transport.rpcTmRequestTimeout&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;transport.rpcTcRequestTimeout&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;transport.threadFactory.bossThreadPrefix&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;NettyBoss&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;transport.threadFactory.workerThreadPrefix&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;NettyServerNIOWorker&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;transport.threadFactory.serverExecutorThreadPrefix&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;NettyServerBizHandler&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;transport.threadFactory.shareBossWorker&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;false&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;transport.threadFactory.clientSelectorThreadPrefix&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;NettyClientSelector&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;transport.threadFactory.clientSelectorThreadSize&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;transport.threadFactory.clientWorkerThreadPrefix&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;NettyClientWorkerThread&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;transport.threadFactory.bossThreadSize&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;transport.threadFactory.workerThreadSize&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;default&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;transport.shutdown.wait&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;transport.serialization&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;seata&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;transport.compressor&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;none&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#Transaction routing rules configuration, only for the client&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;service.vgroupMapping.default_tx_group&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;default&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#If you use a registry, you can ignore it&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;service.default.grouplist&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;127.0&lt;/span&gt;.0.1:8091&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;service.enableDegrade&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;false&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;service.disableGlobalTransaction&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;false&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#Transaction rule configuration, only for the client&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;client.rm.asyncCommitBufferLimit&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;client.rm.lock.retryInterval&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;client.rm.lock.retryTimes&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;client.rm.lock.retryPolicyBranchRollbackOnConflict&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;true&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;client.rm.reportRetryCount&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;client.rm.tableMetaCheckEnable&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;true&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;client.rm.tableMetaCheckerInterval&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;60000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;client.rm.sqlParserType&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;druid&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;client.rm.reportSuccessEnable&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;false&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;client.rm.sagaBranchRegisterEnable&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;false&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;client.rm.sagaJsonParser&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;fastjson&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;client.rm.tccActionInterceptorOrder&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;-2147482648&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;client.tm.commitRetryCount&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;client.tm.rollbackRetryCount&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;client.tm.defaultGlobalTransactionTimeout&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;60000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;client.tm.degradeCheck&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;false&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;client.tm.degradeCheckAllowTimes&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;client.tm.degradeCheckPeriod&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;client.tm.interceptorOrder&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;-2147482648&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;client.undo.dataValidation&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;true&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;client.undo.logSerialization&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;jackson&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;client.undo.onlyCareUpdateColumns&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;true&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;server.undo.logSaveDays&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;server.undo.logDeletePeriod&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;86400000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;client.undo.logTable&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;undo_log&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;client.undo.compress.enable&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;true&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;client.undo.compress.type&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;zip&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;client.undo.compress.threshold&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;64k&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#For TCC transaction mode&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;tcc.fence.logTableName&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;tcc_fence_log&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;tcc.fence.cleanPeriod&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;1h&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#Log rule configuration, for client and server&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;log.exceptionRate&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#Transaction storage configuration, only for the server. The file, DB, and redis configuration values are optional.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.mode&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;file&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.lock.mode&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;file&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.session.mode&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;file&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#Used for password encryption&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.publicKey&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#If `store.mode,store.lock.mode,store.session.mode` are not equal to `file`, you can remove the configuration block.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.file.dir&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;file_store/data&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.file.maxBranchSessionSize&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;16384&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.file.maxGlobalSessionSize&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;512&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.file.fileWriteBufferCacheSize&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;16384&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.file.flushDiskMode&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;async&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.file.sessionReloadReadSize&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;82&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;83&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#These configurations are required if the `store mode` is `db`. If `store.mode,store.lock.mode,store.session.mode` are not equal to `db`, you can remove the configuration block.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;84&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.db.datasource&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;druid&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;85&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.db.dbType&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;mysql&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;86&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.db.driverClassName&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;com.mysql.jdbc.Driver&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;87&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.db.url&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;jdbc:mysql://127.0.0.1:3306/seata?useUnicode&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;true&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;rewriteBatchedStatements&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;true&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;88&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.db.user&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;username&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;89&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.db.password&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;password&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;90&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.db.minConn&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;91&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.db.maxConn&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;92&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.db.globalTable&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;global_table&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;93&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.db.branchTable&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;branch_table&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;94&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.db.distributedLockTable&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;distributed_lock&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;95&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.db.queryLimit&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;96&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.db.lockTable&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;lock_table&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;97&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.db.maxWait&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;98&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;99&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#These configurations are required if the `store mode` is `redis`. If `store.mode,store.lock.mode,store.session.mode` are not equal to `redis`, you can remove the configuration block.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;100&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.redis.mode&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;single&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;101&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.redis.single.host&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;127.0&lt;/span&gt;.0.1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;102&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.redis.single.port&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6379&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;103&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.redis.sentinel.masterName&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;104&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.redis.sentinel.sentinelHosts&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;105&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.redis.maxConn&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;106&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.redis.minConn&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;107&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.redis.maxTotal&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;108&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.redis.database&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;109&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.redis.password&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;110&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;store.redis.queryLimit&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;111&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;112&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#Transaction rule configuration, only for the server&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;113&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;server.recovery.committingRetryPeriod&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;114&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;server.recovery.asynCommittingRetryPeriod&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;115&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;server.recovery.rollbackingRetryPeriod&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;116&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;server.recovery.timeoutRetryPeriod&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;117&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;server.maxCommitRetryTimeout&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;-1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;118&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;server.maxRollbackRetryTimeout&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;-1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;119&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;server.rollbackRetryTimeoutUnlockEnable&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;false&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;120&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;server.distributedLockExpireTime&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;121&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;server.xaerNotaRetryTimeout&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;60000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;122&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;server.session.branchAsyncQueueSize&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;123&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;server.session.enableBranchAsyncRemove&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;false&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;124&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;server.enableParallelRequestHandle&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;false&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;125&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;126&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#Metrics configuration, only for the server&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;127&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;metrics.enabled&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;false&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;128&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;metrics.registryType&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;compact&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;129&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;metrics.exporterList&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;prometheus&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;130&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token assign-left variable&#34;&gt;metrics.exporterPrometheusPort&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;9898&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;具体修改：&lt;/li&gt;
&lt;li&gt;注意：事务分组：用于防护机房停电，来启用备用机房，或者异地机房，容错机制，当然如果 Seata-Server 配置了对应的事务分组，Client 也需要配置相同的事务分组&lt;/li&gt;
&lt;li&gt;service.vgroupMapping. 可以自定义 = default&lt;br /&gt;
default 这里必须等于 registry.config 中的 cluster=&amp;quot;default&amp;quot;(当然可以更改)&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight properties&#34;&gt;&lt;figcaption data-lang=&#34;.properties&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;transport.type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;TCP&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;transport.server&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;NIO&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;transport.heartbeat&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;transport.enableTmClientBatchSendRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;transport.enableRmClientBatchSendRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;transport.rpcRmRequestTimeout&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;5000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;transport.rpcTmRequestTimeout&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;10000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;transport.rpcTcRequestTimeout&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;10000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;transport.threadFactory.bossThreadPrefix&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;NettyBoss&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;transport.threadFactory.workerThreadPrefix&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;NettyServerNIOWorker&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;transport.threadFactory.serverExecutorThreadPrefix&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;NettyServerBizHandler&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;transport.threadFactory.shareBossWorker&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;transport.threadFactory.clientSelectorThreadPrefix&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;NettyClientSelector&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;transport.threadFactory.clientSelectorThreadSize&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;transport.threadFactory.clientWorkerThreadPrefix&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;NettyClientWorkerThread&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;transport.threadFactory.bossThreadSize&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;transport.threadFactory.workerThreadSize&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;default&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#------------- 修改这个区域的映射 --------------    &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;transport.shutdown.wait&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;3&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;service.vgroupMapping.mygroup&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;default # 事务分组&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;service.default.grouplist&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;127.0.0.1:8091&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;service.enableDegrade&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;service.disableGlobalTransaction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#------------------------------------------    &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;client.rm.asyncCommitBufferLimit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;10000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;client.rm.lock.retryInterval&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;client.rm.lock.retryTimes&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;30&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;client.rm.lock.retryPolicyBranchRollbackOnConflict&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;client.rm.reportRetryCount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;client.rm.tableMetaCheckEnable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;client.rm.tableMetaCheckerInterval&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;60000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;client.rm.sqlParserType&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;druid&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;client.rm.reportSuccessEnable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;client.rm.sagaBranchRegisterEnable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;client.rm.sagaJsonParser&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;fastjson&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;client.rm.tccActionInterceptorOrder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;-2147482648&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;client.tm.commitRetryCount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;client.tm.rollbackRetryCount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;client.tm.defaultGlobalTransactionTimeout&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;60000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;client.tm.degradeCheck&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;client.tm.degradeCheckAllowTimes&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;client.tm.degradeCheckPeriod&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;2000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;client.tm.interceptorOrder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;-2147482648&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.mode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;db # 修改&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.lock.mode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;file&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.session.mode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;file&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.publicKey&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.file.dir&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;file_store/data&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.file.maxBranchSessionSize&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;16384&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.file.maxGlobalSessionSize&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;512&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.file.fileWriteBufferCacheSize&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;16384&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.file.flushDiskMode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;async&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.file.sessionReloadReadSize&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#----------- 修改这个区域的 JDBC 连接 -----------    &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.db.datasource&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;druid&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.db.dbType&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;mysql&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.db.driverClassName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;com.mysql.jdbc.Driver&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.db.url&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;jdbc:mysql://127.0.0.1:3306/seata?useUnicode=true&amp;amp;rewriteBatchedStatements=true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.db.user&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;root&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.db.password&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;root&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.db.minConn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.db.maxConn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;30&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#------------------------------------------    &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.db.globalTable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;global_table&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.db.branchTable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;branch_table&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.db.distributedLockTable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;distributed_lock&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.db.queryLimit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.db.lockTable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;lock_table&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.db.maxWait&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;5000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.redis.mode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;single&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.redis.single.host&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;127.0.0.1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.redis.single.port&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;6379&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.redis.sentinel.masterName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.redis.sentinel.sentinelHosts&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.redis.maxConn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.redis.minConn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.redis.maxTotal&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.redis.database&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.redis.password&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;store.redis.queryLimit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;server.recovery.committingRetryPeriod&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;1000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;82&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;server.recovery.asynCommittingRetryPeriod&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;1000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;83&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;server.recovery.rollbackingRetryPeriod&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;1000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;84&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;server.recovery.timeoutRetryPeriod&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;1000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;85&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;server.maxCommitRetryTimeout&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;-1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;86&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;server.maxRollbackRetryTimeout&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;-1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;87&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;server.rollbackRetryTimeoutUnlockEnable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;88&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;server.distributedLockExpireTime&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;10000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;89&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;client.undo.dataValidation&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;90&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;client.undo.logSerialization&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;jackson&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;91&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;client.undo.onlyCareUpdateColumns&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;92&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;server.undo.logSaveDays&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;7&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;93&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;server.undo.logDeletePeriod&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;86400000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;94&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;client.undo.logTable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;undo_log&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;95&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;client.undo.compress.enable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;96&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;client.undo.compress.type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;zip&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;97&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;client.undo.compress.threshold&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;64k&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;98&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;log.exceptionRate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;100&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;99&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;transport.serialization&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;seata&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;100&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;transport.compressor&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;none&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;101&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;metrics.enabled&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;102&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;metrics.registryType&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;compact&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;103&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;metrics.exporterList&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;prometheus&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;104&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;metrics.exporterPrometheusPort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;9898&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;105&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;tcc.fence.logTableName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;tcc_fence_log&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;106&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key attr-name&#34;&gt;tcc.fence.cleanPeriod&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token value attr-value&#34;&gt;1h&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;修改好这个文件以后，我们就需要把这个文件放到 seata 目录下&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1642524267000/1fb303b3c9574b1e94cce1b743825e0a.png&#34; alt=&#34;image20220118195227875.png&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;
&lt;p&gt;此时我们需要把这些配置一个个的加入到 Nacos 配置中，所以我们需要一个脚本来进行执行，官方已经提供好了，地址为：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3NlYXRhL3NlYXRhL2Jsb2IvZGV2ZWxvcC9zY3JpcHQvY29uZmlnLWNlbnRlci9uYWNvcy9uYWNvcy1jb25maWcuc2g=&#34;&gt;https://github.com/seata/seata/blob/develop/script/config-center/nacos/nacos-config.sh&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1zZWF0YS1zZXJ2ZXItMS05Mjl2eDc3Z3QwMmJqbTJrdHUzYi40LnhuLS0ybmFjb3MtY29uZmlnLWIwMHVkdG9ieDV4ZGEzMjAxYzBieWFkcTRhZ2EzNWd4NHhvajNvLnNo&#34;&gt;我们需要在 seata-server-1.4.2 文件夹中新建一个脚本文件 nacos-config.sh&lt;/span&gt;，然后把脚本内容复制进去&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1642524267000/5107e37cec114e27a22b1c8c1f226d85.png&#34; alt=&#34;image20220118200307770.png&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;利用 git 来进行执行命令：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;figcaption data-lang=&#34;sh&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sh&lt;/span&gt; nacos-config.sh &lt;span class=&#34;token parameter variable&#34;&gt;-h&lt;/span&gt; localhost &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-g&lt;/span&gt; SEATA_GROUP &lt;span class=&#34;token parameter variable&#34;&gt;-t&lt;/span&gt; 命名空间 &lt;span class=&#34;token parameter variable&#34;&gt;-u&lt;/span&gt; nacos &lt;span class=&#34;token parameter variable&#34;&gt;-w&lt;/span&gt; nacos&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;参数说明：&lt;/p&gt;
&lt;p&gt;-h：host，默认值 localhost&lt;/p&gt;
&lt;p&gt;-p：port，默认值 8848&lt;/p&gt;
&lt;p&gt;-g：配置分组，默认为 SEATA_GROUP&lt;/p&gt;
&lt;p&gt;-t：租户信息，对应 Nacos 的命名空间 ID，默认为空&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1642524267000/c08136f3e6184b7b88e83d15f733f3d0.png&#34; alt=&#34;image20220118200423603.png&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;在执行 naocs-config 文件的时候要注意，它默认寻找 config.txt 的路径和我们的路径不同，所以要打开 naocs-config 文件进行修改，否则无法执行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1642524267000/3f11434b59fb4356bb59f0b3919db51d.png&#34; alt=&#34;image20220119002450133.png&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;测试启动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试启动&#34;&gt;#&lt;/a&gt; 测试启动&lt;/h3&gt;
&lt;p&gt;当以上的这些配置完成以后，我们就可以启动 nacos 和 seata-server 了，此时我们查看 Nacos 的配置中心，就会看到我们传入的所有配置信息&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1642524267000/800a9a0540244f079f86be63505f153f.png&#34; alt=&#34;image20220119003324612.png&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;附加&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#附加&#34;&gt;#&lt;/a&gt; 附加&lt;/h2&gt;
&lt;p&gt;各位我们 Seata-Server 默认端口是 8091，那么如果我们是集群部署方式，我们如何修改端口那？&lt;/p&gt;
&lt;p&gt;在 Linux/Mac 下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  sh ./bin/seata-server.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在 Windows 下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bin\seata-server.bat
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;支持的启动参数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#支持的启动参数&#34;&gt;#&lt;/a&gt; 支持的启动参数&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;全写&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-h&lt;/td&gt;
&lt;td&gt;--host&lt;/td&gt;
&lt;td&gt;指定在注册中心注册的 IP&lt;/td&gt;
&lt;td&gt;不指定时获取当前的 IP，外部访问部署在云环境和容器中的 server 建议指定&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-p&lt;/td&gt;
&lt;td&gt;--port&lt;/td&gt;
&lt;td&gt;指定 server 启动的端口&lt;/td&gt;
&lt;td&gt;默认为 8091&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-m&lt;/td&gt;
&lt;td&gt;--storeMode&lt;/td&gt;
&lt;td&gt;事务日志存储方式&lt;/td&gt;
&lt;td&gt;支持  &lt;code&gt;file&lt;/code&gt; , &lt;code&gt;db&lt;/code&gt; , &lt;code&gt;redis&lt;/code&gt; ，默认为  &lt;code&gt;file&lt;/code&gt;  注:redis 需 seata-server 1.3 版本及以上&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-n&lt;/td&gt;
&lt;td&gt;--serverNode&lt;/td&gt;
&lt;td&gt;用于指定 seata-server 节点 ID&lt;/td&gt;
&lt;td&gt;如  &lt;code&gt;1&lt;/code&gt; , &lt;code&gt;2&lt;/code&gt; , &lt;code&gt;3&lt;/code&gt; ..., 默认为  &lt;code&gt;1&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-e&lt;/td&gt;
&lt;td&gt;--seataEnv&lt;/td&gt;
&lt;td&gt;指定 seata-server 运行环境&lt;/td&gt;
&lt;td&gt;如  &lt;code&gt;dev&lt;/code&gt; ,  &lt;code&gt;test&lt;/code&gt;  等，服务启动时会使用  &lt;code&gt;registry-dev.conf&lt;/code&gt;  这样的配置&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; sh ./bin/seata-server.sh -p 8091 -h 127.0.0.1 -m file
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;seata-at模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#seata-at模式&#34;&gt;#&lt;/a&gt; Seata-AT 模式&lt;/h1&gt;
&lt;p&gt;概念：AT 模式是一种无侵入的分布式事务解决方案，在 AT 模式下，用户只需关注自己的 “业务 SQL”，用户的 “业务 SQL” 作为一阶段，Seata 框架会自动生成事务的二阶段提交和回滚操作。&lt;/p&gt;
&lt;h2 id=&#34;整体机制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#整体机制&#34;&gt;#&lt;/a&gt; 整体机制&lt;/h2&gt;
&lt;p&gt;两阶段提交协议的演变：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一阶段：业务数据和回滚日志记录在同一个本地事务中提交，释放本地锁和连接资源。&lt;/li&gt;
&lt;li&gt;二阶段：
&lt;ul&gt;
&lt;li&gt;提交异步化，非常快速地完成。&lt;/li&gt;
&lt;li&gt;回滚通过一阶段的回滚日志进行反向补偿。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;一阶段&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一阶段&#34;&gt;#&lt;/a&gt; 一阶段&lt;/h3&gt;
&lt;p&gt;在一阶段中，Seata 会拦截 “业务 SQL“，首先解析 SQL 语义，找到要更新的业务数据，在数据被更新前，保存下来 &amp;quot;undo&amp;quot;，然后执行” 业务 SQL“更新数据，更新之后再次保存数据”redo“，最后生成行锁，这些操作都在本地数据库事务内完成，这样保证了一阶段的原子性。&lt;/p&gt;
&lt;h3 id=&#34;二阶段&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二阶段&#34;&gt;#&lt;/a&gt; 二阶段&lt;/h3&gt;
&lt;p&gt;相对一阶段，二阶段比较简单，负责整体的回滚和提交，如果之前的一阶段中有本地事务没有通过，那么就执行全局回滚，否在执行全局提交，回滚用到的就是一阶段记录的 &amp;quot;undo Log&amp;quot;，通过回滚记录生成反向更新 SQL 并执行，以完成分支的回滚。当然事务完成后会释放所有资源和删除所有日志。&lt;/p&gt;
&lt;h3 id=&#34;具体图解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#具体图解&#34;&gt;#&lt;/a&gt; 具体图解&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1642764224000/c5cda1c2014d4581a93ed75f26d234ab.png&#34; alt=&#34;image20220118161225488.png&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;案例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例&#34;&gt;#&lt;/a&gt; 案例&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;首先设计两个服务，一个订单 order8801 一个库存 stock8802&lt;/li&gt;
&lt;li&gt;stock 库存表为：&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1642764224000/aaa39d7694324cce9deef2c10fdbf132.png&#34; alt=&#34;image20220117223403744.png&#34; /&gt;&lt;/li&gt;
&lt;li&gt;order 订单表为：&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1642764224000/915363f21d474f04a63b0451955923ae.png&#34; alt=&#34;image20220117223340923.png&#34; /&gt;&lt;/li&gt;
&lt;li&gt;订单服务通过 OpenFegin 远程调用库存服务，然后库存服务减库存，订单服务生成订单，完成基本的调用以后我们给订单服务添加异常&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Service&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;OrderServiceImpl&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;OrderService&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Resource&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;OrderMapper&lt;/span&gt; orderMapper&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Resource&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;StockClient&lt;/span&gt; stockClient&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 减库存&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        stockClient&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;decrement&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 添加异常&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 创建订单&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        orderMapper&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;此时我们会发现访问接口出现异常情况，但是库存减少，订单没有增加此时已经出现了分布式事务的问题&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1642764224000/eecbf65494df46029c548c29159d4318.png&#34; alt=&#34;image20220117223455391.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;订单表，没有增加数据&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1642764224000/56d1870baf4e4f7aa4120fad0513adae.png&#34; alt=&#34;image20220117223513706.png&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;通过seata的at模式解决分布式事务&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#通过seata的at模式解决分布式事务&#34;&gt;#&lt;/a&gt; 通过 Seata 的 AT 模式解决分布式事务&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;首先增加对应的 Seata 依赖&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;    &amp;lt;dependency&amp;gt;
        &amp;lt;groupId&amp;gt;com.alibaba.cloud&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;spring-cloud-starter-alibaba-seata&amp;lt;/artifactId&amp;gt;
    &amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;在对应的微服务数据库上加上 undo_log 表，此表用于数据的回滚&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight sql&#34;&gt;&lt;figcaption data-lang=&#34;SQL&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;DROP&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;IF&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;EXISTS&lt;/span&gt; &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;undo_log&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;TABLE&lt;/span&gt; &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;undo_log&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;branch_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;bigint&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;COMMENT&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;分支事务ID&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;xid&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;varchar&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;CHARACTER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SET&lt;/span&gt; utf8 &lt;span class=&#34;token keyword&#34;&gt;COLLATE&lt;/span&gt; utf8_general_ci &lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;COMMENT&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;全局事务ID&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;varchar&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;128&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;CHARACTER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SET&lt;/span&gt; utf8 &lt;span class=&#34;token keyword&#34;&gt;COLLATE&lt;/span&gt; utf8_general_ci &lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;COMMENT&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;上下文&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;rollback_info&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;longblob&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;COMMENT&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;回滚信息&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;log_status&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;COMMENT&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;状态，0正常，1全局已完成&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;log_created&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;COMMENT&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;创建时间&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;log_modified&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;datetime&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;NOT&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;NULL&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;COMMENT&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;修改时间&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;UNIQUE&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;INDEX&lt;/span&gt; &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;ux_undo_log&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;xid&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token identifier&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;branch_id&lt;span class=&#34;token punctuation&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;USING&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;BTREE&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;ENGINE&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;InnoDB&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;CHARACTER&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;SET&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; utf8 &lt;span class=&#34;token keyword&#34;&gt;COLLATE&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; utf8_general_ci &lt;span class=&#34;token keyword&#34;&gt;COMMENT&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;AT transaction mode undo table&#39;&lt;/span&gt; ROW_FORMAT &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; Compact&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1642764224000/354464b4880e4d9e87fde0c8ab535963.png&#34; alt=&#34;image20220117225203163.png&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;配置 yml（8801 和 8802Seata 的配置保持一致）&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;figcaption data-lang=&#34;YAML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8802&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;spring&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;application&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; stock&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;cloud&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;nacos&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token key atrule&#34;&gt;discovery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token key atrule&#34;&gt;server-addr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; localhost&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;datasource&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;druid&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token key atrule&#34;&gt;driver-class-name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; com.mysql.jdbc.Driver&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token key atrule&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  jdbc&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;mysql&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;//localhost&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;3306/test_at&lt;span class=&#34;token punctuation&#34;&gt;?&lt;/span&gt;characterEncoding=utf8&lt;span class=&#34;token important&#34;&gt;&amp;amp;useSSL=false&amp;amp;serverTimezone=Asia/Shanghai&amp;amp;rewriteBatchedStatements=true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token key atrule&#34;&gt;username&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; root&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token key atrule&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; root&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;seata&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;tx-service-group&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; mygroup &lt;span class=&#34;token comment&#34;&gt;# 事务组名称，要和服务端对应&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;service&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;vgroup-mapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       mygroup&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; default &lt;span class=&#34;token comment&#34;&gt;# key 是事务组名称 value 要和服务端的机房名称保持一致&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;需要在 order8801 (TM) 的 Controller 上添加注解&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@RestController&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;OrderController&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Autowired&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;OrderService&lt;/span&gt; orderService&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/order/create&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GlobalTransactional&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 开启分布式事务&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        orderService&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;生成订单&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;把 8801 和 8802 都跑起来，当然 Nacos 和 Seata 都要进行启动，这个时候我们进行访问 Order 的 REST 接口：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xvY2FsaG9zdDo4ODAxL29yZGVyL2NyZWF0ZQ==&#34;&gt;http://localhost:8801/order/create&lt;/span&gt;，我们就会发现此时已经解决了分布式事务问题&lt;br /&gt;
库存没有减少&lt;br /&gt;
订单也没有增加&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1642764224000/b6abca237f9547369db5e84d1e932e17.png&#34; alt=&#34;image20220118162757573.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1642764224000/2f7c4ee907454b448d51cb90d0f1f7ad.png&#34; alt=&#34;image20220118162832649.png&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;那么为了验证 undo_log 表用于存储回滚的数据，我们在 OrderServiceImpl 上异常位置添加断点，同时以 debug 方式来启动 8801 订单服务&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;@Service
public class OrderServiceImpl implements OrderService &amp;#123;
    @Resource
    private OrderMapper orderMapper;

    @Resource
    private StockClient stockClient;

    @Override
    public void create() &amp;#123;
        // 减库存
        stockClient.decrement();

        // 添加异常
        int i = 1/0;// 此处添加断点

        // 创建订单
        orderMapper.create();
    &amp;#125;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;然后访问接口：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xvY2FsaG9zdDo4ODAxL29yZGVyL2NyZWF0ZQ==&#34;&gt;http://localhost:8801/order/create&lt;/span&gt;，程序会卡在断点上，此时我们来查看 undo_log 表和库存表，此时我们会发现，库存确实减少了，但是在 undo_log 表中出现了快照记录了当前修改前的数据，这个数据就是用于回滚的数据&lt;br /&gt;
库存减少&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1642764224000/27a1b4bcde974baca7dba1df62f44f37.png&#34; alt=&#34;image20220118163714002.png&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;	undo_log表记录快照
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1642764224000/bcf9f44d96864f58aef8d42726e2a811.png&#34; alt=&#34;image20220118163908365.png&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;	放行以后，库存数量回复，回滚生效
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1642764224000/4ef168339c6949b39b5f63bc2042ad81.png&#34; alt=&#34;image20220118164019307.png&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;此时我们就验证了 AT 事务的执行过程。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;seata-xa模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#seata-xa模式&#34;&gt;#&lt;/a&gt; Seata-XA 模式&lt;/h1&gt;
&lt;p&gt;Seata 1.2.0 版本重磅发布新的事务模式：XA 模式，实现对 XA 协议的支持。&lt;/p&gt;
&lt;p&gt;我们从三个方面来深入分析：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;XA 模式是什么？&lt;/li&gt;
&lt;li&gt;为什么支持 XA？&lt;/li&gt;
&lt;li&gt;XA 模式如何实现的，以及如何使用？&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;xa模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xa模式&#34;&gt;#&lt;/a&gt; XA 模式&lt;/h2&gt;
&lt;p&gt;首先我们需要先了解一下什么是 XA？&lt;/p&gt;
&lt;p&gt;XA 规范早在上世纪 90 年代初就被提出，用以解决分布式事务处理这个领域的问题。&lt;/p&gt;
&lt;p&gt;注意：不存在某一种分布式事务机制可以完美适应所有场景，满足所有需求。&lt;/p&gt;
&lt;p&gt;现在，无论 AT 模式、TCC 模式还是 Saga 模式，这些模式的提出，本质上都源自 XA 规范对某些场景需求的无法满足。&lt;/p&gt;
&lt;h3 id=&#34;什么是xa协议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是xa协议&#34;&gt;#&lt;/a&gt; 什么是 XA 协议&lt;/h3&gt;
&lt;p&gt;XA 规范 是 X/Open 组织定义的分布式事务处理（DTP，Distributed Transaction Processing）标准&lt;/p&gt;
&lt;p&gt;XA 规范 描述了全局的事务管理器与局部的资源管理器之间的接口。 XA 规范 的目的是允许的多个资源（如数据库，应用服务器，消息队列等）在同一事务中访问，这样可以使 ACID 属性跨越应用程序而保持有效。&lt;/p&gt;
&lt;p&gt;XA 规范 使用两阶段提交（2PC，Two-Phase Commit）来保证所有资源同时提交或回滚任何特定的事务。&lt;/p&gt;
&lt;p&gt;XA 规范 在上世纪 90 年代初就被提出。目前，几乎所有主流的数据库都对 XA 规范 提供了支持。&lt;/p&gt;
&lt;p&gt;DTP 模型定义如下角色：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AP：即应用程序，可以理解为使用 DTP 分布式事务的程序&lt;/li&gt;
&lt;li&gt;RM：资源管理器，可以理解为事务的参与者，一般情况下是指一个数据库的实例（MySql），通过资源管理器对该数据库进行控制，资源管理器控制着分支事务&lt;/li&gt;
&lt;li&gt;TM：事务管理器，负责协调和管理事务，事务管理器控制着全局事务，管理实务生命周期，并协调各个 RM。全局事务是指分布式事务处理环境中，需要操作多个数据库共同完成一个工作，这个工作即是一个全局事务。&lt;/li&gt;
&lt;li&gt;DTP 模式定义 TM 和 RM 之间通讯的接口规范叫 XA，简单理解为数据库提供的 2PC 接口协议，基于数据库的 XA 协议来实现的 2PC 又称为 XA 方案。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1644422177000/081cd4e8c4584620834469d663701fc2.png&#34; alt=&#34;20200722160231749.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;案例解释：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;应用程序（AP）持有订单库和商品库两个数据源。&lt;/li&gt;
&lt;li&gt;应用程序（AP）通过 TM 通知订单库（RM）和商品库（RM），来创建订单和减库存，RM 此时未提交事务，此时商品和订单资源锁定。&lt;/li&gt;
&lt;li&gt;TM 收到执行回复，只要有一方失败则分别向其他 RM 发送回滚事务，回滚完毕，资源锁释放。&lt;/li&gt;
&lt;li&gt;TM 收到执行回复，全部成功，此时向所有的 RM 发起提交事务，提交完毕，资源锁释放。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1644422177000/04a567aca96a410ea7f1fa0e8eba955b.png&#34; alt=&#34;image20220209173222316.png&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;xa协议的痛点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xa协议的痛点&#34;&gt;#&lt;/a&gt; XA 协议的痛点&lt;/h4&gt;
&lt;p&gt;如果一个参与全局事务的资源 “失联” 了（收不到分支事务结束的命令），那么它锁定的数据，将一直被锁定。进而，甚至可能因此产生死锁。&lt;/p&gt;
&lt;p&gt;这是 XA 协议的核心痛点，也是 Seata 引入 XA 模式要重点解决的问题。&lt;/p&gt;
&lt;h3 id=&#34;seata的事务模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#seata的事务模式&#34;&gt;#&lt;/a&gt; Seata 的事务模式&lt;/h3&gt;
&lt;p&gt;Seata 定义了全局事务的框架。&lt;/p&gt;
&lt;p&gt;全局事务 定义为若干 分支事务 的整体协调：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;TM 向 TC 请求发起（Begin）、提交（Commit）、回滚（Rollback）全局事务。&lt;/li&gt;
&lt;li&gt;TM 把代表全局事务的 XID 绑定到分支事务上。&lt;/li&gt;
&lt;li&gt;RM 向 TC 注册，把分支事务关联到 XID 代表的全局事务中。&lt;/li&gt;
&lt;li&gt;RM 把分支事务的执行结果上报给 TC。（可选）&lt;/li&gt;
&lt;li&gt;TC 发送分支提交（Branch Commit）或分支回滚（Branch Rollback）命令给 RM。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1644422177000/7c9541b4dfc4450d84714078137081d3.png&#34; alt=&#34;TB19qmhOrY1gK0jSZTEXXXDQVXa1330924.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Seata 的 全局事务 处理过程，分为两个阶段：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;执行阶段 ：执行分支事务，并保证执行结果满足是&lt;em&gt;可回滚的（Rollbackable）&lt;/em&gt; 和&lt;em&gt;持久化的（Durable）&lt;/em&gt;。&lt;/li&gt;
&lt;li&gt;完成阶段： 根据 执行阶段 结果形成的决议，应用通过 TM 发出的全局提交或回滚的请求给 TC，TC 命令 RM 驱动 分支事务 进行 Commit 或 Rollback。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Seata 的所谓事务模式是指：运行在 Seata 全局事务框架下的 分支事务 的行为模式。准确地讲，应该叫作 分支事务模式。&lt;/p&gt;
&lt;p&gt;不同的 事务模式 区别在于 分支事务 使用不同的方式达到全局事务两个阶段的目标。即，回答以下两个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;执行阶段 ：如何执行并 保证 执行结果满足是&lt;em&gt;可回滚的（Rollbackable）&lt;/em&gt; 和&lt;em&gt;持久化的（Durable）&lt;/em&gt;。&lt;/li&gt;
&lt;li&gt;完成阶段： 收到 TC 的命令后，如何做到分支的提交或回滚？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们以 AT 模式举例：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1644422177000/2f29d8621f98463db0101f6f3e1c9a35.png&#34; alt=&#34;TB1NTuzOBr0gK0jSZFnXXbRRXXa1330924.png&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;执行阶段：
&lt;ul&gt;
&lt;li&gt;可回滚：根据 SQL 解析结果，记录回滚日志&lt;/li&gt;
&lt;li&gt;持久化：回滚日志和业务 SQL 在同一个本地事务中提交到数据库&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;完成阶段：
&lt;ul&gt;
&lt;li&gt;分支提交：异步删除回滚日志记录&lt;/li&gt;
&lt;li&gt;分支回滚：依据回滚日志进行反向补偿更新&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;seata的xa模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#seata的xa模式&#34;&gt;#&lt;/a&gt; Seata 的 XA 模式&lt;/h2&gt;
&lt;p&gt;XA 模式：&lt;/p&gt;
&lt;p&gt;在 Seata 定义的分布式事务框架内，利用事务资源（数据库、消息服务等）对 XA 协议的支持，以 XA 协议的机制来管理分支事务的一种 事务模式。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1644422177000/a4e733baeb4641efa9f81139d9eb9ef2.png&#34; alt=&#34;TB1hSpccIVl614jSZKPXXaGjpXa1330924.png&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;执行阶段：
&lt;ul&gt;
&lt;li&gt;可回滚：业务 SQL 操作放在 XA 分支中进行，由资源对 XA 协议的支持来保证 可回滚&lt;/li&gt;
&lt;li&gt;持久化：XA 分支完成后，执行 XA prepare，同样，由资源对 XA 协议的支持来保证&lt;em&gt;持久化&lt;/em&gt;（即，之后任何意外都不会造成无法回滚的情况）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;完成阶段：
&lt;ul&gt;
&lt;li&gt;分支提交：执行 XA 分支的 commit&lt;/li&gt;
&lt;li&gt;分支回滚：执行 XA 分支的 rollback&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;为什么要在seata中支持xa&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#为什么要在seata中支持xa&#34;&gt;#&lt;/a&gt; 为什么要在 Seata 中支持 XA&lt;/h3&gt;
&lt;p&gt;为什么要在 Seata 中增加 XA 模式呢？支持 XA 的意义在哪里呢？&lt;/p&gt;
&lt;p&gt;本质上，Seata 已经支持的 3 大事务模式：AT、TCC、Saga 都是 补偿型 的。&lt;/p&gt;
&lt;p&gt;补偿型 事务处理机制构建在 事务资源 之上（要么在中间件层面，要么在应用层面），事务资源 本身对分布式事务是无感知的。&lt;/p&gt;
&lt;p&gt;事务资源 对分布式事务的无感知存在一个根本性的问题：无法做到真正的 全局一致性 。&lt;/p&gt;
&lt;p&gt;比如，一条库存记录，处在 补偿型 事务处理过程中，由 100 扣减为 50。此时，仓库管理员连接数据库，查询统计库存，就看到当前的 50。之后，事务因为异外回滚，库存会被补偿回滚为 100。显然，仓库管理员查询统计到的 50 就是 脏 数据。所以补偿型事务是存在中间状态的（中途可能读到脏数据）&lt;/p&gt;
&lt;h3 id=&#34;xa的价值&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xa的价值&#34;&gt;#&lt;/a&gt; XA 的价值&lt;/h3&gt;
&lt;p&gt;与 补偿型 不同，XA 协议 要求 事务资源 本身提供对规范和协议的支持。&lt;/p&gt;
&lt;p&gt;因为 事务资源 感知并参与分布式事务处理过程，所以 事务资源（如数据库）可以保障从任意视角对数据的访问有效隔离，满足全局数据一致性。&lt;/p&gt;
&lt;p&gt;比如，刚才提到的库存更新场景，XA 事务处理过程中，中间状态数据库存 50 由数据库本身保证，是不会仓库管理员的查询统计看到的。&lt;/p&gt;
&lt;p&gt;除了 全局一致性 这个根本性的价值外，支持 XA 还有如下几个方面的好处：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;业务无侵入：和 AT 一样，XA 模式将是业务无侵入的，不给应用设计和开发带来额外负担。&lt;/li&gt;
&lt;li&gt;数据库的支持广泛：XA 协议被主流关系型数据库广泛支持，不需要额外的适配即可使用。&lt;/li&gt;
&lt;li&gt;多语言支持容易：因为不涉及 SQL 解析，XA 模式对 Seata 的 RM 的要求比较少。&lt;/li&gt;
&lt;li&gt;传统基于 XA 应用的迁移：传统的，基于 XA 协议的应用，迁移到 Seata 平台，使用 XA 模式将更平滑。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;xa模式的使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#xa模式的使用&#34;&gt;#&lt;/a&gt; XA 模式的使用&lt;/h2&gt;
&lt;p&gt;我们从官方案例入手，具体的官方案例下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3NlYXRhL3NlYXRhLXNhbXBsZXM=&#34;&gt;https://github.com/seata/seata-samples&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;官方案例演示图：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1644422177000/7bc365555cce40bab992c3fc20d21d23.png&#34; alt=&#34;image20220211150003482.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;案例解析：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1644422177000/f80ebac36f754d3f9602c19ffbb0d707.png&#34; alt=&#34;image20220211155757596.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;整体运行机制：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1644422177000/c8387eae75ad4db0b7e4065d924b4c5a.png&#34; alt=&#34;TB19qmhOrY1gK0jSZTEXXXDQVXa1330924.png&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;在当前的技术发展阶段，不存一个分布式事务处理机制可以完美满足所有场景的需求。&lt;/p&gt;
&lt;p&gt;一致性、可靠性、易用性、性能等诸多方面的系统设计约束，需要用不同的事务处理机制去满足。&lt;/p&gt;
&lt;p&gt;Seata 项目最核心的价值在于：构建一个全面解决分布式事务问题的 标准化 平台。&lt;/p&gt;
&lt;p&gt;基于 Seata，上层应用架构可以根据实际场景的需求，灵活选择合适的分布式事务解决方案。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1644422177000/84f6e8e625c64f608ffa72ecf1f28f57.png&#34; alt=&#34;TB1lTSoOqL7gK0jSZFBXXXZZpXa1028528.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;XA 模式的加入，补齐了 Seata 在 全局一致性 场景下的缺口，形成 AT、TCC、Saga、XA 四大 事务模式 的版图，基本可以满足所有场景的分布式事务处理诉求。&lt;/p&gt;
&lt;h1 id=&#34;tcc事务模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#tcc事务模式&#34;&gt;#&lt;/a&gt; TCC 事务模式&lt;/h1&gt;
&lt;p&gt;首先我们先来了解常规的 TCC 模式。&lt;/p&gt;
&lt;h3 id=&#34;什么是tcc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是tcc&#34;&gt;#&lt;/a&gt; 什么是 TCC&lt;/h3&gt;
&lt;p&gt;TCC 是分布式事务中的二阶段提交协议，它的全称为 Try-Confirm-Cancel，即资源预留（Try）、确认操作（Confirm）、取消操作（Cancel），他们的具体含义如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Try：对业务资源的检查并预留；&lt;/li&gt;
&lt;li&gt;Confirm：对业务处理进行提交，即 commit 操作，只要 Try 成功，那么该步骤一定成功；&lt;/li&gt;
&lt;li&gt;Cancel：对业务处理进行取消，即回滚操作，该步骤回对 Try 预留的资源进行释放。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;TCC 是一种侵入式的分布式事务解决方案，以上三个操作都需要业务系统自行实现，对业务系统有着非常大的入侵性，设计相对复杂，但优点是 TCC 完全不依赖数据库，能够实现跨数据库、跨应用资源管理，对这些不同数据访问通过侵入式的编码方式实现一个原子操作，更好地解决了在各种复杂业务场景下的分布式事务问题。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1644422117000/85e3fca01b714c99952ca6a06be2dc23.png&#34; alt=&#34;image.png&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;seata的tcc模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#seata的tcc模式&#34;&gt;#&lt;/a&gt; Seata 的 TCC 模式&lt;/h3&gt;
&lt;p&gt;Seata TCC 模式跟通用型 TCC 模式原理一致。&lt;/p&gt;
&lt;h3 id=&#34;tcc和at区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#tcc和at区别&#34;&gt;#&lt;/a&gt; TCC 和 AT 区别&lt;/h3&gt;
&lt;p&gt;AT 模式基于 &lt;strong&gt;支持本地 ACID 事务&lt;/strong&gt; 的 &lt;strong&gt;关系型数据库&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一阶段 prepare 行为：在本地事务中，一并提交业务数据更新和相应回滚日志记录。&lt;/li&gt;
&lt;li&gt;二阶段 commit 行为：马上成功结束，&lt;strong&gt;自动&lt;/strong&gt; 异步批量清理回滚日志。&lt;/li&gt;
&lt;li&gt;二阶段 rollback 行为：通过回滚日志，&lt;strong&gt;自动&lt;/strong&gt; 生成补偿操作，完成数据回滚。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;相应的，TCC 模式，不依赖于底层数据资源的事务支持：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一阶段 prepare 行为：调用&lt;strong&gt;自定义&lt;/strong&gt; 的 prepare 逻辑。&lt;/li&gt;
&lt;li&gt;二阶段 commit 行为：调用&lt;strong&gt;自定义&lt;/strong&gt; 的 commit 逻辑。&lt;/li&gt;
&lt;li&gt;二阶段 rollback 行为：调用&lt;strong&gt;自定义&lt;/strong&gt; 的 rollback 逻辑。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所谓 TCC 模式，是指支持把 &lt;strong&gt;自定义&lt;/strong&gt; 的分支事务纳入到全局事务的管理中。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1644422117000/94034492f123410197b33cd2c3573a1d.png&#34; alt=&#34;seata_tcc11644422133604.png&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#特点&#34;&gt;#&lt;/a&gt; 特点：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;侵入性比较强，并且需要自己实现相关事务控制逻辑&lt;/li&gt;
&lt;li&gt;在整个过程基本没有锁，性能较强&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;详细讲解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#详细讲解&#34;&gt;#&lt;/a&gt; 详细讲解&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1644422117000/c01ba87b261645f5ae99b4925e1c6fd3.png&#34; alt=&#34;image20220125210417709.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;具体使用案例：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZWF0YS5pby96aC1jbi9ibG9nL2ludGVncmF0ZS1zZWF0YS10Y2MtbW9kZS13aXRoLXNwcmluZy1jbG91ZC5odG1s&#34;&gt;https://seata.io/zh-cn/blog/integrate-seata-tcc-mode-with-spring-cloud.html&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;seata中的saga事务模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#seata中的saga事务模式&#34;&gt;#&lt;/a&gt; Seata 中的 Saga 事务模式&lt;/h1&gt;
&lt;h3 id=&#34;基本概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本概念&#34;&gt;#&lt;/a&gt; 基本概念&lt;/h3&gt;
&lt;p&gt;Saga 模式是 SEATA 提供的长事务解决方案，在 Saga 模式中，业务流程中每个参与者都提交本地事务，当出现某一个参与者失败则补偿前面已经成功的参与者，一阶段正向服务和二阶段补偿服务（执行处理时候出错了，给一个修复的机会）都由业务开发实现。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1644919973000/659fd4a073484f5888e3c3d7ee635e48.png&#34; alt=&#34;TB1Y2kuw7T2gK0jSZFkXXcIQFXa445444.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Saga 模式下分布式事务通常是由事件驱动的，各个参与者之间是异步执行的，Saga 模式是一种长事务解决方案。&lt;/p&gt;
&lt;h3 id=&#34;为什么需要saga&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#为什么需要saga&#34;&gt;#&lt;/a&gt; 为什么需要 Saga&lt;/h3&gt;
&lt;p&gt;之前我们学习的 Seata 分布式三种操作模型中所使用的的微服务全部可以根据开发者的需求进行修改，但是在一些特殊环境下，比如老系统，封闭的系统（无法修改，同时没有任何分布式事务引入），那么 AT、XA、TCC 模型将全部不能使用，为了解决这样的问题，才引用了 Saga 模型。&lt;/p&gt;
&lt;p&gt;比如：事务参与者可能是其他公司的服务或者是遗留系统，无法改造，可以使用 Saga 模式。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1644919973000/05d2c07b91dd46a4baa498f4e3f3d49e.png&#34; alt=&#34;image20220215170345079.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Saga 模式是 Seata 提供的长事务解决方案，提供了&lt;strong&gt;异构系统的事务统一处理模型&lt;/strong&gt;。在 Saga 模式中，所有的子业务都不在直接参与整体事务的处理（只负责本地事务的处理），而是全部交由了最终调用端来负责实现，而在进行总业务逻辑处理时，在某一个子业务出现问题时，则自动补偿全面已经成功的其他参与者，这样一阶段的正向服务调用和二阶段的服务补偿处理全部由总业务开发实现。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1644919973000/cd988d659148427fbb3b5dafa1c12782.png&#34; alt=&#34;Saga.png&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;saga状态机&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#saga状态机&#34;&gt;#&lt;/a&gt; Saga 状态机&lt;/h3&gt;
&lt;p&gt;目前 Seata 提供的 Saga 模式只能通过状态机引擎来实现，需要开发者手工的进行 Saga 业务流程绘制，并且将其转换为 Json 配置文件，而后在程序运行时，将依据子配置文件实现业务处理以及服务补偿处理，而要想进行 Saga 状态图的绘制，一般需要通过 Saga 状态机来实现。&lt;/p&gt;
&lt;p&gt;基本原理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过状态图来定义服务调用的流程并生成 json 定义文件&lt;/li&gt;
&lt;li&gt;状态图中一个节点可以调用一个服务，节点可以配置它的补偿节点&lt;/li&gt;
&lt;li&gt;状态图 json 由状态机引擎驱动执行，当出现异常时状态引擎反向执行已成功节点对应的补偿节点将事务回滚&lt;/li&gt;
&lt;li&gt;可以实现服务编排需求，支持单项选择、并发、子流程、参数转换、参数映射、服务执行状态判断、异常捕获等功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;![](file://E:/%E9%A9%AC%E5%A3%AB%E5%85%B5/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%93%E9%A2%98/%E8%AF%BE%E4%BB%B6/Seata%E5%9F%BA%E7%A1%80%E5%BA%94%E7%94%A8/09/demo_statelang.png?lastModify=1644919976)&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1644919973000/78e31d21cf3c4df6be73532c2b1cc08a.png&#34; alt=&#34;demo_statelang.png&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;saga状态机的应用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#saga状态机的应用&#34;&gt;#&lt;/a&gt; Saga 状态机的应用&lt;/h3&gt;
&lt;p&gt;官方提供了一个状态机设计器&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1644919973000/e3535b08efed496086d1ed219cf580e2.png&#34; alt=&#34;image20220215175333918.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;官方文档地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZWF0YS5pby96aC1jbi9kb2NzL3VzZXIvc2FnYS5odG1s&#34;&gt;https://seata.io/zh-cn/docs/user/saga.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Seata Safa 状态机可视化图形设计器使用地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3NlYXRhL3NlYXRhL2Jsb2IvZGV2ZWxvcC9zYWdhL3NlYXRhLXNhZ2Etc3RhdGVtYWNoaW5lLWRlc2lnbmVyL1JFQURNRS56aC1DTi5tZA==&#34;&gt;https://github.com/seata/seata/blob/develop/saga/seata-saga-statemachine-designer/README.zh-CN.md&lt;/span&gt;&lt;/p&gt;

&lt;div id=&#34;gitalk-container&#34;&gt;&lt;/div&gt;
&lt;script src=&#34;https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js&#34;&gt;&lt;/script&gt;&lt;link rel=&#34;stylesheet&#34; href=&#34;https://unpkg.com/gitalk/dist/gitalk.css&#34;&gt;&lt;script src=&#34;https://unpkg.com/gitalk/dist/gitalk.min.js&#34;&gt;&lt;/script&gt;

		&lt;script&gt;
		var gitalkConfig = {&#34;clientID&#34;:&#34;6db178ba46c8af8f6a6f&#34;,&#34;clientSecret&#34;:&#34;90f730e5956024596558df00975cd8eae28cae3d&#34;,&#34;repo&#34;:&#34;bk-comment01&#34;,&#34;owner&#34;:&#34;onlymarryu&#34;,&#34;admin&#34;:[&#34;onlymarryu&#34;],&#34;distractionFreeMode&#34;:false,&#34;language&#34;:&#34;zh-CN&#34;,&#34;proxy&#34;:&#34;https://gitalk-comments.netlify.app/github_access_token&#34;,&#34;perPage&#34;:15};
	    gitalkConfig.id = md5(location.pathname);
		var gitalk = new Gitalk(gitalkConfig);
	    gitalk.render(&#34;gitalk-container&#34;);
	    &lt;/script&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://eth168.top/Spring_Family/spring-cloud-alibaba/Gateway%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/</guid>
            <title>Gateway系统学习</title>
            <link>https://eth168.top/Spring_Family/spring-cloud-alibaba/Gateway%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/</link>
            <category term="微服务" scheme="https://eth168.top/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/" />
            <category term="Gateway" scheme="https://eth168.top/tags/Gateway/" />
            <category term="spring-cloud-alibaba" scheme="https://eth168.top/tags/spring-cloud-alibaba/" />
            <pubDate>Mon, 10 Jul 2023 21:54:50 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;网关介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#网关介绍&#34;&gt;#&lt;/a&gt; 网关介绍&lt;/h1&gt;
&lt;p&gt;在微服务架构中，一个系统会被拆分为很多个微服务。那么作为客户端要如何去调用这么多的微服务呢？如果没有网关的存在，我们只能在客户端记录每个微服务的地址，然后分别去调用。这样的话会产生很多问题，例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;客户端多次请求不同的微服务，增加客户端代码或配置编写的复杂性&lt;/li&gt;
&lt;li&gt;认证复杂，每个微服务都有独立认证&lt;/li&gt;
&lt;li&gt;存在跨域请求，在一定场景下处理相对复杂&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为解决上面的问题所以引入了网关的概念：所谓的 API 网关，就是指系统的统一入口，提供内部服务的路由中转，为客户端提供统一服务，一些与业务本身功能无关的公共逻辑可以在这里实现，诸如认证、鉴权、监控、路由转发等。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1640685138000/13912782ae2c4387a81b42b1ea1b32db.png&#34; alt=&#34;.png&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;网关对比&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#网关对比&#34;&gt;#&lt;/a&gt; 网关对比&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Zuul 1.x&lt;br /&gt;
Netflix 开源的网关，基于 Servlet 框架构建，功能丰富，使用 JAVA 开发，易于二次开发 问题：即一个线程处理一次连接请求，这种方式在内部延迟严重、设备故障较多情况下会引起存活的连接增多和线程增加的情况发生。&lt;/li&gt;
&lt;li&gt;Zuul 2.x&lt;br /&gt;
Zuul2 采用了 Netty 实现异步非阻塞编程模型，每个 CPU 核一个线程，处理所有的请求和响应，请求和响应的生命周期是通过事件和回调来处理的，这种方式减少了线程数量，因此开销较小。&lt;/li&gt;
&lt;li&gt;GateWay&lt;br /&gt;
Spring 公司为了替换 Zuul 而开发的网关服务，底层为 Netty，将在下面具体介绍。&lt;/li&gt;
&lt;li&gt;Nginx+lua&lt;br /&gt;
 使用 nginx 的反向代理和负载均衡可实现对 api 服务器的负载均衡及高可用，lua 是一种脚本语言，可以来编写一些简单的逻辑，nginx 支持 lua 脚本，问题在于：无法融入到微服务架构中&lt;/li&gt;
&lt;li&gt;Kong&lt;br /&gt;
 基于 Nginx+Lua 开发，性能高，稳定，有多个可用的插件 (限流、鉴权等等) 可以开箱即用。 问题：只支持 Http 协议；二次开发，自由扩展困难；提供管理 API，缺乏更易用的管控、配置方式。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;gateway&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gateway&#34;&gt;#&lt;/a&gt; GateWay&lt;/h2&gt;
&lt;p&gt;Spring Cloud Gateway 基于 Spring Boot 2.x、Spring WebFlux 和 Project Reactor，它旨在为微服务架构提供一种简单有效的统一的 API 路由管理方式。它的目标是替代 Netflix Zuul，其不仅提供统一的路由方式，并且基于 Filter 链的方式提供了网关基本的功能，例如：安全，监控和限流。&lt;/p&gt;
&lt;p&gt;特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;性能强劲：是 Zuul 的 1.6 倍&lt;/li&gt;
&lt;li&gt;功能强大：内置了很多实用的功能，例如转发、监控、限流等&lt;/li&gt;
&lt;li&gt;设计优雅，容易扩展&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;基本概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本概念&#34;&gt;#&lt;/a&gt; 基本概念：&lt;/h3&gt;
&lt;p&gt;路由 (Route) 是 gateway 中最基本的组件之一，表示一个具体的路由信息载体。主要定义了下面的几个信息:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;id：路由标识、区别于其他 route&lt;/li&gt;
&lt;li&gt;uri：路由指向的目的地 uri，即客户端请求最终被转发到的微服务&lt;/li&gt;
&lt;li&gt;order：用于多个 route 之间的排序，数值越小排序越靠前，匹配优先级越高&lt;/li&gt;
&lt;li&gt;predicate：断言的作用是进行条件判断，只有断言都返回真，才会真正的执行路由&lt;/li&gt;
&lt;li&gt;filter：过滤器用于修改请求和响应信息&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;执行流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#执行流程&#34;&gt;#&lt;/a&gt; 执行流程：&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Gateway Client 向 Gateway Server 发送请求&lt;/li&gt;
&lt;li&gt;请求首先会被 HttpWebHandlerAdapter 进行提取组装成网关上下文&lt;/li&gt;
&lt;li&gt;然后网关的上下文会传递到 DispatcherHandler，它负责将请求分发给 RoutePredicateHandlerMapping&lt;/li&gt;
&lt;li&gt;RoutePredicateHandlerMapping 负责路由查找，并根据路由断言判断路由是否可用&lt;/li&gt;
&lt;li&gt;如果过断言成功，由 FilteringWebHandler 创建过滤器链并调用&lt;/li&gt;
&lt;li&gt;请求会一次经过 PreFilter-- 微服务 --PostFilter 的方法，最终返回响应&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;p&gt;SpringCloud GateWay 使用的是 Webflux 中的 reactor-netty 响应式编程组件，底层使用了 Netty 通讯框架。&lt;/p&gt;
&lt;h1 id=&#34;gateway工作流程gateway基础搭建&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gateway工作流程gateway基础搭建&#34;&gt;#&lt;/a&gt; GateWay 工作流程 + GateWay 基础搭建&lt;/h1&gt;
&lt;p&gt;核心流程图如下：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1640707752000/5f398d8602654c4cb855428f0ac62442.png&#34; alt=&#34;spring_cloud_gateway_diagram.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;核心概念：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;客户端向 Spring Cloud Gateway 发出请求。如果 Gateway Handler Mapping 确定请求与路由匹配，则将其发送到 Gateway Web Handler 处理程序。此处理程序通过特定于请求的 Fliter 链运行请求。Fliter 被虚线分隔的原因是 Fliter 可以在发送代理请求之前（pre）和之后（post）运行逻辑。执行所有 pre 过滤器逻辑。然后进行代理请求。发出代理请求后，将运行 “post” 过滤器逻辑。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;过滤器作用：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Filter 在 pre 类型的过滤器可以做参数效验、权限效验、流量监控、日志输出、协议转换等。&lt;/li&gt;
&lt;li&gt;Filter 在 post 类型的过滤器可以做响应内容、响应头的修改、日志输出、流量监控等&lt;/li&gt;
&lt;li&gt;这两种类型的过滤器有着非常重要的作用&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 GateWay 的内部有三个核心点，我们先来看一下：&lt;/p&gt;
&lt;h2 id=&#34;核心点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#核心点&#34;&gt;#&lt;/a&gt; 核心点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Route（路由）&lt;br /&gt;
路由是构建网关的基础模块，它由 ID，目标 URI，包括一些列的断言和过滤器组成，如果断言为 true 则匹配该路由&lt;/li&gt;
&lt;li&gt;Predicate（断言）&lt;br /&gt;
参考的是 Java8 的 java.util.function.Predicate，开发人员可以匹配 HTTP 请求中的所有内容（例如请求头或请求参数），请求与断言匹配则进行路由&lt;/li&gt;
&lt;li&gt;Filter（过滤）&lt;br /&gt;
指的是 Spring 框架中 GateWayFilter 的实例，使用过滤器，可以在请求被路由前或者之后对请求进行修改。&lt;/li&gt;
&lt;li&gt;三个核心点连起来：&lt;br /&gt;
当用户发出请求到达 GateWay，GateWay 会通过一些匹配条件，定位到真正的服务节点，并在这个转发过程前后，进行一些及细化控制。其中 Predicate 就是我们匹配的条件，而 Filter 可以理解为一个过滤器，有了这两个点，再加上目标 URI，就可以实现一个具体的路由了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;总结-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结-2&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;GateWay 核心的流程就是：路由转发 + 执行过滤器链&lt;/p&gt;
&lt;h2 id=&#34;gateway搭建&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gateway搭建&#34;&gt;#&lt;/a&gt; GateWay 搭建&lt;/h2&gt;
&lt;p&gt;那么我们现在已经了解了整体的基础概念以后，我们现在来搭建一个 GateWay 项目：cloudalibaba-gateway-9999&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1640707752000/365e2d4cfb1e41d68600e6283141c9ec.png&#34; alt=&#34;image20211228224951746.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;因为 GateWay 属于 SpringCloud 的，所以我们要导入对应依赖，一定要注意版本关系：&lt;/p&gt;
&lt;p&gt;版本对应地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcHJpbmcuaW8vcHJvamVjdHMvc3ByaW5nLWNsb3Vk&#34;&gt;https://spring.io/projects/spring-cloud&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;老师这里使用的是&lt;mark&gt; SpringBoot2.2.6 的版本所以配合的是 SpringCloud 的 Hoxton.SR5 版本&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：引入 GateWay 一定要删除 spring-boot-starter-web 依赖，否则会有冲突无法启动&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;父级项目引入&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- parent 中 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;properties&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    		&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;spring-cloud-gateway-version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;Hoxton.SR5&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;spring-cloud-gateway-version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;properties&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- dependencyManagement 中写 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;org.springframework.cloud&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring-cloud-dependencies&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;$&amp;#123;spring-cloud-gateway-version&amp;#125;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;pom&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;scope&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;import&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;scope&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;子级项目，因为 GateWay 也需要注册进 Nacos，所以也需要 Nacos 的依赖&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 子项目中 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com.alibaba.cloud&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;2.2.6.RELEASE&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;接着配置 YML 文件&lt;/p&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;figcaption data-lang=&#34;YAML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9999&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;spring&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;application&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; cloud&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;getway&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;service&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;cloud&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;nacos&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token key atrule&#34;&gt;discovery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token key atrule&#34;&gt;server-addr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;gateway&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token key atrule&#34;&gt;discovery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token key atrule&#34;&gt;locator&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token key atrule&#34;&gt;enabled&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#开启注册中心路由功能&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token key atrule&#34;&gt;routes&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#路由&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token key atrule&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; nacos&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;provider  &lt;span class=&#34;token comment&#34;&gt;#路由 ID，没有固定要求，但是要保证唯一，建议配合服&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token key atrule&#34;&gt;uri&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; http&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;//localhost&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;9001/nacos&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;provider &lt;span class=&#34;token comment&#34;&gt;# 匹配提供服务的路由地址&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token key atrule&#34;&gt;predicates&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 断言&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; Path=/msb/&lt;span class=&#34;token important&#34;&gt;**&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 断言，路径相匹配进行路由&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;更改 9001 的 DemoController，加上一个入口&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@RestController&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/msb&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 路由路径&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DemoController2&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;$&amp;#123;server.port&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; serverPort&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;/get&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getServerPort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;库存-1：&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;serverPort&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;最后测试，启动 Nacos、9001 和 9999 网关，通过网关访问 9001 的 /msb/get 接口同时查看 Nacos 控制台&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1640707752000/a8cd2294313a430ea6da143b509a58c9.png&#34; alt=&#34;image20211229000611111.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Nacos 控制台成功注册 GateWay 网关&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1640707752000/1c2350c5bb094391a656d9819ba1eb37.png&#34; alt=&#34;image20211229000705630.png&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;gateway配置路由的两种方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gateway配置路由的两种方式&#34;&gt;#&lt;/a&gt; GateWay 配置路由的两种方式&lt;/h1&gt;
&lt;p&gt;经过上节课的讲解，我们现在知道了 GateWay 的基本配置路由的方式，通过 YML 来完成，但是实际上 GateWay 还提供了另外一种配置方式&lt;/p&gt;
&lt;h2 id=&#34;gatewayconfig&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gatewayconfig&#34;&gt;#&lt;/a&gt; GatewayConfig&lt;/h2&gt;
&lt;p&gt;其实这种配置方式就是通过代码的方式进行配置，也就是通过 @Bean 注入一个 RouteLocator&lt;/p&gt;
&lt;p&gt;那我们直接来操作一下&lt;/p&gt;
&lt;h3 id=&#34;具体操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#具体操作&#34;&gt;#&lt;/a&gt; 具体操作&lt;/h3&gt;
&lt;p&gt;首先我们在新建一个 GateWayConfig，其实这里的配置对应的就是我们之前在 YML 中配置的对应内容&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloudalibabagateway9999&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;config&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;gateway&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;RouteLocator&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;gateway&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;route&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;builder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;RouteLocatorBuilder&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Bean&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Configuration&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Configuration&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;GateWayConfig&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/*&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    配置了一个 id 为 path_msb1 的路由规则&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    当访问地址 http://localhost:9999/msb/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    就会转发到 http://localhost:9001/nacos-provider/msb/ 任何地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Bean&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RouteLocator&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;customRouteLocator&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;RouteLocatorBuilder&lt;/span&gt; routeLocatorBuilder&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 构建多个路由 routes&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;RouteLocatorBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Builder&lt;/span&gt; routes &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; routeLocatorBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;routes&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 具体路由地址&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        routes&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;route&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;path_msb&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;r &lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt; r&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/msb/**&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;uri&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://localhost:9001/nacos-provider&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 返回所有路由规则&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; routes&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;我们在 9001 的 DemoController 中添加一个控制器&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;/custom&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;customTest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;网关配置测试~~costom&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这个时候我们就可以测试了，启动 9999 网关服务和 9001 微服务，然后访问地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xvY2FsaG9zdDo5OTk5L21zYi9jdXN0b20=&#34;&gt;http://localhost:9999/msb/custom&lt;/span&gt; 就可以转发到 9001 中具体的接口中了&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1640864431000/ec294ed9249740c4a2a2ea694248cfa0.png&#34; alt=&#34;image20211230193640615.png&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;gateway实现负载均衡&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gateway实现负载均衡&#34;&gt;#&lt;/a&gt; GateWay 实现负载均衡&lt;/h1&gt;
&lt;p&gt;在之前的学习中，我们已经掌握了 GateWay 的一些基本配置，包括两种配置方法，但是其中有很多的配置细节，我们没有细讲，包括我们现在的配置是写死的具体端口号，那么这节课，我们要实现通过 GateWay 实现负载均衡的两种方式&lt;/p&gt;
&lt;h2 id=&#34;自动负载均衡&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#自动负载均衡&#34;&gt;#&lt;/a&gt; 自动负载均衡&lt;/h2&gt;
&lt;p&gt;首先我们看一下我们之前的网关服务 9999 的 yml 配置，这里的配置信息，其实有一些，咱们目前是不清楚的，比如：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;gateway.discovery.locator.enabled: true #开启自动路由功能&lt;/li&gt;
&lt;li&gt;routes 中的 uri 其实最后是不需要服务名称的，这个位置其实只需要指定的 localhost:9001 即可&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;server:
  port: 9999
spring:
  application:
    name: cloud-gateway-service
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
    gateway:
      discovery:
        locator:
          enabled: true #开启自动路由功能，根据服务名称自动创建routes
      routes:  # 路由
        - id: nacos-provider #路由ID，没有固定要求，但是要保证唯一，建议配合服务名
          uri: http://localhost:9001/nacos-provider # 匹配提供服务的路由地址
          predicates: # 断言
            - Path=/msb/** # 断言，路径相匹配进行路由
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;所以这个位置我们可以把当前的配置优化为以下情况，它是一样可以启动的，我们可以进行测试启动 9001 和网关 9999，通过网关来访问 &amp;quot;localhost:9999/msb/**&amp;quot;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;server:
  port: 9999
spring:
  application:
    name: cloud-gateway-service
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
    gateway:
      routes:  # 路由
        - id: nacos-provider #路由ID，没有固定要求，但是要保证唯一，建议配合服务名
          uri: http://localhost:9001 # 匹配提供服务的路由地址
          predicates: # 断言
            - Path=/msb/** # 断言，路径相匹配进行路由
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;GateWay 还提供了和 Zuul 类似的自动路由规则，具体配置如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;discovery.locator.enabled: true #这个配置默认为 false，但是如果为 true，就是开启了通过 serviceId 转发到具体的服务实例。“localhost:9999/ServiceID/msb/**”&lt;/li&gt;
&lt;li&gt;在配置好这些以后，我们可以直接通过服务名称来进行访问 Nacos 中注册的服务和对应的接口&lt;/li&gt;
&lt;li&gt;这个位置我们为了测试可以启动 2 个微服务 9001、9002&lt;/li&gt;
&lt;li&gt;GateWay 在开启了自动路由以后，还自带负载均衡&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;figcaption data-lang=&#34;YAML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  port&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9999&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;spring&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  application&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    name&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; cloud&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;gateway&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;service&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  cloud&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    nacos&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      discovery&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        server&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token key atrule&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    gateway&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      discovery&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        locator&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          enabled&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#是否与服务发现组件进行结合，通过 serviceId 转发到具体的服务实例。默认为 false，设为 true 便开启通过服务中心的自动根据 serviceId 创建路由的功能。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;9002 和 9001 保持一致，Controller 保持一致，负载均衡测试&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloudalibabanacos9002&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;controller&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;beans&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;factory&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Value&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;GetMapping&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;PathVariable&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;RequestMapping&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;RestController&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@RestController&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/msb&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DemoController&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;$&amp;#123;server.port&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; serverPort&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;/get&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getServerPort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;库存-1：&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;serverPort&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;custom&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;customTest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;测试网关配置类~~custom&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;测试结果：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;访问地址：
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xvY2FsaG9zdDo5OTk5L25hY29zLXByb3ZpZGVyL21zYi9nZXQ=&#34;&gt;http://localhost:9999/nacos-provider/msb/get&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641386784000/143b314052704e94b2011aa7effada65.png&#34; alt=&#34;image20220105195136602.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641386784000/818d5667a8a24cd5b17b7b7023cc02c0.png&#34; alt=&#34;image20220105195151755.png&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;手动负载均衡&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#手动负载均衡&#34;&gt;#&lt;/a&gt; 手动负载均衡&lt;/h2&gt;
&lt;p&gt;在以上的配置中，其实是有问题的，问题在于当前的服务名称暴露，并且太过于灵活，那么如果想解决的话，其实我们可以进行手动配置。&lt;/p&gt;
&lt;p&gt;具体配置如下：&lt;/p&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;figcaption data-lang=&#34;YAML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9999&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;spring&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;application&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; cloud&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;getway&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;service&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;cloud&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;nacos&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token key atrule&#34;&gt;discovery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token key atrule&#34;&gt;server-addr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;gateway&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token key atrule&#34;&gt;discovery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token key atrule&#34;&gt;locator&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token key atrule&#34;&gt;enabled&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#开启注册中心路由功能&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token key atrule&#34;&gt;routes&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#路由&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token key atrule&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; nacos&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;provider  &lt;span class=&#34;token comment&#34;&gt;#路由 ID，没有固定要求，但是要保证唯一，建议配合服&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token comment&#34;&gt;# lb 原则&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token key atrule&#34;&gt;uri&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; lb&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;//nacos&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;provider &lt;span class=&#34;token comment&#34;&gt;# 匹配提供服务的路由地址&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token key atrule&#34;&gt;predicates&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 断言&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; Path=/msb/&lt;span class=&#34;token important&#34;&gt;**&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 断言，路径相匹配进行路由&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;测试&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试&#34;&gt;#&lt;/a&gt; 测试&lt;/h2&gt;
&lt;p&gt;我们现在开启 9001/9002 两个服务和 9999 网关服务，然后此时我们可以通过网关去访问：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xvY2FsaG9zdDo5OTk5L21zYi9nZXQ=&#34;&gt;http://localhost:9999/msb/get&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641386784000/98b06ceeb9254c21a61ec8700808f6e9.png&#34; alt=&#34;image20220105195839464.png&#34; /&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641386784000/09ebf499f4ab40a8b6d454eee1106b9d.png&#34; alt=&#34;image20220105195849056.png&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;gateway断言predicate&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gateway断言predicate&#34;&gt;#&lt;/a&gt; GateWay 断言 Predicate&lt;/h1&gt;
&lt;p&gt;这节课我们来研究一下 GateWay 的 Predicate（断言）&lt;/p&gt;
&lt;p&gt;每一个 Predicate 的使用，可以理解为：当满足条件后才会进行转发，如果是多个，那就是满足所有条件才会转发&lt;/p&gt;
&lt;h2 id=&#34;断言种类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#断言种类&#34;&gt;#&lt;/a&gt; 断言种类&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;After：匹配在指定日期时间之后发生的请求。&lt;/li&gt;
&lt;li&gt;Before：匹配在指定日期之前发生的请求。&lt;/li&gt;
&lt;li&gt;Between：需要指定两个日期参数，设定一个时间区间，匹配此时间区间内的请求。&lt;/li&gt;
&lt;li&gt;Cookie：需要指定两个参数，分别为 name 和 regexp（正则表达式），也可以理解 Key 和 Value，匹配具有给定名称且其值与正则表达式匹配的 Cookie。&lt;/li&gt;
&lt;li&gt;Header：需要两个参数 header 和 regexp（正则表达式），也可以理解为 Key 和 Value，匹配请求携带信息。&lt;/li&gt;
&lt;li&gt;Host：匹配当前请求是否来自于设置的主机。&lt;/li&gt;
&lt;li&gt;Method：可以设置一个或多个参数，匹配 HTTP 请求，比如 GET、POST&lt;/li&gt;
&lt;li&gt;Path：匹配指定路径下的请求，可以是多个用逗号分隔&lt;/li&gt;
&lt;li&gt;Query：需要指定一个或者多个参数，一个必须参数和一个可选的正则表达式，匹配请求中是否包含第一个参数，如果有两个参数，则匹配请求中第一个参数的值是否符合正则表达式。&lt;/li&gt;
&lt;li&gt;RemoteAddr：匹配指定 IP 或 IP 段，符合条件转发。&lt;/li&gt;
&lt;li&gt;Weight：需要两个参数 group 和 weight（int），实现了路由权重功能，按照路由权重选择同一个分组中的路由&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;常用断言演示&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常用断言演示&#34;&gt;#&lt;/a&gt; 常用断言演示&lt;/h2&gt;
&lt;p&gt;以上这么多的断言，我们不可能一一的去演示，我们挑出一些比较常用的来给大家做演示，这些具体的演示在官网上都有提供，具体地址为：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLnNwcmluZy5pby9zcHJpbmctY2xvdWQtZ2F0ZXdheS9kb2NzL2N1cnJlbnQvcmVmZXJlbmNlL2h0bWwvI2dhdGV3YXktcmVxdWVzdC1wcmVkaWNhdGVzLWZhY3Rvcmllcw==&#34;&gt;https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#gateway-request-predicates-factories&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;after&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#after&#34;&gt;#&lt;/a&gt; After&lt;/h3&gt;
&lt;p&gt;匹配在指定时间之后发生的请求，可以对应提前上线业务&lt;/p&gt;
&lt;p&gt;yml 配置&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;server:
  port: 9999
spring:
  application:
    name: cloud-gateway-service
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
    gateway:
      discovery:
        locator:
          enabled: false # 是否与服务发现进行组合，通过ServiceID转发到具体的服务实例，默认为false，
                        # 设置为true便开启通过服务注册中心来自动根据SeviceID创建路由功能。
      routes:
        - id: nacos-provider # 路由ID，唯一不可重复，最好配合服务名
          uri: lb://nacos-provider # 匹配提供服务的路由地址 lb://代表开启负载均衡
          predicates: # 断言
            - Path=/msb/** # 匹配对应地址
            - After=2022-01-07T14:39:10.529+08:00[Asia/Shanghai] # 在这个时间之后的请求都能通过，当前没有为题以后，故意改为1个小时以后
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;写一个测试类，来获取当前时间&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public class TestDateTime &amp;#123;
    public static void main(String[] args) &amp;#123;
        ZonedDateTime zbj = ZonedDateTime.now();//默认时区
        System.out.println(zbj);
    &amp;#125;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;测试：&lt;/p&gt;
&lt;p&gt;当前时间之后请求没有问题&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641548103000/e10d464666ed4515a70aabd835daaee4.png&#34; alt=&#34;image20220107151419442.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;设置为 1 个小时会后访问 404&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641548103000/ce7286c95b3140abaa49eb0f8538d1f0.png&#34; alt=&#34;image20220107151358287.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;当这个 After 理解了以后，剩下的关于日期时间的设置 Before、Between 道理都是一样的，只不过是限定不同的日期时间区间&lt;/p&gt;
&lt;h3 id=&#34;cookie&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cookie&#34;&gt;#&lt;/a&gt; Cookie&lt;/h3&gt;
&lt;p&gt;需要指定两个参数，分别为 name 和 regexp（正则表达式），也可以理解 Key 和 Value，匹配具有给定名称且其值与正则表达式匹配的 Cookie。&lt;/p&gt;
&lt;p&gt;简单理解就是路由规则会通过获取 Cookie name 值和正则表达式去匹配，如果匹配上就会执行路由，如果匹配不上则不执行。&lt;/p&gt;
&lt;p&gt;我们可以分为两种情况演示，Cookie 匹配，Cookie 不匹配&lt;/p&gt;
&lt;p&gt;yml&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;server:
  port: 9999
spring:
  application:
    name: cloud-gateway-service
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
    gateway:
      discovery:
        locator:
          enabled: false # 是否与服务发现进行组合，通过ServiceID转发到具体的服务实例，默认为false，
                        # 设置为true便开启通过服务注册中心来自动根据SeviceID创建路由功能。
      routes:
        - id: nacos-provider # 路由ID，唯一不可重复，最好配合服务名
          uri: lb://nacos-provider # 匹配提供服务的路由地址 lb://代表开启负载均衡
          predicates: # 断言
            - Path=/msb/** # 匹配对应地址
            # - After=2022-01-07T14:39:10.529+08:00[Asia/Shanghai] # 在这个时间之后的请求都能通过
            - Cookie=username,[a-z]+ # 匹配Cookie的key和value（正则表达式）
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;那么我们通过 postman 来进行测试&lt;/p&gt;
&lt;p&gt;当 Cookie 匹配时：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641548103000/9d55f65a1c7a4957b14bb5f9ffe1a0b3.png&#34; alt=&#34;image20220107162754644.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641548103000/44149a75b4bb4cada71862616de82422.png&#34; alt=&#34;image20220107162819910.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;当 Cookie 不匹配时：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641548103000/b4fd75971a834f33a3c2547a2e5c50a6.png&#34; alt=&#34;image20220107162907000.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641548103000/7f3eb02776804426875c429a6c48d47a.png&#34; alt=&#34;image20220107162922622.png&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;header&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#header&#34;&gt;#&lt;/a&gt; Header&lt;/h3&gt;
&lt;p&gt;需要两个参数 header 和 regexp（正则表达式），也可以理解为 Key 和 Value，匹配请求携带信息。&lt;/p&gt;
&lt;p&gt;实际上就是请求头携带的信息，官网给出的案例是 X-Request-Id，那我们就用这个做实验&lt;/p&gt;
&lt;p&gt;yml&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;server:
  port: 9999
spring:
  application:
    name: cloud-gateway-service
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
    gateway:
      discovery:
        locator:
          enabled: false # 是否与服务发现进行组合，通过ServiceID转发到具体的服务实例，默认为false，
                        # 设置为true便开启通过服务注册中心来自动根据SeviceID创建路由功能。
      routes:
        - id: nacos-provider # 路由ID，唯一不可重复，最好配合服务名
          uri: lb://nacos-provider # 匹配提供服务的路由地址 lb://代表开启负载均衡
          predicates: # 断言
            - Path=/msb/** # 匹配对应地址
            #- After=2022-01-07T14:39:10.529+08:00[Asia/Shanghai] # 在这个时间之后的请求都能通过
            #- Cookie=username,[a-z]+
            - Header=X-Request-Id,\d+ #表示数字
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;测试&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641548103000/3188d44ced0446b09592794cc874caf5.png&#34; alt=&#34;image20220107165412353.png&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;host&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#host&#34;&gt;#&lt;/a&gt; Host&lt;/h3&gt;
&lt;p&gt;匹配当前请求是否来自于设置的主机。&lt;/p&gt;
&lt;p&gt;这个比较比较简单，我们直接来试验&lt;/p&gt;
&lt;p&gt;yml&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;server:
  port: 9999
spring:
  application:
    name: cloud-gateway-service
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
    gateway:
      discovery:
        locator:
          enabled: false # 是否与服务发现进行组合，通过ServiceID转发到具体的服务实例，默认为false，
                        # 设置为true便开启通过服务注册中心来自动根据SeviceID创建路由功能。
      routes:
        - id: nacos-provider # 路由ID，唯一不可重复，最好配合服务名
          uri: lb://nacos-provider # 匹配提供服务的路由地址 lb://代表开启负载均衡
          predicates: # 断言
            - Path=/msb/** # 匹配对应地址
            #- After=2022-01-07T14:39:10.529+08:00[Asia/Shanghai] # 在这个时间之后的请求都能通过
            #- Cookie=username,[a-z]+
            #- Header=X-Request-Id,\d+ #表示数字
            - Host=**.mashibing.com #匹配当前的主机地址发出的请求
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;postman&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641548103000/229f6b3bddc744cdb2c34f6070700fd3.png&#34; alt=&#34;image20220107165950636.png&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;method&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#method&#34;&gt;#&lt;/a&gt; Method&lt;/h3&gt;
&lt;p&gt;可以设置一个或多个参数，匹配 HTTP 请求，比如 GET、POST&lt;/p&gt;
&lt;p&gt;yml&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;server:
  port: 9999
spring:
  application:
    name: cloud-gateway-service
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
    gateway:
      discovery:
        locator:
          enabled: false # 是否与服务发现进行组合，通过ServiceID转发到具体的服务实例，默认为false，
                        # 设置为true便开启通过服务注册中心来自动根据SeviceID创建路由功能。
      routes:
        - id: nacos-provider # 路由ID，唯一不可重复，最好配合服务名
          uri: lb://nacos-provider # 匹配提供服务的路由地址 lb://代表开启负载均衡
          predicates: # 断言
            - Path=/msb/** # 匹配对应地址
            #- After=2022-01-07T14:39:10.529+08:00[Asia/Shanghai] # 在这个时间之后的请求都能通过
            #- Cookie=username,[a-z]+
            #- Header=X-Request-Id,\d+ #表示数字
            #- Host=**.mashibing.com #匹配当前的主机地址发出的请求
            - Method=GET,POST # 匹配GET请求或者POST请求
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;query&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#query&#34;&gt;#&lt;/a&gt; Query&lt;/h3&gt;
&lt;p&gt;需要指定一个或者多个参数，一个必须参数和一个可选的正则表达式，匹配请求中是否包含第一个参数，如果有两个参数，则匹配请求中第一个参数的值是否符合正则表达式。&lt;/p&gt;
&lt;p&gt;yml&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;server:
  port: 9999
spring:
  application:
    name: cloud-gateway-service
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
    gateway:
      discovery:
        locator:
          enabled: false # 是否与服务发现进行组合，通过ServiceID转发到具体的服务实例，默认为false，
                        # 设置为true便开启通过服务注册中心来自动根据SeviceID创建路由功能。
      routes:
        - id: nacos-provider # 路由ID，唯一不可重复，最好配合服务名
          uri: lb://nacos-provider # 匹配提供服务的路由地址 lb://代表开启负载均衡
          predicates: # 断言
            - Path=/msb/** # 匹配对应地址
            #- After=2022-01-07T14:39:10.529+08:00[Asia/Shanghai] # 在这个时间之后的请求都能通过
            #- Cookie=username,[a-z]+
            #- Header=X-Request-Id,\d+ #表示数字
            #- Host=**.mashibing.com #匹配当前的主机地址发出的请求
            #- Method=GET,POST
            - Query=id,.+ # 匹配请求参数，这里如果需要匹配多个参数，可以写多个Query
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;测试：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641548103000/000f9c26d9ab4e8ca3775883a77cfbeb.png&#34; alt=&#34;image20220107172856256.png&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;weight&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#weight&#34;&gt;#&lt;/a&gt; Weight&lt;/h3&gt;
&lt;p&gt;需要两个参数 group 和 weight（int），实现了路由权重功能，按照路由权重选择同一个分组中的路由&lt;/p&gt;
&lt;p&gt;官网提供的演示 yml&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;spring:
  cloud:
    gateway:
      routes:
      - id: weight_high
        uri: https://weighthigh.org
        predicates:
        - Weight=group1, 8
      - id: weight_low
        uri: https://weightlow.org
        predicates:
        - Weight=group1, 2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;该路由会将约 80% 的流量转发到&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93ZWlnaHRoaWdoLm9yZy8=&#34;&gt; weighthigh.org&lt;/span&gt;，将约 20% 的流量&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93ZWlnaGxvdy5vcmcv&#34;&gt;转发&lt;/span&gt;到&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93ZWlnaGxvdy5vcmcv&#34;&gt; weightlow.org&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;总结-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结-3&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;p&gt;Predicate 就是为了实现一组匹配规则，让请求过来找到对应的 Route 进行处理。&lt;/p&gt;
&lt;h1 id=&#34;gateway的filter&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gateway的filter&#34;&gt;#&lt;/a&gt; GateWay 的 Filter&lt;/h1&gt;
&lt;p&gt;路由过滤器允许以某种方式修改传入的 HTTP 请求或传出的 HTTP 响应。路由过滤器的范围是特定的路由。Spring Cloud Gateway 包含许多内置的 GatewayFilter 工厂。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641558027000/20dc92cddbf14336afa83e9af1756e9c.png&#34; alt=&#34;image20220107175844624.png&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;内置filter&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#内置filter&#34;&gt;#&lt;/a&gt; 内置 Filter&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;GateWay 内置的 Filter 生命周期为两种：pre（业务逻辑之前）、post（业务逻辑之后）&lt;/li&gt;
&lt;li&gt;GateWay 本身自带的 Filter 分为两种： GateWayFilter（单一）、GlobalFilter（全局）&lt;/li&gt;
&lt;li&gt;单一的有 32 种，全局的有 9 种&lt;/li&gt;
&lt;li&gt;官方网址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLnNwcmluZy5pby9zcHJpbmctY2xvdWQtZ2F0ZXdheS9kb2NzL2N1cnJlbnQvcmVmZXJlbmNlL2h0bWwvI2dsb2JhbC1maWx0ZXJz&#34;&gt;https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/#global-filters&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这个数量实在是太惊人了，而且用法都比较简单，所以这里大家可以自行根据官网给出的演示进行练习，在这里给大家举一个例子&lt;/p&gt;
&lt;h3 id=&#34;stripprefix&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#stripprefix&#34;&gt;#&lt;/a&gt; StripPrefix&lt;/h3&gt;
&lt;p&gt;该 StripPrefix 有一个参数，parts。该 parts 参数指示在将请求发送到下游之前要从请求中剥离的路径中的部分数。&lt;/p&gt;
&lt;p&gt;案例：比如我们现在在 9001 微服务上加一个 context-path 配置&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;server:
  port: 9001
  servlet:
    context-path: /nacos-provider
.....
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;现在 9001 的访问路径变为&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xvY2FsaG9zdDo5MDAxL25hY29zLXByb3ZpZGVyL21zYi9nZXQ=&#34;&gt; http://localhost:9001/nacos-provider/msb/get&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;目前的网关 9999 配置信息为&lt;/p&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;figcaption data-lang=&#34;YAML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  port&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9999&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;spring&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  application&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    name&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; cloud&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;gateway&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;service&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  cloud&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    nacos&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      discovery&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        server&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token key atrule&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    gateway&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      discovery&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        locator&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          enabled&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;false&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 是否与服务发现进行组合，通过 ServiceID 转发到具体的服务实例，默认为 false，&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        &lt;span class=&#34;token comment&#34;&gt;# 设置为 true 便开启通过服务注册中心来自动根据 SeviceID 创建路由功能。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      routes&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token key atrule&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; nacos&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;provider &lt;span class=&#34;token comment&#34;&gt;# 路由 ID，唯一不可重复，最好配合服务名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          uri&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; lb&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;//nacos&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;provider &lt;span class=&#34;token comment&#34;&gt;# 匹配提供服务的路由地址 lb:// 代表开启负载均衡&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          predicates&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 断言&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; Path=/msb/&lt;span class=&#34;token important&#34;&gt;**&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 匹配对应地址&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;为了保证断言能够匹配，此时通过网关的访问地址应该改为：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xvY2FsaG9zdDo5OTk5L21zYi9uYWNvcy1wcm92aWRlci9tc2IvZ2V0&#34;&gt;http://localhost:9999/msb/nacos-provider/msb/get&lt;/span&gt;，但是出现了 404，因为多了一层路径&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xvY2FsaG9zdDo5MDAxL21zYi9uYWNvcy1wcm92aWRlci9tc2IvZ2V0&#34;&gt; http://localhost:9001/msb/nacos-provider/msb/get&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641558027000/eb87d2b41baf4409a8ff689b03de1b3f.png&#34; alt=&#34;image20220107192432401.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;那么如果想要解决，我们应该在转发的时候去地址中最前面的 /msb，所以我们就需要使用 FIlter：StripPrefix&lt;/p&gt;
&lt;p&gt;yml&lt;/p&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;figcaption data-lang=&#34;YAML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;server&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  port&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9999&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;spring&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  application&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    name&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; cloud&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;gateway&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;service&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  cloud&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    nacos&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      discovery&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        server&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token key atrule&#34;&gt;addr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    gateway&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      discovery&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        locator&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          enabled&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;false&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 是否与服务发现进行组合，通过 ServiceID 转发到具体的服务实例，默认为 false，&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        &lt;span class=&#34;token comment&#34;&gt;# 设置为 true 便开启通过服务注册中心来自动根据 SeviceID 创建路由功能。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      routes&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token key atrule&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; nacos&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;provider &lt;span class=&#34;token comment&#34;&gt;# 路由 ID，唯一不可重复，最好配合服务名&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          uri&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; lb&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;//nacos&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;provider &lt;span class=&#34;token comment&#34;&gt;# 匹配提供服务的路由地址 lb:// 代表开启负载均衡&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          predicates&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 断言&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; Path=/msb/&lt;span class=&#34;token important&#34;&gt;**&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 匹配对应地址&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          filters&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; StripPrefix=1 &lt;span class=&#34;token comment&#34;&gt;# 去掉地址中的第一部分&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token comment&#34;&gt;# http://localhost:9999/msb/nacos-provider/msb/get&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token comment&#34;&gt;# http://localhost:9999/nacos-provider/msb/get&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;最后我们来看效果，成功转发&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641558027000/386221c4ba7a4b1ba809ff3a4df07a17.png&#34; alt=&#34;image20220107193321333.png&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;自定义filter&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#自定义filter&#34;&gt;#&lt;/a&gt; 自定义 Filter&lt;/h2&gt;
&lt;p&gt;要实现 GateWay 自定义过滤器，那么我们需要实现两个接口&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GlobalFilter&lt;/li&gt;
&lt;li&gt;Ordered&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;演示&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#演示&#34;&gt;#&lt;/a&gt; 演示&lt;/h3&gt;
&lt;p&gt;首先我们新建一个类 MyFilter&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Component&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Slf4j&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MyFilter&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Ordered&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;GlobalFilter&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * @param exchange 可以拿到对应的 request 和 response&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * @param chain 过滤器链&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * @return 是否放行&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Mono&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Void&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;ServerWebExchange&lt;/span&gt; exchange&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;GatewayFilterChain&lt;/span&gt; chain&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; username &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; exchange&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getQueryParams&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getFirst&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;username&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        log&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;*************MyFilter:&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Date&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;username &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            log&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;**********用户名为null，非法用户，请求被拒绝！&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 如果 username 为空，返回状态码为 406，不可接受的请求&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            exchange&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getResponse&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setStatusCode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;HttpStatus&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;NOT_ACCEPTABLE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; exchange&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getResponse&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setComplete&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; chain&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;exchange&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * 加载过滤器的顺序&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * @return 整数数字越小优先级越高&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getOrder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;测试，此时我们的逻辑是在访问同时要传入 username 参数同时不能为空，否则不会放行本次请求。&lt;/p&gt;
&lt;p&gt;传入正确参数：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641558027000/77ae413012cd46cbb75379f86cdb4d01.png&#34; alt=&#34;image20220107201951485.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;未传入正确参数：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://fynotefile.oss-cn-zhangjiakou.aliyuncs.com/fynote/1396/1641558027000/670b520f4edc4c57937334a6a7be2155.png&#34; alt=&#34;image20220107202003694.png&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;gateway的跨域&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gateway的跨域&#34;&gt;#&lt;/a&gt; Gateway 的跨域&lt;/h1&gt;
&lt;p&gt;一旦我们用了 Gateway 服务做了我们的网关服务，那么首先我们就要先解决我们&lt;strong&gt;网关服务的跨域&lt;/strong&gt;问题。&lt;/p&gt;
&lt;p&gt;在我们的网关服务中添加对于跨域的配置&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;建立一个网关服务的配置类 ，exmaple:  &lt;code&gt;GatewayConfig&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加跨域的配置&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Bean&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Configuration&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cors&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;CorsConfiguration&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cors&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;reactive&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;CorsWebFilter&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cors&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;reactive&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;UrlBasedCorsConfigurationSource&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;util&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pattern&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;PathPatternParser&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Configuration&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;GatewayConfiguration&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Bean&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CorsWebFilter&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;corsWebFilter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;CorsConfiguration&lt;/span&gt; config &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CorsConfiguration&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addAllowedHeader&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addAllowedMethod&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addAllowedOrigin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;*&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;UrlBasedCorsConfigurationSource&lt;/span&gt; source &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;UrlBasedCorsConfigurationSource&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;PathPatternParser&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        source&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;registerCorsConfiguration&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/**&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; config&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CorsWebFilter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;source&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;重启服务&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;div id=&#34;gitalk-container&#34;&gt;&lt;/div&gt;
&lt;script src=&#34;https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js&#34;&gt;&lt;/script&gt;&lt;link rel=&#34;stylesheet&#34; href=&#34;https://unpkg.com/gitalk/dist/gitalk.css&#34;&gt;&lt;script src=&#34;https://unpkg.com/gitalk/dist/gitalk.min.js&#34;&gt;&lt;/script&gt;

		&lt;script&gt;
		var gitalkConfig = {&#34;clientID&#34;:&#34;6db178ba46c8af8f6a6f&#34;,&#34;clientSecret&#34;:&#34;90f730e5956024596558df00975cd8eae28cae3d&#34;,&#34;repo&#34;:&#34;bk-comment01&#34;,&#34;owner&#34;:&#34;onlymarryu&#34;,&#34;admin&#34;:[&#34;onlymarryu&#34;],&#34;distractionFreeMode&#34;:false,&#34;language&#34;:&#34;zh-CN&#34;,&#34;proxy&#34;:&#34;https://gitalk-comments.netlify.app/github_access_token&#34;,&#34;perPage&#34;:15};
	    gitalkConfig.id = md5(location.pathname);
		var gitalk = new Gitalk(gitalkConfig);
	    gitalk.render(&#34;gitalk-container&#34;);
	    &lt;/script&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://eth168.top/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/</guid>
            <title>Sentinel源码系统学习</title>
            <link>https://eth168.top/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/</link>
            <category term="微服务" scheme="https://eth168.top/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/" />
            <category term="spring-cloud-alibaba" scheme="https://eth168.top/tags/spring-cloud-alibaba/" />
            <category term="sentinel" scheme="https://eth168.top/tags/sentinel/" />
            <pubDate>Mon, 10 Jul 2023 21:53:51 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;sentinel核心源码分析-课程开篇&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel核心源码分析-课程开篇&#34;&gt;#&lt;/a&gt; Sentinel 核心源码分析 - 课程开篇&lt;/h1&gt;
&lt;p&gt;Sentinel 是分布式系统的防御系统。以流量为切入点，通过动态设置的流量控制、服务熔断等手段达到 保护系统的目的，通过服务降级增强服务被拒后用户的体验。&lt;/p&gt;
&lt;h2 id=&#34;sentinel工作原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel工作原理&#34;&gt;#&lt;/a&gt; Sentinel 工作原理&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;ProcessorSlotChain&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Sentinel 的核心骨架，将不同的 Slot 按照顺序串在一起（责任链模式），从而将不同的功能（限流、降级、系统保护）组合在一起。slot chain 其实可以分为两部分：统计数据构建部分（statistic）和判断部分（rule checking）。核心结构&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/sentinel-slot-chain-architecture.png&#34; class=&#34;&#34; title=&#34;arch overview&#34;&gt;
&lt;p&gt;Sentinel 将  &lt;code&gt;ProcessorSlot&lt;/code&gt;  作为 SPI 接口进行扩展，使得 Slot Chain 具备了扩展的能力。您可以自行加入自定义的 slot 并编排 slot 间的顺序，从而可以给 Sentinel 添加自定义的功能。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/46783631-93324d00-cd5d-11e8-8ad1-a802bcc8f9c9.png&#34; class=&#34;&#34; title=&#34;Slot Chain SPI&#34;&gt;
&lt;h2 id=&#34;官方版本说明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#官方版本说明&#34;&gt;#&lt;/a&gt; 官方版本说明&lt;/h2&gt;
&lt;p&gt;通过官方网站我们可以看到现在应该使用的 Sentinel 版本，通过官方的要求我们下载对应版本的 Sentinel 源码：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvc3ByaW5nLWNsb3VkLWFsaWJhYmEvd2lraS8lRTclODklODglRTYlOUMlQUMlRTglQUYlQjQlRTYlOTglOEU=&#34;&gt;https://github.com/alibaba/spring-cloud-alibaba/wiki/ 版本说明&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211116203605431.png&#34; class=&#34;&#34; title=&#34;image-20211116203605431&#34;&gt;
&lt;h2 id=&#34;sentinel源码下载&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel源码下载&#34;&gt;#&lt;/a&gt; Sentinel 源码下载&lt;/h2&gt;
&lt;p&gt;下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvU2VudGluZWwvdHJlZS9yZWxlYXNlLTEuOA==&#34;&gt;https://github.com/alibaba/Sentinel/tree/release-1.8&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;下载方式，我们可以下载 zip 包，也可以直接通过 idea 进行下载和打开&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211116203821710.png&#34; class=&#34;&#34; title=&#34;image-20211116203821710&#34;&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211116203908000.png&#34; class=&#34;&#34; title=&#34;image-20211116203908000&#34;&gt;
&lt;h1 id=&#34;sentinel核心概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel核心概念&#34;&gt;#&lt;/a&gt; Sentinel 核心概念&lt;/h1&gt;
&lt;p&gt;Sentinel 作为 ali 开源的一款轻量级流控框架，&lt;strong&gt;主要以流量为切入点，从流量控制、熔断降级、系统负载保护等多个维度来帮助用户保护服务的稳定性&lt;/strong&gt;。相比于 Hystrix，Sentinel 的设计更加简单，在 Sentinel 中资源定义和规则配置是分离的，也就是说用户可以先通过 Sentinel API 给对应的业务逻辑定义资源（埋点），然后在需要的时候再配置规则，通过这种组合方式，极大的增加了 Sentinel 流控的灵活性。&lt;/p&gt;
&lt;p&gt;引入 Sentinel 带来的性能损耗非常小。只有在业务单机量级超过 25W QPS 的时候才会有一些显著的影响（5% - 10% 左右），单机 QPS 不太大的时候损耗几乎可以忽略不计。&lt;/p&gt;
&lt;p&gt;Sentinel 提供两种埋点方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;try-catch 方式（通过 SphU.entry (...)），用户在 catch 块中执行异常处理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;if-else 方式（通过 SphO.entry (...)），当返回 false 时执行异常处理&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;工作流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#工作流程&#34;&gt;#&lt;/a&gt; 工作流程&lt;/h2&gt;
&lt;p&gt;在此之前，需要先了解一下 Sentinel 的工作流程&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/sentinel-slot-chain-architecture.png&#34; class=&#34;&#34; title=&#34;sentinel-slot-chain-architecture&#34;&gt;
&lt;p&gt;在 Sentinel 里面，所有的资源都对应一个资源名称（resourceName），每次资源调用都会创建一个 Entry 对象。Entry 可以通过对主流框架的适配自动创建，也可以通过注解的方式或调用 SphU API 显式创建。Entry 创建的时候，同时也会创建一系列功能插槽（slot chain），这些插槽有不同的职责，例如默认情况下会创建一下 7 个插槽：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NodeSelectorSlot 负责收集资源的路径，并将这些资源的调用路径，以树状结构存储起来，用于根据调用路径来限流降级；&lt;/li&gt;
&lt;li&gt;ClusterBuilderSlot 则用于存储资源的统计信息以及调用者信息，例如该资源的 RT, QPS, thread count 等等，这些信息将用作为多维度限流，降级的依据，对应簇点链路；&lt;/li&gt;
&lt;li&gt;StatisticSlot 则用于记录、统计不同纬度的 runtime 指标监控信息；&lt;/li&gt;
&lt;li&gt;FlowSlot 则用于根据预设的限流规则以及前面 slot 统计的状态，来进行流量控制，对应流控规则；&lt;/li&gt;
&lt;li&gt;AuthoritySlot 则根据配置的黑白名单和调用来源信息，来做黑白名单控制，对应授权规则；&lt;/li&gt;
&lt;li&gt;DegradeSlot 则通过统计信息以及预设的规则，来做熔断降级，对应熔断规则；&lt;/li&gt;
&lt;li&gt;SystemSlot 则通过系统的状态，例如 load1 等，来控制总的入口流量，对应系统规则；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;重要的概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;slot chain：插槽&lt;/li&gt;
&lt;li&gt;Node：根节点&lt;/li&gt;
&lt;li&gt;Context：对资源操作时的上下文环境，每个资源操作 ( &lt;code&gt;针对Resource进行的entry/exit&lt;/code&gt; ) 必须属于一个 Context，如果程序中未指定 Context，会创建 name 为 &amp;quot;sentinel_default_context&amp;quot; 的默认 Context。一个 Context 生命周期内可能有多个资源操作，Context 生命周期内的最后一个资源 exit 时会清理该 Context，这也预示这真个 Context 生命周期的结束。&lt;/li&gt;
&lt;li&gt;Entry：表示一次资源操作，内部会保存当前调用信息。在一个 Context 生命周期中多次资源操作，也就是对应多个 Entry，这些 Entry 形成 parent/child 结构保存在 Entry 实例中&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;官方案例演示&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#官方案例演示&#34;&gt;#&lt;/a&gt; 官方案例演示&lt;/h2&gt;
&lt;p&gt;我们先从官方文档提供的演示代码来进行分析&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211118223922490.png&#34; class=&#34;&#34; title=&#34;image-20211118223922490&#34;&gt;
&lt;p&gt;我们来改写一下，如果只有一个资源情况如下&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;csp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sentinel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Entry&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;csp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sentinel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SphU&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;csp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sentinel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;ContextUtil&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;csp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sentinel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;slots&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;block&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;BlockException&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ContextDemo&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ContextUtil&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 创建一个来自 appA 访问的 Context&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;//Context 的名称为 entrance1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;ContextUtil&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;enter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;entrance1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;appA&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// Entry 就是一个资源操作对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;Entry&lt;/span&gt; nodeA &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 获取资源 resource 的 entry&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            nodeA &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SphU&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;resource1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 后续会展开这个位置&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 如果代码走到这个位置，说明当前资源的请求通过了流控，可以继续进行相关业务处理&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;BlockException&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 如果没有通过走到了这里，就表示请求被限流，这里进行降级操作&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;printStackTrace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;finally&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;nodeA &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                nodeA&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 释放 Context&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;ContextUtil&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;多个资源的情况&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ContextDemo&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ContextUtil&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 创建一个来自 appA 访问的 Context&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;//Context 的名称为 entrance1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;ContextUtil&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;enter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;entrance1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;appA&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// Entry 就是一个资源操作对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;Entry&lt;/span&gt; nodeA &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;Entry&lt;/span&gt; nodeB &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 获取资源 resource1 的 entry&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            nodeA &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SphU&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;resource1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 如果代码走到这个位置，说明当前资源的请求通过了流控，可以继续进行相关业务处理&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 获取资源 resource2 的 entry&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            nodeB &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SphU&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;resource2&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 如果代码走到这个位置，说明当前资源的请求通过了流控，可以继续进行相关业务处理&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;BlockException&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 如果没有通过走到了这里，就表示请求被限流，这里进行降级操作&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;printStackTrace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;finally&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;nodeA &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                nodeA&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;nodeB &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                nodeB&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 释放 Context&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;ContextUtil&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;sentinel源码解析-node之间的关系&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel源码解析-node之间的关系&#34;&gt;#&lt;/a&gt; Sentinel 源码解析 - Node 之间的关系&lt;/h1&gt;
&lt;p&gt;在上节课我们通过官方演示代码，搞清楚一个 Context 之中，Resource 和 Entry 的关系，一个 Context 中可以有多个 Resource，每个资源都必须都应一个 Entry，这节课我们来研究一下 Node 之间的关系&lt;/p&gt;
&lt;h2 id=&#34;node-关系官方图解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#node-关系官方图解&#34;&gt;#&lt;/a&gt; Node 关系官方图解&lt;/h2&gt;
&lt;p&gt;这张图的上班部分其实体现了 Node 之间的关系，官方提供的图不够明显，我们需要进行细化&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/sentinel-slot-chain-architecture.png&#34; class=&#34;&#34; title=&#34;sentinel-slot-chain-architecture&#34;&gt;
&lt;p&gt;要先理解这个官方提供的图，我们需要看一下源码的关系&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211119175902973.png&#34; class=&#34;&#34; title=&#34;image-20211119175902973&#34;&gt;
&lt;p&gt;从这张图片我们能够提取出几个 Node：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Node：接口，Sentinel 里面的各种种类的统计节点&lt;/li&gt;
&lt;li&gt;StatisticNode：统计节点，是 Node 的实现类，用于完成数据统计&lt;/li&gt;
&lt;li&gt;EntranceNode：DefaultNode 的子类，入口节点，一个 Context 会有一个入口节点，用于统计当前 Context 的总体流量数据，统计维度为 Context&lt;/li&gt;
&lt;li&gt;DefaultNode：默认节点，用于统计一个 resource 在当前 Context 中的流量数据，DefaultNode 持有指定的 Context 和指定的 Resource 的统计数据，意味着 DefaultNode 是以 Context 和 Resource 为维度的统计节点&lt;/li&gt;
&lt;li&gt;ClusterNode：ClusterNode 保存的是同一个 Resource 的相关的统计信息，是以 Resource 为维度的，不区分 Context，这个是和 DefaultNode 的区别&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;node之间的关系&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#node之间的关系&#34;&gt;#&lt;/a&gt; Node 之间的关系&lt;/h2&gt;
&lt;p&gt;Node 接口定义了一个 Node 类所需要提供的各项指标数据统计的相关功能，为外部屏蔽滑动窗口的存在。提供记录请求被拒绝、请求被放行、请求处理异常、请求处理成功的方法，以及获取当前时间窗口统计的请求总数、平均耗时等方法。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211123135428060.png&#34; class=&#34;&#34; title=&#34;image-20211123135428060&#34;&gt;
&lt;h2 id=&#34;案例代码改进&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例代码改进&#34;&gt;#&lt;/a&gt; 案例代码改进&lt;/h2&gt;
&lt;p&gt;昨天我们通过官方提供的演示案例写一个演示代码，那么我们为了理解这个 Node 之间的关系，我们再来增加一些代码，为了理解 Node 之间的关系&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 增加一个 Context&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;csp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sentinel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Entry&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;csp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sentinel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Sph&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;csp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sentinel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SphU&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;csp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sentinel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;ContextUtil&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;csp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sentinel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;slots&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;block&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;BlockException&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ContextDemo&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ContextUtil&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 创建一个来自 appA 访问的 Context&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// Context 的名称为 entrance1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;ContextUtil&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;enter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;entrance1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;appA&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// Entry 就是一个资源操作对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;Entry&lt;/span&gt; nodeA &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;Entry&lt;/span&gt; nodeB &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 获取资源 resource 的 entry&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            nodeA &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SphU&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;resource1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 后续会展开这个位置&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 如果代码走到这个位置，就说明当前请求通过了流控，可以继续记性相关业务处理&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            nodeB &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SphU&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;resource2&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 如果代码走到这个位置，就说明当前请求通过了流控，可以继续记性相关业务处理&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;BlockException&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 如果没有通过走到了这里，就表示请求被限流，这里进行降级操作&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;printStackTrace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;finally&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;nodeA &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                nodeA&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;nodeB &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                nodeB&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 释放 Context&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;ContextUtil&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;       &lt;span class=&#34;token comment&#34;&gt;//--------------------- 创建另一个来自 appA 访问的 Context------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 创建一个来自 appA 访问的 Context&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// Context 的名称为 entrance1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;ContextUtil&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;enter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;entrance2&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;appA&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// Entry 就是一个资源操作对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;Entry&lt;/span&gt; nodeC &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            nodeB &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SphU&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;resource2&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 如果代码走到这个位置，就说明当前请求通过了流控，可以继续记性相关业务处理&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            nodeC &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SphU&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;resource3&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;BlockException&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 如果没有通过走到了这里，就表示请求被限流，这里进行降级操作&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;printStackTrace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;finally&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;nodeB &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                nodeB&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;nodeC &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                nodeC&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 释放 Context&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;ContextUtil&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;sentinel源码解析-源码入口&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel源码解析-源码入口&#34;&gt;#&lt;/a&gt; Sentinel 源码解析 - 源码入口&lt;/h1&gt;
&lt;h2 id=&#34;分析入口&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分析入口&#34;&gt;#&lt;/a&gt; 分析入口&lt;/h2&gt;
&lt;p&gt;在微服务的使用 Sentinel 实际工作场景中，我们只需要引入对应依赖：spring-cloud-starter-alibaba-sentinel，就会进行自动装配，所以我们之间看 META-INF/spring.factories，然后我们这里从 SentinelAutoConfiguration 开始看起&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211123175158774.png&#34; class=&#34;&#34; title=&#34;image-20211123175158774&#34;&gt;
&lt;p&gt;为了我们方便跟踪，我们在找到这个类型以后，直接通过源码进行查看，然后在这个类型中我们要找到以下代码，之前我们就说过 Sentinel 是通过 AOP 的方式进行切入的，从这里我们看到了 Aspect 关键字，所以我们就从这里跟进去&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Bean&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@ConditionalOnMissingBean&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SentinelResourceAspect&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sentinelResourceAspect&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SentinelResourceAspect&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;跟进去以后，我们就会发现这里就是再利用 AOP 通过 @SentinelResource 为注解来作为切入点，进行切入&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Aspect&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 切面&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SentinelResourceAspect&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;AbstractSentinelAspectSupport&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 指定切入点为 SentinelResource 注解&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Pointcut&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;@annotation(com.alibaba.csp.sentinel.annotation.SentinelResource)&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sentinelResourceAnnotationPointcut&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;再往下跟我们会发现，还有 @Around 注解进行环绕通知，根据我们之前学习的知道我们从这里可以得知，其实这就是是利用 @SentinelResource 注解作为切点，然后在通过 AOP 环绕通知，来进行增强，在执行原方法前，来执行对应操作，当然这里我们可以看出，一旦出现了限流或者限流就会走 BlockException。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 环绕通知&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Around&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;sentinelResourceAnnotationPointcut()&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;invokeResourceWithSentinel&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;ProceedingJoinPoint&lt;/span&gt; pjp&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;Method&lt;/span&gt; originMethod &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;resolveMethod&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pjp&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;SentinelResource&lt;/span&gt; annotation &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; originMethod&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getAnnotation&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SentinelResource&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;annotation &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// Should not go through here.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;IllegalStateException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Wrong state for SentinelResource annotation&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; resourceName &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getResourceName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; originMethod&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;EntryType&lt;/span&gt; entryType &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;entryType&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; resourceType &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;resourceType&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;Entry&lt;/span&gt; entry &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 创建资源操作对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        entry &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SphU&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resourceName&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; resourceType&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; entryType&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; pjp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getArgs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 调用原方法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; pjp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;proceed&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;BlockException&lt;/span&gt; ex&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;handleBlockException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pjp&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; annotation&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ex&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; ex&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;Class&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; exceptionsToIgnore &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;exceptionsToIgnore&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// The ignore list will be checked first.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;exceptionsToIgnore&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;length &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;exceptionBelongsTo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ex&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; exceptionsToIgnore&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;throw&lt;/span&gt; ex&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;exceptionBelongsTo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ex&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;exceptionsToTrace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token function&#34;&gt;traceException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ex&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;handleFallback&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;pjp&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; annotation&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ex&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// No fallback function can handle the exception, so throw it out.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;throw&lt;/span&gt; ex&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;finally&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;entry &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            entry&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; pjp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getArgs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在以上的这段代码中还有一个问题，我们在之前就说过，在创建资源操作对象的时候我们需要先创建 Context，但是明显这里没有显示创建，但是实际上我们如果看 Context 概念的话，就会知道，如果程序中未指定 Context，会创建 name 为 &amp;quot;sentinel_default_context&amp;quot; 的默认 Context，然后我们继续往下跟踪。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Entry&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; resourceType&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;EntryType&lt;/span&gt; trafficType&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;BlockException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 限流方法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Env&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sph&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;entryWithType&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; resourceType&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; trafficType&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;进入到 entry 方法中，这里的 entryWithType 方法就是我们要看的真正的限流的方法，具体的实现方法在&lt;strong&gt; com.alibaba.csp.sentinel.CtSph.entryWithType&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Entry&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;entryWithType&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; resourceType&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;EntryType&lt;/span&gt; entryType&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;BlockException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;entryWithType&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; resourceType&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; entryType&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Entry&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;entryWithType&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; resourceType&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;EntryType&lt;/span&gt; entryType&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                           &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;BlockException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 这里将资源的名称和信息封装称为资源对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;StringResourceWrapper&lt;/span&gt; resource &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;StringResourceWrapper&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; entryType&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; resourceType&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 返回一个 Entry 资源操作对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;//prioritized 属性表示优先级，默认值为 false，表示当前请求不按照优先级执行，直接执行&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;entryWithPriority&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resource&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;我们接下来来具体分析核心方法 entryWithPriority&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Entry&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;entryWithPriority&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;ResourceWrapper&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;BlockException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 从当前线程中获取 Context&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 一个请求会占用一个线程，并且绑定一个 Context&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ContextUtil&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getContext&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 一个请求对应一个 Context&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   	&lt;span class=&#34;token comment&#34;&gt;// 如果当前类型为 NullContext，表示此时请求已经超出了阈值，无需检测规则&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context &lt;span class=&#34;token keyword&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;NullContext&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// The &amp;#123;@link NullContext&amp;#125; indicates that the amount of context has exceeded the threshold,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// so here init the entry only. No rule checking will be done.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CtEntry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 此时如果获取 Context 为空，就创建默认的 sentinel_default_context，并且会放入到当前线程中&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// Using default context.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        context &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;InternalContextUtil&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;internalEnter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Constants&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;CONTEXT_DEFAULT_NAME&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 判断全局开关，如果是关闭状态，直接返回无需检测规则&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// Global switch is close, no rule checking will do.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Constants&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;ON&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CtEntry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * 这里是整个架构的核心所在，这里是在构建一个处理链，这个处理链是一个单向链表结构，类似于 Filter 一样，构建这个链条的&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * 原因是对业务进行解耦，像限流资源保护有很多，比如限流、降级、热点参数、系统降级等等，如果都写在一起就耦合很严重，我们知道 oop 的&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * 思想就是让每个类确定各自的职责，不要让他做不相干的事情，所以这里将业务进行全面解耦，然后在解耦的同时又通过链式编程将它们串起来&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;ProcessorSlot&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; chain &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;lookProcessChain&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/*&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         * Means amount of resources (slot chain) exceeds &amp;#123;@link Constants.MAX_SLOT_CHAIN_SIZE&amp;#125;,&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         * so no rule checking will be done.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;chain &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CtEntry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;Entry&lt;/span&gt; e &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CtEntry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; chain&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 针对资源操作&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        chain&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;BlockException&lt;/span&gt; e1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;throw&lt;/span&gt; e1&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; e1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// This should not happen, unless there are errors existing in Sentinel internal.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;RecordLog&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Sentinel unexpected exception&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; e1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;sentinel源码解析-构建context&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel源码解析-构建context&#34;&gt;#&lt;/a&gt; Sentinel 源码解析 - 构建 Context&lt;/h1&gt;
&lt;p&gt;我们继续分析当前这个类型中的 InternalContextUtil.internalEnter (Constants.CONTEXT_DEFAULT_NAME); 方法&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;* This class is used for skip context name checking.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;此类型是用于跳过 Context 名称的检测&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;*/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;InternalContextUtil&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ContextUtil&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;internalEnter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 从这里继续跟踪&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;trueEnter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;internalEnter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; origin&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;trueEnter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; origin&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;首先这里要明确一下，一个 Context 的组成实际上需要 name (名称) 和 origin (来源)，所以方法上传入这两个参数&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;trueEnter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; origin&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 从当前线程中获取当前 context 名称&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; contextHolder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 如果当前 context 为空&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 从缓存中获取，当前缓存中 key 值为：Context 名称，value 值为：EntranceNode&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// （因为后续创建的是 EntranceNode），需要它的原因是因为构建 Context 需要 EntranceNode&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; localCacheNameMap &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; contextNameNodeMap&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 在缓存中获取 EntranceNode&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;DefaultNode&lt;/span&gt; node &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; localCacheNameMap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 如果 node 为空&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 当前缓存的 size&gt;Context 的最大数量，返回 NULL_Context 类型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;localCacheNameMap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Constants&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;MAX_CONTEXT_NAME_SIZE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token function&#34;&gt;setNullContext&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;NULL_CONTEXT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;// 加锁&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token constant&#34;&gt;LOCK&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;lock&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    node &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; contextNameNodeMap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token comment&#34;&gt;// 这里两次判断是采用了双重检测锁的机制：为了防止并发创建&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;contextNameNodeMap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Constants&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;MAX_CONTEXT_NAME_SIZE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                            &lt;span class=&#34;token function&#34;&gt;setNullContext&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;NULL_CONTEXT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                            &lt;span class=&#34;token comment&#34;&gt;//node 赋值为 EntranceNode&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                            node &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;EntranceNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;StringResourceWrapper&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;EntryType&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;IN&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                            &lt;span class=&#34;token comment&#34;&gt;// Add entrance node.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                            &lt;span class=&#34;token comment&#34;&gt;// 将新建的 EntranceNode 添加到 ROOT 中&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                            &lt;span class=&#34;token class-name&#34;&gt;Constants&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;ROOT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addChild&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                            &lt;span class=&#34;token comment&#34;&gt;// 将新建的 EntranceNode 添加到缓存中&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                            &lt;span class=&#34;token class-name&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; newMap &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;HashMap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;contextNameNodeMap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                            newMap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;putAll&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;contextNameNodeMap&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                            newMap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;put&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                            contextNameNodeMap &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; newMap&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;finally&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token constant&#34;&gt;LOCK&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlock&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 将 name 和 node 封装成 Context&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        context &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 设定来源&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setOrigin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;origin&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 将 context 写入到当前线程中&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        contextHolder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;// 返回 Context&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;sentinel源码解析-slotchain入口解析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel源码解析-slotchain入口解析&#34;&gt;#&lt;/a&gt; Sentinel 源码解析 - SlotChain 入口解析&lt;/h1&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/sentinel-slot-chain-architecture.png&#34; class=&#34;&#34; title=&#34;arch overview&#34;&gt;
&lt;h2 id=&#34;默认chain解析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#默认chain解析&#34;&gt;#&lt;/a&gt; 默认 Chain 解析&lt;/h2&gt;
&lt;p&gt;​	我们从这里继续分析，这个位置的 chain.entry 方法，但是此时这个 chain 是谁？&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//CtSph 中&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 针对资源操作&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    chain&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;BlockException&lt;/span&gt; e1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;throw&lt;/span&gt; e1&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; e1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// This should not happen, unless there are errors existing in Sentinel internal.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;RecordLog&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Sentinel unexpected exception&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; e1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;那么这个位置开始，我们就要分析一下如下代码&lt;/p&gt;
&lt;p&gt;官方定义：Sentinel 将 ProcessorSlot 作为 SPI 接口进行扩展（1.7.2 版本以前 SlotChainBuilder 作为 SPI），使得 Slot Chain 具备了扩展的能力。您可以自行加入自定义的 slot 并编排 slot 间的顺序，从而可以给 Sentinel 添加自定义的功能。&lt;/p&gt;
&lt;p&gt;lookProcessChain () 用于构建一个责任链。Sentinel 的处理核心都在这个责任链中，链中每一个节点是一个 Slot 实例，这个链通过 BlockException 异常来告知调用入口最终的执行情况&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 获取 chain 链&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;ProcessorSlot&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; chain &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;lookProcessChain&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//------------------- 具体看 lookProcessChain 方法 ---------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;ProcessorSlot&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;lookProcessChain&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;ResourceWrapper&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 先从 chainMap 获取，若是存在，则直接返回&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;ProcessorSlotChain&lt;/span&gt; chain &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; chainMap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;chain &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;synchronized&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;LOCK&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            chain &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; chainMap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;chain &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;// Entry size limit.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;chainMap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Constants&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;MAX_SLOT_CHAIN_SIZE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token comment&#34;&gt;// 通过 SlotChainProvider 创建一个 slot 链&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                chain &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SlotChainProvider&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;newSlotChain&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token class-name&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;ResourceWrapper&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ProcessorSlotChain&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; newMap &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;HashMap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;ResourceWrapper&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ProcessorSlotChain&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    chainMap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                newMap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;putAll&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;chainMap&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;// 添加到 Map 缓存中&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                newMap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;put&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; chain&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                chainMap &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; newMap&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; chain&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这个位置我们要具体分析 SlotChainProvider 这个类型，它的主要作用就是通过已解析的槽链构建器，创建槽链的提供者&lt;/p&gt;
&lt;p&gt;从这里我们可以看出 SlotChainBuilder 及 ProcessorSlot 使用 Java SPI 技术实现可配置化，即在 / META-INF/services/ 接口全限命名 的文件中配置实现类，然后由 ServiceLoader 实现加载，这种技术在 SpringBoot 中都有使用。不作讲解。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;csp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sentinel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;slotchain&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;csp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sentinel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;log&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;RecordLog&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;csp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sentinel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;slots&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;DefaultSlotChainBuilder&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;csp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sentinel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;spi&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SpiLoader&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; * A provider for creating slot chains via resolved slot chain builder SPI.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; *&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; * @author Eric Zhao&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; * @since 0.2.0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SlotChainProvider&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;volatile&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SlotChainBuilder&lt;/span&gt; slotChainBuilder &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * The load and pick process is not thread-safe, but it&#39;s okay since the method should be only invoked&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * via &amp;#123;@code lookProcessChain&amp;#125; in &amp;#123;@link com.alibaba.csp.sentinel.CtSph&amp;#125; under lock.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     *&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * @return new created slot chain&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ProcessorSlotChain&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;newSlotChain&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;slotChainBuilder &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; slotChainBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 读取配置文件在 / META-INF/services/ 接口全限定命名的文件中配置实现类.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        slotChainBuilder &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SpiLoader&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SlotChainBuilder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;loadFirstInstanceOrDefault&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;slotChainBuilder &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// Should not go through here.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token class-name&#34;&gt;RecordLog&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;warn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;[SlotChainProvider] Wrong state when resolving slot chain builder, using default&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 使用默认的 DefaultSlotChainBuilder 来构建 ProcessorSlotChain&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            slotChainBuilder &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultSlotChainBuilder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token class-name&#34;&gt;RecordLog&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;[SlotChainProvider] Global slot chain builder resolved: &amp;#123;&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                slotChainBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getClass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getCanonicalName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 使用 DefaultSlotChainBuilder 构建&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; slotChainBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SlotChainProvider&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;到这里我们就清楚的知道了其实现在使用的是使用 DefaultSlotChainBuilder.build () 来创建的，以下是源码&lt;/p&gt;
&lt;p&gt;在这个其中，做了几件事：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 创建DefaultProcessorSlotChain
2. 读取/META-INF/services/中的配置文件
3. 强制转型为AbstractLinkedProcessorSlot（所有插槽的抽象父类）
&lt;/code&gt;&lt;/pre&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Spi&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;isDefault &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultSlotChainBuilder&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SlotChainBuilder&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ProcessorSlotChain&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 创建 DefaultProcessorSlotChain&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;ProcessorSlotChain&lt;/span&gt; chain &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultProcessorSlotChain&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token comment&#34;&gt;// 读取配置文件在 / META-INF/services/ 接口全限定命名的文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;ProcessorSlot&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; sortedSlotList &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SpiLoader&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;ProcessorSlot&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;loadInstanceListSorted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;ProcessorSlot&lt;/span&gt; slot &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; sortedSlotList&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;slot &lt;span class=&#34;token keyword&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;AbstractLinkedProcessorSlot&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token class-name&#34;&gt;RecordLog&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;warn&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;The ProcessorSlot(&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; slot&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getClass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getCanonicalName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;) is not an instance of AbstractLinkedProcessorSlot, can&#39;t be added into ProcessorSlotChain&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            chain&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addLast&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;AbstractLinkedProcessorSlot&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; slot&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; chain&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;具体读取的内容如下：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# &lt;span class=&#34;token class-name&#34;&gt;Sentinel&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ProcessorSlots&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;csp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sentinel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;slots&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;nodeselector&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;NodeSelectorSlot&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;csp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sentinel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;slots&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clusterbuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;ClusterBuilderSlot&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;csp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sentinel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;slots&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;logger&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;LogSlot&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;csp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sentinel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;slots&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;statistic&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;StatisticSlot&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;csp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sentinel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;slots&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;block&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;authority&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;AuthoritySlot&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;csp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sentinel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;slots&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;system&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;SystemSlot&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;csp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sentinel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;slots&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;block&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;flow&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;FlowSlot&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;csp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sentinel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;slots&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;block&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;degrade&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;DegradeSlot&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这些就是 Sentinel 提供的默认功能插槽&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211209165106934.png&#34; class=&#34;&#34; title=&#34;image-20211209165106934&#34;&gt;
&lt;h2 id=&#34;nodeselectorslot解析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nodeselectorslot解析&#34;&gt;#&lt;/a&gt; NodeSelectorSlot 解析&lt;/h2&gt;
&lt;p&gt;分析到这里我们就可以回到 CtSph 中，查看 entry 方法这个时候我们就知道了实际上调用 entry 方法的是 DefaultProcessorSlotChain&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token comment&#34;&gt;// 针对资源操作&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     chain&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;BlockException&lt;/span&gt; e1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token keyword&#34;&gt;throw&lt;/span&gt; e1&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; e1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token comment&#34;&gt;// This should not happen, unless there are errors existing in Sentinel internal.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token class-name&#34;&gt;RecordLog&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Sentinel unexpected exception&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; e1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;那我们向下跟踪&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ResourceWrapper&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 转到下一个节点&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    first&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;transformEntry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这个位置是转入到下一个节点，那么下一个节点明显就是 NodeSelectorSlot，那我们来看具体操作&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;transformEntry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ResourceWrapper&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt; o&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt; t &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;o&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;//NodeSelectorSlot&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;NodeSelectorSlot 具体内容官网有给出解释：&lt;/p&gt;
&lt;p&gt;这个 slot 主要负责收集资源的路径，并将这些资源的调用路径，以树状结构存储起来，用于根据调用路径来限流降级。&lt;/p&gt;
&lt;p&gt;DefaultNode 用于统计一个 resource 在当前 Context 中的流量数据，所以再结合 NodeSelectorSlot，最终得出结论：处理不同的 Context name，同一个 Resource name 的情况&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211209171805499.png&#34; class=&#34;&#34; title=&#34;image-20211209171805499&#34;&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211123135428060.png&#34; class=&#34;&#34; title=&#34;image-20211123135428060&#34;&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ResourceWrapper&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt; obj&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 从缓存中获取，创建 DefaultNode&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;DefaultNode&lt;/span&gt; node &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; map&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 双重判断，如果判断为空&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;synchronized&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            node &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; map&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;// 创建一个 DefaultNode 并且放入到缓存中&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                node &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token class-name&#34;&gt;HashMap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; cacheMap &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;HashMap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;map&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                cacheMap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;putAll&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;map&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                cacheMap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;put&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                map &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; cacheMap&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;// Build invocation tree&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;// 将新建的 Node 添加到调用树中&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;DefaultNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getLastNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addChild&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setCurNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 触发下一个节点&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;fireEntry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;sentinel源码解析-clusterbuilderslot解析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel源码解析-clusterbuilderslot解析&#34;&gt;#&lt;/a&gt; Sentinel 源码解析 - ClusterBuilderSlot 解析&lt;/h1&gt;
&lt;p&gt;上节课我们分析了 SlotChain 入口和 NodeSelectorSlot 那么这节课分析 ClusterBuilderSlot&lt;/p&gt;
&lt;h2 id=&#34;官方定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#官方定义&#34;&gt;#&lt;/a&gt; 官方定义&lt;/h2&gt;
&lt;p&gt;ClusterBuilderSlot：则用于存储资源的统计信息以及调用者信息，例如该资源的 RT, QPS, thread count 等等，这些信息将用作为多维度限流，降级的依据；&lt;/p&gt;
&lt;p&gt;那我们来进行分析，首先我们先看上节课分析到的位置&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//NodeSelectorSlot.entry()&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ResourceWrapper&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt; obj&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 从缓存中获取，创建 DefaultNode&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;DefaultNode&lt;/span&gt; node &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; map&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 双重判断，如果判断为空&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;synchronized&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            node &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; map&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;// 创建一个 DefaultNode 并且放入到缓存中&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                node &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token class-name&#34;&gt;HashMap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; cacheMap &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;HashMap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;map&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                cacheMap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;putAll&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;map&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                cacheMap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;put&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                map &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; cacheMap&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;// Build invocation tree&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;// 将新建的 Node 添加到调用树中&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;DefaultNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getLastNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addChild&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setCurNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 触发下一个节点&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;fireEntry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;再触发下一个节点以后，调用的是父级 AbstractLinkedProcessorSlot.fireEntry () 方法，然后 next 调用 transformEntry&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;fireEntry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ResourceWrapper&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt; obj&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;next &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 调用下一个节点&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        next&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;transformEntry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; obj&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//next 就代表循环到下一个节点所以这里调用 entry 的就是 ClusterBuilderSlot&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@SuppressWarnings&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;unchecked&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;transformEntry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ResourceWrapper&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt; o&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt; t &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;o&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;clusterbuilderslot&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#clusterbuilderslot&#34;&gt;#&lt;/a&gt; ClusterBuilderSlot&lt;/h2&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// ClusterBuilderSlot.entry&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ResourceWrapper&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultNode&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                  &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;clusterNode &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;synchronized&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;lock&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;clusterNode &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;// Create the cluster node.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                clusterNode &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ClusterNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getResourceType&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;//key 为资源 value 为 ClusterNode&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token class-name&#34;&gt;HashMap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;ResourceWrapper&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ClusterNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; newMap &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;HashMap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Math&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;clusterNodeMap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                newMap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;putAll&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;clusterNodeMap&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                newMap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;put&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; clusterNode&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                clusterNodeMap &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; newMap&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; 	&lt;span class=&#34;token comment&#34;&gt;// 添加节点&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    node&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setClusterNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;clusterNode&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/*&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         * if context origin is set, we should get or create a new &amp;#123;@link Node&amp;#125; of&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         * the specific origin.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 确认资源的来源&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;equals&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getOrigin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;Node&lt;/span&gt; originNode &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getClusterNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getOrCreateOriginNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getOrigin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getCurEntry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setOriginNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;originNode&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;fireEntry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结：&lt;/h2&gt;
&lt;p&gt;ClusterNode 作用就是与 DefaultNode 进行关联，即不同的 DefaultNode 都关联了一个 ClusterNode，这样我们在不同上下文中都可以拿到当前资源一个总的流量统计情况。&lt;/p&gt;
&lt;h1 id=&#34;sentinel源码解析-slot分析后续1&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel源码解析-slot分析后续1&#34;&gt;#&lt;/a&gt; Sentinel 源码解析 - Slot 分析后续 1&lt;/h1&gt;
&lt;p&gt;这节课我们继续分析 Sentinel 调用链路中的 Slot，那么我们还是先来分析 StatisticSlot：&lt;/p&gt;
&lt;h2 id=&#34;statisticslot定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#statisticslot定义&#34;&gt;#&lt;/a&gt; StatisticSlot 定义：&lt;/h2&gt;
&lt;p&gt;StatisticSlot 是 Sentinel 最为重要的类之一，用于根据规则判断结果进行相应的统计操作。&lt;/p&gt;
&lt;p&gt;entry 的时候：依次执行后面的判断 slot。每个 slot 触发流控的话会抛出异常（BlockException 的子类）。若有 BlockException 抛出，则记录 block 数据；若无异常抛出则算作可通过（pass），记录 pass 数据。&lt;/p&gt;
&lt;p&gt;exit 的时候：若无 error（无论是业务异常还是流控异常），记录 complete（success）以及 RT，线程数 - 1。&lt;/p&gt;
&lt;p&gt;记录数据的维度：线程数 + 1、记录当前 DefaultNode 数据、记录对应的 originNode 数据（若存在 origin）、累计 IN 统计数据（若流量类型为 IN）。&lt;/p&gt;
&lt;h2 id=&#34;分析源码核心方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分析源码核心方法&#34;&gt;#&lt;/a&gt; 分析源码核心方法&lt;/h2&gt;
&lt;p&gt;首先我们从 ClusterNodeSlot 中的 entry 方法中找到调用下一节点方法，然后向下跟踪，道理和之前的都一样，调用的是父级方法&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;fireEntry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//------------------- 父级方法 -----------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;fireEntry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ResourceWrapper&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt; obj&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;next &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        next&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;transformEntry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; obj&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;找到 transformEntry 方法，然后此时的下一个节点必然是 StatisticSlot&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@SuppressWarnings&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;unchecked&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;transformEntry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ResourceWrapper&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt; o&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt; t &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;o&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;//StatisticSlot&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; t&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;然后我们来看 StatisticSlot 的核心方法，这里的核心思想就是：封装了基础的流量统计和获取方法&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ResourceWrapper&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultNode&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                  &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// Do some checking.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 此位置会调用 SlotChain 中后续的所有 Slot，完成所有规则检测。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;fireEntry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// Request passed, add thread count and pass count.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 代码运行到这个位置，就证明之前的所有 Slot 检测都通过了，此时就可以统计请求的相应数据了。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 增加线程数（+1）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        node&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;increaseThreadNum&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 增加通过请求的数量 (这里涉及到滑动窗口算法)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        node&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addPassRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;count&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token comment&#34;&gt;//..... 以下全部是流量统计的方法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;看到这里以后，我们对 StatisticSlot 作用已经比较了解了，那么现在我们主要要分析这个位置，也就是说向下分析一下的节点&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;fireEntry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这里向下的节点调用方式和之前的都一样，所以剩下的节点非别为：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211213152938457.png&#34; class=&#34;&#34; title=&#34;image-20211213152938457&#34;&gt;
&lt;p&gt;但是其实这里的 ParamFlowSlot 包括 SystemSlot 和 AuthoritySlot 我们在操作的时候其实就已经知道了它们就是根据不同维度进行统计和检测，那么这三个我们就不再详细分析，这条链路中我们要主要分析流控和熔断：FlowSlot、DegradeSlot&lt;/p&gt;
&lt;h2 id=&#34;flowslot定义&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#flowslot定义&#34;&gt;#&lt;/a&gt; FlowSlot 定义：&lt;/h2&gt;
&lt;p&gt;这个 slot 主要根据预设的资源的统计信息，按照固定的次序，依次生效。如果一个资源对应两条或者多条流控规则，则会根据如下次序依次检验，直到全部通过或者有一个规则生效为止:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;指定应用生效的规则，即针对调用方限流的；&lt;/li&gt;
&lt;li&gt;调用方为 other 的规则；&lt;/li&gt;
&lt;li&gt;调用方为 default 的规则。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;分析核心方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分析核心方法&#34;&gt;#&lt;/a&gt; 分析核心方法&lt;/h2&gt;
&lt;p&gt;进入到核心方法的方式和之前的都一样，所以我们直接来看&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ResourceWrapper&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultNode&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                  &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 检测并且应用流量规则&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;checkFlow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 触发下一个 Slot&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;fireEntry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;那我们先来分析 checkFlow 方法&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;checkFlow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;ResourceWrapper&lt;/span&gt; resource&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultNode&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;BlockException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 在这里继续跟踪&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    checker&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;checkFlow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ruleProvider&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; resource&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//---------------checkFlow 具体实现 ----------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;checkFlow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Function&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Collection&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;FlowRule&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; ruleProvider&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ResourceWrapper&lt;/span&gt; resource&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                      &lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultNode&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;BlockException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 判断规则和资源不能为空&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ruleProvider &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; resource &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 获取到指定资源的所有流控规则&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;Collection&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;FlowRule&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; rules &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ruleProvider&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;apply&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resource&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 逐个应用流控规则。若无法通过则抛出异常，后续规则不再应用&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rules &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;FlowRule&lt;/span&gt; rule &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; rules&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;canPassCheck&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rule&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;// FlowException 继承 BlockException&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FlowException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rule&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getLimitApp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; rule&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这里我们需要注意一下 FlowRule（流控规则），它继承自 AbstractRule，那我们来看一下 AbstractRule 其中的两个类型，分别是资源名称和资源的来源&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; resource&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; limitApp&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;那么通过这里我们就可以得知，流控的规则设置其实就是通过这个 FlowRule 来完成的，同样它的数据来源，就是我们使用的 Sentinel-dashboard，当然也可以通过代码来进行设置&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FlowRule&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;AbstractRule&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FlowRule&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 来源默认 Default&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;setLimitApp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;RuleConstant&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;LIMIT_APP_DEFAULT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FlowRule&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; resourceName&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 资源名称&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;setResource&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resourceName&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;setLimitApp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;RuleConstant&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;LIMIT_APP_DEFAULT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * The threshold type of flow control (0: thread count, 1: QPS).&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 设置阈值类型 0 是线程 1 为 QPS&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; grade &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RuleConstant&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;FLOW_GRADE_QPS&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * Flow control threshold count.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 单机阈值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;double&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * Flow control strategy based on invocation chain.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * 直接流控&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * &amp;#123;@link RuleConstant#STRATEGY_DIRECT&amp;#125; for direct flow control (by origin);&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * 关联流控&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * &amp;#123;@link RuleConstant#STRATEGY_RELATE&amp;#125; for relevant flow control (with relevant resource);&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * 链路流控&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * &amp;#123;@link RuleConstant#STRATEGY_CHAIN&amp;#125; for chain flow control (by entrance resource).&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 流控模式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; strategy &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RuleConstant&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;STRATEGY_DIRECT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * Reference resource in flow control with relevant resource or context.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 关联流控模式，关联的资源设置&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; refResource&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * Rate limiter control behavior.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * 0. default(reject directly), 1. warm up, 2. rate limiter, 3. warm up + rate limiter&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 流控效果 0 快速失败 1 预热（令牌桶算法） 2 排队等待（漏斗算法） 3 预热 + 排队等待（目前控制台没有）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; controlBehavior &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RuleConstant&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;CONTROL_BEHAVIOR_DEFAULT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;//warp up 预热时长&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; warmUpPeriodSec &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * Max queueing time in rate limiter behavior.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 排队等待的超时时间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; maxQueueingTimeMs &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;500&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 是否为集群模式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; clusterMode&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * Flow rule config for cluster mode.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 集群模式配置&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ClusterFlowConfig&lt;/span&gt; clusterConfig&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * The traffic shaping (throttling) controller.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;TrafficShapingController&lt;/span&gt; controller&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token comment&#34;&gt;//.... 省略以下方法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这里还涉及到两个算法：令牌桶算法和漏斗算法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;令牌桶算法：令牌桶算法的原理是系统会以一个恒定的速度往桶里放入令牌，而如果请求需要被处理，则需要先从桶里获取一个令牌，当桶里没有令牌可取时，则拒绝服务。&lt;/li&gt;
&lt;li&gt;漏斗算法：漏桶算法思路很简单，请求先进入到漏桶里，漏桶以固定的速度出水，也就是处理请求，当水加的过快，则会直接溢出，也就是拒绝请求，可以看出漏桶算法能强行限制数据的传输速率。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;sentinel源码解析-slot分析后续2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel源码解析-slot分析后续2&#34;&gt;#&lt;/a&gt; Sentinel 源码解析 - Slot 分析后续 2&lt;/h1&gt;
&lt;p&gt;这节课我们继续分析 Sentinel 调用链路中的 Slot，那么我们还是继续分析 FlowSlot&lt;/p&gt;
&lt;h2 id=&#34;flowslot获取全部流控规则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#flowslot获取全部流控规则&#34;&gt;#&lt;/a&gt; FlowSlot 获取全部流控规则&lt;/h2&gt;
&lt;p&gt;上节课我们分析到这个位置，这节课我们主要研究一下如何获取全部的流控规则&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 获取到指定资源的所有流控规则&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;Collection&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;FlowRule&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; rules &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ruleProvider&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;apply&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resource&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 逐个应用流控规则。若无法通过则抛出异常，后续规则不再应用&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rules &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;FlowRule&lt;/span&gt; rule &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; rules&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;canPassCheck&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rule&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// FlowException 继承 BlockException&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FlowException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rule&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getLimitApp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; rule&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 这里调用的 apply 方法就是 FlowSlot 中的对应方法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Function&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Collection&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;FlowRule&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; ruleProvider &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Function&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Collection&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;FlowRule&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Collection&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;FlowRule&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apply&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; resource&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// Flow rule map should not be null.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 获取所有资源和对应的流控规则 key 为资源名称，value 为该资源对应的所有流控规则&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;FlowRule&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; flowRules &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FlowRuleManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getFlowRuleMap&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 获取指定资源的流控规则&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; flowRules&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resource&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;那我们来看 apply 方法，要注意的是其中的 FlowRuleManager 其实如果我们通过代码的方式来设置流控就会使用到它，因为它提供了对应的方法 FlowRuleManager.loadRules ()&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;* Load &amp;#123;@link FlowRule&amp;#125; s, former rules will be replaced.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;* 添加新的流控规则&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;* @param rules new rules to load.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;*/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;loadRules&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;FlowRule&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; rules&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    currentProperty&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;updateValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rules&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;但是现在这个位置源码用的 FlowRuleManager.getFlowRuleMap ()，其实通过这个方法我们就可以得知，FlowRuleManager 的作用就是设置对应资源的流控规则，资源对应的流控规则 (list 集合) 组成一个 Map&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 获取所有资源和对应的流控规则 key 为资源名称，value 为该资源对应的所有流控规则&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;FlowRule&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; flowRules &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FlowRuleManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getFlowRuleMap&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;那我们现在来看 FlowRuleChecker.checkFlow () 方法如何应用规则，这里我们要注意遍历&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;checkFlow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Function&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Collection&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;FlowRule&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; ruleProvider&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ResourceWrapper&lt;/span&gt; resource&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                      &lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultNode&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;BlockException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 判断规则和资源不能为空&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ruleProvider &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; resource &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 获取到指定资源的所有流控规则&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;Collection&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;FlowRule&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; rules &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ruleProvider&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;apply&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resource&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 逐个应用流控规则。若无法通过则抛出异常，后续规则不再应用&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rules &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;FlowRule&lt;/span&gt; rule &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; rules&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 遍历规则，应用规则，判断是否能够通过规则&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;canPassCheck&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rule&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;// FlowException 继承 BlockException&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FlowException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rule&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getLimitApp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; rule&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;那我们需要跟进去看一下 canPassCheck 方法&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;canPassCheck&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/*@NonNull*/&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FlowRule&lt;/span&gt; rule&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultNode&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; acquireCount&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 从规则中获取要限定的来源&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; limitApp &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; rule&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getLimitApp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 如果来源为空，则请求直接通过&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;limitApp &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 处理集群流控&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rule&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isClusterMode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;passClusterCheck&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rule&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; acquireCount&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 处理单机流控&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;passLocalCheck&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rule&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; acquireCount&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;那么这里我们要关注的是处理单机流控的方法 passLocalCheck&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;passLocalCheck&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;FlowRule&lt;/span&gt; rule&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultNode&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; acquireCount&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                      &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 根据请求选择节点&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;Node&lt;/span&gt; selectedNode &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;selectNodeByRequesterAndStrategy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rule&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;selectedNode &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 根据配置 FlowRule 配置的流控效果 (流控效果：直接拒绝、排队等待、预热)，选择不同的 Controller，判断是否通过&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; rule&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getRater&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;canPass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;selectedNode&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; acquireCount&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在这里我们来看一下根据请求来选择节点&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Node&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;selectNodeByRequesterAndStrategy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/*@NonNull*/&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FlowRule&lt;/span&gt; rule&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultNode&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// The limit app should not be empty.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 获取限定来源 (调用方)、流控模式（直接）、获取 context 中的调用发（从当前上下文环境中获取）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; limitApp &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; rule&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getLimitApp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; strategy &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; rule&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getStrategy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; origin &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getOrigin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 判断来源如果不是 Default（默认）和 Other（其他）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;limitApp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;equals&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;origin&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;filterOrigin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;origin&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;strategy &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RuleConstant&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;STRATEGY_DIRECT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// Matches limit origin, return origin statistic node.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getOriginNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;selectReferenceNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rule&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 如果是默认来源&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;RuleConstant&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;LIMIT_APP_DEFAULT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;equals&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;limitApp&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 是否是直接流控模式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;strategy &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RuleConstant&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;STRATEGY_DIRECT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// Return the cluster node.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 返回统计数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getClusterNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;selectReferenceNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rule&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 其他来源 other&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;RuleConstant&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;LIMIT_APP_OTHER&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;equals&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;limitApp&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;               &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FlowRuleManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isOtherOrigin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;origin&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; rule&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getResource&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;strategy &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RuleConstant&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;STRATEGY_DIRECT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getOriginNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;selectReferenceNode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rule&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;那到这为止，我们就知道如何获取流控规则和针对不同来源的不同操作，那么现在还有一个问题就是，就是这个位置的解析&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 根据配置 FlowRule 配置的流控效果 (流控效果：直接拒绝、排队等待、预热)，选择不同的 Controller，判断是否通过&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; rule&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getRater&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;canPass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;selectedNode&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; acquireCount&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;流控效果对应的controller&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#流控效果对应的controller&#34;&gt;#&lt;/a&gt; 流控效果对应的 Controller&lt;/h2&gt;
&lt;p&gt;其实这个位置的 rule.getRater () 的返回值类型为 TrafficShapingController，而这里的类结构为：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;TrafficShapingController&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getRater&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; controller&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211216210615881.png&#34; class=&#34;&#34; title=&#34;image-20211216210615881&#34;&gt;
&lt;p&gt;其实从这里我们就能看出针对不同的流控模式，针对不同的控制器来进行处理，那么我们这里演示一个 DefaultController&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211216210800196.png&#34; class=&#34;&#34; title=&#34;image-20211216210800196&#34;&gt;
&lt;p&gt;那我们现在来看一下具体 DefaultController 的操作，在 DefaultController 中，首先获取当前的线程数或者 QPS 数，如果当前的线程数或者 QPS + 申请的数量 &amp;gt; 配置的总数，则不通过，如果当前线程数或者 QPS + 申请的数量 &amp;lt;= 配置的总数，则直接通过&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultController&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;TrafficShapingController&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;DEFAULT_AVG_USED_TOKENS&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;double&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; grade&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultController&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;double&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; grade&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;count &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;grade &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; grade&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;canPass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Node&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; acquireCount&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;canPass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; acquireCount&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;canPass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Node&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; acquireCount&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 获取当前 node 节点的线程数或者请求通过的 qps 总数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; curCount &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;avgUsedTokens&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 当前请求数（请求的令牌）+ 申请总数是否（已经消耗的令牌）&gt; 该资源配置的总数（阈值）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;curCount &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; acquireCount &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;prioritized &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; grade &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RuleConstant&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;FLOW_GRADE_QPS&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;long&lt;/span&gt; currentTime&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;long&lt;/span&gt; waitInMs&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                currentTime &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;TimeUtil&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;currentTimeMillis&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                waitInMs &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;tryOccupyNext&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;currentTime&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; acquireCount&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;waitInMs &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;OccupyTimeoutProperty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getOccupyTimeout&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    node&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addWaitingRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;currentTime &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; waitInMs&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; acquireCount&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    node&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addOccupiedPass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;acquireCount&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token function&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;waitInMs&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token comment&#34;&gt;// PriorityWaitException indicates that the request will pass after waiting for &amp;#123;@link @waitInMs&amp;#125;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;PriorityWaitException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;waitInMs&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;avgUsedTokens&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Node&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;DEFAULT_AVG_USED_TOKENS&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; grade &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RuleConstant&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;FLOW_GRADE_THREAD&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;curThreadNum&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;passQps&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;long&lt;/span&gt; timeMillis&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token class-name&#34;&gt;Thread&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;timeMillis&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;InterruptedException&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// Ignore.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;流程总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#流程总结&#34;&gt;#&lt;/a&gt; 流程总结&lt;/h2&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211216214823684.png&#34; class=&#34;&#34; title=&#34;image-20211216214823684&#34;&gt;
&lt;h1 id=&#34;sentinel源码解析-熔断降级degradeslot解析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel源码解析-熔断降级degradeslot解析&#34;&gt;#&lt;/a&gt; Sentinel 源码解析 - 熔断降级 DegradeSlot 解析&lt;/h1&gt;
&lt;p&gt;上节课我们分析完了限流 FlowSlot，那么我们继续想下一个链路中的元素来看，下一个就是熔断降级的 Slot，那我们直接来看核心方法&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//DegradeSlot.entry&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ResourceWrapper&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultNode&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                  &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 熔断降级检测&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;performChecking&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 触发下一个节点&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;fireEntry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;那我们先来跟踪熔断降级检测的方法，在这里我们可以看见，这里其实就是对熔断器的状态进行判断&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;performChecking&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ResourceWrapper&lt;/span&gt; r&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;BlockException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 获取所有资源的熔断器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;CircuitBreaker&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; circuitBreakers &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DegradeRuleManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getCircuitBreakers&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;r&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 判断是否获取到熔断器，如果为空直接结束&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;circuitBreakers &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; circuitBreakers&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isEmpty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;CircuitBreaker&lt;/span&gt; cb &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; circuitBreakers&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 判断所有熔断器的状态，如果是开启状态直接抛出异常&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;cb&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;tryPass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 此异常继承于 BlockException&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DegradeException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cb&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getRule&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getLimitApp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; cb&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getRule&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;而真正判断是否需要开启熔断器是在 exit 方法中进行的，这个方法是在业务方法执行以后调用了，熔断器需要手机业务异常或者业务的执行时间来判断是开启熔断&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;exit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ResourceWrapper&lt;/span&gt; r&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 如果当前其他的 Slot 已经有了 BlockException，就直接跳过&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;Entry&lt;/span&gt; curEntry &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getCurEntry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;curEntry&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBlockError&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;fireExit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; r&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 通过资源名称获取熔断器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;CircuitBreaker&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; circuitBreakers &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DegradeRuleManager&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getCircuitBreakers&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;r&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;circuitBreakers &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; circuitBreakers&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isEmpty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;fireExit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; r&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;curEntry&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getBlockError&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// passed request&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 调用 CircuitBreaker 的 onRequestComplete () 方法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;CircuitBreaker&lt;/span&gt; circuitBreaker &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; circuitBreakers&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            circuitBreaker&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;onRequestComplete&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;fireExit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; r&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在这个代码中，有一个比较关键的地方就是 CircuitBreaker（熔断器），那我们来分析一下：&lt;/p&gt;
&lt;h2 id=&#34;circuitbreaker熔断器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#circuitbreaker熔断器&#34;&gt;#&lt;/a&gt; CircuitBreaker 熔断器&lt;/h2&gt;
&lt;p&gt;首先我们要知道其实 CircuitBreaker 是一个接口&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; * 熔断器中将三种熔断策略封装（慢调用比例 / 异常比例 / 异常数）为两种熔断器：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; * 响应时间熔断器、异常熔断器&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CircuitBreaker&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * Get the associated circuit breaking rule.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     *&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * @return associated circuit breaking rule&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * 获取熔断规则&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;DegradeRule&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getRule&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * Acquires permission of an invocation only if it is available at the time of invoking.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     *&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * @param context context of current invocation&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * @return &amp;#123;@code true&amp;#125; if permission was acquired and &amp;#123;@code false&amp;#125; otherwise&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * 判断是否需要降级 返回值为 false 开启降级&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;tryPass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * Get current state of the circuit breaker.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     *&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * @return current state of the circuit breaker&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * 当前熔断器状态&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;State&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;currentState&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * &amp;lt;p&gt;Record a completed request with the context and handle state transformation of the circuit breaker.&amp;lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * &amp;lt;p&gt;Called when a &amp;lt;strong&gt;passed&amp;lt;/strong&gt; invocation finished.&amp;lt;/p&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     *&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * @param context context of current invocation&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * 回调方法 当请求通过后触发&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;onRequestComplete&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * Circuit breaker state.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * 三种熔断器状态：&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * OPEN 开启&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * HALF_OPEN 半开启&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * CLOSED 关闭&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;enum&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;State&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         * In &amp;#123;@code OPEN&amp;#125; state, all requests will be rejected until the next recovery time point.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token constant&#34;&gt;OPEN&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         * In &amp;#123;@code HALF_OPEN&amp;#125; state, the circuit breaker will allow a &#34;probe&#34; invocation.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         * If the invocation is abnormal according to the strategy (e.g. it&#39;s slow), the circuit breaker&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         * will re-transform to the &amp;#123;@code OPEN&amp;#125; state and wait for the next recovery time point;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         * otherwise the resource will be regarded as &#34;recovered&#34; and the circuit breaker&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         * will cease cutting off requests and transform to &amp;#123;@code CLOSED&amp;#125; state.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token constant&#34;&gt;HALF_OPEN&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         * In &amp;#123;@code CLOSED&amp;#125; state, all requests are permitted. When current metric value exceeds the threshold,&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         * the circuit breaker will transform to &amp;#123;@code OPEN&amp;#125; state.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token constant&#34;&gt;CLOSED&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;以上代码中其中三种熔断状态对应的原理如下（这个原理在基础应用讲过）&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211103194830095.png&#34; class=&#34;&#34; title=&#34;image-20211103194830095&#34;&gt;
&lt;h2 id=&#34;熔断策略&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#熔断策略&#34;&gt;#&lt;/a&gt; 熔断策略&lt;/h2&gt;
&lt;p&gt;对应的实现类有两个 ExceptionCircuitBreaker（异常熔断器）、ResponseTimeCircuitBreaker（响应时间熔断器），这个我们可以从类图看到&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211221193548988.png&#34; class=&#34;&#34; title=&#34;image-20211221193548988&#34;&gt;
&lt;p&gt;那我们这里来看看 ExceptionCircuitBreaker (异常熔断器)，对应的策略是&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211221225941518.png&#34; class=&#34;&#34; title=&#34;image-20211221225941518&#34;&gt;
&lt;p&gt;我们来看对应回调方法 ExceptionCircuitBreaker.onRequestComplete&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;onRequestComplete&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;Entry&lt;/span&gt; entry &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getCurEntry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;entry &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; error &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; entry&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getError&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 异常事件窗口计数器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;SimpleErrorCounter&lt;/span&gt; counter &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; stat&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;currentWindow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 如果有异常，异常数 + 1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;error &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        counter&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getErrorCount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 总异常数 + 1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    counter&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTotalCount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;handleStateChangeWhenThresholdExceeded&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;error&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;handleStateChangeWhenThresholdExceeded&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; error&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 如果熔断器已经开启直接返回&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;currentState&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;State&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;OPEN&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 进入办开启状态&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;currentState&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;State&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;HALF_OPEN&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// In detecting request&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;error &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 本次请求没有出现异常，关闭熔断器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token function&#34;&gt;fromHalfOpenToClose&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 本次请求出现异常，打开熔断&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token function&#34;&gt;fromHalfOpenToOpen&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1.0d&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SimpleErrorCounter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; counters &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; stat&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;long&lt;/span&gt; errCount &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 异常数量&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;long&lt;/span&gt; totalCount &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 总异常数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SimpleErrorCounter&lt;/span&gt; counter &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; counters&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        errCount &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; counter&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;errorCount&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        totalCount &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; counter&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;totalCount&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 请求数量 &amp; lt; 最小的请求数量时不开启熔断&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;totalCount &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; minRequestAmount&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;double&lt;/span&gt; curCount &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; errCount&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 熔断策略为慢调用比例&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;strategy &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;DEGRADE_GRADE_EXCEPTION_RATIO&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// Use errorRatio&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 计算百分比&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        curCount &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; errCount &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1.0d&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; totalCount&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 错误率或者错误数大于阈值时开启熔断&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;curCount &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; threshold&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;transformToOpen&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;curCount&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;sentinel源码分析-滑动时间窗口算法原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel源码分析-滑动时间窗口算法原理&#34;&gt;#&lt;/a&gt; Sentinel 源码分析 - 滑动时间窗口算法原理&lt;/h1&gt;
&lt;p&gt;在之前的学习中，我们已经学习完成了 Sentinel 源码的 Node 关系、责任链调用，那么这节课我们就要学习 Sentinel 核心源码中的一个非常重要的算法 “滑动时间窗口算法”&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211222170933011.png&#34; class=&#34;&#34; title=&#34;image-20211222170933011&#34;&gt;
&lt;h2 id=&#34;时间窗算法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#时间窗算法&#34;&gt;#&lt;/a&gt; 时间窗算法&lt;/h2&gt;
&lt;p&gt;那么在了解滑动时间窗算法之前，我们先要来了解时间窗算法，也可以称之为：固定时间窗算法&lt;/p&gt;
&lt;p&gt;概念：固定时间窗口计数器算法思想：在固定的时间窗口内，可以允许固定数量的请求进入。超过数量就拒绝或者排队，等下一个时间段进入。&lt;/p&gt;
&lt;p&gt;那我们来看图分析：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211222174050592.png&#34; class=&#34;&#34; title=&#34;image-20211222174050592&#34;&gt;
&lt;p&gt;具体分析一下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将当前的时间分为 10t 大小的几个时间窗&lt;/li&gt;
&lt;li&gt;规则是阈值为 100 个请求数，每个时间窗里面的请求数量不能超过阈值 100&lt;/li&gt;
&lt;li&gt;10t 到 16t 进入请求 10 个，16t 到 20t 进入请求 50 个，总数 60 个请求，没有超过阈值 100&lt;/li&gt;
&lt;li&gt;20t 到 26t 进入请求 60 个，26t 到 30t 进入请求 20 个，总数 80 个请求，没有超过阈值 100&lt;/li&gt;
&lt;li&gt;30t 到 40t 之间进入请求 120 个，超过阈值 20 个，所以 20 个请求无法进入&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;存在问题：16t 到 26t 之间也是 10t 大小的一个时间窗，但是请求总数为 110，超过阈值，这种固定时间窗无法处理这部分超出的请求，解决办法就是使用滑动时间窗。&lt;/p&gt;
&lt;h2 id=&#34;滑动时间窗算法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#滑动时间窗算法&#34;&gt;#&lt;/a&gt; 滑动时间窗算法&lt;/h2&gt;
&lt;p&gt;使用滑动时间窗的原因，就在于虽然以上提到超出阈值的部分分别在两个时间窗中，但是实际上我们要清楚，我们系统限流的目的是要在任意时间都要能应对突然的流量暴增，如果使用以上的算法，就会造成在 16t 和 26t 之间的请求无法限流，从而严重会导致服务雪崩。&lt;/p&gt;
&lt;p&gt;要解决的话，我们就需要使用滑动时间窗算法，具体原理如下：&lt;/p&gt;
&lt;p&gt;滑动时间窗限流算法解决了固定时间窗限流算法的问题。其没有划分固定的时间窗起点与终点，而是将每一次请求的到来时间点作为统计时间窗的终点，起点则是终点向前推时间窗长度的时间点。这种时间窗称为 “滑动时间窗”&lt;/p&gt;
&lt;p&gt;看图分析：&lt;/p&gt;
&lt;p&gt;此图中我们可以分析中，实际上当前的时间窗不再是固定的，而是可以从时间的起始位置一直向右滑动&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211222190154070.png&#34; class=&#34;&#34; title=&#34;image-20211222190154070&#34;&gt;
&lt;p&gt;这样的话就可以解决固定时间窗带来的问题，如图所示：&lt;/p&gt;
&lt;p&gt;其原理就是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当前时间窗口为滑动窗口，可以从左向右按照时间顺序进行滑动，并且大小为 10t，同时此时的阈值为 100&lt;/li&gt;
&lt;li&gt;红色线的位置进入一个请求，此时想要判断这个请求是否能够正常通过，就要看当前滑动窗口中的请求数量是否达到阈值，如果当前没有达到阈值 100，就可以正常通过，但是如果一旦超过阈值，就会被进行限流。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;没有超过阈值：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211222191157347.png&#34; class=&#34;&#34; title=&#34;image-20211222191157347&#34;&gt;
&lt;p&gt;超过阈值：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211222191224880.png&#34; class=&#34;&#34; title=&#34;image-20211222191224880&#34;&gt;
&lt;p&gt;但是此时滑动时间窗还是有问题的，问题就是会出现大量的重复统计，造成系统效率下降，如下图所示：&lt;/p&gt;
&lt;p&gt;在此图中我们就可以看出，这个蓝色的区域就是重复统计的区域，也就是说每一次移动时间窗口，都需要重新统计重复区域的请求数量，从而导致浪费大量的系统资源。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211222193546553.png&#34; class=&#34;&#34; title=&#34;image-20211222193546553&#34;&gt;
&lt;h2 id=&#34;滑动时间窗口算法-改进&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#滑动时间窗口算法-改进&#34;&gt;#&lt;/a&gt; 滑动时间窗口算法 - 改进&lt;/h2&gt;
&lt;p&gt;想要解决以上的问题，我们就需要更加细粒度话的计算，增加多个子时间窗口：样本窗口&lt;/p&gt;
&lt;p&gt;概念：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;样本窗口的长度必须小于滑动窗口长度，如果等于滑动窗口长度就会变成固定时间窗口&lt;/li&gt;
&lt;li&gt;一般滑动窗口长度是样本窗口的整数倍，比如：4 * 样本窗口 = 1 个滑动窗口&lt;/li&gt;
&lt;li&gt;每个样本窗口在到达终点时间时，会统计本样本窗口中的流量数据并且记录下来。&lt;/li&gt;
&lt;li&gt;当一个请求达到时，会统计当前请求时间点所在的样本窗口中的流量数据，然后在获取当前请求时间的样本窗口以外的同一个滑动窗口中的样本窗口的统计数据，进行求和，如果没有超出阈值，则通过，否则就会被限流。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;原理图：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211222201207217.png&#34; class=&#34;&#34; title=&#34;image-20211222201207217&#34;&gt;
&lt;p&gt;下一个进入请求的时间点&lt;/p&gt;
&lt;p&gt;此时这个请求将不会被限流，因为本次请求的时间的对应的样本窗口只有 5 个请求加上之前重复的样本窗口统计的流量值，没有超过阈值 100，所以本次请求会通过。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211222202102495.png&#34; class=&#34;&#34; title=&#34;image-20211222202102495&#34;&gt;
&lt;h1 id=&#34;sentinel源码分析-sentinel滑动时间窗口算法源码解析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel源码分析-sentinel滑动时间窗口算法源码解析&#34;&gt;#&lt;/a&gt; Sentinel 源码分析 - Sentinel 滑动时间窗口算法源码解析&lt;/h1&gt;
&lt;p&gt;上节课我们分析了 Sentinel 的滑动时间窗口算法原理，那么这节课我们来研究一下源码中的具体实现&lt;/p&gt;
&lt;h2 id=&#34;整体流程图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#整体流程图&#34;&gt;#&lt;/a&gt; 整体流程图&lt;/h2&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/%E6%BB%91%E5%8A%A8%E6%97%B6%E9%97%B4%E7%AA%97%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0.png&#34; class=&#34;&#34; title=&#34;滑动时间窗算法实现&#34;&gt;
&lt;h2 id=&#34;源码分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#源码分析&#34;&gt;#&lt;/a&gt; 源码分析&lt;/h2&gt;
&lt;p&gt;那我们就按照这个流程图来从头分析&lt;/p&gt;
&lt;p&gt;首先看 StatisticSlot.entry 方法中 node.addPassRequest (count) 方法，这里我之前就提到过用到了滑动窗口算法，那我们来具体分析&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 增加通过请求的数量 (这里涉及到滑动窗口算法)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;node&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addPassRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;count&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;进入方法 DefaultNode.addPassRequest&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;addPassRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addPassRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;count&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clusterNode&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addPassRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;count&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;继续向下跟踪&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;addPassRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 为滑动计数器增加本次的访问数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    rollingCounterInSecond&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addPass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;count&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    rollingCounterInMinute&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addPass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;count&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;最后进入 ArrayMetric.addPass，这是一个使用数组保存数据的计量器类&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;addPass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 获取当前时间点所在的样本窗口&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;WindowWrap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;MetricBucket&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; wrap &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;currentWindow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 将当前请求的计数量添加到当前样本窗口的统计数据中&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    wrap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addPass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;count&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;先来跟踪 data.currentWindow ();&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;WindowWrap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;currentWindow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 获取当前时间所在的样本窗口&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;currentWindow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;TimeUtil&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;currentTimeMillis&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这里就会进入 LeapArray（环形数组）中的 currentWindow 方法中，这个环形数组，其实就是 Sentinel 官方提供的原理图中的环形数组 WindowLeapArray&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211223172002547.png&#34; class=&#34;&#34; title=&#34;image-20211223172002547&#34;&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 环形数组&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;abstract&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;LeapArray&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 样本窗口长度&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; windowLengthInMs&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 一个时间窗中包含的时间窗数量&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; sampleCount&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 时间窗长度&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; intervalInMs&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;double&lt;/span&gt; intervalInSecond&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 这个一个数组，元素为 WindowWrap 样本窗口&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 注意，这里的泛型 T 实际为 MetricBucket 类型&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;AtomicReferenceArray&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;WindowWrap&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; array&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这里要注意这个数组，这个数组里面所存放的类型就是 WindowWrap 窗口类型，泛型 T 是 MetricBucket 这里我们来看一下这个类型&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;WindowWrap&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;long&lt;/span&gt; windowLengthInMs&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;long&lt;/span&gt; windowStart&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt; value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 样本窗口长度&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;windowLengthInMs &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; windowLengthInMs&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 样本窗口的起始时间戳&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;windowStart &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; windowStart&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 当前样本窗口的统计数据 其类型为 MetricBucket&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; value&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//..LeapArray&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;WindowWrap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;currentWindow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 获取当前时间所在的样本窗口&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;currentWindow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;TimeUtil&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;currentTimeMillis&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//------------------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;WindowWrap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;currentWindow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;long&lt;/span&gt; timeMillis&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;timeMillis &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 计算当前时间所在的样本窗口 id，即在计算数组 LeapArray 中的索引&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; idx &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;calculateTimeIdx&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;timeMillis&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// Calculate current bucket start time.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     	&lt;span class=&#34;token comment&#34;&gt;// 计算当前样本窗口的开始时间点&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;long&lt;/span&gt; windowStart &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;calculateWindowStart&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;timeMillis&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在这里我们先分析 calculateTimeIdx 方法&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;calculateTimeIdx&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/*@Valid*/&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;long&lt;/span&gt; timeMillis&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 计算当前时间在那个样本窗口（样本窗口下标），当前时间 / 样本窗口长度&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;long&lt;/span&gt; timeId &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; timeMillis &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; windowLengthInMs&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// Calculate current index so we can map the timestamp to the leap array.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 计算具体索引，这个 array 就是装样本窗口的数组&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;timeId &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; array&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;timeId（样本窗口下标）原理如下：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211223202827754.png&#34; class=&#34;&#34; title=&#34;image-20211223202827754&#34;&gt;
&lt;p&gt;具体索引原理：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211223204246750.png&#34; class=&#34;&#34; title=&#34;image-20211223204246750&#34;&gt;
&lt;p&gt;这里分析完成我们接着分析这里，计算当前样本窗口的起点&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 计算当前样本窗口的开始时间点&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;long&lt;/span&gt; windowStart &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;calculateWindowStart&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;timeMillis&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;calculateWindowStart&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;/*@Valid*/&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;long&lt;/span&gt; timeMillis&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 计算当前样本窗口的起点 当前时间点 -（当前时间点 % 样本窗口长度）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; timeMillis &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; timeMillis &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt; windowLengthInMs&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;原理如下：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211223205936680.png&#34; class=&#34;&#34; title=&#34;image-20211223205936680&#34;&gt;
&lt;p&gt;这里分析完成之后我们继续向下分析&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 获取到当前时间所在的样本窗口&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;WindowWrap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; old &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; array&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;idx&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 如果获取不到，表示没有创建&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;old &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;/*&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 *     B0       B1      B2    NULL      B4&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 * ||_______|_______|_______|_______|_______||___&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 * 200     400     600     800     1000    1200  timestamp&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 *                             ^&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 *                          time=888&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 *            bucket is empty, so create new and update&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 *&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 * If the old bucket is absent, then we create a new bucket at &amp;#123;@code windowStart&amp;#125;,&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 * then try to update circular array via a CAS operation. Only one thread can&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 * succeed to update, while other threads yield its time slice.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 创建新的时间窗口&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;WindowWrap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; window &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;WindowWrap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;windowLengthInMs&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; windowStart&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;newEmptyBucket&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;timeMillis&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 通过 CAS 方式将新建窗口放入 Array&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;array&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;compareAndSet&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;idx&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; window&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// Successfully updated, return the created bucket.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; window&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// Contention failed, the thread will yield its time slice to wait for bucket available.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token class-name&#34;&gt;Thread&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;yield&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 若当前样本窗口的起始时间点与计算出的样本窗口起始点相同，则说明两个是同一个样本窗口&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;windowStart &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; old&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;windowStart&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;/*&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 *     B0       B1      B2     B3      B4&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 * ||_______|_______|_______|_______|_______||___&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 * 200     400     600     800     1000    1200  timestamp&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 *                             ^&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 *                          time=888&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 *            startTime of Bucket 3: 800, so it&#39;s up-to-date&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 *&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 * If current &amp;#123;@code windowStart&amp;#125; is equal to the start timestamp of old bucket,&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 * that means the time is within the bucket, so directly return the bucket.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; old&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 若当前样本窗口的起始时间点 大于 计算出的样本窗口起始时间点，说明计算出的样本窗口已经过时了，&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 需要将原来的样本窗口替换&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;windowStart &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; old&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;windowStart&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;/*&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 *   (old)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 *             B0       B1      B2    NULL      B4&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 * |_______||_______|_______|_______|_______|_______||___&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 * ...    1200     1400    1600    1800    2000    2200  timestamp&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 *                              ^&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 *                           time=1676&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 *          startTime of Bucket 2: 400, deprecated, should be reset&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 *&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 * If the start timestamp of old bucket is behind provided time, that means&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 * the bucket is deprecated. We have to reset the bucket to current &amp;#123;@code windowStart&amp;#125;.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 * Note that the reset and clean-up operations are hard to be atomic,&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 * so we need a update lock to guarantee the correctness of bucket update.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 *&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 * The update lock is conditional (tiny scope) and will take effect only when&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 * bucket is deprecated, so in most cases it won&#39;t lead to performance loss.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;updateLock&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;tryLock&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;// Successfully get the update lock, now we reset the bucket.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;// 替换掉老的样本窗口&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;resetWindowTo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;old&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; windowStart&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;finally&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                updateLock&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;unlock&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// Contention failed, the thread will yield its time slice to wait for bucket available.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token class-name&#34;&gt;Thread&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;yield&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 当前样本窗口的起始时间点 小于 计算出的样本窗口起始时间点，&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 这种情况一般不会出现，因为时间不会倒流。除非人为修改了系统时钟&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;windowStart &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; old&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;windowStart&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// Should not go through here, as the provided time is already behind.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;WindowWrap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;windowLengthInMs&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; windowStart&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;newEmptyBucket&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;timeMillis&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这里的原理如下：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211223213543463.png&#34; class=&#34;&#34; title=&#34;image-20211223213543463&#34;&gt;
&lt;p&gt;具体是如何替换的拿，我们来看源码&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 替换掉老的样本窗口&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;resetWindowTo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;old&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; windowStart&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//------------------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// BucketLeapArray.resetWindowTo&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;WindowWrap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;MetricBucket&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;resetWindowTo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;WindowWrap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;MetricBucket&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; w&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;long&lt;/span&gt; startTime&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// Update the start time and reset value.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 更新窗口起始时间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    w&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;resetTo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;startTime&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 将多维度统计数据清零&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    w&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;reset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; w&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;更新数据分析&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MetricBucket&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;reset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 将每个维度的统计数据清零&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;MetricEvent&lt;/span&gt; event &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MetricEvent&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        counters&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;event&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;ordinal&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;reset&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;initMinRt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;最后我们再来看一下具体是那个维度，其实是通过维度&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;addPass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 获取当前时间点所在的样本窗口&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;WindowWrap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;MetricBucket&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; wrap &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;currentWindow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 将当前请求的计数量添加到当前样本窗口的统计数据中&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    wrap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addPass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;count&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//----------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;addPass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;MetricEvent&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;PASS&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211223221413399.png&#34; class=&#34;&#34; title=&#34;image-20211223221413399&#34;&gt;
&lt;h1 id=&#34;sentinel-源码分析-滑动窗口数据统计解析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel-源码分析-滑动窗口数据统计解析&#34;&gt;#&lt;/a&gt; Sentinel 源码分析 - 滑动窗口数据统计解析&lt;/h1&gt;
&lt;h2 id=&#34;源码结构图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#源码结构图&#34;&gt;#&lt;/a&gt; 源码结构图&lt;/h2&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%95%B0%E6%8D%AE%E7%BB%9F%E8%AE%A1.png&#34; class=&#34;&#34; title=&#34;滑动窗口数据统计&#34;&gt;
&lt;h2 id=&#34;分析源码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分析源码&#34;&gt;#&lt;/a&gt; 分析源码&lt;/h2&gt;
&lt;p&gt;上节课我们通过分析源码已经知道了滑动窗口算法在 Sentinel 中的应用，那么这节课我们来研究一些其中的数据统计，首先入口我们就从限流的 Slot：FlowSlot 的 entry 方法入手：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ResourceWrapper&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultNode&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                  &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Object&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 检测并且应用流控规则&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;checkFlow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 触发下一个 Slot&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;fireEntry&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; resourceWrapper&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;checkFlow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;ResourceWrapper&lt;/span&gt; resource&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Context&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DefaultNode&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;BlockException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 从这里进入&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    checker&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;checkFlow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ruleProvider&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; resource&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; context&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;checkFlow 方法里面找到遍历所有规则的 canPassCheck 方法然后在进入 canPass 方法，找到 DefaultController 对应实现，快速失败的流控效果，我们从这里来看，这里我们要关注的是 avgUsedTokens 方法，这个方法实际上就是获取当前时间窗里面的已经统计的数据&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;canPass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Node&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; acquireCount&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; prioritized&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 获取当前 node 节点的线程数或者请求通过的 qps 总数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 获取当前时间窗已经统计的数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; curCount &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;avgUsedTokens&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 当前请求数（请求的令牌）+ 申请总数是否（已经消耗的令牌）&gt; 该资源配置的总数（阈值）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 以前的数据 + 新的数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;curCount &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; acquireCount &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;prioritized &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; grade &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RuleConstant&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;FLOW_GRADE_QPS&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;long&lt;/span&gt; currentTime&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;long&lt;/span&gt; waitInMs&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            currentTime &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;TimeUtil&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;currentTimeMillis&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            waitInMs &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;tryOccupyNext&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;currentTime&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; acquireCount&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; count&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;waitInMs &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;OccupyTimeoutProperty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getOccupyTimeout&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                node&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addWaitingRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;currentTime &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; waitInMs&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; acquireCount&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                node&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;addOccupiedPass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;acquireCount&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token function&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;waitInMs&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token comment&#34;&gt;// PriorityWaitException indicates that the request will pass after waiting for &amp;#123;@link @waitInMs&amp;#125;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;PriorityWaitException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;waitInMs&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;所以这里我们跟进一下，看如何获取已经统计的数据&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;avgUsedTokens&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Node&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 如果没有选出 node，代表没有做统计工作，直接返回 0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;DEFAULT_AVG_USED_TOKENS&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 判断阈值类型，如果为 QPS，则返回当前统计的 QPS&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 如果为线程数，则返回当前的线程数总量&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; grade &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RuleConstant&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;FLOW_GRADE_THREAD&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; node&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;curThreadNum&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;node&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;passQps&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这里实际上就是判断阈值类型，我们这里看 QPS 类型的统计&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E6%BA%90%E7%A0%81%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211227174205035.png&#34; class=&#34;&#34; title=&#34;image-20211227174205035&#34;&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;passQps&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;//rollingCounterInSecond.pass () 当前时间窗中统计的通过请求数量&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;//rollingCounterInSecond.getWindowIntervalInSec () 时间窗口长度&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 这两个数相除，计算出的就是 QPS&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; rollingCounterInSecond&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;pass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; rollingCounterInSecond&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getWindowIntervalInSec&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;那么这里就需要查看 pass 方法，看是如何统计通过请求总量的&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;pass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 更新 array 中当前时间点所在样本窗口实例中的数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;currentWindow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;long&lt;/span&gt; pass &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 将当前时间窗口中的所有样本窗口统计的 value 读取出来，并且记录&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;MetricBucket&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; list &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;MetricBucket&lt;/span&gt; window &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; list&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        pass &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; window&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;pass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; pass&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;那么这里我们先跟踪 values ()，其实这里就是拿出没有过时有效的样本窗口数据&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;TimeUtil&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;currentTimeMillis&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// ----------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;long&lt;/span&gt; timeMillis&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;timeMillis &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ArrayList&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; size &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; array&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;length&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ArrayList&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;size&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 这个遍历 array 中的每一个样本窗口实例&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; size&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;WindowWrap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; windowWrap &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; array&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 若当前遍历实例为空或者已经过时，则继续下一个&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;windowWrap &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;isWindowDeprecated&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;timeMillis&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; windowWrap&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        result&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;windowWrap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;判断位置过时判断逻辑：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;isWindowDeprecated&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;long&lt;/span&gt; time&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;WindowWrap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; windowWrap&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 当前时间 - 样本窗口起始时间 &gt; 时间窗口  说明过时了&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; time &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; windowWrap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;windowStart&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; intervalInMs&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;那么这里分析完成以后我们再回到 ArrayMetric 中的 pass 方法中，看遍历方法，就是将所有的有效并且是通过维度的数据统计出来进行求和，看是否超过阈值。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;pass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 更新 array 中当前时间点所在样本窗口实例中的数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;currentWindow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;long&lt;/span&gt; pass &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 将当前时间窗口中的所有样本窗口统计的 value 读取出来，并且记录&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;MetricBucket&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; list &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 将 List 中所有 pass 维度的统计数据并取出求和&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;MetricBucket&lt;/span&gt; window &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; list&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 通过维度&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        pass &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; window&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;pass&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; pass&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;div id=&#34;gitalk-container&#34;&gt;&lt;/div&gt;
&lt;script src=&#34;https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js&#34;&gt;&lt;/script&gt;&lt;link rel=&#34;stylesheet&#34; href=&#34;https://unpkg.com/gitalk/dist/gitalk.css&#34;&gt;&lt;script src=&#34;https://unpkg.com/gitalk/dist/gitalk.min.js&#34;&gt;&lt;/script&gt;

		&lt;script&gt;
		var gitalkConfig = {&#34;clientID&#34;:&#34;6db178ba46c8af8f6a6f&#34;,&#34;clientSecret&#34;:&#34;90f730e5956024596558df00975cd8eae28cae3d&#34;,&#34;repo&#34;:&#34;bk-comment01&#34;,&#34;owner&#34;:&#34;onlymarryu&#34;,&#34;admin&#34;:[&#34;onlymarryu&#34;],&#34;distractionFreeMode&#34;:false,&#34;language&#34;:&#34;zh-CN&#34;,&#34;proxy&#34;:&#34;https://gitalk-comments.netlify.app/github_access_token&#34;,&#34;perPage&#34;:15};
	    gitalkConfig.id = md5(location.pathname);
		var gitalk = new Gitalk(gitalkConfig);
	    gitalk.render(&#34;gitalk-container&#34;);
	    &lt;/script&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://eth168.top/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/</guid>
            <title>Sentinel系统学习</title>
            <link>https://eth168.top/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/</link>
            <category term="微服务" scheme="https://eth168.top/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/" />
            <category term="spring-cloud-alibaba" scheme="https://eth168.top/tags/spring-cloud-alibaba/" />
            <category term="sentinel" scheme="https://eth168.top/tags/sentinel/" />
            <pubDate>Mon, 10 Jul 2023 21:52:02 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;sentinel介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel介绍&#34;&gt;#&lt;/a&gt; Sentinel 介绍&lt;/h1&gt;
&lt;h2 id=&#34;什么是sentinel&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是sentinel&#34;&gt;#&lt;/a&gt; 什么是 Sentinel&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;分布式系统的流量防卫兵&lt;/strong&gt;：随着微服务的普及，服务调用的稳定性变得越来越重要。&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvU2VudGluZWw=&#34;&gt;Sentinel&lt;/span&gt; 以 “流量” 为切入点，在流量控制、断路、负载保护等多个领域开展工作，保障服务可靠性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;特点：&lt;br /&gt;
1.&lt;br /&gt;
2. &lt;strong&gt;+ 丰富的应用场景&lt;/strong&gt;：Sentinel 承接了阿里巴巴近 10 年的双十一大促流量的核心场景，例如秒杀（即突发流量控制在系统容量可以承受的范围）、消息削峰填谷、集群流量控制、实时熔断下游不可用应用等。&lt;br /&gt;
3. &lt;strong&gt;完备的实时监控&lt;/strong&gt;：Sentinel 同时提供实时的监控功能。您可以在控制台中看到接入应用的单台机器秒级数据，甚至 500 台以下规模的集群的汇总运行情况。&lt;br /&gt;
4. &lt;strong&gt;广泛的开源生态&lt;/strong&gt;：Sentinel 提供开箱即用的与其它开源框架 / 库的整合模块，例如与 Spring Cloud、Apache Dubbo、gRPC、Quarkus 的整合。您只需要引入相应的依赖并进行简单的配置即可快速地接入 Sentinel。同时 Sentinel 提供 Java/Go/C++ 等多语言的原生实现。&lt;br /&gt;
5. &lt;strong&gt;完善的 SPI 扩展机制&lt;/strong&gt;：Sentinel 提供简单易用、完善的 SPI 扩展接口。您可以通过实现扩展接口来快速地定制逻辑。例如定制规则管理、适配动态数据源等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;官网文档：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvU2VudGluZWwvd2lraS8lRTQlQkIlOEIlRTclQkIlOEQ=&#34;&gt;https://github.com/alibaba/Sentinel/wiki/ 介绍&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;sentinel好处&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel好处&#34;&gt;#&lt;/a&gt; Sentinel 好处&lt;/h2&gt;
&lt;p&gt;​	分布式系统面临的问题：复杂的体系结构中的应用程序有数十个依赖关系，每个依赖关系在某些时候将不可避免的失败，比如如下的例子中，当我们调用 A、E、F、J、K 这几个服务的时候如果其中一个服务出现问题会造成什么问题？其实就会出现整体系统效率全部下降，而且严重就会出现&lt;strong&gt;服务雪崩&lt;/strong&gt;的问题！&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211005013321645.png&#34; class=&#34;&#34; title=&#34;image-20211005013321645&#34;&gt;
&lt;p&gt;​	&lt;strong&gt;服务雪崩：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​		多个微服务之间调用的时候，假设 A 调用 B 和 C，B 和 C 又调用其他的微服务，这就是所谓的&lt;strong&gt;扇出&lt;/strong&gt;。如果扇出的某个链路上某个微服务调用的响应时间过程或者不可用，微服务 A 的调用就用占用越来越多的系统资源，从而引起系统崩溃，这也就是&lt;strong&gt;服务雪崩&lt;/strong&gt;。其实就是服务的&lt;strong&gt;高可用&lt;/strong&gt;遭到了破坏。&lt;/p&gt;
&lt;p&gt;​		对于高流量的应用来说，单一的后端依赖可能会导致服务器上的所有资源都在几秒钟内饱和。同时还有可能造成这些应用程序导致服务之间的延迟增加，备份列队，线程和其他的系统资源紧张，导致整个系统发生更多的级联故障。这些都表示需要对故障和延迟进行隔离和管理，以便单个依赖关系失败，不能取消整个应用程序或系统，所以通常发生了一个模块的某个实例失败后，这时候这个模块依然还会接受流量，然后这个有问题的模块还调用其他的模块，这样就会发生级联故障，或者叫做&lt;strong&gt;雪崩&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;​		要解决这种问题的出现我们就需要用到服务降级，而 Sentinel 就可以保证在一个依赖出现问题的情况下，不会导致整体服务失败，避免级联故障，提高分布式系统的弹性。&lt;/p&gt;
&lt;p&gt;​	&lt;strong&gt;Sentinel 的熔断降级通过断路器实现：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​		断路器：它本身是一种开关装置，当某个服务单元发生故障之后，通过断路器的故障监控（类似于熔断保险丝），向调用方返回一个符合预期的、可处理的备选响应（FallBack），而不是长时间的等待或者抛出调用方法无法出的异常，这样就保证了服务调用方的不会被长时间、不必要的占用，从而避免了故障在分布式系统中蔓延（类似于病毒传染），从而避免了故障在系统中蔓延，乃至崩溃。&lt;/p&gt;
&lt;p&gt;​	&lt;strong&gt;好处体现：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	对比与其他的产品而言，比如说 Hystrix，他不需要我们自己手动搭建监控平台，而且它有一套类似于 Nacos 的 Web 界面，可以让我们进行更加细粒度的配置流控、速率、服务熔断、服务降级等&lt;/p&gt;
&lt;p&gt;​	目前主流编程都是 约定 &amp;gt; 配置 &amp;gt; 代码，虽然我们的配置都可以写在代码中，但是我们还是要大面积的学习配置和注解的方式，尽量少些代码，这也是 Sentinel 的理念和初衷。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211005004311575.png&#34; class=&#34;&#34; title=&#34;image-20211005004311575&#34;&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211005004335733.png&#34; class=&#34;&#34; title=&#34;image-20211005004335733&#34;&gt;
&lt;h2 id=&#34;sentinel下载和安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel下载和安装&#34;&gt;#&lt;/a&gt; Sentinel 下载和安装&lt;/h2&gt;
&lt;p&gt;​	下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvU2VudGluZWwvcmVsZWFzZXM=&#34;&gt;https://github.com/alibaba/Sentinel/releases&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211005005114846.png&#34; class=&#34;&#34; title=&#34;image-20211005005114846&#34;&gt;
&lt;p&gt;官方提供的手册：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcHJpbmctY2xvdWQtYWxpYmFiYS1ncm91cC5naXRodWIuaW8vZ2l0aHViLXBhZ2VzL2hveHRvbi9lbi11cy9pbmRleC5odG1sI19zcHJpbmdfY2xvdWRfYWxpYmFiYV9zZW50aW5lbA==&#34;&gt;https://spring-cloud-alibaba-group.github.io/github-pages/hoxton/en-us/index.html#_spring_cloud_alibaba_sentinel&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sentinel 分为两个部分&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;核心库（Java 客户端）不依赖任何框架 / 库，只需要 Java 运行时环境，同时对 Dubbo/SpringCloud 等框架也有较好的支持。&lt;/li&gt;
&lt;li&gt;控制台（Dashboard）基于 SpringBoot 开发，打包后可以直接运行，不需要额外的 Tomcat 等应用容器。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;启动步骤&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;前提：jdk1.8 环境和 8080 端口不能被占用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;启动命令：java -jar sentinel-dashboard-1.8.2.jar&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;访问地址：localhost:8080&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;输入默认账号密码：sentinel/sentinel&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211005010854771.png&#34; class=&#34;&#34; title=&#34;image-20211005010854771&#34;&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211005010930366.png&#34; class=&#34;&#34; title=&#34;image-20211005010930366&#34;&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211005011050291.png&#34; class=&#34;&#34; title=&#34;image-20211005011050291&#34;&gt;
&lt;p&gt;到这里为止，我们的 Sentinel 安装成功。&lt;/p&gt;
&lt;h1 id=&#34;sentinel初始化监控&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel初始化监控&#34;&gt;#&lt;/a&gt; Sentinel 初始化监控&lt;/h1&gt;
&lt;h2 id=&#34;sentinel初始化工程演示&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel初始化工程演示&#34;&gt;#&lt;/a&gt; Sentinel 初始化工程演示&lt;/h2&gt;
&lt;p&gt;​	我们现在通过一个案例来让大家了解 Sentinel 的初始化演示，现在我们需要做几件事：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;启动 Nacos8848 成功&lt;/li&gt;
&lt;li&gt;创建新的 Module：cloudalibaba-sentinel-service8401&lt;/li&gt;
&lt;li&gt;启动 Sentinel8080&lt;/li&gt;
&lt;li&gt;启动微服务 8401&lt;/li&gt;
&lt;li&gt;启动 8401 微服务后查看 Sentinel 控制台&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;搭建sentinel项目&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#搭建sentinel项目&#34;&gt;#&lt;/a&gt; 搭建 Sentinel 项目&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Sentinel 的官方文档网址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZW50aW5lbGd1YXJkLmlvL3poLWNuL2RvY3MvcXVpY2stc3RhcnQuaHRtbA==&#34;&gt;https://sentinelguard.io/zh-cn/docs/quick-start.html&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;创建项目 cloudalibaba-sentinel-service8401&lt;/li&gt;
&lt;li&gt;导入依赖：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Nacos&lt;/span&gt;客户端依赖 &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;starter&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;alibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;discovery&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; sentinel依赖 &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;starter&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;alibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;sentinel&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;配置 yaml 文件，目的是让当前 8401 注册进 Nacos，然后被 Sentinel8080 进行监控&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;server&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  port&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8401&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;spring&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  application&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; cloudalibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;sentinel&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;service&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  cloud&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    nacos&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      discovery&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        server&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;addr&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sentinel&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      transport&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        # 配置&lt;span class=&#34;token class-name&#34;&gt;Sentinel&lt;/span&gt; dashboard地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        dashboard&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8080&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        # 默认&lt;span class=&#34;token number&#34;&gt;8719&lt;/span&gt;端口，键入被占用会自动从&lt;span class=&#34;token number&#34;&gt;8719&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;，直到找到未被占用的端口&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        port&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8719&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;management&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  endpoints&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    web&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      exposure&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        include&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token char&#34;&gt;&#39;*&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;编写 FlowLimitController&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;example&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloudalibabasentinel8401&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;controller&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;GetMapping&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;RestController&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@RestController&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FlowLimitController&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/testA&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;testA&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;-----testA&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/testB&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;testB&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;-----testB&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;测试&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试&#34;&gt;#&lt;/a&gt; 测试&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;当以上的这些配置配置好以后，我们就可以进行测试了，那我们的测试方式就是，首先保证 Nacos 和 Sentinel 都是启动状态，然后再来启动项目，按照我们的理解这个时候，就应该在 Sentinel 的 dashboard 上能体现出它监控的服务，但是此时并没有，原因是因为 Sentinel 本身采用的是懒加载机制，所以我们需要首先访问服务对应的接口，Sentinel 才能工作。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;http&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;localhost&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8401&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;testA&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;http&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;localhost&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8401&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;testB&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;访问之后我们来查看 Sentinel 的 dashboard&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211008125726257.png&#34; class=&#34;&#34; title=&#34;image-20211008125726257&#34;&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;那么这个时候我们频繁快速的访问 testA 或者 testB 那么我们再来查看实时监控的时候，就会出现波动，体现此时 Sentinel 正在监控这我们的 8401 这个服务&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211008130011873.png&#34; class=&#34;&#34; title=&#34;image-20211008130011873&#34;&gt;
&lt;h1 id=&#34;sentinel流控规则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel流控规则&#34;&gt;#&lt;/a&gt; Sentinel 流控规则&lt;/h1&gt;
&lt;h2 id=&#34;流控规则基本介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#流控规则基本介绍&#34;&gt;#&lt;/a&gt; 流控规则基本介绍&lt;/h2&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211009142204101.png&#34; class=&#34;&#34; title=&#34;image-20211009142204101&#34;&gt;
&lt;h2 id=&#34;名词解释&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名词解释&#34;&gt;#&lt;/a&gt; 名词解释&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;资源名：唯一名称，默认请求路径&lt;/li&gt;
&lt;li&gt;针对来源：Sentinel 可以针对调用者进行限流，填写微服务名，默认 default（不区分来源）&lt;/li&gt;
&lt;li&gt;阈值类型 / 单机阈值：
&lt;ul&gt;
&lt;li&gt;QPS（每秒钟的请求数量）：当调用该 API 的 QPS 达到阈值的时候，进行限流&lt;/li&gt;
&lt;li&gt;线程数：当调用该 API 的线程数量达到阈值的时候，进行限流&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;是否集群：当前不需要集群&lt;/li&gt;
&lt;li&gt;流控模式：
&lt;ul&gt;
&lt;li&gt;直接：API 达到限流条件时，直接限流&lt;/li&gt;
&lt;li&gt;关联：当关联的资源达到阈值时，就限流自己&lt;/li&gt;
&lt;li&gt;链路：只记录指定链路上的流量（指定资源从入口资源进来的流量，如果达到阈值，就进行限流）(API 级别的针对来源)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;流控效果：
&lt;ul&gt;
&lt;li&gt;快速失败：直接失败，抛异常&lt;/li&gt;
&lt;li&gt;Wam Up：根据 codeFactor（冷加载因子，默认 3）的值，从阈值 /codeFacotor，经过预热时长，才达到设置的 QPS 阈值&lt;/li&gt;
&lt;li&gt;排队等待：匀速排队，让请求以匀速的速度通过，阈值类型必须设置为 QPS，否则无效&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;具体操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#具体操作&#34;&gt;#&lt;/a&gt; 具体操作&lt;/h2&gt;
&lt;h3 id=&#34;新增流控&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#新增流控&#34;&gt;#&lt;/a&gt; 新增流控&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;QPS 直接失败案例&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;添加有两种方式，可以直接在流控规则选项中添加，也可以在簇点链路中添加，一般会采取第二种方式&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211009153205839.png&#34; class=&#34;&#34; title=&#34;image-20211009153205839&#34;&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;现在我们给 &amp;quot;/testA&amp;quot; 添加流控。&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211009153539150.png&#34; class=&#34;&#34; title=&#34;image-20211009153539150&#34;&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;这里的意思就是我们现在单机阈值设定为 1，代表的是当前这个接口只能被 1 秒访问一次，超过这个阈值，就会被 Sentinel 阻塞，现在默认为直接失败，也就是会在前台有一个体现&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211009153829675.png&#34; class=&#34;&#34; title=&#34;image-20211009153829675&#34;&gt;
&lt;p&gt;&lt;strong&gt;线程数直接失败案例&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;刚才我们可以的设置是通过 QPS（每秒钟请求的数量）来设置的限流规则，但是我们这里其实还有一个线程数，是什么意思那？&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211009154620844.png&#34; class=&#34;&#34; title=&#34;image-20211009154620844&#34;&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;QPS 和并发线程数规则详解&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/%E6%9C%AA%E5%91%BD%E5%90%8D%E7%BB%98%E5%9B%BE.drawio.png&#34; class=&#34;&#34; title=&#34;未命名绘图.drawio&#34;&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;那我们要演示这种效果，我们就需要让一个线程再进来办理的时候需要 0.8 秒，但是这个时候后面的线程也在疯狂的访问，所以后面的线程就会不会生效。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;example&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloudalibabasentinel8401&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;controller&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;csp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sentinel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SentinelResource&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;GetMapping&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;RestController&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;util&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;concurrent&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;TimeUnit&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@RestController&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FlowLimitController&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/testA&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;testA&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 暂停 0.8 秒&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token class-name&#34;&gt;TimeUnit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;MILLISECONDS&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;800&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;InterruptedException&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;printStackTrace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;-----testA&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/testB&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;testB&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;-----testB&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;这个时候我们重启项目，然后重新通过访问 testA 接口，通过两个网页（线程）来快速访问，这个时候我们来看效果，这里要注意，要重新添加流控规则。&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211009162325899.png&#34; class=&#34;&#34; title=&#34;image-20211009162325899&#34;&gt;
&lt;p&gt;&lt;strong&gt;注意：这个时候虽然效果一致，但是是两种完全不同的规则，一种是 QPS，一种是并发线程，这点大家一定要分清！&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;流控规则-关联&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#流控规则-关联&#34;&gt;#&lt;/a&gt; 流控规则 - 关联&lt;/h1&gt;
&lt;p&gt;​	首先我们先来回顾一下之前讲过的一些概念&lt;/p&gt;
&lt;h2 id=&#34;名词解释-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名词解释-2&#34;&gt;#&lt;/a&gt; 名词解释&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;资源名：唯一名称，默认请求路径&lt;/li&gt;
&lt;li&gt;针对来源：Sentinel 可以针对调用者进行限流，填写微服务名，默认 default（不区分来源）&lt;/li&gt;
&lt;li&gt;阈值类型 / 单机阈值：
&lt;ul&gt;
&lt;li&gt;QPS（每秒钟的请求数量）：当调用该 API 的 QPS 达到阈值的时候，进行限流&lt;/li&gt;
&lt;li&gt;线程数：当调用该 API 的线程数量达到阈值的时候，进行限流&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;是否集群：当前不需要集群&lt;/li&gt;
&lt;li&gt;流控模式：
&lt;ul&gt;
&lt;li&gt;直接：API 达到限流条件时，直接限流&lt;/li&gt;
&lt;li&gt;关联：当关联的资源达到阈值时，就限流自己&lt;/li&gt;
&lt;li&gt;链路：只记录指定链路上的流量（指定资源从入口资源进来的流量，如果达到阈值，就进行限流）(API 级别的针对来源)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;流控效果：
&lt;ul&gt;
&lt;li&gt;快速失败：直接失败，抛异常&lt;/li&gt;
&lt;li&gt;Wam Up：根据 codeFactor（冷加载因子，默认 3）的值，从阈值 /codeFacotor，经过预热时长，才达到设置的 QPS 阈值&lt;/li&gt;
&lt;li&gt;排队等待：匀速排队，让请求以匀速的速度通过，阈值类型必须设置为 QPS，否则无效&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;关联&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关联&#34;&gt;#&lt;/a&gt; 关联&lt;/h2&gt;
&lt;p&gt;​	官方解释：当关联的资源达到阈值时，就限流自己。&lt;/p&gt;
&lt;p&gt;​	通俗解释来说，比如那我们的程序，现在有&lt;strong&gt; testA&lt;/strong&gt; 接口和&lt;strong&gt; testB&lt;/strong&gt; 接口，当 A 关联的资源 B 达到阈值后，就限流自己，也就是 B 到达阈值，限流 A 本身。就好像我家孩子在外面打架，我来处理一样。换到程序里面来说比如一个电商系统中，支付系统达到阈值，就限流下订单系统。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211101144934374.png&#34; class=&#34;&#34; title=&#34;image-20211101144934374&#34;&gt;
&lt;h2 id=&#34;具体演示&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#具体演示&#34;&gt;#&lt;/a&gt; 具体演示&lt;/h2&gt;
&lt;p&gt;​	当关联资源 **/testB&lt;strong&gt; 的 qps 阈值超时 1 时，就限流&lt;/strong&gt; /testA** 的 Rest 访问地址，当关联资源到阈值后限制配置好的资源名，首先我们先把 FlowLimitController 接口恢复原样&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@RestController&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FlowLimitController&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/testA&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;testA&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;-----testA&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/testB&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;testB&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;-----testB&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	给 testA 添加流控规则&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211101155951868.png&#34; class=&#34;&#34; title=&#34;image-20211101155951868&#34;&gt;
&lt;p&gt;​	为了演示效果，所以这里我们需要借助一个工具 Postman，来模仿并发密集访问 /testB，先来测试访问 testB 接口&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211101163301396.png&#34; class=&#34;&#34; title=&#34;image-20211101163301396&#34;&gt;
&lt;p&gt;​	这个时候我们需要多次密集访问 TestB 接口，所以我们需要添加配置，具体操作如下：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211101164057576.png&#34; class=&#34;&#34; title=&#34;image-20211101164057576&#34;&gt;
&lt;p&gt;把数值修改为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Iterations：为 20&lt;/li&gt;
&lt;li&gt;Delay：300&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;意思就是 20 个线程每间隔 0.3 秒访问一次，然后跑起来&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211101164345389.png&#34; class=&#34;&#34; title=&#34;image-20211101164345389&#34;&gt;
&lt;p&gt;​		这个时候我们来看网页中 testA 接口的效果&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211101164427548.png&#34; class=&#34;&#34; title=&#34;image-20211101164427548&#34;&gt;
&lt;h1 id=&#34;流控规则-链路&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#流控规则-链路&#34;&gt;#&lt;/a&gt; 流控规则 - 链路&lt;/h1&gt;
&lt;h2 id=&#34;名词解释-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名词解释-3&#34;&gt;#&lt;/a&gt; 名词解释&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;资源名：唯一名称，默认请求路径&lt;/li&gt;
&lt;li&gt;针对来源：Sentinel 可以针对调用者进行限流，填写微服务名，默认 default（不区分来源）&lt;/li&gt;
&lt;li&gt;阈值类型 / 单机阈值：
&lt;ul&gt;
&lt;li&gt;QPS（每秒钟的请求数量）：当调用该 API 的 QPS 达到阈值的时候，进行限流&lt;/li&gt;
&lt;li&gt;线程数：当调用该 API 的线程数量达到阈值的时候，进行限流&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;是否集群：当前不需要集群&lt;/li&gt;
&lt;li&gt;流控模式：
&lt;ul&gt;
&lt;li&gt;直接：API 达到限流条件时，直接限流&lt;/li&gt;
&lt;li&gt;关联：当关联的资源达到阈值时，就限流自己&lt;/li&gt;
&lt;li&gt;链路：只记录指定链路上的流量（指定资源从入口资源进来的流量，如果达到阈值，就进行限流）(API 级别的针对来源)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;流控效果：
&lt;ul&gt;
&lt;li&gt;快速失败：直接失败，抛异常&lt;/li&gt;
&lt;li&gt;Wam Up：根据 coldFactor（冷加载因子，默认 3）的值，从阈值 /codeFacotor，经过预热时长，才达到设置的 QPS 阈值&lt;/li&gt;
&lt;li&gt;排队等待：匀速排队，让请求以匀速的速度通过，阈值类型必须设置为 QPS，否则无效&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;链路&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#链路&#34;&gt;#&lt;/a&gt; 链路&lt;/h2&gt;
&lt;p&gt;​	链路流控模式指的是，当从某个接口过来的资源达到限流条件时，开启限流，它的功能有点&lt;strong&gt;类似于针对来源配置项&lt;/strong&gt;，&lt;strong&gt;区别在于：针对来源是针对上级微服务，而链路流控是针对上级接口&lt;/strong&gt;，也就是说&lt;strong&gt;它的粒度更细&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;​	比如在一个微服务中，两个接口都调用了同一个 Service 中的方法，并且&lt;strong&gt;该方法用 SentinelResource（用于定义资源）注解标注&lt;/strong&gt;了，然后对该注解标注的资源（方法）进行配置，则可以选择链路模式。&lt;/p&gt;
&lt;p&gt;​	&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211101190257683.png&#34; class=&#34;&#34; title=&#34;image-20211101190257683&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;具体演示-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#具体演示-2&#34;&gt;#&lt;/a&gt; 具体演示&lt;/h2&gt;
&lt;p&gt;首先我们编写一个 Service&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//service.TestService&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Service&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;TestService&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 定义限流资源&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@SentinelResource&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;common&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;common&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;common&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;然后更改接口调用这个 Service 方法&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@RestController&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FlowLimitController&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Autowired&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;TestService&lt;/span&gt; testService&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/testA&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;testA&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; testService&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;common&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/testB&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;testB&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; testService&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;common&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;接下来配置流控规则：&lt;/p&gt;
&lt;p&gt;这里要注意不要对 /testA 或者 /testB 进行限流规则的配置，要给用 SentinelResource 注解标注的资源进行配置限流规则，这里的意思为当我们用入口资源访问被 SentinelResource 注解标注的资源方法时，当超过阈值就会被限流，但是此时实际效果是没有效果。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211101200050932.png&#34; class=&#34;&#34; title=&#34;image-20211101200050932&#34;&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211101195842516.png&#34; class=&#34;&#34; title=&#34;image-20211101195842516&#34;&gt;
&lt;p&gt;没有效果的原因是因为我们还需要添加配置，让 Sentinel 源码中 CommonFilter 中的 WEB_CONTEXT_UNIFY 参数为 false，将其配置为 false 即可根据不同的 URL 进行链路限流，如果不配置将不会生效。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;spring&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  application&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; cloudalibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;sentinel&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;service&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  cloud&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    nacos&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      discovery&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        server&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;addr&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sentinel&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      transport&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        # 配置&lt;span class=&#34;token class-name&#34;&gt;Sentinel&lt;/span&gt; dashboard地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        dashboard&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8080&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        # 默认&lt;span class=&#34;token number&#34;&gt;8719&lt;/span&gt;端口，键入被占用会自动从&lt;span class=&#34;token number&#34;&gt;8719&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;，直到找到未被占用的端口&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        port&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8719&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      # 配置为&lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      web&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;context&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;unify&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;最后这个时候我们再来频繁的访问 testB 接口，就会出现异常的情况，这也是流量效果快速失败在链路上的体现，是直接抛出异常。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211101202216083.png&#34; class=&#34;&#34; title=&#34;image-20211101202216083&#34;&gt;
&lt;h1 id=&#34;sentinel流控效果-预热&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel流控效果-预热&#34;&gt;#&lt;/a&gt; Sentinel 流控效果 - 预热&lt;/h1&gt;
&lt;h2 id=&#34;名词解释-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名词解释-4&#34;&gt;#&lt;/a&gt; 名词解释&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;资源名：唯一名称，默认请求路径&lt;/li&gt;
&lt;li&gt;针对来源：Sentinel 可以针对调用者进行限流，填写微服务名，默认 default（不区分来源）&lt;/li&gt;
&lt;li&gt;阈值类型 / 单机阈值：
&lt;ul&gt;
&lt;li&gt;QPS（每秒钟的请求数量）：当调用该 API 的 QPS 达到阈值的时候，进行限流&lt;/li&gt;
&lt;li&gt;线程数：当调用该 API 的线程数量达到阈值的时候，进行限流&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;是否集群：当前不需要集群&lt;/li&gt;
&lt;li&gt;流控模式：
&lt;ul&gt;
&lt;li&gt;直接：API 达到限流条件时，直接限流&lt;/li&gt;
&lt;li&gt;关联：当关联的资源达到阈值时，就限流自己&lt;/li&gt;
&lt;li&gt;链路：只记录指定链路上的流量（指定资源从入口资源进来的流量，如果达到阈值，就进行限流）(API 级别的针对来源)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;流控效果：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;快速失败：直接失败，抛异常&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Warm Up：根据 coldFactor（冷加载因子，默认 3）的值，从阈值 /codeFacotor，经过预热时长，才达到设置的 QPS 阈值&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;排队等待：匀速排队，让请求以匀速的速度通过，阈值类型必须设置为 QPS，否则无效&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;预热&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#预热&#34;&gt;#&lt;/a&gt; 预热&lt;/h2&gt;
&lt;p&gt;官网手册地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZW50aW5lbGd1YXJkLmlvL3poLWNuL2RvY3MvZmxvdy1jb250cm9sLmh0bWw=&#34;&gt;https://sentinelguard.io/zh-cn/docs/flow-control.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;概念：Warm Up 方式，即预热 / 冷启动方式。该方式主要用于系统长期处于低水位的情况下，当流量突然增加时，直接把系统拉升到高水位可能瞬间把系统压垮。通过 &amp;quot;冷启动&amp;quot;，让通过的流量缓慢增加，在一定时间内逐渐增加到阈值上限，给冷系统一个预热的时间，避免冷系统被压垮的情况。&lt;/p&gt;
&lt;p&gt;​	预热公式：阈值 /coldFactor（默认值为 3），经过预热时间后才会达到阈值。&lt;/p&gt;
&lt;p&gt;​	冷启动的过程系统允许通过的 QPS 曲线如下图：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211102163029355.png&#34; class=&#34;&#34; title=&#34;image-20211102163029355&#34;&gt;
&lt;p&gt;简单理解：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211102163937106.png&#34; class=&#34;&#34; title=&#34;image-20211102163937106&#34;&gt;
&lt;p&gt;​	使用场景：一般秒杀系统中会有这样的流控设置，为了防止秒杀瞬间造成系统崩溃。&lt;/p&gt;
&lt;h2 id=&#34;案例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例&#34;&gt;#&lt;/a&gt; 案例&lt;/h2&gt;
&lt;p&gt;​	默认 coldFactor 为 3，当发起请求即请求 QPS 从（阈值 / 3）开始，经过多长预热时长才逐步升至设定的 QPS 阈值，当前阈值设置为 10，预热时长设置为 5 秒。&lt;/p&gt;
&lt;p&gt;​	最终的效果，系统初始化时阈值 / 3 约等于 3，即阈值在此时为 3，经过 5 秒后阈值才慢慢升高到 10&lt;/p&gt;
&lt;p&gt;首先我们先来设置流控效果：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211102165915771.png&#34; class=&#34;&#34; title=&#34;image-20211102165915771&#34;&gt;
&lt;p&gt;测试，我们用最简单的方法进行测试，直接在浏览器上手动刷新，然后我们来看 Sentinel 的实时监控&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211102182120756.png&#34; class=&#34;&#34; title=&#34;image-20211102182120756&#34;&gt;
&lt;h1 id=&#34;sentinel流控效果-排队等待&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel流控效果-排队等待&#34;&gt;#&lt;/a&gt; Sentinel 流控效果 - 排队等待&lt;/h1&gt;
&lt;h2 id=&#34;名词解释-5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名词解释-5&#34;&gt;#&lt;/a&gt; 名词解释&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;资源名：唯一名称，默认请求路径&lt;/li&gt;
&lt;li&gt;针对来源：Sentinel 可以针对调用者进行限流，填写微服务名，默认 default（不区分来源）&lt;/li&gt;
&lt;li&gt;阈值类型 / 单机阈值：
&lt;ul&gt;
&lt;li&gt;QPS（每秒钟的请求数量）：当调用该 API 的 QPS 达到阈值的时候，进行限流&lt;/li&gt;
&lt;li&gt;线程数：当调用该 API 的线程数量达到阈值的时候，进行限流&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;是否集群：当前不需要集群&lt;/li&gt;
&lt;li&gt;流控模式：
&lt;ul&gt;
&lt;li&gt;直接：API 达到限流条件时，直接限流&lt;/li&gt;
&lt;li&gt;关联：当关联的资源达到阈值时，就限流自己&lt;/li&gt;
&lt;li&gt;链路：只记录指定链路上的流量（指定资源从入口资源进来的流量，如果达到阈值，就进行限流）(API 级别的针对来源)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;流控效果：&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;快速失败：直接失败，抛异常&lt;/li&gt;
&lt;li&gt;Warm Up：根据 coldFactor（冷加载因子，默认 3）的值，从阈值 /codeFacotor，经过预热时长，才达到设置的 QPS 阈值&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;排队等待（匀速器）：匀速排队，让请求以匀速的速度通过，阈值类型必须设置为 QPS，否则无效&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;排队等待&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#排队等待&#34;&gt;#&lt;/a&gt; 排队等待&lt;/h2&gt;
&lt;p&gt;​	官方文档：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZW50aW5lbGd1YXJkLmlvL3poLWNuL2RvY3MvZmxvdy1jb250cm9sLmh0bWw=&#34;&gt;https://sentinelguard.io/zh-cn/docs/flow-control.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;​	概念：匀速排队方式会严格控制请求通过的间隔时间，也即是让请求以均匀的速度通过，对应的是漏桶算法。&lt;/p&gt;
&lt;p&gt;​	这种方式主要用于处理间隔性突发的流量，例如消息队列。想象一下这样的场景，在某一秒有大量的请求到来，而接下来的几秒则处于空闲状态，我们希望系统能够在接下来的空闲期间逐渐处理这些请求，而不是在第一秒直接拒绝多余的请求（削峰填谷）。&lt;/p&gt;
&lt;p&gt;​	例图：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211102175948987.png&#34; class=&#34;&#34; title=&#34;image-20211102175948987&#34;&gt;
&lt;h3 id=&#34;匀速器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#匀速器&#34;&gt;#&lt;/a&gt; 匀速器&lt;/h3&gt;
&lt;p&gt;​	它的中心思想是，以固定的间隔时间让请求通过。当请求到来的时候，如果当前请求距离上个通过的请求通过的时间间隔不小于预设值，则让当前请求通过。否则，计算当前请求的预期通过时间，如果该请求的预期通过时间小于规则预设的 timeout 时间，则该请求会等待直到预设时间到来通过（排队等待处理）；若预期的通过时间超出最大排队时长，则直接拒接这个请求。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211102182416282.png&#34; class=&#34;&#34; title=&#34;image-20211102182416282&#34;&gt;
&lt;p&gt;​	Sentinel 匀速排队等待策略是漏桶算法结合虚拟队列等待机制实现的。&lt;/p&gt;
&lt;p&gt;​	注意：匀速排队模式暂时不支持 QPS &amp;gt; 1000 的场景。&lt;/p&gt;
&lt;h2 id=&#34;演示&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#演示&#34;&gt;#&lt;/a&gt; 演示&lt;/h2&gt;
&lt;p&gt;流控规则：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211102182826152.png&#34; class=&#34;&#34; title=&#34;image-20211102182826152&#34;&gt;
&lt;p&gt;为了看到效果，我们在代码中进行打印，更改 8401 微服务中的 FlowLimitController&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;example&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloudalibabasentinel8401&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;controller&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;csp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sentinel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SentinelResource&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;example&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloudalibabasentinel8401&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;service&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;TestService&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;lombok&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;extern&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;slf4j&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Slf4j&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;beans&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;factory&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Autowired&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;GetMapping&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;RestController&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;util&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;concurrent&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;TimeUnit&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@RestController&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Slf4j&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FlowLimitController&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Autowired&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;TestService&lt;/span&gt; testService&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/testA&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;testA&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        log&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Thread&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;currentThread&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;：testA&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; testService&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;common&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/testB&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;testB&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; testService&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;common&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;最后我们可以通过 Postman 来进行测试，发送请求时没有延迟，同时发送 10 条请求，然后我们会发现就是排队效果 1 秒执行一个请求，同时我们在 Idea 中也可以看到打桩效果&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211102184705742.png&#34; class=&#34;&#34; title=&#34;image-20211102184705742&#34;&gt;
&lt;h1 id=&#34;sentinel-熔断降级简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel-熔断降级简介&#34;&gt;#&lt;/a&gt; Sentinel 熔断降级简介&lt;/h1&gt;
&lt;h2 id=&#34;基本概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本概念&#34;&gt;#&lt;/a&gt; 基本概念&lt;/h2&gt;
&lt;h3 id=&#34;服务降级&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#服务降级&#34;&gt;#&lt;/a&gt; 服务降级&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;当我们的服务调用者，去调用服务的时候；一定的时间内，如果被调用的没有反应；自己直接返回了；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;服务熔断&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#服务熔断&#34;&gt;#&lt;/a&gt; 服务熔断&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;当我们出发了熔断以后；服务调用者不会去调用服务提供者；&lt;/p&gt;
&lt;p&gt;在一个周期里面所有的请求都不会再去调用了；&lt;/p&gt;
&lt;p&gt;周期以后会重新发送一个请求服务提供者；如果提供者正常响应了，会关闭熔断器；没有，熔断器继续开启；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20220723115405292.png&#34; class=&#34;&#34; title=&#34;image-20220723115405292&#34;&gt;
&lt;h2 id=&#34;基本介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本介绍&#34;&gt;#&lt;/a&gt; 基本介绍&lt;/h2&gt;
&lt;p&gt;​	除了流量控制以外，对调用链路中不稳定的资源进行熔断降级也是保障高可用的重要措施之一。一个服务常常会调用别的模块，可能是另外的一个远程服务、数据库，或者第三方 API 等。例如，支付的时候，可能需要远程调用银联提供的 API；查询某个商品的价格，可能需要进行数据库查询。然而，这个被依赖服务的稳定性是不能保证的。如果依赖的服务出现了不稳定的情况，请求的响应时间变长，那么调用服务的方法的响应时间也会变长，线程会产生堆积，最终可能耗尽业务自身的线程池，服务本身也变得不可用。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/62410811-cd871680-b61d-11e9-9df7-3ee41c618644.png&#34; class=&#34;&#34; title=&#34;chain&#34;&gt;
&lt;p&gt;​	现代微服务架构都是分布式的，由非常多的服务组成。不同服务之间相互调用，组成复杂的调用链路。以上的问题在链路调用中会产生放大的效果。复杂链路上的某一环不稳定，就可能会层层级联，最终导致整个链路都不可用。因此我们需要对不稳定的&lt;strong&gt;弱依赖服务调用&lt;/strong&gt;进行熔断降级，暂时切断不稳定调用，避免局部不稳定因素导致整体的雪崩。熔断降级作为保护自身的手段，通常在客户端（调用端）进行配置。&lt;/p&gt;
&lt;h2 id=&#34;熔断策略&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#熔断策略&#34;&gt;#&lt;/a&gt; 熔断策略&lt;/h2&gt;
&lt;p&gt;​	Sentinel 提供了一下几种熔断策略：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;慢调用比例 ( &lt;code&gt;SLOW_REQUEST_RATIO&lt;/code&gt; )：选择以慢调用比例作为阈值，需要设置允许的慢调用 RT（即最大的响应时间），请求的响应时间大于该值则统计为慢调用。当单位统计时长（ &lt;code&gt;statIntervalMs&lt;/code&gt; ）内请求数目大于设置的最小请求数目，并且慢调用的比例大于阈值，则接下来的熔断时长内请求会自动被熔断。经过熔断时长后熔断器会进入探测恢复状态（HALF-OPEN 状态），若接下来的一个请求响应时间小于设置的慢调用 RT 则结束熔断，若大于设置的慢调用 RT 则会再次被熔断。&lt;/li&gt;
&lt;li&gt;异常比例 ( &lt;code&gt;ERROR_RATIO&lt;/code&gt; )：当单位统计时长（ &lt;code&gt;statIntervalMs&lt;/code&gt; ）内请求数目大于设置的最小请求数目，并且异常的比例大于阈值，则接下来的熔断时长内请求会自动被熔断。经过熔断时长后熔断器会进入探测恢复状态（HALF-OPEN 状态），若接下来的一个请求成功完成（没有错误）则结束熔断，否则会再次被熔断。异常比率的阈值范围是  &lt;code&gt;[0.0, 1.0]&lt;/code&gt; ，代表 0% - 100%。&lt;/li&gt;
&lt;li&gt;异常数 ( &lt;code&gt;ERROR_COUNT&lt;/code&gt; )：当单位统计时长内的异常数目超过阈值之后会自动进行熔断。经过熔断时长后熔断器会进入探测恢复状态（HALF-OPEN 状态），若接下来的一个请求成功完成（没有错误）则结束熔断，否则会再次被熔断。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;比例阈值&lt;/strong&gt;：$$\frac {单位时间内慢调用的个数}{单位时间内所有请求书}$$&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211103172422267.png&#34; class=&#34;&#34; title=&#34;image-20211103172422267&#34;&gt;
&lt;p&gt;Sentinel 在 1.8.0 版本对熔断降级做了大的调整，可以定义任意时长的熔断时间，引入了半开启恢复支持。下面梳理下相关特性。&lt;/p&gt;
&lt;p&gt;熔断状态有三种状态，非别为 OPEN、HALF_OPEN、CLOSED&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;状态&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;OPEN&lt;/td&gt;
&lt;td&gt;表示熔断开启，拒绝所有请求&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HALF_OPEN&lt;/td&gt;
&lt;td&gt;探测恢复状态，如果接下来的一个请求顺利通过则表示结束熔断，否则继续熔断&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CLOSE&lt;/td&gt;
&lt;td&gt;表示熔断关闭，请求顺利通过&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;熔断规则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#熔断规则&#34;&gt;#&lt;/a&gt; 熔断规则&lt;/h2&gt;
&lt;p&gt;熔断降级规则包含下面几个重要的属性：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;默认值&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;resource&lt;/td&gt;
&lt;td&gt;资源名，即规则的作用对象&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;grade&lt;/td&gt;
&lt;td&gt;熔断策略，支持慢调用比例 / 异常比例 / 异常数策略&lt;/td&gt;
&lt;td&gt;慢调用比例&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;count&lt;/td&gt;
&lt;td&gt;慢调用比例模式下为慢调用临界 RT（超出该值计为慢调用）；异常比例 / 异常数模式下为对应的阈值&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;timeWindow&lt;/td&gt;
&lt;td&gt;熔断时长，单位为 s&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;minRequestAmount&lt;/td&gt;
&lt;td&gt;熔断触发的最小请求数，请求数小于该值时即使异常比率超出阈值也不会熔断（1.7.0 引入）&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;statIntervalMs&lt;/td&gt;
&lt;td&gt;统计时长（单位为 ms），如 60*1000 代表分钟级（1.8.0 引入）&lt;/td&gt;
&lt;td&gt;1000 ms&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;slowRatioThreshold&lt;/td&gt;
&lt;td&gt;慢调用比例阈值，仅慢调用比例模式有效（1.8.0 引入）&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;官方文档网址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZW50aW5lbGd1YXJkLmlvL3poLWNuL2RvY3MvY2lyY3VpdC1icmVha2luZy5odG1s&#34;&gt;https://sentinelguard.io/zh-cn/docs/circuit-breaking.html&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;sentinel熔断策略-慢调用比例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel熔断策略-慢调用比例&#34;&gt;#&lt;/a&gt; Sentinel 熔断策略 - 慢调用比例&lt;/h1&gt;
&lt;h2 id=&#34;慢调用比例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#慢调用比例&#34;&gt;#&lt;/a&gt; 慢调用比例&lt;/h2&gt;
&lt;p&gt;​	概念：选择以慢调用比例作为阈值，需要设置允许的慢调用 RT（即最大的响应时间），请求的响应时间大于该值则统计为慢调用。当单位统计时长（ &lt;code&gt;statIntervalMs&lt;/code&gt; ）内请求数目大于设置的最小请求数目，并且慢调用的比例大于阈值，则接下来的熔断时长内请求会自动被熔断。经过熔断时长后熔断器会进入探测恢复状态（HALF-OPEN 状态），若接下来的一个请求响应时间小于设置的慢调用 RT 则结束熔断，若大于设置的慢调用 RT 则会再次被熔断。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211103175357455.png&#34; class=&#34;&#34; title=&#34;image-20211103175357455&#34;&gt;
&lt;p&gt;​	简单理解：&lt;/p&gt;
&lt;img data-src=&#34;../../../../../../../../_各大机构/马士兵/39_spring cloud/aibaba/3_章节24-45笔记/img/image-20211103194830095.png&#34; alt=&#34;image-20211103194830095&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;p&gt;举例：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211103182809594.png&#34; class=&#34;&#34; title=&#34;image-20211103182809594&#34;&gt;
&lt;h2 id=&#34;案例演示&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例演示&#34;&gt;#&lt;/a&gt; 案例演示&lt;/h2&gt;
&lt;p&gt;首先我们先添加一个控制器方法：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/testC&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;testC&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;TimeUnit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;SECONDS&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;InterruptedException&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;printStackTrace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;----testC&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;设置熔断策略，1QPS&amp;gt;5 并且这些请求的 RT&amp;gt;300 并且大于比例阈值触发熔断&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211103193843437.png&#34; class=&#34;&#34; title=&#34;image-20211103193843437&#34;&gt;
&lt;h2 id=&#34;测试-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试-2&#34;&gt;#&lt;/a&gt; 测试&lt;/h2&gt;
&lt;p&gt;通过 JMeter 测试，1 秒钟发起 10 个线程请求 /testC，此时就会触发熔断效果，停止测试以后，10 秒钟以后恢复正常&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211103200622564.png&#34; class=&#34;&#34; title=&#34;image-20211103200622564&#34;&gt;
&lt;h1 id=&#34;sentinel熔断策略-异常比例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel熔断策略-异常比例&#34;&gt;#&lt;/a&gt; Sentinel 熔断策略 - 异常比例&lt;/h1&gt;
&lt;h2 id=&#34;异常比例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#异常比例&#34;&gt;#&lt;/a&gt; 异常比例&lt;/h2&gt;
&lt;p&gt;​	概念：异常比例 ( &lt;code&gt;ERROR_RATIO&lt;/code&gt; )：当单位统计时长（ &lt;code&gt;statIntervalMs&lt;/code&gt; ）内请求数目大于设置的最小请求数目，并且异常的比例大于阈值，则接下来的熔断时长内请求会自动被熔断。经过熔断时长后熔断器会进入探测恢复状态（HALF-OPEN 状态），若接下来的一个请求成功完成（没有错误）则结束熔断，否则会再次被熔断。异常比率的阈值范围是  &lt;code&gt;[0.0, 1.0]&lt;/code&gt; ，代表 0% - 100%。&lt;/p&gt;
&lt;p&gt;​	注意：异常降级&lt;strong&gt;仅针对业务异常&lt;/strong&gt;，对 Sentinel 限流降级本身的异常（ &lt;code&gt;BlockException&lt;/code&gt; ）不生效。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211104143705448.png&#34; class=&#34;&#34; title=&#34;image-20211104143705448&#34;&gt;
&lt;p&gt;简单理解：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211104150725704.png&#34; class=&#34;&#34; title=&#34;image-20211104150725704&#34;&gt;
&lt;h2 id=&#34;案例-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例-2&#34;&gt;#&lt;/a&gt; 案例&lt;/h2&gt;
&lt;p&gt;编写测试接口&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/testD&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;testD&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Integer&lt;/span&gt; id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; id &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RuntimeException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;异常比例测试&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;------------testD&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;设置熔断策略异常比例&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211104202552823.png&#34; class=&#34;&#34; title=&#34;image-20211104202552823&#34;&gt;
&lt;h2 id=&#34;测试-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试-3&#34;&gt;#&lt;/a&gt; 测试&lt;/h2&gt;
&lt;p&gt;我们通过 JMeter 来测试，设定 HTTP 请求地址&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211104154856685.png&#34; class=&#34;&#34; title=&#34;image-20211104154856685&#34;&gt;
&lt;p&gt;1 秒钟发送 10 个请求&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211104154931689.png&#34; class=&#34;&#34; title=&#34;image-20211104154931689&#34;&gt;
&lt;p&gt;当启动 JMeter 的时候，就会触发熔断，因为此时我们 1 秒钟发送 10 个请求超过了最小请求数 5，同时超过了阈值，满足了两个条件，当熔断时长过后就会恢复正常。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211104155351048.png&#34; class=&#34;&#34; title=&#34;image-20211104155351048&#34;&gt;
&lt;h1 id=&#34;sentinel熔断策略-异常数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel熔断策略-异常数&#34;&gt;#&lt;/a&gt; Sentinel 熔断策略 - 异常数&lt;/h1&gt;
&lt;h2 id=&#34;异常数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#异常数&#34;&gt;#&lt;/a&gt; 异常数&lt;/h2&gt;
&lt;p&gt;​	概念：异常数 ( &lt;code&gt;ERROR_COUNT&lt;/code&gt; )：当单位统计时长内的异常数目超过阈值之后会自动进行熔断。经过熔断时长后熔断器会进入探测恢复状态（HALF-OPEN 状态），若接下来的一个请求成功完成（没有错误）则结束熔断，否则会再次被熔断。&lt;/p&gt;
&lt;p&gt;​	注意：异常降级&lt;strong&gt;仅针对业务异常&lt;/strong&gt;，对 Sentinel 限流降级本身的异常（ &lt;code&gt;BlockException&lt;/code&gt; ）不生效。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211104160536648.png&#34; class=&#34;&#34; title=&#34;image-20211104160536648&#34;&gt;
&lt;p&gt;简单理解：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211104162446764.png&#34; class=&#34;&#34; title=&#34;image-20211104162446764&#34;&gt;
&lt;h2 id=&#34;案例演示-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例演示-2&#34;&gt;#&lt;/a&gt; 案例演示&lt;/h2&gt;
&lt;p&gt;编写接口&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/testE&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;testE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Integer&lt;/span&gt; id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;null&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; id &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RuntimeException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;异常数测试&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;------------testE&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;设置异常数策略，当 1 秒钟内请求超过 5 并且异常数大约 5 个的时候触发熔断&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211104162844045.png&#34; class=&#34;&#34; title=&#34;image-20211104162844045&#34;&gt;
&lt;h2 id=&#34;测试-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试-4&#34;&gt;#&lt;/a&gt; 测试&lt;/h2&gt;
&lt;p&gt;通过 JMeter 来测试&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211104163014944.png&#34; class=&#34;&#34; title=&#34;image-20211104163014944&#34;&gt;
&lt;p&gt;1 秒钟发送 10 个请求&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211104163107494.png&#34; class=&#34;&#34; title=&#34;image-20211104163107494&#34;&gt;
&lt;p&gt;此时就会触发熔断&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211104163209702.png&#34; class=&#34;&#34; title=&#34;image-20211104163209702&#34;&gt;
&lt;h1 id=&#34;sentinel-热点规则上&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel-热点规则上&#34;&gt;#&lt;/a&gt; Sentinel 热点规则（上）&lt;/h1&gt;
&lt;h2 id=&#34;概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概念&#34;&gt;#&lt;/a&gt; 概念&lt;/h2&gt;
&lt;p&gt;何为热点？热点即经常访问的数据。很多时候我们希望统计某个热点数据中访问频次最高的 Top K 数据，并对其访问进行限制。比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;商品 ID 为参数，统计一段时间内最常购买的商品 ID 并进行限制&lt;/li&gt;
&lt;li&gt;用户 ID 为参数，针对一段时间内频繁访问的用户 ID 进行限制&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;热点参数限流会统计传入参数中的热点参数，并根据配置的限流阈值与模式，对包含热点参数的资源调用进行限流。热点参数限流可以看做是一种特殊的流量控制，仅对包含热点参数的资源调用生效&lt;/p&gt;
&lt;p&gt;官网：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZW50aW5lbGd1YXJkLmlvL3poLWNuL2RvY3MvcGFyYW1ldGVyLWZsb3ctY29udHJvbC5odG1s&#34;&gt;https://sentinelguard.io/zh-cn/docs/parameter-flow-control.html&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/sentinel-hot-param-overview-1.png&#34; class=&#34;&#34; title=&#34;sentinel-hot-param-overview-1&#34;&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211104175442912.png&#34; class=&#34;&#34; title=&#34;image-20211104175442912&#34;&gt;
&lt;p&gt;这里还有相对应的高级选项，我们这里先了解基本规则。&lt;/p&gt;
&lt;h2 id=&#34;使用sentinelresource注解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用sentinelresource注解&#34;&gt;#&lt;/a&gt; 使用 @SentinelResource 注解&lt;/h2&gt;
&lt;p&gt;其实这个热点限流其实就是更加细粒度的流控规则，那么如果想使用它就必须要配合对应 SentinelResource 注解。&lt;/p&gt;
&lt;p&gt;Sentinel 提供了 @SentinelResource 注解用于定义资源，它有很多的参数，我们这里主要关注两个参数：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;value：代表资源名称，必需项，因为需要通过 resource name 找到对应的规则，这个是必须配置的&lt;/li&gt;
&lt;li&gt;blockHandler：blockHandler 对应处理 BlockException 的方法名称，可选项，访问范围需要是 public，返回类型需要与原方法相匹配，参数类型需要和原方法相匹配并且最后加一个额外的参数，类型为 BlockException。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;案例讲解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例讲解&#34;&gt;#&lt;/a&gt; 案例讲解&lt;/h2&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211104185357465.png&#34; class=&#34;&#34; title=&#34;image-20211104185357465&#34;&gt;
&lt;h3 id=&#34;sentinelresourcevaluexxx&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinelresourcevaluexxx&#34;&gt;#&lt;/a&gt; @SentinelResource(value=&amp;quot;xxx&amp;quot;)&lt;/h3&gt;
&lt;p&gt;那现在我们要完成以上图中的效果，这个时候我们首先要编写代码，在 FlowLimitController 中编写代码&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/testHotKey&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@SentinelResource&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;testHotKey&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;testHotKey&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@RequestParam&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;hot1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;required &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; hot1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                         &lt;span class=&#34;token annotation punctuation&#34;&gt;@RequestParam&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;hot2&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;required &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; hot2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                         &lt;span class=&#34;token annotation punctuation&#34;&gt;@RequestParam&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;hot13&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;required &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; hot3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;----testHotKey&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;然后再来配置热点规则&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211104185609520.png&#34; class=&#34;&#34; title=&#34;image-20211104185609520&#34;&gt;
&lt;p&gt;这里要说明一下，参数索引 0 实际上代表的就是我们设置的 hot1 参数&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211104190217984.png&#34; class=&#34;&#34; title=&#34;image-20211104190217984&#34;&gt;
&lt;p&gt;测试，此时如果我们传入参数 hot1，并且超过阈值，就会出现限流，但是此时的限流效果为报错，显示不友好&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211104192341003.png&#34; class=&#34;&#34; title=&#34;image-20211104192341003&#34;&gt;
&lt;h3 id=&#34;sentinelresourcevaluexxxblockhandlerxxx&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinelresourcevaluexxxblockhandlerxxx&#34;&gt;#&lt;/a&gt; @SentinelResource(value=&amp;quot;xxx&amp;quot;,blockHandler=&amp;quot;xxx&amp;quot;)&lt;/h3&gt;
&lt;p&gt;刚才的演示中，我们明显发现这种限流方法的提示效果非常不友好，所以如果我们需要能够得到友好的提示，我们就需要使用 @SentinelResource 注解提供的另外一个参数 blockHandler，这个参数是可以指定当出现异常时的处理方法，具体操作如下：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/testHotKey&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@SentinelResource&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;testHotKey&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;blockHandler &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;handler_HotKey&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;testHotKey&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@RequestParam&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;hot1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;required &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; hot1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                         &lt;span class=&#34;token annotation punctuation&#34;&gt;@RequestParam&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;hot2&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;required &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; hot2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                         &lt;span class=&#34;token annotation punctuation&#34;&gt;@RequestParam&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;hot13&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;required &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; hot3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;----testHotKey&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 处理异常方法，方法签名要和对应的接口方法保持一致&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;handler_HotKey&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; hot1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; hot2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; hot3&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;BlockException&lt;/span&gt; exception&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;系统繁忙稍后重试。。&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;然后热点规则不变，我们最终的到的限流效果如下：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211104195122220.png&#34; class=&#34;&#34; title=&#34;image-20211104195122220&#34;&gt;
&lt;h1 id=&#34;sentinel-热点规则下&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel-热点规则下&#34;&gt;#&lt;/a&gt; Sentinel 热点规则（下）&lt;/h1&gt;
&lt;h2 id=&#34;概念-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概念-2&#34;&gt;#&lt;/a&gt; 概念&lt;/h2&gt;
&lt;p&gt;何为热点？热点即经常访问的数据。很多时候我们希望统计某个热点数据中访问频次最高的 Top K 数据，并对其访问进行限制。比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;商品 ID 为参数，统计一段时间内最常购买的商品 ID 并进行限制&lt;/li&gt;
&lt;li&gt;用户 ID 为参数，针对一段时间内频繁访问的用户 ID 进行限制&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;热点参数限流会统计传入参数中的热点参数，并根据配置的限流阈值与模式，对包含热点参数的资源调用进行限流。热点参数限流可以看做是一种特殊的流量控制，仅对包含热点参数的资源调用生效&lt;/p&gt;
&lt;p&gt;官网：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZW50aW5lbGd1YXJkLmlvL3poLWNuL2RvY3MvcGFyYW1ldGVyLWZsb3ctY29udHJvbC5odG1s&#34;&gt;https://sentinelguard.io/zh-cn/docs/parameter-flow-control.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;![sentinel-hot-param-overview-1](../../../../../../../../_各大机构 / 马士兵 / 39_spring cloud/aibaba/3_章节 24-45 笔记 /sentinel-hot-param-overview-1.png)&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211105144025601.png&#34; class=&#34;&#34; title=&#34;image-20211105144025601&#34;&gt;
&lt;h2 id=&#34;参数例外项&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参数例外项&#34;&gt;#&lt;/a&gt; 参数例外项&lt;/h2&gt;
&lt;p&gt;​	其实参数例外项就是可以达到更加细粒度的控制，比如我们当前的例子中，目前 hot1 参数在访问时超过阈值就会被限流，但是我们可以通过参数例外项设置 hot1 具体等于特殊的某个值的时候，触发不同的限流效果。假如 hot1 的值等于 5 时，它的阈值可以达到 200。&lt;/p&gt;
&lt;p&gt;​	** 注意：** 参数例外项中的参数类型仅支持一下 7 种数据类型&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211105144912213.png&#34; class=&#34;&#34; title=&#34;image-20211105144912213&#34;&gt;
&lt;h2 id=&#34;案例演示-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例演示-3&#34;&gt;#&lt;/a&gt; 案例演示&lt;/h2&gt;
&lt;p&gt;当前我们需要让 hot1 的值为 5 的时候阈值可以达到 200，首先 Sentinel 页面中修改对应热点规则（在这之前，先演示传递一个参数，否则配置失败）&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211105145445284.png&#34; class=&#34;&#34; title=&#34;image-20211105145445284&#34;&gt;
&lt;p&gt;此时的规则为：如果当前 hot1 值为除 5 以外的其他值，都会走普通的阈值规则，但是如果一旦 hot1 的值为 5 的时候，将会走参数例外项，此时的阈值为 200，我们通过浏览器测试，当 hot1 的值等于 5 是只要阈值不超过 200 就不会出现限流。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211105154930110.png&#34; class=&#34;&#34; title=&#34;image-20211105154930110&#34;&gt;
&lt;p&gt;​	注意：题我们到现在代码中使用了 @SentinelResource 注解，此注解处理的是&lt;strong&gt; Sentinel 控制台配置的异常&lt;/strong&gt;，通过 blockHandler 属性设置对应方法来处理和程序本身异常无关。&lt;/p&gt;
&lt;p&gt;​	所以以下程序中如果 hot1 的值等于 6 还是会出现 RuntimeException。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@SentinelResource(value = &amp;quot;testHotKey&amp;quot;,blockHandler = &amp;quot;handler_HotKey&amp;quot;)
public String testHotKey(@RequestParam(value = &amp;quot;hot1&amp;quot;,required = false) String hot1,
                         @RequestParam(value = &amp;quot;hot2&amp;quot;,required = false) String hot2,
                         @RequestParam(value = &amp;quot;hot3&amp;quot;,required = false) String hot3)&amp;#123;
    if(&amp;quot;6&amp;quot;.equals(hot1))&amp;#123;
        throw new RuntimeException(&amp;quot;运行时异常&amp;quot;);
    &amp;#125;
    return &amp;quot;-----testHotKey&amp;quot;;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;sentinel-系统规则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel-系统规则&#34;&gt;#&lt;/a&gt; Sentinel 系统规则&lt;/h1&gt;
&lt;p&gt;​	Sentinel 系统自适应限流从整体维度对应用入口流量进行控制，结合应用的 Load、CPU 使用率、总体平均 RT、入口 QPS 和并发线程数等几个维度的监控指标，通过自适应的流控策略，让系统的入口流量和系统的负载达到一个平衡，让系统尽可能跑在最大吞吐量的同时保证系统整体的稳定性。&lt;/p&gt;
&lt;h2 id=&#34;系统规则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#系统规则&#34;&gt;#&lt;/a&gt; 系统规则&lt;/h2&gt;
&lt;p&gt;​	系统保护规则是从应用级别 的入口流量进行控制，从单台机器的 load、CPU 使用率、平均 RT、入口 QPS 和并发线程数等几个维度监控应用指标，让系统尽可能跑在最大吞吐量的同时保证系统整体的稳定性。&lt;/p&gt;
&lt;p&gt;​	系统保护规则是应用整体维度的，而不是资源维度的，并且&lt;strong&gt;仅对入口流量生效&lt;/strong&gt;。入口流量指的是进入应用的流量，比如 Web 服务或 Dubbo 服务端接收的请求，都属于入口流量。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211108170904455.png&#34; class=&#34;&#34; title=&#34;image-20211108170904455&#34;&gt;
&lt;p&gt;&lt;strong&gt;系统规则支持一下的模式：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Load 自适应&lt;/strong&gt;（仅对 Linux/Unix-like 机器生效）：系统的 load1（1 分钟平均负载） 作为启发指标，进行自适应系统保护。当系统 load1（1 分钟平均负载） 超过设定的启发值（阈值），且系统当前的并发线程数超过估算的系统容量时才会触发系统保护（BBR 阶段）。系统容量由系统的  &lt;code&gt;maxQps(秒级统计的最大QPS) * minRt(秒级统计的最小响应时间)&lt;/code&gt;  估算得出。设定参考值一般是  &lt;code&gt;CPU cores * 2.5&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CPU usage&lt;/strong&gt;（1.5.0+ 版本）：当系统 CPU 使用率超过阈值即触发系统保护（取值范围 0.0-1.0），比较灵敏。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;平均 RT&lt;/strong&gt;：当单台机器上所有入口流量的平均 RT 达到阈值即触发系统保护，单位是毫秒。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;并发线程数&lt;/strong&gt;：当单台机器上所有入口流量的并发线程数达到阈值即触发系统保护。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;入口 QPS&lt;/strong&gt;：当单台机器上所有入口流量的 QPS 达到阈值即触发系统保护。&lt;/li&gt;
&lt;/ul&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211108162812623.png&#34; class=&#34;&#34; title=&#34;image-20211108162812623&#34;&gt;
&lt;h2 id=&#34;案例演示-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例演示-4&#34;&gt;#&lt;/a&gt; 案例演示&lt;/h2&gt;
&lt;p&gt;这里我们只通过入口 QPS 来进行测试，直接设置规则&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211108173108215.png&#34; class=&#34;&#34; title=&#34;image-20211108173108215&#34;&gt;
&lt;p&gt;最后测试效果不管现在我们访问那个接口只要超过阈值就会被限流&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211108173202180.png&#34; class=&#34;&#34; title=&#34;image-20211108173202180&#34;&gt;
&lt;h1 id=&#34;sentinelresource-自定义限流逻辑处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinelresource-自定义限流逻辑处理&#34;&gt;#&lt;/a&gt; @SentinelResource 自定义限流逻辑处理&lt;/h1&gt;
&lt;p&gt;​	Sentinel 提供了 @SentinelResource 注解用于定义资源，并提供了 AspectJ 的扩展用于自定义资源，处理 BlockException 等。&lt;/p&gt;
&lt;h2 id=&#34;案例复习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例复习&#34;&gt;#&lt;/a&gt; 案例复习&lt;/h2&gt;
&lt;p&gt;之前我们用过这个注解，同时了解了它的两个属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;value：资源名称，必须项（唯一，不能为空）&lt;/li&gt;
&lt;li&gt;blockHandler：对应处理 BlockException 的函数名称可选项.blockHandler 函数访问需要 public, 返回类型需要与原方法相匹配，参数类型需要和原方法相匹配并且最后加一个额外的参数，类型为 BlockException.blockHandler 函数默认需要和原方法在同一个类中&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们之前利用这个注解完成了热点规则的学习，同时做了一个案例，我们简单复习一下，这个案例的核心思想就是我们传递一个指定参数，然后通过注解 @SentinelResource 注解标注资源进行限流，当出现限流以后，通过 blockHandler 属性设置限流以后的解决方法。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211104185357465.png&#34; class=&#34;&#34; title=&#34;image-20211104185357465&#34;&gt;
&lt;p&gt;其实这个注解不仅仅可以用到热点规则上，还可以用到流控上，我们可以做一个资源的流控和一个请求的流控，通过此注解来解决限流之后问题。&lt;/p&gt;
&lt;h2 id=&#34;sentinelresource-资源限流&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinelresource-资源限流&#34;&gt;#&lt;/a&gt; @SentinelResource 资源限流&lt;/h2&gt;
&lt;p&gt;** 核心点：** 使用 @SentinelResource 注解的 blockHandler 属性，定义出现限流效果时的解决方法。&lt;/p&gt;
&lt;p&gt;编写一个新的控制器类型 SentinelResourceTestController，使用 @SentinelResource 注解同时使用 blockHandler 属性&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/byResource&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@SentinelResource&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;byResource&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;blockHandler &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;handler_resource&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;byResource&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;-----byResource&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;handler_resource&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;BlockException&lt;/span&gt; exception&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;系统繁忙&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这里要注意一定要给 byResource 资源添加流控&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211108195609306.png&#34; class=&#34;&#34; title=&#34;image-20211108195609306&#34;&gt;
&lt;p&gt;具体规则&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211108195638721.png&#34; class=&#34;&#34; title=&#34;image-20211108195638721&#34;&gt;
&lt;p&gt;测试，测试我们去快速访问 http://localhost:8401/byResource，就会出现我们使用 @SentinelResource 注解中 blockHandler 属性提供的解决限流异常的方法。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211108195926004.png&#34; class=&#34;&#34; title=&#34;image-20211108195926004&#34;&gt;
&lt;h2 id=&#34;sentinelresource-url限流&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinelresource-url限流&#34;&gt;#&lt;/a&gt; @SentinelResource URL 限流&lt;/h2&gt;
&lt;p&gt;** 核心点：** 使用 @SentinelResource 注解，但是不使用 blockHandler 属性，系统会调用默认限流异常处理方法。&lt;/p&gt;
&lt;p&gt;其实这个注解，我们还可以更换请求地址为资源，比如我们在新建一个测试接口方法&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/byRest&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@SentinelResource&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;byRest&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;byRest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;-----byRest&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;给这个接口地址添加流控&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211108200724588.png&#34; class=&#34;&#34; title=&#34;image-20211108200724588&#34;&gt;
&lt;p&gt;此时如果没有自己定义限流处理方法，会走系统默认的&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211108200750521.png&#34; class=&#34;&#34; title=&#34;image-20211108200750521&#34;&gt;
&lt;h2 id=&#34;结论&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#结论&#34;&gt;#&lt;/a&gt; 结论&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;@SentinelResource 既可以配置资源名称也可以配置 URL&lt;/li&gt;
&lt;li&gt;如果配置了 @SentinelResource 的 blockHandler 属性对应方法，出现限流会调用对应方法&lt;/li&gt;
&lt;li&gt;如果没有配置 @SentinelResource 的 blockHandler 属性，系统会走默认的限流处理。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;自定义限流处理逻辑&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#自定义限流处理逻辑&#34;&gt;#&lt;/a&gt; 自定义限流处理逻辑&lt;/h2&gt;
&lt;p&gt;其实我们在使用 @SentinelResource 注解这两种方案的时候，会出现一些问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;没有体现我们自己的业务要求。&lt;/li&gt;
&lt;li&gt;自定义处理方法和业务代码耦合在一起。&lt;/li&gt;
&lt;li&gt;每个业务方法都添加一个限流处理方法，代码将会加剧膨胀。&lt;/li&gt;
&lt;li&gt;无法实现统一全局处理。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;解决：@&lt;strong&gt;SentinelResource&lt;/strong&gt; 除了&lt;strong&gt; blockHandler&lt;/strong&gt; 可以设置自定义限流处理逻辑方法以外，还提供另外一个属性来设置限流处理逻辑类型&lt;strong&gt; blockHandlerClass&lt;/strong&gt; 属性，此属性中设置的方法必需为 static 函数，否则无法解析。&lt;/p&gt;
&lt;h3 id=&#34;具体逻辑&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#具体逻辑&#34;&gt;#&lt;/a&gt; 具体逻辑&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;第一步&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;创建 CustomerBlockHandler 类型用于处理自定义限流处理逻辑，首先创建 myhandler.CustomerBlockHandler&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; * 此类型用来处理限流自定义逻辑&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CustomerBlockHandler&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;handlerException1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;BlockException&lt;/span&gt; exception&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;handlerException1：系统异常，请稍后重试！&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;handlerException2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;BlockException&lt;/span&gt; exception&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;handlerException2：网络崩溃了，请稍后重试！&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;第二步&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们在 SentinelResourceTestController 类型中添加一个接口方法，同时设置 @SentinelResource 注解和 blockHandlerClass 属性对应的类型和这个类型中对应的处理方法&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;* 此方法用到了自定义限流处理类型 CustomerBlockHandler&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;* 中的 handlerException1 方法来处理限流逻辑。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;*/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/bycustomer&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@SentinelResource&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;bycustomer&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                  blockHandlerClass &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CustomerBlockHandler&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                  blockHandler &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;handlerException1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;bycustomer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;-----bycustomer&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;第三步&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;测试：给 bycustomer 资源添加限流规则，然后来测试在超过限流阈值时处理方法是否为 CustomerBlockHandler 中 handlerException1 来进行处理。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211108205553306.png&#34; class=&#34;&#34; title=&#34;image-20211108205553306&#34;&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211108205606689.png&#34; class=&#34;&#34; title=&#34;image-20211108205606689&#34;&gt;
&lt;p&gt;添加流控规则以后，我们再来频繁访问 http://localhost:8401/bycustomer，就会看见是 CustomerBlockHandler 类型的 handlerException1 方法来处理自定义限流逻辑&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211108205735265.png&#34; class=&#34;&#34; title=&#34;image-20211108205735265&#34;&gt;
&lt;h3 id=&#34;对应关系图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#对应关系图&#34;&gt;#&lt;/a&gt; 对应关系图&lt;/h3&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211108210142209.png&#34; class=&#34;&#34; title=&#34;image-20211108210142209&#34;&gt;
&lt;h1 id=&#34;sentinel服务熔断环境搭建&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel服务熔断环境搭建&#34;&gt;#&lt;/a&gt; Sentinel 服务熔断环境搭建&lt;/h1&gt;
&lt;p&gt;服务熔断：应对微服务雪崩效应的一种链路保护机制，类似保险丝。&lt;/p&gt;
&lt;p&gt;需要完成 Sentinel 整合 Ribbon+openFeign，所以我们先要搭建环境，那么先从整合 Ribbon 开始&lt;/p&gt;
&lt;h2 id=&#34;环境搭建&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#环境搭建&#34;&gt;#&lt;/a&gt; 环境搭建&lt;/h2&gt;
&lt;p&gt;为了演示操作，所以在这里我们需要利用 Ribbon 进行负载均衡的调用，所以我们需要创建一个服务消费者 cloudalibaba-consumer8084 和两个服务提供者 cloudalibaba-provider9003 和 cloudalibaba-provider9004，以下是结构图&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211109170609356.png&#34; class=&#34;&#34; title=&#34;image-20211109170609356&#34;&gt;
&lt;p&gt;其实我们之前就搭建过这种结构，比较简单，所以我们快速搭建&lt;/p&gt;
&lt;h3 id=&#34;新建cloudalibaba-provider-90039004&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#新建cloudalibaba-provider-90039004&#34;&gt;#&lt;/a&gt; 新建 cloudalibaba-provider-9003/9004&lt;/h3&gt;
&lt;p&gt;在建立 9003 和 9004 之前，先建立一个共享项目 cloudalibaba-commons，在其中新建一个类型 JsonResult，这个类型用于返回 JSON 数据类型&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;lombok&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;AllArgsConstructor&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;lombok&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Data&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;lombok&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;NoArgsConstructor&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Data&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@AllArgsConstructor&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@NoArgsConstructor&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Integer&lt;/span&gt; code&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;T&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;创建服务提供者 9003，9004 基本上是一样的，所以我们建立 9003 复制就可以得到 9004&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;pom&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;xml version&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;1.0&#34;&lt;/span&gt; encoding&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;UTF-8&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;project xmlns&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://maven.apache.org/POM/4.0.0&#34;&lt;/span&gt; xmlns&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;xsi&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://www.w3.org/2001/XMLSchema-instance&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         xsi&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;schemaLocation&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;modelVersion&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;modelVersion&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;parent&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SpringAlibabaMSB&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;SNAPSHOT&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;version&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;relativePath&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; lookup parent from repository &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;parent&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;cloudalibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;provider&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;9003&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;SNAPSHOT&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;version&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;cloudalibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;provider&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;9003&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;name&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;description&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;cloudalibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;provider&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;9003&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;description&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;properties&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1.8&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;version&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;properties&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependencies&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;starter&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;starter&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;test&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;scope&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;test&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;scope&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;starter&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;alibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;discovery&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;cloudalibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;commons&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;SNAPSHOT&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;version&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependencies&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;build&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;plugins&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;plugin&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;maven&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;plugin&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;plugin&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;plugins&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;build&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;project&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;yml&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;server&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  port&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9003&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;spring&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  application&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;provider&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  cloud&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    nacos&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      discovery&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        server&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;addr&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt; #配置&lt;span class=&#34;token class-name&#34;&gt;Nacos&lt;/span&gt;地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;management&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  endpoints&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    web&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      exposure&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        include&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token char&#34;&gt;&#39;*&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;主启动添加注解&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloudalibabaprovider9003&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;boot&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SpringApplication&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;boot&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;autoconfigure&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SpringBootApplication&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;discovery&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;EnableDiscoveryClient&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@SpringBootApplication&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@EnableDiscoveryClient&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CloudalibabaProvider9003Application&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;SpringApplication&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;CloudalibabaProvider9003Application&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;控制器&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloudalibabaprovider9003&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;controller&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloudalibabacommons&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;entity&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;lombok&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;extern&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Log&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;beans&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;factory&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Value&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;GetMapping&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;PathVariable&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;RestController&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;util&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;HashMap&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@RestController&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DataController&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;$&amp;#123;server.port&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; serverPort&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 模仿数据库存储数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;HashMap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Long&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; hashMap &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;HashMap&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        hashMap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;put&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1l&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;鼠标&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        hashMap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;put&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2l&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;键盘&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        hashMap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;put&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3l&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;耳机&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;info/&amp;#123;id&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;msbSql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@PathVariable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;id&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Long&lt;/span&gt; id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1L&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;hashMap&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;** 注意：**9004 和 9003 一致，但是要注意修改 yml 文件端口号&lt;/p&gt;
&lt;h3 id=&#34;新建cloudalibaba-consumer8084&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#新建cloudalibaba-consumer8084&#34;&gt;#&lt;/a&gt; 新建 cloudalibaba-consumer8084&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;pom&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;xml version&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;1.0&#34;&lt;/span&gt; encoding&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;UTF-8&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;project xmlns&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://maven.apache.org/POM/4.0.0&#34;&lt;/span&gt; xmlns&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;xsi&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://www.w3.org/2001/XMLSchema-instance&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         xsi&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;schemaLocation&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;modelVersion&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;modelVersion&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;parent&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SpringAlibabaMSB&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;SNAPSHOT&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;version&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;relativePath&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; lookup parent from repository &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;parent&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;cloudalibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;consumer8084&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;SNAPSHOT&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;version&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;cloudalibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;consumer8084&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;name&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;description&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;cloudalibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;consumer8084&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;description&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;properties&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1.8&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;version&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;properties&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependencies&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;starter&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;starter&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;test&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;scope&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;test&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;scope&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SpringCloud&lt;/span&gt; ailibaba nacos &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;starter&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;alibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;discovery&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SpringCloud&lt;/span&gt; ailibaba sentinel &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;starter&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;alibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;sentinel&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;cloudalibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;commons&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;SNAPSHOT&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;version&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependencies&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;build&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;plugins&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;plugin&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;maven&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;plugin&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;plugin&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;plugins&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;build&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;project&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;yml&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;server&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  port&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8084&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;spring&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  application&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;consumer&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  cloud&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    nacos&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      discovery&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        server&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;addr&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sentinel&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      transport&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        #配置&lt;span class=&#34;token class-name&#34;&gt;Sentinel&lt;/span&gt; dashboard地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        dashboard&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8080&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        #默认&lt;span class=&#34;token number&#34;&gt;8719&lt;/span&gt;端口，假如被占用会自动从&lt;span class=&#34;token number&#34;&gt;8719&lt;/span&gt;开始依次&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;扫描&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;直至找到未被占用的端口&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        port&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8719&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;#消费者将要去访问的微服务名称&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;注册成功进nacos的微服务提供者&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;service&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;url&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;user&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;service&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; http&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;provider&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;主启动添加注解和 9003/9004 一致&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;控制器&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloudalibabacommons&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;entity&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;lombok&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;extern&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;slf4j&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Slf4j&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;beans&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;factory&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Autowired&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;beans&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;factory&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Value&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;GetMapping&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;PathVariable&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;RestController&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;RestTemplate&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@RestController&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Slf4j&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DemoController&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 服务提供者 URL&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;$&amp;#123;service-url.nacos-user-service&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;SERVICE_URL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Autowired&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RestTemplate&lt;/span&gt; restTemplate&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/consumer/fallback/&amp;#123;id&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;fallback&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@PathVariable&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Long&lt;/span&gt; id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 通过 Ribbon 发起远程访问，访问 9003/9004&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; restTemplate&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getForObject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;SERVICE_URL&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/info/&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    	&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;最后测试&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#最后测试&#34;&gt;#&lt;/a&gt; 最后测试&lt;/h2&gt;
&lt;p&gt;访问 http://localhost:8084/consumer/fallback/1&lt;/p&gt;
&lt;p&gt;查看最后结果是否为 9003/9004 切换调用&lt;/p&gt;
&lt;h1 id=&#34;sentinelresource的fallback属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinelresource的fallback属性&#34;&gt;#&lt;/a&gt; SentinelResource 的 fallback 属性&lt;/h1&gt;
&lt;h2 id=&#34;fallback属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#fallback属性&#34;&gt;#&lt;/a&gt; fallback 属性&lt;/h2&gt;
&lt;p&gt;** 概念：**fallback 函数名称，可选项，用于在抛出异常的时候提供 fallback 处理逻辑。fallback 函数可以针对所有类型的异常（除了  &lt;code&gt;exceptionsToIgnore&lt;/code&gt;  里面排除掉的异常类型）进行处理。fallback 函数签名和位置要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;返回值类型必须与原函数返回值类型一致；&lt;/li&gt;
&lt;li&gt;方法参数列表需要和原函数一致，或者可以额外多一个  &lt;code&gt;Throwable&lt;/code&gt;  类型的参数用于接收对应的异常。&lt;/li&gt;
&lt;li&gt;fallback 函数默认需要和原方法在同一个类中。若希望使用其他类的函数，则可以指定  &lt;code&gt;fallbackClass&lt;/code&gt;  为对应的类的  &lt;code&gt;Class&lt;/code&gt;  对象，注意对应的函数必需为 static 函数，否则无法解析。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其实通过官网上提供的概念，我们不难看出这个属性类似于 blockHandler，但是各位一定要注意他们有本质的不同。&lt;/p&gt;
&lt;p&gt;** 注意：**fallback 属性和 blockHandler 属性的本质不同在于他们作用的异常不同：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;blockHandler：针对违反 Sentinel 控制台配置规则时触发 BlockException 异常时对应处理的属性&lt;/li&gt;
&lt;li&gt;fallback：针对 Java 本身出现的异常进行处理的对应属性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;案例演示-5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例演示-5&#34;&gt;#&lt;/a&gt; 案例演示&lt;/h2&gt;
&lt;p&gt;​	上节课我们已经完成环境的搭建，那我们就直接在 8084 项目的 DemoController 中编写对应代码&lt;/p&gt;
&lt;p&gt;首先我们先来设置异常规则&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloudalibabaconsumer8084&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloudalibabacommons&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;entity&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;lombok&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;extern&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;slf4j&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Slf4j&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;beans&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;factory&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Autowired&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;beans&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;factory&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Value&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;GetMapping&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;PathVariable&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;RestController&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;RestTemplate&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@RestController&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Slf4j&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DemoController&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 服务提供者 URL&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;$&amp;#123;service-url.nacos-user-service&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;SERVICE_URL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Autowired&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RestTemplate&lt;/span&gt; restTemplate&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/consumer/fallback/&amp;#123;id&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;fallback&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@PathVariable&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Long&lt;/span&gt; id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id&lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 通过 Ribbon 发起远程访问，访问 9003/9004&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; restTemplate&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getForObject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;SERVICE_URL&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/info/&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;err&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;result&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;NullPointerException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;没有对应的数据记录&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	此时我们任务添加了异常，此时如果我们访问 http://localhost:8084/consumer/fallback/4（id 非法）地址时，就会出现对应的显示效果：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211111180018647.png&#34; class=&#34;&#34; title=&#34;image-20211111180018647&#34;&gt;
&lt;p&gt;​	明显此时显示效果非常不好，我们就可以通过 @SentinelResource 注解的 fallback 属性来解决这种 java 异常，给出友好提示&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@RestController&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Slf4j&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DemoController&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 服务提供者 URL&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;$&amp;#123;service-url.nacos-user-service&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;SERVICE_URL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Autowired&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RestTemplate&lt;/span&gt; restTemplate&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/consumer/fallback/&amp;#123;id&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 添加 SentinelResource 注解的 fallback 属性，同时设置方法来解决 Java 异常&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@SentinelResource&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;falllback&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;fallback &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;fallbackHandler&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;fallback&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@PathVariable&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Long&lt;/span&gt; id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id&lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 通过 Ribbon 发起远程访问，访问 9003/9004&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; restTemplate&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getForObject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;SERVICE_URL&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/info/&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;err&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;result&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;NullPointerException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;没有对应的数据记录&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 保证方法签名基本保持一致，但是要添加异常类型参数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;fallbackHandler&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Long&lt;/span&gt; id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;444&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;出现未知商品id&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	到这里为止，我们就很清楚的知道了 fallback 属性的作用，同时它和 blockHandler 属性类似，也可以设置 fallbackClass 属性，来指定对应类型，来处理对应的 Java 异常，当然要注意和 blockHandlerClass 属性一样，也需要让所有的方法都必需为 static 函数，否则无法解析。&lt;/p&gt;
&lt;h2 id=&#34;同时配置blockhandler和fallback属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#同时配置blockhandler和fallback属性&#34;&gt;#&lt;/a&gt; 同时配置 blockHandler 和 fallback 属性&lt;/h2&gt;
&lt;p&gt;​	通过上述的内容，我们很清楚的知道了 fallback 属性的作用，但是大家现在想一个问题，如果我们在使用 @SentinelResource 属性的时候，同时设置 blockHandler 属性和 fallback 属性时，并且同时出现了 Sentinel 异常和 Java 异常，这个时候会执行哪个方法那。&lt;/p&gt;
&lt;p&gt;我们还是回顾一下 blockHandler 属性的概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;blockHandler&lt;/code&gt;  /  &lt;code&gt;blockHandlerClass&lt;/code&gt; :  &lt;code&gt;blockHandler&lt;/code&gt;  对应处理  &lt;code&gt;BlockException&lt;/code&gt;  的函数名称，可选项。blockHandler 函数访问范围需要是  &lt;code&gt;public&lt;/code&gt; ，返回类型需要与原方法相匹配，参数类型需要和原方法相匹配并且最后加一个额外的参数，类型为  &lt;code&gt;BlockException&lt;/code&gt; 。blockHandler 函数默认需要和原方法在同一个类中。若希望使用其他类的函数，则可以指定  &lt;code&gt;blockHandlerClass&lt;/code&gt;  为对应的类的  &lt;code&gt;Class&lt;/code&gt;  对象，注意对应的函数必需为 static 函数，否则无法解析。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;案例演示-6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#案例演示-6&#34;&gt;#&lt;/a&gt; 案例演示&lt;/h2&gt;
&lt;p&gt;​	我们现在同时在 DemoController 中设置 fallback 属性和 blockHandler 属性&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@RestController&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Slf4j&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DemoController&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 服务提供者 URL&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;$&amp;#123;service-url.nacos-user-service&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;SERVICE_URL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Autowired&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RestTemplate&lt;/span&gt; restTemplate&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/consumer/fallback/&amp;#123;id&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 同时添加 SentinelResource 注解的 fallback 和 blockHandler 属性&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@SentinelResource&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;falllback&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;fallback &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;fallbackHandler&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;blockHandler &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;blockHandler&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;fallback&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@PathVariable&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Long&lt;/span&gt; id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id&lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 通过 Ribbon 发起远程访问，访问 9003/9004&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; restTemplate&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getForObject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;SERVICE_URL&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/info/&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;err&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;result&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;NullPointerException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;没有对应的数据记录&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 处理 Java 异常&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;fallbackHandler&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Long&lt;/span&gt; id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;444&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;NullPointerException异常&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 处理 Sentinel 限流&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;blockHandler&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Long&lt;/span&gt; id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;BlockException&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;445&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;BlockException限流&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	此时我们来设置 Sentinel 配置，我们通过熔断规则中的异常数来演示（当然也可以用其他的）&lt;/p&gt;
&lt;p&gt;规则：在一秒内超过最小访问次数 5 次，并且异常数超过 2 的时候，就会触发熔断规则。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211111182629454.png&#34; class=&#34;&#34; title=&#34;image-20211111182629454&#34;&gt;
&lt;p&gt;此时我们来访问 http://localhost:8084/consumer/fallback/6 看效果：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在没有触发熔断之前的异常交给 fallback 来处理&lt;/li&gt;
&lt;/ul&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211111182834520.png&#34; class=&#34;&#34; title=&#34;image-20211111182834520&#34;&gt;
&lt;ul&gt;
&lt;li&gt;但是一旦触发熔断规则就变成了 blockHandler 来处理&lt;/li&gt;
&lt;/ul&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211111183011670.png&#34; class=&#34;&#34; title=&#34;image-20211111183011670&#34;&gt;
&lt;h2 id=&#34;exceptionstoignore属性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#exceptionstoignore属性&#34;&gt;#&lt;/a&gt; exceptionsToIgnore 属性&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;exceptionsToIgnore&lt;/code&gt; （since 1.6.0）：用于指定哪些异常被排除掉，不会计入异常统计中，也不会进入 fallback 逻辑中，而是会原样抛出。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@RestController&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Slf4j&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DemoController&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 服务提供者 URL&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;$&amp;#123;service-url.nacos-user-service&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;SERVICE_URL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Autowired&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RestTemplate&lt;/span&gt; restTemplate&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/consumer/fallback/&amp;#123;id&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 同时添加 SentinelResource 注解的 fallback 和 blockHandler 属性&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@SentinelResource&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;falllback&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;fallback &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;fallbackHandler&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;blockHandler &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;blockHandler&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            exceptionsToIgnore &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;NullPointerException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 被标注的异常将会被 原样抛出&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;fallback&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@PathVariable&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Long&lt;/span&gt; id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id&lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 通过 Ribbon 发起远程访问，访问 9003/9004&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; restTemplate&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getForObject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;SERVICE_URL&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/info/&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;err&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;result&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;NullPointerException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;没有对应的数据记录&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 处理 Java 异常&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;fallbackHandler&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Long&lt;/span&gt; id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Throwable&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;444&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;NullPointerException异常&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 处理 Sentinel 限流&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;blockHandler&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Long&lt;/span&gt; id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;BlockException&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; result &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;445&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;BlockException限流&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; result&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;openfeign基础应用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#openfeign基础应用&#34;&gt;#&lt;/a&gt; OpenFeign 基础应用&lt;/h1&gt;
&lt;h2 id=&#34;概念-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概念-3&#34;&gt;#&lt;/a&gt; 概念&lt;/h2&gt;
&lt;p&gt;OpenFeign 是一种声明式、模板化的 HTTP 客户端。在 Spring Cloud 中使用 OpenFeign，可以做到使用 HTTP 请求访问远程服务，就像调用本地方法一样的，开发者完全感知不到这是在调用远程方法，更感知不到在访问 HTTP 请求，用法其实就是编写一个接口，在接口上添加注解即可。&lt;/p&gt;
&lt;p&gt;可以简单理解它是借鉴 Ribbon 的基础之上，封装的一套服务接口 + 注解的方式的远程调用器。&lt;/p&gt;
&lt;h2 id=&#34;openfeign能干什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#openfeign能干什么&#34;&gt;#&lt;/a&gt; OpenFeign 能干什么&lt;/h2&gt;
&lt;p&gt;它的宗旨是在编写 Java Http 客户端接口的时候变得更加容易，其底层整合了 Ribbon，所以也支持负载均衡。&lt;/p&gt;
&lt;p&gt;之前我们使用 Ribbon 的时候，利用 RestTemplate 对 Http 请求进行封装处理，但是在实际开发中，由于对服务依赖的调用不可能就一处，往往一个接口会被多处调用，所以通常都会针对每个微服务自行封装一些客户端类来包装这些依赖服务的调用。所以 OpenFeign 在此基础之上做了进一步的封装，由它来帮助我们定义和实现依赖服务接口的定义，我们只需创建一个接口并使用注解的方式来配置它，即可完成对微服务提供方的接口绑定，简化 Ribbon 的操作。&lt;/p&gt;
&lt;h2 id=&#34;具体使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#具体使用&#34;&gt;#&lt;/a&gt; 具体使用&lt;/h2&gt;
&lt;p&gt;这里我们通过一个案例来演示，首先我们要明确使用 OpenFeign 是使用在消费者端去远程调用，就必须要是用 FeignClient 注解，来标注要调用的服务提供者名称，然后在通过一个接口来定义要调用的方法，所以我们首先新建一个 Model：cloudalibaba-openFeign-consumer-8888&lt;/p&gt;
&lt;h3 id=&#34;pom&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pom&#34;&gt;#&lt;/a&gt; pom&lt;/h3&gt;
&lt;p&gt;注意：需要在父级项目引入对应依赖坐标&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;starter&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;openfeign&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;$&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;openfeign&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;version&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;xml version&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;1.0&#34;&lt;/span&gt; encoding&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;UTF-8&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;project xmlns&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://maven.apache.org/POM/4.0.0&#34;&lt;/span&gt; xmlns&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;xsi&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://www.w3.org/2001/XMLSchema-instance&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         xsi&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;schemaLocation&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;modelVersion&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;modelVersion&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;parent&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SpringAlibabaMSB&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;SNAPSHOT&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;version&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;relativePath&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; lookup parent from repository &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;parent&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;cloudalibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;openFeign&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;consumer&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8888&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;SNAPSHOT&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;version&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;cloudalibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;openFeign&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;consumer&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8888&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;name&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;description&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;cloudalibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;openFeign&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;consumer&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8888&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;description&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;properties&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1.8&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;version&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;properties&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependencies&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;starter&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;starter&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;test&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;scope&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;test&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;scope&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;starter&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;alibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;discovery&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;starter&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;openfeign&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;cloudalibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;commons&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;SNAPSHOT&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;version&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependencies&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;build&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;plugins&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;plugin&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;maven&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;plugin&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;plugin&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;plugins&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;build&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;project&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;javalangillegalstateexception-no-feign-client-for-loadbalancing-defined-did-you-forget-to-include-spring-cloud-starter-loadbalancer&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#javalangillegalstateexception-no-feign-client-for-loadbalancing-defined-did-you-forget-to-include-spring-cloud-starter-loadbalancer&#34;&gt;#&lt;/a&gt; java.lang.IllegalStateException: No Feign Client for loadBalancing defined. Did you forget to include spring-cloud-starter-loadbalancer?&lt;/h3&gt;
&lt;p&gt;由于 Spring Cloud Feign 在 Hoxton.M2 RELEASED 版本之后不再使用 Ribbon 而是使用 spring-cloud-loadbalancer，所以不引入 spring-cloud-loadbalancer 会报错.&lt;/p&gt;
&lt;p&gt;解决方法：&lt;br /&gt;
加入 spring-cloud-loadbalancer 依赖 并且在 nacos 中排除 ribbon 依赖，不然 loadbalancer 无效&lt;/p&gt;
&lt;p&gt;排除 ribbon 依赖&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 服务注册 / 发现  --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com.alibaba.cloud&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;exclusions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;exclusion&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com.netflix.ribbon&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;ribbon&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;exclusion&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;exclusions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;yml配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#yml配置&#34;&gt;#&lt;/a&gt; YML 配置&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;server&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  port&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8888&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;spring&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  application&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;consumer&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;openFeign&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  cloud&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    nacos&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      discovery&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        server&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;addr&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;management&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  endpoints&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    web&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      exposure&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        include&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token char&#34;&gt;&#39;*&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;主启动中添加注解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#主启动中添加注解&#34;&gt;#&lt;/a&gt; 主启动中添加注解&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;@SpringBootApplication
@EnableDiscoveryClient
@EnableFeignClients//添加此注解
public class CloudalibabaOpenFeignConsumer8888Application &amp;#123;

    public static void main(String[] args) &amp;#123;
        SpringApplication.run(CloudalibabaOpenFeignConsumer8888Application.class, args);
    &amp;#125;

&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;调用服务提供者对外提供接口&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#调用服务提供者对外提供接口&#34;&gt;#&lt;/a&gt; 调用服务提供者对外提供接口&lt;/h3&gt;
&lt;p&gt;这里要调用的是服务提供者 9003/9004&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211112183106167.png&#34; class=&#34;&#34; title=&#34;image-20211112183106167&#34;&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloudalibabaopenFeignconsumer8888&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;service&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloudalibabacommons&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;entity&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;openfeign&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;FeignClient&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;stereotype&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Service&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;GetMapping&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;PathVariable&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; * 此接口就是配合使用 OpenFeign 的接口，&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; * 在此接口中添加 @FeignClient 接口同时标注&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; * 要调用的服务端名称，同时使用与服务提供者&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; * 方法签名一致的抽象方法来表示远程调用的&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; * 具体内容&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Service&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 表示远程调用服务名称&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@FeignClient&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;nacos-provider&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;OpenFeignService&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * 此方法表示远程调用 info/&amp;#123;id&amp;#125; 接口&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;info/&amp;#123;id&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;msbSql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@PathVariable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;id&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Long&lt;/span&gt; id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;控制器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#控制器&#34;&gt;#&lt;/a&gt; 控制器&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloudalibabaopenFeignconsumer8888&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;controller&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloudalibabacommons&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;entity&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloudalibabaopenFeignconsumer8888&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;service&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;OpenFeignService&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;beans&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;factory&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Autowired&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;GetMapping&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;PathVariable&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;RestController&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@RestController&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;OpenFeignController&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Autowired&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;OpenFeignService&lt;/span&gt; openFeignService&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;getInfo/&amp;#123;id&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getInfo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@PathVariable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;id&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Long&lt;/span&gt; id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; openFeignService&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;msbSql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;测试结果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试结果&#34;&gt;#&lt;/a&gt; 测试结果&lt;/h2&gt;
&lt;p&gt;能够远程调用的同时还有负载均衡效果&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211112205138375.png&#34; class=&#34;&#34; title=&#34;image-20211112205138375&#34;&gt;
&lt;h1 id=&#34;openfeign超时时间控制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#openfeign超时时间控制&#34;&gt;#&lt;/a&gt; OpenFeign 超时时间控制&lt;/h1&gt;
&lt;h2 id=&#34;概念-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概念-4&#34;&gt;#&lt;/a&gt; 概念&lt;/h2&gt;
&lt;p&gt;OpenFeign 客户端默认等待 1 秒钟，但是如果服务端业务超过 1 秒，则会报错。为了避免这样的情况，我们需要设置 feign 客户端的超时控制。&lt;/p&gt;
&lt;h2 id=&#34;解决办法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#解决办法&#34;&gt;#&lt;/a&gt; 解决办法&lt;/h2&gt;
&lt;p&gt;由于 OpenFeign 底层是 ribbon 。所以超时控制由 ribbon 来控制。在 yml 文件中配置&lt;/p&gt;
&lt;h2 id=&#34;超时案例演示&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#超时案例演示&#34;&gt;#&lt;/a&gt; 超时案例演示&lt;/h2&gt;
&lt;p&gt;首先演示超时效果，我们现在 9003/9004 上设置一个延迟 3 秒执行的方法，来模仿长业务线调用。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/timeOut&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;timeOut&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;延迟响应&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;TimeUnit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;SECONDS&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sleep&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;InterruptedException&lt;/span&gt; e&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        e&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;printStackTrace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; serverPort&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;客户端 8888 通过 OpenFeign 来进行调用&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//OpenFeginController&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/testTimeout&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;TestTimeout&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; openFeginService&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;timeOut&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;测试结果-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试结果-2&#34;&gt;#&lt;/a&gt; 测试结果&lt;/h3&gt;
&lt;p&gt;客户端报错：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211112195205208.png&#34; class=&#34;&#34; title=&#34;image-20211112195205208&#34;&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211112195244240.png&#34; class=&#34;&#34; title=&#34;image-20211112195244240&#34;&gt;
&lt;h2 id=&#34;设置超时控制案例演示&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设置超时控制案例演示&#34;&gt;#&lt;/a&gt; 设置超时控制案例演示&lt;/h2&gt;
&lt;p&gt;首先我们需要在 8888 消费者端的 yml 文件中配置超时时间，因为 OpenFeign 本身整合了 Ribbon 所以，这里其实我们用的是 Ribbon 来配置&lt;/p&gt;
&lt;h3 id=&#34;yml&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#yml&#34;&gt;#&lt;/a&gt; YML&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;server&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  port&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8888&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;spring&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  application&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;consumer&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;openfegin&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  cloud&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    nacos&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      discovery&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        server&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;addr&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;#设置feign客户端超时时间&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;OpenFeign&lt;/span&gt;默认支持ribbon&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ribbon&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  #指的是建立连接所用的时间，适用于网络状况正常的情况下&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;两端连接所用的时间&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token class-name&#34;&gt;ReadTimeout&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  #指的是建立连接后从服务器读取到可用资源所用的时间&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token class-name&#34;&gt;ConnectTimeout&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;management&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  endpoints&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    web&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      exposure&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        include&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token char&#34;&gt;&#39;*&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;测试结果-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试结果-3&#34;&gt;#&lt;/a&gt; 测试结果&lt;/h3&gt;
&lt;p&gt;正常响应&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211112195615566.png&#34; class=&#34;&#34; title=&#34;image-20211112195615566&#34;&gt;
&lt;h2 id=&#34;openfeign日志打印&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#openfeign日志打印&#34;&gt;#&lt;/a&gt; OpenFeign 日志打印&lt;/h2&gt;
&lt;h2 id=&#34;概念-5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#概念-5&#34;&gt;#&lt;/a&gt; 概念&lt;/h2&gt;
&lt;p&gt;Feign 提供了日志打印功能，我们可以通过配置来调整日志级别，从而了解 Feign 中 Http 请求的细节。&lt;br /&gt;
简单理解，就是对 Feign 接口的调用情况进行监控和输出&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;日志级别：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;NONE：默认的，不显示任何日志；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;BASIC：仅记录请求方法、URL、响应状态码及执行时间；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HEADERS：除了 BASIC 中定义的信息之外，还有请求和响应的头信息；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FULL：除了 HEADERS 中定义的信息之外，还有请求和响应的正文及元数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;具体使用-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#具体使用-2&#34;&gt;#&lt;/a&gt; 具体使用&lt;/h2&gt;
&lt;p&gt;需要在启动类中通过 @Bean 注解注入 OpenFeign 的日志功能&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@SpringBootApplication&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@EnableFeignClients&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CloudalibabaOpenFeginConsumer8888Application&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;SpringApplication&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;CloudalibabaOpenFeginConsumer8888Application&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Bean&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;Logger&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Level&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;feignLoggerLevel&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 开启详细日志&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Logger&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Level&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;FULL&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在 yml 中配置中配置&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;server&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  port&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8888&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;spring&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  application&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;consumer&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;openfegin&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  cloud&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    nacos&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      discovery&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        server&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;addr&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;#设置feign客户端超时时间&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;OpenFeign&lt;/span&gt;默认支持ribbon&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ribbon&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  #指的是建立连接所用的时间，适用于网络状况正常的情况下&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;两端连接所用的时间&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token class-name&#34;&gt;ReadTimeout&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  #指的是建立连接后从服务器读取到可用资源所用的时间&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token class-name&#34;&gt;ConnectTimeout&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;logging&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  level&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    # openfeign日志以什么级别监控哪个接口&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloudalibabaopenfeginconsumer8888&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;service&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;OpenFeginService&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; debug&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;management&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  endpoints&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    web&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      exposure&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        include&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token char&#34;&gt;&#39;*&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;测试效果，发起一次调用以后的日志内容：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211112201418950.png&#34; class=&#34;&#34; title=&#34;image-20211112201418950&#34;&gt;
&lt;h1 id=&#34;sentinel整合openfegin&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel整合openfegin&#34;&gt;#&lt;/a&gt; Sentinel 整合 OpenFegin&lt;/h1&gt;
&lt;p&gt;根据之前的学习，我们已经学习过了包括 Sentinel 整合 Ribbon，包括对 OpenFegin 的基本学习，那么这节课，我们就需要通过 Sentinel 来进行整合 OpenFegin&lt;/p&gt;
&lt;h2 id=&#34;引入openfegin&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#引入openfegin&#34;&gt;#&lt;/a&gt; 引入 OpenFegin&lt;/h2&gt;
&lt;p&gt;我们需要在当前的 8084 项目中引入对应的依赖&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;starter&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;openfeign&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;激活 Sentinel 对 OpenFeign 的支持，所以配置 yml&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# 激活&lt;span class=&#34;token class-name&#34;&gt;Sentinel&lt;/span&gt;对&lt;span class=&#34;token class-name&#34;&gt;OpenFeign&lt;/span&gt;的支持&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;feign&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  sentinel&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    enabled&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;主启动类要添加 @EnableFeignClients 注解&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@SpringBootApplication&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@EnableDiscoveryClient&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@EnableFeignClients&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 注入 Feign&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CloudalibabaConsumer8084Application&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;SpringApplication&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;CloudalibabaConsumer8084Application&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Bean&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@LoadBalanced&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RestTemplate&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getRestTemplate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RestTemplate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;openfegin接口编写&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#openfegin接口编写&#34;&gt;#&lt;/a&gt; OpenFegin 接口编写&lt;/h2&gt;
&lt;p&gt;这里我们的接口写法和之前保持一致，但是要注意，我们这里要多增加一个 FeignClient 的属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fallback: 定义容错的处理类，当调用远程接口失败或超时时，会调用对应接口的容错逻辑，fallback 指定的类必须实现 @FeignClient 标记的接口&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 当没有成功调用 /info/&amp;#123;id&amp;#125; 接口时会走 fallback 属性标注的类型的处理方法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Service&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@FeignClient&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;nacos-provider&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;fallback &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FeignServiceImpl&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FeignService&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * 远程调用对应方法&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;info/&amp;#123;id&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;msbSql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@PathVariable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;id&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Long&lt;/span&gt; id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;实现类必须添加 @Component 注解，否则无法注入到容器中&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Component&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FeignServiceImpl&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FeignService&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Override&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;msbSql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Long&lt;/span&gt; id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;444&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;服务降级返回！&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这里完成后我们来编写控制器&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Autowired&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;FeignService&lt;/span&gt; feignService&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;getInfo/&amp;#123;id&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;JsonResult&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getInfo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@PathVariable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;id&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Long&lt;/span&gt; id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RuntimeException&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;没有该id&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; feignService&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;msbSql&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;测试-5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试-5&#34;&gt;#&lt;/a&gt; 测试&lt;/h2&gt;
&lt;p&gt;此时如果我们访问 http://localhost:8084/getInfo/1 的地址，是没有问题的，但是如果此时我们人为结束 9003/9004 服务，这个时候就会触发 fallback 属性对应的处理类型，完成服务降级。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211115200122605.png&#34; class=&#34;&#34; title=&#34;image-20211115200122605&#34;&gt;
&lt;p&gt;断开服务以后&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211115200243827.png&#34; class=&#34;&#34; title=&#34;image-20211115200243827&#34;&gt;
&lt;h1 id=&#34;sentinel持久化配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel持久化配置&#34;&gt;#&lt;/a&gt; Sentinel 持久化配置&lt;/h1&gt;
&lt;p&gt;我们首先需要知道：在 Sentinel Dashboard 中配置规则之后重启应用就会丢失，所以实际生产环境中需要配置规则的持久化实现，Sentinel 提供多种不同的数据源来持久化规则配置，包括 file，redis、nacos、zk。&lt;/p&gt;
&lt;h2 id=&#34;sentinel规则持久化到nacos&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sentinel规则持久化到nacos&#34;&gt;#&lt;/a&gt; Sentinel 规则持久化到 Nacos&lt;/h2&gt;
&lt;p&gt;将限流规则持久化进 Nacos 保存，只要刷新 8401 某个接口地址，Sentinel 控制台的流控规则就能感应到，同时只要 Nacos 里面的配置不删除，针对 8401 上 Sentinel 的流控规则就持续有效。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211115204021997.png&#34; class=&#34;&#34; title=&#34;image-20211115204021997&#34;&gt;
&lt;p&gt;其实就是实现 Sentinel Dashboard 与 Nacos 之间的相互通信&lt;/p&gt;
&lt;p&gt;通过 Nacos 配置文件修改流控规则 --- 拉取 ---&amp;gt;Sentinel Dashboard 界面显示最新的流控规则&lt;/p&gt;
&lt;p&gt;** 注意：** 在 Nacos 控制台上修改流控制，虽然可以同步到 Sentinel Dashboard，但是 Nacos 此时应该作为一个流控规则的持久化平台，所以正常操作过程应该是开发者在 Sentinel Dashboard 上修改流控规则后同步到 Nacos，遗憾的是目前 Sentinel Dashboard 不支持该功能。&lt;/p&gt;
&lt;h2 id=&#34;具体操作-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#具体操作-2&#34;&gt;#&lt;/a&gt; 具体操作&lt;/h2&gt;
&lt;p&gt;第一件事情我们首先要引入依赖：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;csp&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;sentinel&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;datasource&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;nacos&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1.8&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;version&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;第二件事情我们需要配置 YML&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# 端口号&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;server&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  port&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8890&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# 服务名&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;spring&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  application&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; order&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  cloud&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    nacos&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      discovery&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        # nacos注册中心地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        server&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;addr&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sentinel&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      transport&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        dashboard&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8080&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      datasource&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; # 配置&lt;span class=&#34;token class-name&#34;&gt;Sentinel&lt;/span&gt;的持久化&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        nacos&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          nacos&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            serverAddr&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            groupId&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;DEFAULT_GROUP&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            dataId&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; order&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;sentinel&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;json&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            ruleType&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; flow&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  profiles&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    active&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; dev&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;第三步我们需要进入到 Nacos 控制台，添加配置&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211116200354133.png&#34; class=&#34;&#34; title=&#34;image-20211116200354133&#34;&gt;
&lt;p&gt;具体配置内容：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token string&#34;&gt;&#34;resource&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;test1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token string&#34;&gt;&#34;limitApp&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;default&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token string&#34;&gt;&#34;grade&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token string&#34;&gt;&#34;count&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token string&#34;&gt;&#34;strategy&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token string&#34;&gt;&#34;controlBehavior&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;具体内容含义&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;resource：资源名称；&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;limitApp：来源应用；&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;grade：阈值类型，&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;表示线程数，&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;表示&lt;span class=&#34;token constant&#34;&gt;QPS&lt;/span&gt;；&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;count：单机阈值；&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;strategy：流控模式，&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;表示直接，&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;表示关联，&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;表示链路；&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;controlBehavior：流控效果，&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;表示快速失败，&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;表示&lt;span class=&#34;token class-name&#34;&gt;Warm&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Up&lt;/span&gt;，&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;表示排队等待；&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;clusterMode：是否集群。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;控制器&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@RestController&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;OrderController&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/order/test1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@SentinelResource&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;test1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;test1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;throws&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;InterruptedException&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;test1 &#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;测试-6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试-6&#34;&gt;#&lt;/a&gt; 测试&lt;/h2&gt;
&lt;p&gt;当我们重启项目以后，我们访问对应接口 http://localhost:8890/order/test1，就会在 Sentinel 界面上看到对应的限流规则：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Sentinel%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20211116200654500.png&#34; class=&#34;&#34; title=&#34;image-20211116200654500&#34;&gt;
&lt;h2 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h2&gt;
&lt;p&gt;当我们配置成功之后我们每次访问接口的时候，我们都会从我们的仓库中去获取配置，有的话直接用，没有的话将持久化后的资源重新加入到 sentinel 配置中，在下一次的资源访问过程中就会经历这个判断。&lt;/p&gt;

&lt;div id=&#34;gitalk-container&#34;&gt;&lt;/div&gt;
&lt;script src=&#34;https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js&#34;&gt;&lt;/script&gt;&lt;link rel=&#34;stylesheet&#34; href=&#34;https://unpkg.com/gitalk/dist/gitalk.css&#34;&gt;&lt;script src=&#34;https://unpkg.com/gitalk/dist/gitalk.min.js&#34;&gt;&lt;/script&gt;

		&lt;script&gt;
		var gitalkConfig = {&#34;clientID&#34;:&#34;6db178ba46c8af8f6a6f&#34;,&#34;clientSecret&#34;:&#34;90f730e5956024596558df00975cd8eae28cae3d&#34;,&#34;repo&#34;:&#34;bk-comment01&#34;,&#34;owner&#34;:&#34;onlymarryu&#34;,&#34;admin&#34;:[&#34;onlymarryu&#34;],&#34;distractionFreeMode&#34;:false,&#34;language&#34;:&#34;zh-CN&#34;,&#34;proxy&#34;:&#34;https://gitalk-comments.netlify.app/github_access_token&#34;,&#34;perPage&#34;:15};
	    gitalkConfig.id = md5(location.pathname);
		var gitalk = new Gitalk(gitalkConfig);
	    gitalk.render(&#34;gitalk-container&#34;);
	    &lt;/script&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://eth168.top/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/</guid>
            <title>Nacos系统学习</title>
            <link>https://eth168.top/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/</link>
            <category term="微服务" scheme="https://eth168.top/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/" />
            <category term="spring-cloud-alibaba" scheme="https://eth168.top/tags/spring-cloud-alibaba/" />
            <category term="nacos" scheme="https://eth168.top/tags/nacos/" />
            <pubDate>Mon, 10 Jul 2023 21:43:56 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;微服务简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#微服务简介&#34;&gt;#&lt;/a&gt; 微服务简介&lt;/h1&gt;
&lt;h2 id=&#34;1-什么是微服务&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-什么是微服务&#34;&gt;#&lt;/a&gt; 1 什么是微服务&lt;/h2&gt;
&lt;p&gt;2014 年，Martin Fowler（&lt;strong&gt;马丁・福勒&lt;/strong&gt; ） 提出了微服务的概念，定义了微服务是由以单一应用程序构成的小服务，自己拥有自己的进程与轻量化处理，服务依业务功能设计，以全自动的方式部署，与其他服务使用 HTTP API 通信。同时服务会使用最小的规模的集中管理能力，服务可以用不同的编程语言与数据库等组件实现。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/a544f9b87c934ffe9fc994129e4bc5e2.png&#34; class=&#34;&#34; title=&#34;WeChat13cb5e0a22944a3c85e6d91ca10babbc.png&#34;&gt;
&lt;p&gt;马丁・福勒是敏捷联盟的成员，于 2001 年，同其他 16 名合著者一起协助创作了 “敏捷软件开发宣言”。他负责维护一个 bliki 网站 --- 一种 blog 和 wiki 的混合衍生物，他还使控制反转 (Inversion of Control)“依赖注入模式 (Dependency Injection)” 一词得到普及。&lt;/p&gt;
&lt;h3 id=&#34;架构的演变&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#架构的演变&#34;&gt;#&lt;/a&gt; 架构的演变&lt;/h3&gt;
&lt;p&gt;随着互联网的发展，网站应用的规模也不断的扩大，进而导致系统架构也在不断的进行变化，从互联网早起到现在，系统架构大体经历了下面几个过程：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/18122ec67e5c4f2ca5579288c42c42cf.png&#34; class=&#34;&#34; title=&#34;WeChatb55c37f0bb53be8957590c529bb21e83.png&#34;&gt;
&lt;h4 id=&#34;单体应用架构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#单体应用架构&#34;&gt;#&lt;/a&gt; 单体应用架构：&lt;/h4&gt;
&lt;p&gt;把所有功能都集中在一个应用中，统一部署，开发成本、部署成本和维护成本低&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：项目架构简单，适合用户量少的项目，开发成本低，项目部署在一个节点上，维护方便。&lt;/li&gt;
&lt;li&gt;缺点：功能集中在一个工程中，对于大型项目比一开发和维护，项目模块紧耦合，单点容错率低，无法对不同的模块功能进行针对性的优化和水平拓展&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;垂直应用架构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#垂直应用架构&#34;&gt;#&lt;/a&gt; 垂直应用架构：&lt;/h4&gt;
&lt;p&gt;所谓垂直应用架构，其实就是把之前的单体应用拆分成多个应用，以提升效率，比如电商系统可以拆分成：电商系统、后台系统、CMS 系统&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：项目拆分实现了流量分担，解决了并发问题，而且可以针对不同模块进行优化和水平拓展，同时不同的系统之间不会互相影响，提高容错率&lt;/li&gt;
&lt;li&gt;缺点：系统之间互相存在，无法进行相互调用，系统之间互相独立，会造成一部分功能的冗余&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;分布式架构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分布式架构&#34;&gt;#&lt;/a&gt; 分布式架构：&lt;/h4&gt;
&lt;p&gt;随着业务的增加，在垂直应用架构中冗余的业务代码越来越多，就需要将冗余的部分抽取出来，统一做成业务层单独处理，变成一个单独的服务，控制层调用不同的业务层服务就能完成不同的业务功能，具体表现就是一个项目拆分成表现层和服务层两个部分，服务层中包含业务逻辑，表现层只需要处理和页面的交互，业务逻辑都是调用服务层的服务来实现，这就是分布式架构。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：抽取公共的功能作为服务层，提高代码复用行。&lt;/li&gt;
&lt;li&gt;缺点：系统间耦合度变高，调用关系错综复杂，难以维护。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;soa架构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#soa架构&#34;&gt;#&lt;/a&gt; SOA 架构：&lt;/h4&gt;
&lt;p&gt;分布式架构中的缺点就是调用复杂，而且当服务越来越多，或者当某一个服务压力过大需要水平拓展和负载均衡，对于资源调度和治理就需要用到治理中心 SOA（Service Oriented Architecture）为核心来解决，同时治理中心还可以帮助我们解决服务之间协议不同的问题。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;优点：使用治理中心（ESB\dubbo）解决了服务见调用关系的自动调节&lt;/li&gt;
&lt;li&gt;缺点：服务间会有依赖关系，一旦某个环节出错会影响较大（服务雪崩），服务关系复杂，运维、测试部署困难。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;微服务架构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#微服务架构&#34;&gt;#&lt;/a&gt; 微服务架构：&lt;/h4&gt;
&lt;p&gt;微服务架构在某种程度上面架构 SOA 继续发展的下一步，它更加强调服务的 “彻底拆分”，目的就是提高效率，微服务架构中，每个服务必须独立部署同时互不影响，微服务架构更加轻巧，轻量级。&lt;/p&gt;
&lt;h4 id=&#34;微服务架构与soa架构的不同&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#微服务架构与soa架构的不同&#34;&gt;#&lt;/a&gt; 微服务架构与 SOA 架构的不同&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;微服务架构比 SOA 架构会更加的精细，让专业的人去做专业的。&lt;/li&gt;
&lt;li&gt;目的是提高效率每个服务之间互不影响，微服务架构中，每个服务需要独立部署&lt;/li&gt;
&lt;li&gt;SOA 架构中可能数据库存储会发生共享，微服务强调每个服务都是单独数据库，保证每个服务之间互不影响。&lt;/li&gt;
&lt;li&gt;微服务项目架构比 SOA 架构更加适合与互联网公司迅捷开发、快速迭代版本，因为粒度非常精细。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;为何使用微服务呢？&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/6e5c1179855b42d4ad8f472ea9ed2f1b.png&#34; class=&#34;&#34; title=&#34;WeChatc690c21a12ed31985403c3be5446e01c.png&#34;&gt;
&lt;p&gt;微服务就像集群作战，可以提升性能&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/7b30c17619c4446aa1f9cd9c8ac98d35.png&#34; class=&#34;&#34; title=&#34;WeChate3645eab5fa6b9086451566cb00ebadb.png&#34;&gt;
&lt;p&gt;微服务架构：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/cdfcdadc0c2a450e869d841d8522e196.png&#34; class=&#34;&#34; title=&#34;WeChat16099fb7486aa74bf6f6c13e79467e67.png&#34;&gt;
&lt;ul&gt;
&lt;li&gt;优点：服务原子化拆分，独立打包、部署和升级，保证每个微服务清晰的任务划分，利于扩展&lt;/li&gt;
&lt;li&gt;缺点：分布式系统开发的技术成本高（容错、分布式事务等），复杂性更高，每个微服务进行分布式独立部署，当进行模块调用的时候，分布式将会变得更加麻烦。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;spring-cloud-发展历史&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#spring-cloud-发展历史&#34;&gt;#&lt;/a&gt; Spring Cloud 发展历史&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Spring Cloud netflix -&amp;gt; Spring Cloud Alibaba&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;2020-12-22 日&lt;strong&gt; Spring&lt;/strong&gt; 官方博客宣布， &lt;code&gt;Spring Cloud 2020.0.0&lt;/code&gt;  正式发布。 &lt;code&gt;2020.0.0&lt;/code&gt;  是第一个使用新的版本号命名方案的&lt;strong&gt; Spring Cloud&lt;/strong&gt; 发行版本。在此之前&lt;strong&gt; Spring Cloud&lt;/strong&gt; 使用英国伦敦地铁站的命名方式来命名一个大版本（ &lt;code&gt;train version&lt;/code&gt; ），如果不按照新的版本号命名的话，本次的版本号应该是 Ilford。&lt;/li&gt;
&lt;li&gt;更新版本没有什么大惊小怪的，但是本次更新却正式开启了&lt;strong&gt; Spring Cloud Netflix&lt;/strong&gt; 体系的终结进程。&lt;strong&gt;Netflix&lt;/strong&gt; 公司是目前微服务落地中最成功的公司。它开源了诸如&lt;strong&gt; Eureka&lt;/strong&gt; 、&lt;strong&gt;Hystrix&lt;/strong&gt; 、&lt;strong&gt;Zuul&lt;/strong&gt; 、&lt;strong&gt;Feign&lt;/strong&gt; 、&lt;strong&gt;Ribbon&lt;/strong&gt; 等等广大开发者所知微服务套件，统称为&lt;strong&gt; Netflix OSS&lt;/strong&gt; 。在当时&lt;strong&gt; Netflix OSS&lt;/strong&gt; 成为微服务组件上事实的标准。但是在 2018 年&lt;strong&gt; Netflix&lt;/strong&gt; 公司宣布其核心组件&lt;strong&gt; Hystrix&lt;/strong&gt; 、&lt;strong&gt;Ribbon&lt;/strong&gt; 、&lt;strong&gt;Zuul&lt;/strong&gt; 、&lt;strong&gt;Eureka&lt;/strong&gt; 等进入&lt;strong&gt;维护状态&lt;/strong&gt; ，不再进行新特性开发，只修 BUG。这直接影响了&lt;strong&gt; Spring Cloud&lt;/strong&gt; 项目的发展路线，&lt;strong&gt;Spring&lt;/strong&gt; 官方不得不采取了应对措施，在 2019 年的在 &lt;strong&gt;SpringOne 2019&lt;/strong&gt; 大会中，&lt;strong&gt;Spring Cloud&lt;/strong&gt; 宣布 &lt;strong&gt;Spring Cloud Netflix 项目进入维护模式&lt;/strong&gt; ，并在 2020 年移除相关的&lt;strong&gt; Netflix OSS&lt;/strong&gt; 组件。&lt;/li&gt;
&lt;li&gt;Spring Cloud Aalibaba 成为了主流&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/06e4ffcc7d254c14951de86c71ed0d07.png&#34; class=&#34;&#34; title=&#34;image.png&#34;&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/6462169e77c844ea94afb0ec3ff8e5ff.png&#34; class=&#34;&#34; title=&#34;image.png&#34;&gt;
&lt;h2 id=&#34;2-spring-cloud-alibaba&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-spring-cloud-alibaba&#34;&gt;#&lt;/a&gt; 2 Spring Cloud Alibaba&lt;/h2&gt;
&lt;h3 id=&#34;简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介&#34;&gt;#&lt;/a&gt; 简介&lt;/h3&gt;
&lt;p&gt;Spring Cloud Alibaba 致力于提供微服务开发的一站式解决方案。此项目包含开发分布式应用微服务的必需组件，方便开发者通过 Spring Cloud 编程模型轻松使用这些组件来开发分布式应用服务。&lt;/p&gt;
&lt;p&gt;依托 Spring Cloud Alibaba，您只需要添加一些注解和少量配置，就可以将 Spring Cloud 应用接入阿里微服务解决方案，通过阿里中间件来迅速搭建分布式应用系统。&lt;/p&gt;
&lt;h3 id=&#34;主要功能&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#主要功能&#34;&gt;#&lt;/a&gt; 主要功能&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;服务限流降级&lt;/strong&gt; ：默认支持 WebServlet、WebFlux, OpenFeign、RestTemplate、Spring Cloud Gateway, Zuul, Dubbo 和 RocketMQ 限流降级功能的接入，可以在运行时通过控制台实时修改限流降级规则，还支持查看限流降级 Metrics 监控。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;服务注册与发现&lt;/strong&gt; ：适配 Spring Cloud 服务注册与发现标准，默认集成了 Ribbon 的支持。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分布式配置管理&lt;/strong&gt; ：支持分布式系统中的外部化配置，配置更改时自动刷新。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;消息驱动能力&lt;/strong&gt; ：基于 Spring Cloud Stream 为微服务应用构建消息驱动能力。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分布式事务&lt;/strong&gt; ：使用 @GlobalTransactional 注解， 高效并且对业务零侵入地解决分布式事务问题。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;阿里云对象存储&lt;/strong&gt; ：阿里云提供的海量、安全、低成本、高可靠的云存储服务。支持在任何应用、任何时间、任何地点存储和访问任意类型的数据。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分布式任务调度&lt;/strong&gt; ：提供秒级、精准、高可靠、高可用的定时（基于 Cron 表达式）任务调度服务。同时提供分布式的任务执行模型，如网格任务。网格任务支持海量子任务均匀分配到所有 Worker（schedulerx-client）上执行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;阿里云短信服务&lt;/strong&gt; ：覆盖全球的短信服务，友好、高效、智能的互联化通讯能力，帮助企业迅速搭建客户触达通道。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;组件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#组件&#34;&gt;#&lt;/a&gt; 组件&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;[Sentinel]&lt;/strong&gt; ：阿里巴巴源产品，把流量作为切入点，从流量控制、熔断降级、系统负载保护等多个维度保护服务的稳定性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[Nacos]&lt;/strong&gt; ：一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[RocketMQ]&lt;/strong&gt; ：一款开源的分布式消息系统，基于高可用分布式集群技术，提供低延时的、高可靠的消息发布与订阅服务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[Dubbo]&lt;/strong&gt; ：Apache Dubbo™ 是一款高性能 Java RPC 框架。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[Seata]&lt;/strong&gt; ：阿里巴巴开源产品，一个易于使用的高性能微服务分布式事务解决方案。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[Alibaba Cloud OSS]&lt;/strong&gt; : 阿里云对象存储服务（Object Storage Service，简称 OSS），是阿里云提供的海量、安全、低成本、高可靠的云存储服务。您可以在任何应用、任何时间、任何地点存储和访问任意类型的数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[Alibaba Cloud SchedulerX]&lt;/strong&gt;: 阿里中间件团队开发的一款分布式任务调度产品，提供秒级、精准、高可靠、高可用的定时（基于 Cron 表达式）任务调度服务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[Alibaba Cloud SMS]&lt;/strong&gt; : 覆盖全球的短信服务，友好、高效、智能的互联化通讯能力，帮助企业迅速搭建客户触达通道。&lt;/p&gt;
&lt;h1 id=&#34;spring-cloud-alibaba-nacos下载和安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#spring-cloud-alibaba-nacos下载和安装&#34;&gt;#&lt;/a&gt; Spring Cloud Alibaba Nacos 下载和安装&lt;/h1&gt;
&lt;h2 id=&#34;nacos介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nacos介绍&#34;&gt;#&lt;/a&gt; Nacos 介绍&lt;/h2&gt;
&lt;p&gt;​	Nacos（Naming Configuration Service） 是一个易于使用的动态服务发现、配置和服务管理平台，用于构建云原生应用程序&lt;/p&gt;
&lt;p&gt;​	&lt;strong&gt;服务发现是微服务架构中的关键组件之一&lt;/strong&gt;。Nacos 致力于帮助您发现、配置和管理微服务。Nacos 提供了一组简单易用的特性集，帮助您快速实现动态服务发现、服务配置、服务元数据及流量管理。&lt;/p&gt;
&lt;p&gt;​	Nacos 帮助您更敏捷和容易地构建、交付和管理微服务平台。 Nacos 是构建以 “服务” 为中心的现代应用架构 (例如微服务范式、云原生范式) 的服务基础设施。&lt;/p&gt;
&lt;h2 id=&#34;什么是nacos&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是nacos&#34;&gt;#&lt;/a&gt; 什么是 Nacos？&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Nacos = &lt;strong&gt;注册中心 + 配置中心组合&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Nacos 支持几乎所有主流类型的 “服务” 的发现、配置和管理，常见的服务如下：&lt;/p&gt;
&lt;p&gt;Kubernetes Service&lt;/p&gt;
&lt;p&gt;gRPC &amp;amp; Dubbo RPC Service&lt;/p&gt;
&lt;p&gt;Spring Cloud RESTful Service&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;为何使用nacos&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#为何使用nacos&#34;&gt;#&lt;/a&gt; 为何使用 Nacos？&lt;/h2&gt;
&lt;p&gt;​	为何使用注册中心呢？我们以入住酒店的前台为例子，稍微加以解释。先设想一个没有服务前台的酒店，客人入住需要自己寻找合适居住的房间，客人不知道每个房间的情况，无法确定那个房间是打扫干净可以入住，客人只能逐个房间寻找，如果遇到已经居住房客的房间一定很尴尬，显然这是不正常的情况。正常的情况是酒店会安排服务台，酒店打扫干净可以入住的房间会登记注册到服务台，这样客人来住店，只需要在前台就可以查找到可以入住的房间，这样就无需等待快速的入住。显然，服务器提供发注册和发现机制可以让房客快速找到合适的房间，快速解决入住问题。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210915144412020.png&#34; class=&#34;&#34; title=&#34;image-20210915144412020&#34;&gt;
&lt;p&gt;​	采用微服务以后，软件微服务组件各自独立，但最终还要组合为一个整体作为一个软件系统服务于最终客户，这时软件组件之间也需要彼此通讯，彼此调用方法。微服务架构内部发起通讯调用方法的一方成为 “&lt;strong&gt;服务消费者&lt;/strong&gt;”，提供远程方法调用的服务器称为 “&lt;strong&gt;服务提供者&lt;/strong&gt;”，往往为了提高系统性能，会提供多个服务器作为&lt;strong&gt;服务提供者&lt;/strong&gt;，此时&lt;strong&gt;服务消费者&lt;/strong&gt;找到&lt;strong&gt;服务提供者&lt;/strong&gt;的过程，就类似于用户在找房间的过程。为了帮助&lt;strong&gt;服务消费者&lt;/strong&gt;快速的发现&lt;strong&gt;服务提供者&lt;/strong&gt;，在微服务框架中都会引入&lt;strong&gt;注册中心。注册中心&lt;/strong&gt;类似于酒店的前台，提供在软件服务的注册和发现功能，&lt;strong&gt;服务提供者&lt;/strong&gt;会先在注册中心进行&lt;strong&gt;注册&lt;/strong&gt;，声明可以对外提供服务，而&lt;strong&gt;服务消费者&lt;/strong&gt;只需要在注册中心就可以快速&lt;strong&gt;发现&lt;/strong&gt;找到可以使用的服务，快速使用服务。注册中心实现了服务提供和服务消费的快速撮合功能。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210915151230064.png&#34; class=&#34;&#34; title=&#34;image-20210915151230064&#34;&gt;
&lt;h2 id=&#34;nacos下载和安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nacos下载和安装&#34;&gt;#&lt;/a&gt; Nacos 下载和安装&lt;/h2&gt;
&lt;p&gt;官网网址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9uYWNvcy5pby96aC1jbi9pbmRleC5odG1s&#34;&gt;https://nacos.io/zh-cn/index.html&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210915113531807-1688998492428.png&#34; class=&#34;&#34; title=&#34;image-20210915113531807&#34;&gt;
&lt;p&gt;官网文档网址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9uYWNvcy5pby96aC1jbi9kb2NzL3F1aWNrLXN0YXJ0Lmh0bWw=&#34;&gt;https://nacos.io/zh-cn/docs/quick-start.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;注意：使用官网推荐的稳定版本：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210915152238853-1688998494209.png&#34; class=&#34;&#34; title=&#34;image-20210915152238853&#34;&gt;
&lt;p&gt;下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvbmFjb3MvcmVsZWFzZXM=&#34;&gt;https://github.com/alibaba/nacos/releases&lt;/span&gt;&lt;/p&gt;
&lt;h4 id=&#34;下载之后安装过程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#下载之后安装过程&#34;&gt;#&lt;/a&gt; 下载之后安装过程&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;解压以后找到 bin 目录&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210915163508347-1688998496663.png&#34; class=&#34;&#34; title=&#34;image-20210915163508347&#34;&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;执行指令：&lt;/p&gt;
&lt;h3 id=&#34;linuxunixmac&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#linuxunixmac&#34;&gt;#&lt;/a&gt; Linux/Unix/Mac&lt;/h3&gt;
&lt;p&gt;启动命令 (standalone 代表着单机模式运行，非集群模式):&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sh&lt;/span&gt; startup.sh &lt;span class=&#34;token parameter variable&#34;&gt;-m&lt;/span&gt; standalone&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;windows&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#windows&#34;&gt;#&lt;/a&gt; Windows&lt;/h3&gt;
&lt;p&gt;启动命令 (standalone 代表着单机模式运行，非集群模式):&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;startup.cmd &lt;span class=&#34;token parameter variable&#34;&gt;-m&lt;/span&gt; standalone&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;结果：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210915163836699.png&#34; class=&#34;&#34; title=&#34;image-20210915163836699&#34;&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;得到结果以后为了验证是否成功开启 Nacos，我们需要访问：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xvY2FsaG9zdDo4ODQ4L25hY29z&#34;&gt;http://localhost:8848/nacos&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210915163952277-1688998507793.png&#34; class=&#34;&#34; title=&#34;image-20210915163952277&#34;&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;出现此界面表示已经成功启动 Nacos，默认的账号密码是：nacos/nacos&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210915164224183-1688998510021.png&#34; class=&#34;&#34; title=&#34;image-20210915164224183&#34;&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;到这里就是成功开启了 Nacos 服务了。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;nacos服务提供者注册&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nacos服务提供者注册&#34;&gt;#&lt;/a&gt; Nacos 服务提供者注册&lt;/h1&gt;
&lt;h2 id=&#34;nacos代替eureka&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nacos代替eureka&#34;&gt;#&lt;/a&gt; Nacos 代替 Eureka&lt;/h2&gt;
&lt;p&gt;​	Nacos 可以直接提供注册中心（Eureka）+ 配置中心（Config），所以它的好处显而易见，我们在上节课成功安装和启动了 Nacos 以后就可以发现 Nacos 本身就是一个小平台，它要比之前的 Eureka 更加方便，不需要我们在自己做配置。&lt;/p&gt;
&lt;h2 id=&#34;nacos服务注册中心&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nacos服务注册中心&#34;&gt;#&lt;/a&gt; Nacos 服务注册中心&lt;/h2&gt;
&lt;p&gt;​	服务发现是微服务架构中的关键组件之一。在这样的架构中，手动为每个客户端配置服务列表可能是一项艰巨的任务，并且使得动态扩展极其困难。Nacos Discovery 帮助您自动将您的服务注册到 Nacos 服务器，Nacos 服务器会跟踪服务并动态刷新服务列表。此外，Nacos Discovery 将服务实例的一些元数据，如主机、端口、健康检查 URL、主页等注册到 Nacos。&lt;/p&gt;
&lt;p&gt;​	学习任何知识我们都需要从它的官方文档入手，所以我们直接来看官网给我们提供的文档：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcHJpbmcuaW8vcHJvamVjdHMvc3ByaW5nLWNsb3VkLWFsaWJhYmEjbGVhcm4=&#34;&gt;https://spring.io/projects/spring-cloud-alibaba#learn&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210916145054013.png&#34; class=&#34;&#34; title=&#34;image-20210916145558297&#34;&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210916145054014.png&#34; class=&#34;&#34; title=&#34;image-20210916145707907&#34;&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;h2 id=&#34;如何引入nacos-discovery进行服务注册发现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#如何引入nacos-discovery进行服务注册发现&#34;&gt;#&lt;/a&gt; 如何引入 Nacos Discovery 进行服务注册 / 发现&lt;/h2&gt;
&lt;h3 id=&#34;创建新项目&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建新项目&#34;&gt;#&lt;/a&gt; 创建新项目&lt;/h3&gt;
&lt;p&gt;聚合项目：由于聚合带来的诸多好处，在 SpringBoot 项目开发中也广泛采用，开发中将 SpringBoot 项目按照功能分成子模块开发，所以我们在使用 Spring Cloud Alibaba 完成项目的时候，也是采用聚合项目来完成。&lt;/p&gt;
&lt;p&gt;​	父项目&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210916172456588.png&#34; class=&#34;&#34; title=&#34;image-20210916172456588&#34;&gt;
&lt;p&gt;​	子项目&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210916175756108.png&#34; class=&#34;&#34; title=&#34;image-20210916175756108&#34;&gt;
&lt;h3 id=&#34;pom&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pom&#34;&gt;#&lt;/a&gt; POM&lt;/h3&gt;
&lt;p&gt;​	父项目 pom 文件&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;xml version&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;1.0&#34;&lt;/span&gt; encoding&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;UTF-8&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;project xmlns&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://maven.apache.org/POM/4.0.0&#34;&lt;/span&gt; xmlns&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;xsi&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://www.w3.org/2001/XMLSchema-instance&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         xsi&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;schemaLocation&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;modelVersion&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;modelVersion&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;parent&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;starter&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;parent&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2.4&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.10&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;version&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;relativePath&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; lookup parent from repository &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;parent&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SpringCloudAlibabaMSB&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;SNAPSHOT&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;version&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SpringCloudAlibabaMSB&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;name&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;packaging&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;pom&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;packaging&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;description&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SpringCloudAlibabaMSB&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;description&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;properties&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1.8&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;version&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;alibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;version&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2.2&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;RELEASE&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;alibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;version&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;properties&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependencies&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;starter&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;web&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;starter&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;tomcat&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;scope&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;provided&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;scope&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;starter&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;test&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;scope&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;test&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;scope&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependencies&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependencyManagement&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependencies&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;alibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;dependencies&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;$&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;alibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;version&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;type&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;pom&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;type&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;scope&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;scope&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependencies&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependencyManagement&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;modules&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;cloudAlibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Nacos&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;9001&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;modules&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;project&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	子项目 pom 文件&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;xml version&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;1.0&#34;&lt;/span&gt; encoding&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;UTF-8&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;project xmlns&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://maven.apache.org/POM/4.0.0&#34;&lt;/span&gt; xmlns&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;xsi&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://www.w3.org/2001/XMLSchema-instance&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         xsi&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;schemaLocation&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;modelVersion&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;modelVersion&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;parent&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SpringAlibabaMSB&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;SNAPSHOT&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;version&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;relativePath&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; lookup parent from repository &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;parent&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;cloudalibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;9001&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;SNAPSHOT&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;version&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;cloudalibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;9001&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;name&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;description&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;cloudalibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;9001&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;description&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependencies&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;starter&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;web&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;starter&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;alibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;discovery&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependencies&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;project&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;yml&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#yml&#34;&gt;#&lt;/a&gt; YML&lt;/h3&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210916180029680.png&#34; class=&#34;&#34; title=&#34;image-20210916180029680&#34;&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;server&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  port&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9001&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;spring&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  application&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;provider&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  cloud&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    discovery&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      server&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;addr&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;management&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  endpoint&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    web&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      exposure&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        include&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token char&#34;&gt;&#39;*&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;启动类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#启动类&#34;&gt;#&lt;/a&gt; 启动类&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloudalibabanacos9001&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;boot&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SpringApplication&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;boot&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;autoconfigure&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SpringBootApplication&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;discovery&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;EnableDiscoveryClient&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@SpringBootApplication&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@EnableDiscoveryClient&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 加此注解&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CloudalibabaNacos9001Application&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;SpringApplication&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;CloudalibabaNacos9001Application&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;业务类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#业务类&#34;&gt;#&lt;/a&gt; 业务类&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;beans&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;factory&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Value&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;GetMapping&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;PathVariable&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;RestController&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@RestController&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DemoController&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;$&amp;#123;server.port&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; serverPort&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;/mashibing&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getServerPort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello Nacos Discovery&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;serverPort&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;测试&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试&#34;&gt;#&lt;/a&gt; 测试&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;注意，在启动项目前一定要启动 Nacos&lt;/strong&gt;&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210916180252032.png&#34; class=&#34;&#34; title=&#34;image-20210916180252032&#34;&gt;
&lt;h2 id=&#34;练习&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#练习&#34;&gt;#&lt;/a&gt; 练习&lt;/h2&gt;
&lt;p&gt;​	根据上面的练习演示，在创建一个新的 9002 端口作为服务注册到 Nacos 中，为了下节课来做准备&lt;/p&gt;
&lt;h1 id=&#34;nacos服务消费者注册和负载均衡&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nacos服务消费者注册和负载均衡&#34;&gt;#&lt;/a&gt; Nacos 服务消费者注册和负载均衡&lt;/h1&gt;
&lt;h2 id=&#34;服务消费者&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#服务消费者&#34;&gt;#&lt;/a&gt; 服务消费者&lt;/h2&gt;
&lt;p&gt;​	上节课我们成功配置了 Nacos 服务提供者的注册，那么这节课我们将配置服务消费者，同时来验证 Nacos 自带负载均衡。&lt;/p&gt;
&lt;h2 id=&#34;具体配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#具体配置&#34;&gt;#&lt;/a&gt; 具体配置&lt;/h2&gt;
&lt;h3 id=&#34;新建module&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#新建module&#34;&gt;#&lt;/a&gt; 新建 Module&lt;/h3&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210917135655649-1688998535785.png&#34; class=&#34;&#34; title=&#34;image-20210917135655649&#34;&gt;
&lt;h4 id=&#34;pom-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pom-2&#34;&gt;#&lt;/a&gt; pom&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;xml version&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;1.0&#34;&lt;/span&gt; encoding&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;UTF-8&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;project xmlns&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://maven.apache.org/POM/4.0.0&#34;&lt;/span&gt; xmlns&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;xsi&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://www.w3.org/2001/XMLSchema-instance&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         xsi&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;schemaLocation&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;modelVersion&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;modelVersion&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;parent&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SpringAlibabaMSB&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;SNAPSHOT&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;version&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;relativePath&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt; lookup parent from repository &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;parent&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;cloudalibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;consumer&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8083&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;SNAPSHOT&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;version&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;cloudalibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;consumer&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8083&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;name&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;description&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;cloudalibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;consumer&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8083&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;description&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;properties&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;version&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1.8&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;java&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;version&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;properties&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependencies&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;boot&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;starter&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;web&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;starter&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;alibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;discovery&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependencies&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;project&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;注意父项目要添加&lt;models&gt;标记&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;modules&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;cloudalibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;9001&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;cloudalibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;9002&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;cloudalibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;consumer&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8083&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;modules&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;yml-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#yml-2&#34;&gt;#&lt;/a&gt; yml&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;server&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  port&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8083&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;spring&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  application&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;consumer&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  cloud&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    discovery&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      server&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;addr&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;主启动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#主启动&#34;&gt;#&lt;/a&gt; 主启动&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloudalibabaconsumernacos8083&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;boot&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SpringApplication&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;boot&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;autoconfigure&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SpringBootApplication&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;discovery&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;EnableDiscoveryClient&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@SpringBootApplication&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@EnableDiscoveryClient&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CloudalibabaConsumerNacos8083Application&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;SpringApplication&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;CloudalibabaConsumerNacos8083Application&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;测试-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试-2&#34;&gt;#&lt;/a&gt; 测试&lt;/h4&gt;
&lt;p&gt;注意：要先启动 Nacos，然后再来启动服务&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210917140345089.png&#34; class=&#34;&#34; title=&#34;image-20210917140345089&#34;&gt;
&lt;h2 id=&#34;远程调用ribbon&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#远程调用ribbon&#34;&gt;#&lt;/a&gt; 远程调用 Ribbon&lt;/h2&gt;
&lt;p&gt;​	大家现在肯定很疑惑，这个服务消费者不是要调用具体服务吗？但是现在仅仅是创建出来了，和上节课创建的服务者也没有多大的区别啊？这具体怎么用那？&lt;/p&gt;
&lt;p&gt;是这样的，我们现在想要让这个服务的消费者去调用服务提供者，我们就需要通过 Ribbon 来进行调用，那么首先我们先来了解 Ribbon。&lt;/p&gt;
&lt;h4 id=&#34;什么是ribbon&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是ribbon&#34;&gt;#&lt;/a&gt; 什么是 Ribbon&lt;/h4&gt;
&lt;p&gt;​	它是一个基于 HTTP 和 TCP&lt;strong&gt; 客户端&lt;/strong&gt;负载均衡器。它虽然只是一个工具类库，它却是&lt;strong&gt;每一个微服务&lt;/strong&gt;的基础设施。因为实际上，对于服务间调用、API 网关请求转发都需要经过 Ribbon 负载均衡来实现。总体来说，Ribbon 的主要作用是：从注册服务器端拿到对应服务列表后以负载均衡的方式访问对应服务。&lt;/p&gt;
&lt;p&gt;​	何时使用 Ribbon 呢？一般情况下当一个模块需要从另外一个模块获取数据时候就需要使用 Ribbon 的远程访问功能了。&lt;/p&gt;
&lt;p&gt;​	要注意的是 Nacos 已经整合了 Ribbon，所以我们想要使用只需要导入 Spring Cloud Alibaba Nacos 的依赖就可以直接使用了。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210917145544074.png&#34; class=&#34;&#34; title=&#34;image-20210917145544074&#34;&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;h4 id=&#34;具体使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#具体使用&#34;&gt;#&lt;/a&gt; 具体使用&lt;/h4&gt;
&lt;p&gt;RestTemplate 封装了 Ribbon 调用的过程，其中 getForObject 是最常用方法，同时还要在服务消费者中配置 RestTemplate：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@Bean&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@LoadBalanced&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RestTemplate&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;restTemplate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RestTemplate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;restTemplate&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getForObject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;arg1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;arg2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;arg3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;第一个参数 url 表示被调用的目标 Rest 接口位置&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;url 的第一部分是在 Nacos 中注册的服务提供者名称，如果多个服务提供者注册相同名称，Ribbon 会自动寻找其中一个服务提供者，并且调用接口方法。这个就是负载均衡功能。&lt;/li&gt;
&lt;li&gt;url 后半部是控制器的请求路径。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;第二个参数是返回值类型&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;JavaBean 类型或者 JavaBean 数组类型，如果控制器返回的是 List 集合，需要使用数组类型接收。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;第三个参数是可变参数&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;是传递给 url 的动态参数，使用参数时候需要在 url 上需要使用 {1}、{2}、{3} 进行参数占位，这样传递的参数就会自动替换占位符。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;验证nacos自带负载均衡&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#验证nacos自带负载均衡&#34;&gt;#&lt;/a&gt; 验证 Nacos 自带负载均衡&lt;/h2&gt;
&lt;p&gt;​	我们现在知道了如果我们想要让服务消费者 consumer-nacos-8083 调用服务提供者 nacos-9001 或者 9002，那么必然要使用 Ribbon，所以我们要做的第一件事情就是先让 9001 或者 9002 服务对外提供接口，用于访问，由于 9001 已经有对外提供的接口了，所以我们只需要仿照完成 9002 即可&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloudalibabanacos9002&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;controller&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;beans&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;factory&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Value&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;GetMapping&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;RestController&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@RestController&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DemoController&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;$&amp;#123;server.port&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; serverPort&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;/mashibing&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getServerPort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Hello Nacos Discovery&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;serverPort&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	接下来我们就需要通过服务消费 8083 者来访问 9001 或者 9002，但是在这之前，我们先在 consumer-nacos-8083 模块中的 yml 文件里添加一句话&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;server&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  port&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8083&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;spring&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  application&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;consumer&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  cloud&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    discovery&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      server&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;addr&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# 消费者将要去访问的微服务名称（注册成功的&lt;span class=&#34;token class-name&#34;&gt;Nacos&lt;/span&gt;的微服务提供者）&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;service&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;url&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;user&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;service&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; http&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;provider&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	因为我们要是使用 Ribbon，所以我们还需要在启动类上配置 restTemplate&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;boot&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SpringApplication&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;boot&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;autoconfigure&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SpringBootApplication&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;discovery&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;EnableDiscoveryClient&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;loadbalancer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;LoadBalanced&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Bean&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;RestTemplate&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@SpringBootApplication&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@EnableDiscoveryClient&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CloudalibabaConsumerNacos8083Application&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;SpringApplication&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;CloudalibabaConsumerNacos8083Application&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Bean&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@LoadBalanced&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RestTemplate&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;restTemplate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RestTemplate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	配置好之后，我们就可以在 8083 的消费者上来通过 Ribbon 来自动的负载均衡调用 9001 或者 9002 的服务提供者了&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloudalibabaconsumernacos8083&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;controller&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;beans&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;factory&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Value&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;GetMapping&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;PathVariable&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;RestController&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;RestTemplate&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;javax&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Resource&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@RestController&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DemoController&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Resource&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RestTemplate&lt;/span&gt; restTemplate&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;/**&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * 消费者去访问具体服务，这种写法可以实现&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     * 配置文件和代码的分离&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;$&amp;#123;service-url.nacos-user-service&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; serverURL&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;consumer/nacos&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getDiscovery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;err&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;serverURL&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; restTemplate&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getForObject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;serverURL&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/mashibing&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;测试结果：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;访问：http&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;localhost&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8083&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;consumer&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;nacos&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;结果：&lt;span class=&#34;token class-name&#34;&gt;Hello&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Nacos&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Discovery9001&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;9002&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;负载均衡切换显示&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;总结：因为 Nacos 中本身就集成了 Ribbon 所以它本身就自带负载均衡&lt;/p&gt;
&lt;h1 id=&#34;nacos服务注册中心对比提升&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nacos服务注册中心对比提升&#34;&gt;#&lt;/a&gt; Nacos 服务注册中心对比提升&lt;/h1&gt;
&lt;h2 id=&#34;各种服务注册中心对比&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#各种服务注册中心对比&#34;&gt;#&lt;/a&gt; 各种服务注册中心对比&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;服务注册与发现框架&lt;/th&gt;
&lt;th&gt;CAP 模型&lt;/th&gt;
&lt;th&gt;控制台管理&lt;/th&gt;
&lt;th&gt;社区活跃度&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Eureka&lt;/td&gt;
&lt;td&gt;AP&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;低 (2.x 版本闭源)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Zookeeper&lt;/td&gt;
&lt;td&gt;CP&lt;/td&gt;
&lt;td&gt;不支持&lt;/td&gt;
&lt;td&gt;中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Consul&lt;/td&gt;
&lt;td&gt;CP&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nacos&lt;/td&gt;
&lt;td&gt;AP/CP&lt;/td&gt;
&lt;td&gt;支持&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;cap模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cap模型&#34;&gt;#&lt;/a&gt; CAP 模型&lt;/h3&gt;
&lt;p&gt;​	计算机专家 埃里克・布鲁尔（Eric Brewer）于 2000 年在 ACM 分布式计算机原理专题讨论会（简称：PODC）中提出的分布式系统设计要考虑的三个核心要素：&lt;/p&gt;
&lt;p&gt;​		一致性（Consistency）：同一时刻的同一请求的实例返回的结果相同，所有的数据要求具有强一致性 (Strong Consistency)&lt;/p&gt;
&lt;p&gt;​		可用性（Availability）：所有实例的读写请求在一定时间内可以得到正确的响应&lt;/p&gt;
&lt;p&gt;​		分区容错性（Partition tolerance）：在网络异常（光缆断裂、设备故障、宕机）的情况下，系统仍能提供正常的服务&lt;/p&gt;
&lt;p&gt;​	以上三个特点就是 CAP 原则（又称 CAP 定理），但是三个特性不可能同时满足，所以分布式系统设计要考虑的是在满足 P（分区容错性）的前提下选择 C（一致性）还是 A（可用性），即：CP 或 AP&lt;/p&gt;
&lt;h3 id=&#34;cp原则一致性-分区容错性原则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cp原则一致性-分区容错性原则&#34;&gt;#&lt;/a&gt; CP 原则：一致性 + 分区容错性原则&lt;/h3&gt;
&lt;p&gt;​	CP 原则属于强一致性原则，要求所有节点可以查询的数据随时都要保持一直（同步中的数据不可查询），即：若干个节点形成一个逻辑的共享区域，某一个节点更新的数据都会立即同步到其他数据节点之中，当数据同步完成后才能返回成功的结果，但是在实际的运行过程中网络故障在所难免，如果此时若干个服务节点之间无法通讯时就会出现错误，从而牺牲了以可用性原则（A），例如关系型数据库中的事务。&lt;/p&gt;
&lt;h3 id=&#34;ap原则可用性原则-分区容错性原则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ap原则可用性原则-分区容错性原则&#34;&gt;#&lt;/a&gt; AP 原则：可用性原则 + 分区容错性原则&lt;/h3&gt;
&lt;p&gt;​	AP 原则属于弱一致性原则，在集群中只要有存活的节点那么所发送来的所有请求都可以得到正确的响应，在进行数据同步处理操作中即便某些节点没有成功的实现数据同步也返回成功，这样就牺牲一致性原则（C 原则）。&lt;/p&gt;
&lt;p&gt;​	使用场景：对于数据的同步一定会发出指令，但是最终的节点是否真的实现了同步，并不保证，可是却可以及时的得到数据更新成功的响应，可以应用在网络环境不是很好的场景中。&lt;/p&gt;
&lt;p&gt;​&lt;/p&gt;
&lt;h2 id=&#34;nacos支持cp和ap&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nacos支持cp和ap&#34;&gt;#&lt;/a&gt; Nacos 支持 CP 和 AP&lt;/h2&gt;
&lt;p&gt;​	Nacos 无缝支持一些主流的开源生态，同时再阿里进行 Nacos 设计的时候重复的考虑到了市场化的运作（市面上大多都是以单一的实现形式为主，例如：Zookeeper 使用的是 CP、而 Eureka 采用的是 AP），在 Nacos 中提供了两种模式的动态切换。&lt;/p&gt;
&lt;p&gt;​	&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210923165642323.png&#34; class=&#34;&#34; title=&#34;image-20210923165642323&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;nacos-何时选择切换模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nacos-何时选择切换模式&#34;&gt;#&lt;/a&gt; Nacos 何时选择切换模式&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;一般来说，如果不需要储存服务界别的信息且服务实例通过 nacos-client 注册，并能够保持心跳上报，那么就可以选择 AP 模式。如 Spring Cloud 和 Dubbo，都适用于 AP 模式，AP 模式为了服务的可用性减弱了一致性，因此 AP 模式下只支持注册临时实例。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果需要在服务级别编辑或者储存配置信息，那么 CP 是必须的，K8S 服务和 DNS 服务则是用于 CP 模式。CP 模式下则支持注册持久化实例，此时则是以 Raft 协议为集群运行模式，该模式下注册实例之前必须先注册服务，如果服务不存在，则会返回错误。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;切换命令（默认是 AP）：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;curl &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;X&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;PUT&lt;/span&gt; &#39;$&lt;span class=&#34;token constant&#34;&gt;NACOS_SERVER&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;nacos&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;v1&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;ns&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;operator&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;switches&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;entry&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;serverMode&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;value&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;CP&lt;/span&gt;&#39;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;注意：临时和持久化的区别主要在健康检查失败后的表现，持久化实例健康检查失败后会被标记成不健康，而临时实例会直接从列表中被删除。&lt;/p&gt;
&lt;h1 id=&#34;nacos之服务配置中心&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nacos之服务配置中心&#34;&gt;#&lt;/a&gt; Nacos 之服务配置中心&lt;/h1&gt;
&lt;h2 id=&#34;基础配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基础配置&#34;&gt;#&lt;/a&gt; 基础配置&lt;/h2&gt;
&lt;p&gt;Nacos 不仅仅可以作为注册中心来使用，同时它支持作为配置中心&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210924140930824.png&#34; class=&#34;&#34; title=&#34;image-20210924140930824&#34;&gt;
&lt;p&gt;首先我们还是新建 Model：cloudalibaba-config-3377&lt;/p&gt;
&lt;h3 id=&#34;pom文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pom文件&#34;&gt;#&lt;/a&gt; pom 文件&lt;/h3&gt;
&lt;p&gt;​	这里我们主要要引入的是此依赖，这个依赖依据在官网上可以找到:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcHJpbmctY2xvdWQtYWxpYmFiYS1ncm91cC5naXRodWIuaW8vZ2l0aHViLXBhZ2VzL2dyZWVud2ljaC9zcHJpbmctY2xvdWQtYWxpYmFiYS5odG1sI19hbl9leGFtcGxlX29mX3VzaW5nX25hY29zX2Rpc2NvdmVyeV9mb3Jfc2VydmljZV9yZWdpc3RyYXRpb25kaXNjb3ZlcnlfYW5kX2NhbGw=&#34;&gt;https://spring-cloud-alibaba-group.github.io/github-pages/greenwich/spring-cloud-alibaba.html#_an_example_of_using_nacos_discovery_for_service_registrationdiscovery_and_call&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alibaba&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;groupId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; spring&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;cloud&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;starter&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;alibaba&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;config &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;artifactId&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;dependency&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;yml配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#yml配置&#34;&gt;#&lt;/a&gt; YML 配置&lt;/h3&gt;
&lt;p&gt;​	要注意的是这里我们要配置两个，因为 Nacos 同 SpringCloud-config 一样，&lt;strong&gt;在项目初始化时，要保证先从配置中心进行配置拉取，拉取配置之后，才能保证项目的正常启动&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;​	&lt;strong&gt;springboot 中配置文件的加载是存在优先级顺序的，bootstrap 优先级高于 application&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	分别要配置的是，这里 bootstrap.yml 配置好了以后，作用是两个，第一个让 3377 这个服务注册到 Nacos 中，第二个作用就是去 Nacos 中去读取指定后缀为 yaml 的配置文件：&lt;/p&gt;
&lt;p&gt;bootstrap.yml&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# nacos配置&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;server&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  port&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3377&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;spring&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  application&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;config&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;client&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  cloud&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    nacos&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      discovery&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        server&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;addr&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt; #&lt;span class=&#34;token class-name&#34;&gt;Nacos&lt;/span&gt;服务注册中心地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      config&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        server&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;addr&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt; #&lt;span class=&#34;token class-name&#34;&gt;Nacos&lt;/span&gt;作为配置中心地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        file&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;extension&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; yaml #指定yaml格式的配置&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;application.yml&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;spring&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  profiles&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    active&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; dev # 表示开发环境&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;主启动-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#主启动-2&#34;&gt;#&lt;/a&gt; 主启动&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;com&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mashibing&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloudalibabaconfig3377&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;boot&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SpringApplication&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;boot&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;autoconfigure&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SpringBootApplication&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;discovery&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;EnableDiscoveryClient&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@SpringBootApplication&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@EnableDiscoveryClient&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CloudalibabaConfig3377Application&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token class-name&#34;&gt;SpringApplication&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;CloudalibabaConfig3377Application&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; args&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;业务类-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#业务类-2&#34;&gt;#&lt;/a&gt; 业务类&lt;/h3&gt;
&lt;p&gt;​	这里的 @RefreshScope 实现配置自动更新，意思为如果想要使配置文件中的配置修改后不用重启项目即生效，可以使用 @RefreshScope 配置来实现&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;beans&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;factory&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Value&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;context&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;RefreshScope&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token import&#34;&gt;&lt;span class=&#34;token namespace&#34;&gt;org&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;springframework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;web&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bind&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;annotation&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;RestController&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@RestController&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token annotation punctuation&#34;&gt;@RefreshScope&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 支持 Nacos 的动态刷新功能&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ConfigClientController&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@Value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;$&amp;#123;config.info&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; configInfo&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token annotation punctuation&#34;&gt;@GetMapping&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/config/info&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getConfigInfo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; configInfo&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;nacos配置规则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nacos配置规则&#34;&gt;#&lt;/a&gt; Nacos 配置规则&lt;/h3&gt;
&lt;p&gt;​	在 Nacos Spring Cloud 中， &lt;code&gt;dataId&lt;/code&gt;  的完整格式如下（详情可以参考官网 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9uYWNvcy5pby96aC1jbi9kb2NzL3F1aWNrLXN0YXJ0LXNwcmluZy1jbG91ZC5odG1sJUVGJUJDJTg5JUVGJUJDJTlB&#34;&gt;https://nacos.io/zh-cn/docs/quick-start-spring-cloud.html）：&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;prefix&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;$&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;spring&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;profiles&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;active&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;file&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;extension&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;prefix&lt;/code&gt;  默认为  &lt;code&gt;spring.application.name&lt;/code&gt;  的值，也可以通过配置项  &lt;code&gt;spring.cloud.nacos.config.prefix&lt;/code&gt;  来配置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;spring.profiles.active&lt;/code&gt;  即为当前环境对应的 profile，注意：&lt;strong&gt;当  &lt;code&gt;spring.profiles.active&lt;/code&gt;  为空时，对应的连接符  &lt;code&gt;-&lt;/code&gt;  也将不存在，dataId 的拼接格式变成  &lt;code&gt;$&amp;#123;prefix&amp;#125;.$&amp;#123;file-extension&amp;#125;&lt;/code&gt; &lt;/strong&gt;（不能删除）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;file-exetension&lt;/code&gt;  为配置内容的数据格式，可以通过配置项  &lt;code&gt;spring.cloud.nacos.config.file-extension&lt;/code&gt;  来配置。目前只支持  &lt;code&gt;properties&lt;/code&gt;  和  &lt;code&gt;yaml&lt;/code&gt;  类型。&lt;/li&gt;
&lt;li&gt;通过 Spring Cloud 原生注解  &lt;code&gt;@RefreshScope&lt;/code&gt;  实现配置自动更新：&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;所以根据官方给出的规则我们最终需要在 Nacos 配置中心添加的配置文件的名字规则和名字为：&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# $&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;spring&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;application&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;$&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;spring&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;profiles&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;active&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;file&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;extension&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;config&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;client&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;dev&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;yaml&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# 微服务名称&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;当前环境&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;文件格式&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210924154026491.png&#34; class=&#34;&#34; title=&#34;image-20210924160100192&#34;&gt;
&lt;h2 id=&#34;nacos平台创建配置操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nacos平台创建配置操作&#34;&gt;#&lt;/a&gt; Nacos 平台创建配置操作&lt;/h2&gt;
&lt;p&gt;增加配置&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210924154802374.png&#34; class=&#34;&#34; title=&#34;image-20210924154802374&#34;&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210924155218752.png&#34; class=&#34;&#34; title=&#34;image-20210924160459681&#34;&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;config&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    info&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; nacos config center&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;version &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;然后在配置中心就会看到刚刚发布的配置&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210924155315617.png&#34; class=&#34;&#34; title=&#34;image-20210924155315617&#34;&gt;
&lt;h2 id=&#34;自动配置更新&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#自动配置更新&#34;&gt;#&lt;/a&gt; 自动配置更新&lt;/h2&gt;
&lt;p&gt;修改 Nacos 配置，不需要重启项目即可自动刷新&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210924195241683.png&#34; class=&#34;&#34; title=&#34;image-20210924195241683&#34;&gt;
&lt;p&gt;修改版本号为 2，点击发布&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210924195325905.png&#34; class=&#34;&#34; title=&#34;image-20210924195325905&#34;&gt;
&lt;h2 id=&#34;测试-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试-3&#34;&gt;#&lt;/a&gt; 测试&lt;/h2&gt;
&lt;p&gt;启动服务访问服务来测试（没有修改之前是 1，修改之后不需要重启项目既可以直接获取最新配置）：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xvY2FsaG9zdDozMzc3L2NvbmZpZy9pbmZv&#34;&gt;http://localhost:3377/config/info&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210924182159179.png&#34; class=&#34;&#34; title=&#34;image-20210924182159179&#34;&gt;
&lt;h2 id=&#34;bootsrap文件不读取问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bootsrap文件不读取问题&#34;&gt;#&lt;/a&gt; bootsrap.* 文件不读取问题&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;在 spring cloud2.4 之后将&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT1ib290c3RyYXAmYW1wO3NwbT0xMDAxLjIxMDEuMzAwMS43MDIw&#34;&gt; bootstrap&lt;/span&gt;.enabled 设置为 false。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;解决方式一&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#解决方式一&#34;&gt;#&lt;/a&gt; 解决方式一：&lt;/h3&gt;
&lt;p&gt;添加 bootstrap 的 POM 依赖：&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;org.springframework.cloud&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring-cloud-starter-bootstrap&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;&amp;lt;!-- 自行修改相应版本 --&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;3.0.2&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;解决方式二&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#解决方式二&#34;&gt;#&lt;/a&gt; 解决方式二：&lt;/h3&gt;
&lt;p&gt;添加环境变量：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/e38c1ae0a79547ae9928236355f7cc3a.png&#34; class=&#34;&#34; title=&#34;img&#34;&gt;
&lt;p&gt;spring.cloud.bootstrap.enabled=true&lt;/p&gt;
&lt;p&gt;** 特殊说明：** 如果你不是 spring cloud 项目，只是 spring boot 项目，在启动无法加载到 bootstrap 的配置，应该为如下解决方式：&lt;/p&gt;
&lt;figure class=&#34;highlight xml&#34;&gt;&lt;figcaption data-lang=&#34;XML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;org.springframework.cloud&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;groupId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;spring-cloud-context&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;artifactId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;3.0.1.RELEASE&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;version&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;dependency&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;nacos命名空间分组和dataid三者关系&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nacos命名空间分组和dataid三者关系&#34;&gt;#&lt;/a&gt; Nacos 命名空间分组和 DataID 三者关系&lt;/h1&gt;
&lt;h2 id=&#34;名词解释&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#名词解释&#34;&gt;#&lt;/a&gt; 名词解释&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;命名空间&lt;/strong&gt;（Namespace）&lt;/p&gt;
&lt;p&gt;​	用于进行租户粒度的配置隔离。不同的命名空间下，可以存在相同的 Group 或 Data ID 的配置。Namespace 的常用场景之一是不同环境的配置的区分隔离，例如开发测试环境和生产环境的资源（如配置、服务）隔离等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;配置分组&lt;/strong&gt;（Group）&lt;/p&gt;
&lt;p&gt;​	Nacos 中的一组配置集，是组织配置的维度之一。通过一个有意义的字符串（如 Buy 或 Trade ）对配置集进行分组，从而区分 Data ID 相同的配置集。当您在 Nacos 上创建一个配置时，如果未填写配置分组的名称，则配置分组的名称默认采用 DEFAULT_GROUP 。配置分组的常见场景：不同的应用或组件使用了相同的配置类型，如 database_url 配置和 MQ_topic 配置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;配置集 ID&lt;/strong&gt;（Data ID）&lt;/p&gt;
&lt;p&gt;​	Nacos 中的某个配置集的 ID。配置集 ID 是组织划分配置的维度之一。Data ID 通常用于组织划分系统的配置集。一个系统或者应用可以包含多个配置集，每个配置集都可以被一个有意义的名称标识。Data ID 通常采用类 Java 包（如 com.taobao.tc.refund.log.level）的命名规则保证全局唯一性。此命名规则非强制。&lt;/p&gt;
&lt;p&gt;​	配置集：一组相关或者不相关的配置项的集合称为配置集。在系统中，一个配置文件通常就是一个配置集，包含了系统各个方面的配置。例如，一个配置集可能包含了数据源、线程池、日志级别等配置项。&lt;/p&gt;
&lt;h3 id=&#34;三者关系&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三者关系&#34;&gt;#&lt;/a&gt; 三者关系&lt;/h3&gt;
&lt;p&gt;​	这三者的关系类似于 Java 里面的 package 名和类名，最外层的 Namespace 是可以用于区分部署环境的，Group 和 DataID 逻辑上区分两个目标对象。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/sanzheguanxi%20.png&#34; class=&#34;&#34; title=&#34;sanzheguanxi&#34;&gt;
&lt;p&gt;&lt;strong&gt;默认情况&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Namespace=public，Group=DEFAULT_GROUP，默认 Cluster 是 DEFAULT&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;具体情况&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	Nacos 默认的命名空间是 public，我们就可以利用 Namespace 来实现隔离，比如我们现在有三个环境：开发、测试、生产环境，我们就可以创建三个 Namespace，不同的 N amespace 之间是隔离的。&lt;/p&gt;
&lt;p&gt;​	Group 本身就是分组的意思，它可以把不同的微服务划分到同一个分组里面去。&lt;/p&gt;
&lt;p&gt;​	剩下的就是具体微服务，一个 Service 可以包含多个 Cluster，Nacos 默认 Cluster 是 DEFAULT，Cluster 是对指定微服务的一个虚拟划分。比如说，将一个 Service 部署在北京和和杭州的机房中，北京机房的 Service 就可以起名为（BJ），杭州机房中的 Service 就可以起名为（HZ），这样就可以尽量让同一个机房的微服务互相调用，提升性能。&lt;/p&gt;
&lt;h2 id=&#34;切换不同环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#切换不同环境&#34;&gt;#&lt;/a&gt; 切换不同环境&lt;/h2&gt;
&lt;h3 id=&#34;dataid方案&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dataid方案&#34;&gt;#&lt;/a&gt; DataID 方案&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;指定 spring.profile.active 和配置文件的 DataID 来使不同环境下读取不同的配置，配置规则：默认空间 + 新建 dev 和 test 两个 DataId：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;新建 dev 配置 DataID（已经创建完成）&lt;/li&gt;
&lt;li&gt;新建 test 配置 DataID&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210926170016223.png&#34; class=&#34;&#34; title=&#34;image-20210926170016223&#34;&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过 spring.profile.active 属性就能进行多环境下配置文件的读取&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210926170339921.png&#34; class=&#34;&#34; title=&#34;image-20210926170339921&#34;&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210926170620844.png&#34; class=&#34;&#34; title=&#34;image-20210926170620844&#34;&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;spring&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  profiles&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    # active&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; dev #表示开发环境&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    active&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; test #表示测试环境&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;测试&lt;/p&gt;
&lt;p&gt;最后再次访问：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xvY2FsaG9zdDozMzc3L2xvY2FsaG9zdC9jb25maWcvaW5mbw==&#34;&gt;http://localhost:3377/localhost/config/info&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210926170942161.png&#34; class=&#34;&#34; title=&#34;image-20210926170942161&#34;&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;group方案&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#group方案&#34;&gt;#&lt;/a&gt; Group 方案&lt;/h3&gt;
&lt;p&gt;​	根据之前的讲解我们都知道 Group 为分组默认是：DEFAULT_GROUP，所以现在我们就需要分出两组，一组是 “Dev 开发组”，一组是 “test 测试组”&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;新建 Group&lt;/p&gt;
&lt;p&gt;DEV_GROUP&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210926171610558.png&#34; class=&#34;&#34; title=&#34;image-20210926171610558&#34;&gt;
&lt;p&gt;​		TEST_GROUP&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210926171904382.png&#34; class=&#34;&#34; title=&#34;image-20210926171904382&#34;&gt;
&lt;p&gt;配置列表，两个 DataID 一致，但是分组不同的配置文件：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210926171954022.png&#34; class=&#34;&#34; title=&#34;image-20210926171954022&#34;&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;完成以上配置以后，接下来就需要通过 bootstrap+application 来配合完成，具体方式：在 config 下增加一条 Group 的配置即可，可以配置为 DEV_GROUP 或 TEST_GROUP&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​	bootstrap:&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# nacos配置&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;server&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  port&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3377&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;spring&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  application&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;config&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;client&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  cloud&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    nacos&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      discovery&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        server&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;addr&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt; #&lt;span class=&#34;token class-name&#34;&gt;Nacos&lt;/span&gt;服务注册中心地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      config&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        server&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;addr&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt; #&lt;span class=&#34;token class-name&#34;&gt;Nacos&lt;/span&gt;作为配置中心地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        file&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;extension&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; yaml #指定yaml格式的配置&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        group&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;TEST_GROUP&lt;/span&gt; #增加分组&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	application:&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;spring&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  profiles&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    # active&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; dev #表示开发环境&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    # active&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; test #表示测试环境&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    active&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; info&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;测试（可以测试不同分组）：&lt;/p&gt;
&lt;p&gt;最后再次访问：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xvY2FsaG9zdDozMzc3L2xvY2FsaG9zdC9jb25maWcvaW5mbw==&#34;&gt;http://localhost:3377/localhost/config/info&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210926173730298.png&#34; class=&#34;&#34; title=&#34;image-20210926173730298&#34;&gt;
&lt;h3 id=&#34;namespace空间方案&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#namespace空间方案&#34;&gt;#&lt;/a&gt; Namespace 空间方案&lt;/h3&gt;
&lt;p&gt;​	我们已经把 DataID 方案和 Group 方案完成了，然后接下来我们来看一下 Namespace（命名空间）方案，默认此方案为 public，此方案不能删除，我们现在来新建两个命名空间方案&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210926174051313.png&#34; class=&#34;&#34; title=&#34;image-20210926174051313&#34;&gt;
&lt;ol&gt;
&lt;li&gt;新建 dev/test 的 Namespace&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210926174422526.png&#34; class=&#34;&#34; title=&#34;image-20210926174422526&#34;&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210926174807843.png&#34; class=&#34;&#34; title=&#34;image-20210926174807843&#34;&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;服务管理 - 服务列表页面查看&lt;/p&gt;
&lt;p&gt;此时我们就可以切换对应的命名空间，然后再通过 Group 和 DataID 来进行切换，如果想要切换命名空间，我们就需要通过命名空间 ID 来进行切换&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20220721230227374.png&#34; alt=&#34;image-20220721230227374&#34; /&gt;&lt;img data-src=&#34;Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20220721230244037.png&#34; alt=&#34;image-20220721230244037&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;按照域名配置（Namespace+Group+DataId）编写&lt;/p&gt;
&lt;p&gt;​	先通过 namespace 命名空间 ID 来确认使用的命名空间&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210926175605787.png&#34; class=&#34;&#34; title=&#34;image-20210926175605787&#34;&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# nacos配置&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;server&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  port&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3377&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;spring&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  application&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;config&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;client&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  cloud&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    nacos&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      discovery&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        server&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;addr&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt; #&lt;span class=&#34;token class-name&#34;&gt;Nacos&lt;/span&gt;服务注册中心地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      config&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        server&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;addr&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt; #&lt;span class=&#34;token class-name&#34;&gt;Nacos&lt;/span&gt;作为配置中心地址&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        file&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;extension&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; yaml #指定yaml格式的配置&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        group&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token constant&#34;&gt;TEST_GROUP&lt;/span&gt; # 指定分组&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        namespace&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;ba4bf0e&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;210&lt;/span&gt;c&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;41&lt;/span&gt;ce&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;954&lt;/span&gt;c&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;23538d&lt;/span&gt;e1dcbc #指定命名空间&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;spring&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  profiles&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    active&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; dev #表示开发环境&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    # active&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; test #表示测试环境&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    # active&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; info&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​&lt;/p&gt;
&lt;p&gt;然后再回到 Nacos 配置列表，添加 Dev 命名空间下的配置，添加 3 条&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210926180321810.png&#34; class=&#34;&#34; title=&#34;image-20210926180321810&#34;&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210926180120552.png&#34; class=&#34;&#34; title=&#34;image-20210926180120552&#34;&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210926180520423.png&#34; class=&#34;&#34; title=&#34;image-20210926180520423&#34;&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;测试：访问 http://localhost:3377/localhost/config/info 来进行测试&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;nacos集群架构说明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nacos集群架构说明&#34;&gt;#&lt;/a&gt; Nacos 集群架构说明&lt;/h1&gt;
&lt;p&gt;​	到目前为止，我们已经对 Nacos 的一些基本使用和配置已经掌握，但是这些还不够，我们还需要了解一个非常重要的点，就是 Nacos 的集群相关的操作，那我们就先从 Nacos 集群配置的概念说起&lt;/p&gt;
&lt;h2 id=&#34;nacos支持三种部署模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nacos支持三种部署模式&#34;&gt;#&lt;/a&gt; Nacos 支持三种部署模式&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;单机模式 - 用于测试和单机试用&lt;/li&gt;
&lt;li&gt;集群模式 - 用于生产环境，确保高可用&lt;/li&gt;
&lt;li&gt;多集群模式 - 用于多数据中心场景&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;集群部署说明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#集群部署说明&#34;&gt;#&lt;/a&gt; 集群部署说明&lt;/h2&gt;
&lt;p&gt;参考网站：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9uYWNvcy5pby96aC1jbi9kb2NzL2NsdXN0ZXItbW9kZS1xdWljay1zdGFydC5odG1s&#34;&gt;https://nacos.io/zh-cn/docs/cluster-mode-quick-start.html&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;架构图&lt;/strong&gt;：部署生产使用的集群模式&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210927163629652.png&#34; class=&#34;&#34; title=&#34;image-20210927163629652&#34;&gt;
&lt;p&gt;&lt;strong&gt;具体拆分&lt;/strong&gt;&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210927165142680.png&#34; class=&#34;&#34; title=&#34;image-20210927165836853&#34;&gt;
&lt;h2 id=&#34;预备环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#预备环境&#34;&gt;#&lt;/a&gt; 预备环境&lt;/h2&gt;
&lt;p&gt;​	默认 Nacos 使用嵌入式数据库实现数据的存储，所以，如果启动多个默认配置下的 Nacos 节点，数据储存存在一致性问题，为了解决这个问题，Nacos 采用了集中存储方式来支持集群化部署，目前仅支持 MySql 的存储。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;推荐使用 Linux&lt;/li&gt;
&lt;li&gt;可以使用内部数据源或者外部数据源（推荐使用外部）MySql&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;nacos持久化切换配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nacos持久化切换配置&#34;&gt;#&lt;/a&gt; Nacos 持久化切换配置&lt;/h1&gt;
&lt;h2 id=&#34;nacos持久化配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nacos持久化配置&#34;&gt;#&lt;/a&gt; Nacos 持久化配置&lt;/h2&gt;
&lt;p&gt;​	Nacos 默认自带嵌入式数据库 derby，所以我们每次创建一个 Nacos 实例就会有一个 derby，当有多个 Nacos 节点的时候，就会出现一致性问题，所以 Nacos 支持了外部数据库统一数据管理 MySql。&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210927174839244.png&#34; class=&#34;&#34; title=&#34;image-20210927174839244&#34;&gt;
&lt;h2 id=&#34;nacos默认derby切换mysql&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nacos默认derby切换mysql&#34;&gt;#&lt;/a&gt; Nacos 默认 derby 切换 MySql&lt;/h2&gt;
&lt;p&gt;具体配置方式可以参考官网：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9uYWNvcy5pby96aC1jbi9kb2NzL2RlcGxveW1lbnQuaHRtbA==&#34;&gt;https://nacos.io/zh-cn/docs/deployment.html&lt;/span&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;我们需要找到 Nacos 安装目录下的 conf 目录中的 Sql 脚本，然后在数据库中进行执行&lt;/p&gt;
&lt;p&gt;注意：需要我们先创建好数据库并且使用：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token constant&#34;&gt;CREATE&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DATABASE&lt;/span&gt; nacos_config&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;USE&lt;/span&gt; nacos_config&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210927175150183.png&#34; class=&#34;&#34; title=&#34;image-20210927175150183&#34;&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;修改&lt;strong&gt; conf/application.properties&lt;/strong&gt; 文件，增加支持 mysql 数据源配置（目前只支持 mysql），添加 mysql 数据源的 url、用户名和密码。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;spring&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;datasource&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;platform&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;mysql&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;num&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;jdbc&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;mysql&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3306&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;nacos_config&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;characterEncoding&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;utf8&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;connectTimeout&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;socketTimeout&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3000&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;autoReconnect&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;serverTimezone&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;UTC&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;user&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;root&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;password&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;root&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;​	这里表示更改 Nacos 数据库为本机 MySql 数据库&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;strong&gt;这里需要注意几个点，一个是 url 地址需要改，另外数据库的用户和密码也需要更改，同时还有一个是官网上在&lt;/strong&gt; db.url.0=jdbc:mysql&lt;/strong&gt; 这个属性上少了一个属性为&lt;strong&gt; serverTimezone=UTC&lt;/strong&gt; 需要我们手动添加&lt;/p&gt;
&lt;h2 id=&#34;测试-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试-4&#34;&gt;#&lt;/a&gt; 测试&lt;/h2&gt;
&lt;p&gt;重启 Nacos 服务，此时之前所创建的 Namespace+Group+DataID 将全部消失，因为这些数据是保存在之前 Nacos 内嵌的 derby 数据库中，现在使用的是本地的 MySql 数据库，此时我们可以添加配置测试，在查看数据库 nacos_config 中的 config_info 表，此时就会有新添加的配置内容&lt;/p&gt;
&lt;h1 id=&#34;nacos之linux版本安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nacos之linux版本安装&#34;&gt;#&lt;/a&gt; Nacos 之 Linux 版本安装&lt;/h1&gt;
&lt;h2 id=&#34;linux版nacosmysql生产环境配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#linux版nacosmysql生产环境配置&#34;&gt;#&lt;/a&gt; Linux 版 Nacos+MySql 生产环境配置&lt;/h2&gt;
&lt;p&gt;​	在之前的课程中我们已经给大家讲解过了 Nacos 生产环境下需要搭建集群配置，那么这里我们预计需要：1 个 Nginx+3 个 Nacos 注册中心 + 1 个 MySql&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210927165142680-1688910942796.png&#34; class=&#34;&#34; title=&#34;image-20210927165142680&#34;&gt;
&lt;h2 id=&#34;具体配置-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#具体配置-2&#34;&gt;#&lt;/a&gt; 具体配置：&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;在官网上下载 NacosLinux 版本：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvbmFjb3MvcmVsZWFzZXM=&#34;&gt;https://github.com/alibaba/nacos/releases&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210928163131899.png&#34; class=&#34;&#34; title=&#34;image-20210928163131899&#34;&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;在 Linux 系统中解压此文件，并且把其中 nacos 目录拷贝到 nacos 目录中&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;tar &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;zxvf nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;server&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;tar&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;gz&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;打开 nacos 目录下的 bin 目录输入命令即可执行&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210928183219115.png&#34; class=&#34;&#34; title=&#34;image-20210928183219115&#34;&gt;
&lt;h1 id=&#34;nacos集群配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nacos集群配置&#34;&gt;#&lt;/a&gt; Nacos 集群配置&lt;/h1&gt;
&lt;h2 id=&#34;更改nacos启动命令配置原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#更改nacos启动命令配置原理&#34;&gt;#&lt;/a&gt; 更改 Nacos 启动命令配置原理&lt;/h2&gt;
&lt;p&gt;我们现在知道，想要启动 Naocs 只需要启动 startup.sh 命令即可，但是如果启动 3 个 Nacos 那？所以如果我们需要启动多个 Nacos，其实 Nacos 本身默认启动就是集群模式。&lt;/p&gt;
&lt;p&gt;注意点：如果是 linux 虚拟机，需要分配至少 4g 以上内存&lt;/p&gt;
&lt;h2 id=&#34;具体配置-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#具体配置-3&#34;&gt;#&lt;/a&gt; 具体配置&lt;/h2&gt;
&lt;h3 id=&#34;linux服务器上mysql数据库配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#linux服务器上mysql数据库配置&#34;&gt;#&lt;/a&gt; Linux 服务器上 MySql 数据库配置&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;在 Linux 系统上执行 SQL 脚本，具体位置在 nacos 目录下的 conf 中，这里的操作和之前是一样的，我们可以直接打开这个文件然后拷贝到数据库中执行，当然也是要创建数据库使用数据库然后在复制脚本内容，执行即可&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;create database nacos_config&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;use nacos_config&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210929175710498.png&#34; class=&#34;&#34; title=&#34;image-20210929175710498&#34;&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;修改 application.properties 配置文件，但是修改之前我们最好做一个备份。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;cp application&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;properties application&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;properties&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;init&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;这里的修改和我们之间的在 win 上的修改是完全一样的，所以我们只要打开这个文件，加上对应的内容即可&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;spring&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;datasource&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;platform&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;mysql&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;num&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;url&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;jdbc&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;mysql&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3306&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;nacos_config&lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt;characterEncoding&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;utf8&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;connectTimeout&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;socketTimeout&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3000&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;autoReconnect&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;serverTimezone&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;UTC&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;user&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;root&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;password&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;123456&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;还要注意一点，这个文件中的两个服务的端口号也要对应修改&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;#&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Spring&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Boot&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Related&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Configurations&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;#&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;### &lt;span class=&#34;token class-name&#34;&gt;Default&lt;/span&gt; web context path&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;server&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;servlet&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;contextPath&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;nacos&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;### &lt;span class=&#34;token class-name&#34;&gt;Default&lt;/span&gt; web server port&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;server&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;port&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8888&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8868&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;linux服务器上nacos的集群配置cluterconf&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#linux服务器上nacos的集群配置cluterconf&#34;&gt;#&lt;/a&gt; Linux 服务器上 Nacos 的集群配置 cluter.conf&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;这里开始正式配置集群，首先我们要更改 cluter.conf 这个配置文件，当然我们也需要备份，但是这里它的原始名称为：cluster.conf.example，我们需要把它保留同时复制出一个 cluster.conf 来进行更改&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;cp cluster&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;conf&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;example cluster&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;conf&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210929182825202.png&#34; class=&#34;&#34; title=&#34;image-20210929182825202&#34;&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;具体配置内容，这里我们在配置集群的时候不能直接写 127.0.0.1 这样，这样分不清楚，所以我们需要知道具体的 IP 地址，我们可以通过：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ip a #查看具体ip&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20220321182422028.png&#34; class=&#34;&#34; title=&#34;image-20220321182422028&#34;&gt;
&lt;p&gt;具体需修改内容，这里注意，我们在修改端口的时候一定要有一定的偏移量，因为 Nacos2.0 本身新增了占用端口，所以我们在设置端口号的时候注意要避开，不要占用端口，以下是官网截图：&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20220321175516671.png&#34; class=&#34;&#34; title=&#34;image-20220321175516671&#34;&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# 格式： ip地址&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;端口号&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;192.168&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.189&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.129&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;192.168&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.189&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.129&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8868&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token number&#34;&gt;192.168&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.189&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.129&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8888&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;启动三个阶段的nacos测试&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#启动三个阶段的nacos测试&#34;&gt;#&lt;/a&gt; 启动三个阶段的 Nacos 测试&lt;/h3&gt;
&lt;p&gt;当上方配置完成之后，我们此时就可以启动三个节点的 Nacos 进行测试，启动方式和 Win 上区别不大：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;但是要注意一点，因为我们要开放端口测试，所以我们在启动 nacos 之前，要进行关闭防火墙操作：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 关闭防火墙服务 - 但是开启还会自动启动&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;systemctl stop firewalld&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 彻底关闭 - 开机不会启动防火墙&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;systemctl disable firewalld&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;启动三个 nacos 节点，分别进入到三个 Nacos 节点的 bin 目录中进行启动：&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20220321180934633.png&#34; class=&#34;&#34; title=&#34;image-20220321180934633&#34;&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sh startup&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sh &lt;span class=&#34;token comment&#34;&gt;// 启动命令&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;启动完成以后，我们可以分别看一下启动日志，防止启动出现问题，启动路径：&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20220321181649453.png&#34; class=&#34;&#34; title=&#34;image-20220321181649453&#34;&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;这里我们可以通过 cat 命令或者 tail -f 命令&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;cat &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;home&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;msb&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;opt&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;nacos3&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;logs&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;start&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;tail &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;f &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;home&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;msb&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;opt&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;nacos3&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;logs&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;start&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20220321181429986.png&#34; class=&#34;&#34; title=&#34;image-20220321181429986&#34;&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;通过浏览器分别访问三个阶段的 Nacos，测试是否成功启动&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在看到所有服务都启动成功之后，我们通过浏览器访问对应地址，就可以进入到对应节点的 Nacos 控制台上，然后我们可以查看集群管理，节点列表&lt;/p&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20220321182820980.png&#34; class=&#34;&#34; title=&#34;image-20220321182820980&#34;&gt;
&lt;p&gt;&lt;strong&gt;有可能只能启动一个，这是因为 JVM 设置的参数太大可以修改 start.sh 但是还是建议在开两台机器，将服务部署到其他机器上，还有一种办法就是将这个机器的内存调大大的&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;nginx配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#nginx配置&#34;&gt;#&lt;/a&gt; Nginx 配置&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;我们需要找到 Nginx 的配置文件，然后做备份&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;cd &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;usr&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;local&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;nginx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;cp nginx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;conf nginx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;conf&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;bk&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210929211042606.png&#34; class=&#34;&#34; title=&#34;image-20210929211042606&#34;&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;修改 nginx.conf&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;worker_processes  &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;events &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    worker_connections  &lt;span class=&#34;token number&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;stream &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      upstream nacos &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        server &lt;span class=&#34;token number&#34;&gt;192.168&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.52&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        server &lt;span class=&#34;token number&#34;&gt;192.168&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.52&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8868&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        server &lt;span class=&#34;token number&#34;&gt;192.168&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.52&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8888&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     server &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        listen  &lt;span class=&#34;token number&#34;&gt;81&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        proxy_pass nacos&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;测试启动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试启动&#34;&gt;#&lt;/a&gt; 测试启动&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;首先进入到 Nginx 目录下，启动 Nginx，同时要带着我们设置过得配置文件启动&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;cd &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;usr&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;local&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;nginx&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;sbin&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;/nginx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;通过访问 Nginx 来测试是否能够访问到 Nacos，在 win 系统浏览器网址上输入：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;http&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;192.168&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.189&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.129&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;81&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;nacos&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210930150017223.png&#34; class=&#34;&#34; title=&#34;image-20210930150017223&#34;&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;使用账号密码 nacos，nacos 成功登录就表示此时已经完成全部配置&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210930153201511.png&#34; class=&#34;&#34; title=&#34;image-20210930153201511&#34;&gt;
&lt;h3 id=&#34;添加配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#添加配置&#34;&gt;#&lt;/a&gt; 添加配置&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;在 Nacos 平台上添加配置&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210930153148673.png&#34; class=&#34;&#34; title=&#34;image-20210930153148673&#34;&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;在数据库中检查是否有这一条配置，如果有表示成功添加&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210930153709605.png&#34; class=&#34;&#34; title=&#34;image-20210930153709605&#34;&gt;
&lt;h3 id=&#34;配置微服务为linux版nacos集群并注册进nacos&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置微服务为linux版nacos集群并注册进nacos&#34;&gt;#&lt;/a&gt; 配置微服务为 Linux 版 Nacos 集群并注册进 Nacos&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;我们以 9002 为例，此时我们要修改 application.yaml 文件，把之前的 Nacos 端口换成 Nacos 集群&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;server&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  port&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9002&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;spring&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  application&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; nacos&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;provider&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  cloud&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    nacos&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      discovery&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        # server&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;addr&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; localhost&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8848&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        # 换成nginx的&lt;span class=&#34;token number&#34;&gt;81&lt;/span&gt;端口，做集群&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        server&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;addr&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; http&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;192.168&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.189&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;.129&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;81&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;management&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  endpoint&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    web&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      exponsure&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        include&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token char&#34;&gt;&#39;*&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;配置完成启动服务，我们就可以在 Naocs 平台上看见对应的微服务了，此时表示服务注册成功&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20210930155527834.png&#34; class=&#34;&#34; title=&#34;image-20210930155527834&#34;&gt;
&lt;h3 id=&#34;总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h3&gt;
&lt;img data-src=&#34;/Spring_Family/spring-cloud-alibaba/Nacos%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/image-20220321185952218.png&#34; class=&#34;&#34; title=&#34;image-20220321185952218&#34;&gt;

&lt;div id=&#34;gitalk-container&#34;&gt;&lt;/div&gt;
&lt;script src=&#34;https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js&#34;&gt;&lt;/script&gt;&lt;link rel=&#34;stylesheet&#34; href=&#34;https://unpkg.com/gitalk/dist/gitalk.css&#34;&gt;&lt;script src=&#34;https://unpkg.com/gitalk/dist/gitalk.min.js&#34;&gt;&lt;/script&gt;

		&lt;script&gt;
		var gitalkConfig = {&#34;clientID&#34;:&#34;6db178ba46c8af8f6a6f&#34;,&#34;clientSecret&#34;:&#34;90f730e5956024596558df00975cd8eae28cae3d&#34;,&#34;repo&#34;:&#34;bk-comment01&#34;,&#34;owner&#34;:&#34;onlymarryu&#34;,&#34;admin&#34;:[&#34;onlymarryu&#34;],&#34;distractionFreeMode&#34;:false,&#34;language&#34;:&#34;zh-CN&#34;,&#34;proxy&#34;:&#34;https://gitalk-comments.netlify.app/github_access_token&#34;,&#34;perPage&#34;:15};
	    gitalkConfig.id = md5(location.pathname);
		var gitalk = new Gitalk(gitalkConfig);
	    gitalk.render(&#34;gitalk-container&#34;);
	    &lt;/script&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://eth168.top/Distribution/Elasticsearch-8/</guid>
            <title>Elasticsearch-8</title>
            <link>https://eth168.top/Distribution/Elasticsearch-8/</link>
            <category term="分布式" scheme="https://eth168.top/categories/%E5%88%86%E5%B8%83%E5%BC%8F/" />
            <category term="分布式" scheme="https://eth168.top/tags/%E5%88%86%E5%B8%83%E5%BC%8F/" />
            <category term="中间件" scheme="https://eth168.top/tags/%E4%B8%AD%E9%97%B4%E4%BB%B6/" />
            <pubDate>Sun, 02 Jul 2023 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;blockquote&gt;
&lt;p&gt;尚硅谷项目课程系列之 &lt;strong&gt;Elasticsearch8.X&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image1.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.240972222222222in&#34;
&lt;p&gt;height=&amp;quot;2.0944444444444446in&amp;quot;}&lt;/p&gt;
&lt;p&gt;尚硅谷 JavaEE 教研组&lt;/p&gt;
&lt;h1 id=&#34;第1章-elasticsearch-8x-概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第1章-elasticsearch-8x-概述&#34;&gt;#&lt;/a&gt; 第 1 章 Elasticsearch 8.X 概述&lt;/h1&gt;
&lt;h2 id=&#34;11-elasticsearch-8x-来了&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-elasticsearch-8x-来了&#34;&gt;#&lt;/a&gt; 1.1 Elasticsearch 8.X 来了&lt;/h2&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image2.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.7625in&#34; height=&#34;3.3381944444444445in&#34;} 距
&lt;p&gt;2019 年 Elasticsearch 上一大版本 7.0 发布至今已经过去了 3 年。这 3&lt;br /&gt;
 年中，由于疫情等众所周知的原因，程序员对很多软件技术的更新和迭代其实并不会抱有太多的期待和幻想。不过，2022&lt;br /&gt;
 年 2 月 11 日，Elasticsearch 发布了全新的 8.0&lt;br /&gt;
 正式版本，这着实给了我们不小的惊喜！新版本中通过改进 Elasticsearch&lt;br /&gt;
 的矢量搜索功能、对现代自然语言处理模型的原生支持、不断简化的数据上线过程，以及精简的安全防护体验，在速度、扩展幅度、相关性和简便性方面，让搜索引擎技术迎来了一个全新的时代。&lt;/p&gt;
&lt;h2 id=&#34;12-elasticsearch-新特性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12-elasticsearch-新特性&#34;&gt;#&lt;/a&gt; &lt;strong&gt;1.2 Elasticsearch&lt;/strong&gt; 新特性&lt;/h2&gt;
&lt;p&gt;从 2019 年 4 月 10 日 Elasticsearch7.0 版本的发布，到 2022 年 2 月 11 日&lt;br /&gt;
 Elasticsearch8.0 版本的发布的近 3&lt;br /&gt;
 年间，基于不断优化的开发设计理念，Elasticsearch&lt;br /&gt;
 发布了一系列的小版本。这些小版本在以下方面取得了长足的进步并同时引入一些全新的功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;减少内存堆使用，完全支持 ARM&lt;br /&gt;
 架构，引入全新的方式以使用更少的存储空间，从而让每个节点托管更多的数据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;降低查询开销，在大规模部署中成效尤为明显&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;提高日期直方图和搜索聚合的速度，增强了页面缓存的性能，并创建了一个新的&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;pre-filter&amp;quot; 搜索短语&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在 Elasticsearch 7.3 和 Elasticsearch 7.4&lt;br /&gt;
 版中，引入了对矢量相似函数的支持在最新发布的 8.0&lt;br /&gt;
 版本中，也同样增加和完善了很多新的功能&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;增加对自然语言处理 (NLP)&lt;br /&gt;
 模型的原生支持，让矢量搜索功能更容易实现，让客户和员工能够使用他们自己的文字和语言来搜索并收到高度相关的结果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;直接在 Elasticsearch&lt;br /&gt;
 中执行命名实体识别、情感分析、文本分类等，而无需使用额外的组件或进行编码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Elasticsearch 8.0 基于 Lucene 9.0 开发的，那些利用现代 NLP&lt;br /&gt;
 的搜索体验，都可以借助（新增的）对近似最近邻搜索的原生支持，快速且大规模地实现。通过&lt;br /&gt;
 ANN，可以快速并高效地将基于矢量的查询与基于矢量的文档语料库（无论是小语料库、大语料库&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;还是巨型语料库）进行比较。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;可以直接在 Elasticsearch 中使用 PyTorch Machine Learning 模型（如&lt;br /&gt;
 BERT），并在&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Elasticsearch 中原生使用这些模型执行推理。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;13-elasticsearch-课程升级&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13-elasticsearch-课程升级&#34;&gt;#&lt;/a&gt; &lt;strong&gt;1.3 Elasticsearch&lt;/strong&gt; 课程升级&lt;/h2&gt;
&lt;p&gt;之前课程中的 Elasticsearch 软件是基于 7.8 版本进行讲解的，既然&lt;br /&gt;
 Elasticsearch 升级到了 8.X&lt;br /&gt;
 版本，我们也要与时俱进，不断更新课件，拥抱最新版本。&lt;/p&gt;
&lt;p&gt;虽然之前的课程内容是基于 7.8&lt;br /&gt;
 版本，但其实讲解时主要还是侧重于入门级基础内容，这一次我们不仅仅要将 8.X&lt;br /&gt;
 新版本的特性介绍给大家，同时课程中还会融合一些新的 7.X 版&lt;/p&gt;
&lt;p&gt;本特性的内容。&lt;/p&gt;
&lt;h1 id=&#34;第2章-elasticsearch-安装-使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第2章-elasticsearch-安装-使用&#34;&gt;#&lt;/a&gt; 第 2 章 Elasticsearch 安装 &amp;amp; 使用&lt;/h1&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image3.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.254389763779527in&#34;
&lt;p&gt;height=&amp;quot;2.2141754155730533in&amp;quot;}&lt;/p&gt;
&lt;p&gt;从官网截图上可以看到，Elasticsearch 最新版本也终于开始拥抱号称史上最快的 JDK 了。&lt;/p&gt;
&lt;p&gt;所以在安装 ES 软件前，需要下载使用 Java JDK17&lt;/p&gt;
&lt;h2 id=&#34;211-下载软件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#211-下载软件&#34;&gt;#&lt;/a&gt; 2.1.1 下载软件&lt;/h2&gt;
&lt;p&gt;Java 的官方地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cub3JhY2xlLmNvbS9qYXZh&#34;&gt;https://www.oracle.com/java&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Java 最新的版本是 18.0.1.1（截止 2022.6.15），我们选择 17.0.3 版本&lt;/p&gt;
&lt;p&gt;下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cub3JhY2xlLmNvbS9qYXZhL3RlY2hub2xvZ2llcy9kb3dubG9hZHM=&#34;&gt;https://www.oracle.com/java/technologies/downloads&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image5.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.837723097112861in&#34;
&lt;p&gt;height=&amp;quot;1.951000656167979in&amp;quot;}&lt;/p&gt;
&lt;p&gt;对于 Java 开发人员来讲，更熟悉的开发版本应该是 JDK1.8，突然需要升级到&lt;br /&gt;
 JDK17，其实本身会感觉有点不适应，甚至会有点排斥。担心升级后会对现有的程序代码造成影响。其实，对于&lt;br /&gt;
 JDK1.8，最新版本的 JDK17 增加了很多的语法特性:&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image7.jpg&#34; class=&#34;&#34;&gt;{width=&#34;2.98875in&#34; height=&#34;1.2983464566929135in&#34;}
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image9.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.092361111111111in&#34;
&lt;p&gt;height=&amp;quot;7.0061242344706915in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image11.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.626388888888889in&#34;
&lt;p&gt;height=&amp;quot;4.358333333333333in&amp;quot;}&lt;/p&gt;
&lt;p&gt;对于大多数项目而言，想要利用这些新的特性，是需要修改代码的，但性能除外。也就是说，升级&lt;br /&gt;
 JDK&lt;br /&gt;
 版本，现有代码即使不进行修改，也不会出现兼容问题，但性能会得到极大的提升，并且高吞吐量垃圾回收器比低延迟垃圾回收器更快，更重要的是它可以免费商用。&lt;/p&gt;
&lt;p&gt;对于升级版本而言，如果你依然有顾虑，一个好的消息就是我们可以下载含有适配&lt;br /&gt;
 JDK 的 ES 版本，上面提到的内容基本上就不用考虑，一切就是这么顺滑，对吗？&lt;/p&gt;
&lt;h2 id=&#34;22-elasticsearch-安装-使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22-elasticsearch-安装-使用&#34;&gt;#&lt;/a&gt; &lt;strong&gt;2.2 Elasticsearch&lt;/strong&gt; 安装 &lt;strong&gt;&amp;amp;&lt;/strong&gt; 使用&lt;/h2&gt;
&lt;h3 id=&#34;221-下载软件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#221-下载软件&#34;&gt;#&lt;/a&gt; 2.2.1 下载软件&lt;/h3&gt;
&lt;p&gt;Elasticsearch 的官方地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9jbi8=&#34;&gt;https://www.elastic.co/cn/&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Elasticsearch 最新的版本是 8.2.3（截止 2022.06.15），我们选择略早的&lt;br /&gt;
 8.1.0&lt;br /&gt;
 版本下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9jbi9kb3dubG9hZHMvcGFzdC1yZWxlYXNlcyNlbGFzdGljc2VhcmNo&#34;&gt;https://www.elastic.co/cn/downloads/past-releases#elasticsearch&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image12.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.2757086614173228in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以根据情况自行选择不同操作系统的版本。&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image14.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.9764162292213474in&amp;quot;}&lt;/p&gt;
&lt;p&gt;本课程着重讲解新版 ES 软件的特性及应用，所以采用 linux 集群配置。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;集群规划为了演示软件的使用，我们这里准备三台 linux 虚拟机，用于配置&lt;br /&gt;
 Elasticsearch 集群。启动集群后，每台虚拟机的进程如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;主机名   linux1                     linux2                     linux3&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;进程名   Elasticsearch (es-node-1)   Elasticsearch (es-node-2)   Elasticsearch (es-node-3)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Linux 系统环境配置请参考之前课程内容。这里我们给三台虚拟机搭建 ES&lt;br /&gt;
 集群，集群&lt;/p&gt;
&lt;p&gt;中 - 节点名称依次为 es-node-1，es-node-2，es-node-3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;将压缩包 elasticsearch-8.1.0-linux-x86_64.tar.gz 上传到虚拟机中&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image16.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.614444444444445in&#34;
&lt;p&gt;height=&amp;quot;0.9016797900262468in&amp;quot;}&lt;/p&gt;
&lt;p&gt;解压缩文件到自定义路径，笔者解压路径为：/opt/module, 解压后，软件路径为：&lt;/p&gt;
&lt;p&gt;/opt/module/elasticsearch-8.1.0&lt;/p&gt;
&lt;p&gt;# 切换目录&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;cd. software&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# 解压缩&lt;/p&gt;
&lt;p&gt;tar -zxvf elasticsearch-8.1.0-linux-x86_64.tar.gz -C /opt/module&lt;/p&gt;
&lt;p&gt;解压后的 Elasticsearch 的目录结构如下&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image18.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.322361111111111in&#34;
&lt;p&gt;height=&amp;quot;1.8808464566929133in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;+---------+------------------+&lt;br /&gt;
| 目录    | &amp;gt; 含义           |&lt;br /&gt;
+=&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;+&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;==========+&lt;br /&gt;
| bin     | &amp;gt; 可执行脚本目录 |&lt;br /&gt;
+---------+------------------+&lt;br /&gt;
| config  | &amp;gt; 配置目录       |&lt;br /&gt;
+---------+------------------+&lt;br /&gt;
| jdk     | &amp;gt; 内置 JDK 目录  |&lt;br /&gt;
+---------+------------------+&lt;br /&gt;
| lib     | &amp;gt; 类库           |&lt;br /&gt;
+---------+------------------+&lt;br /&gt;
| logs    | &amp;gt; 日志目录       |&lt;br /&gt;
+---------+------------------+&lt;br /&gt;
| modules | &amp;gt; 模块目录       |&lt;br /&gt;
+---------+------------------+&lt;br /&gt;
| plugins | &amp;gt; 插件目录       |&lt;br /&gt;
+---------+------------------+&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;当前安装 ES 版本为 8.1.0，自带 JDK，所以当前 Linux&lt;br /&gt;
 虚拟机节点无需配置 Java 环境&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建 linux 新用户 es, 数据文件，证书目录，并修改 Elasticsearch&lt;br /&gt;
 文件拥有者&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;# 新增 es 用户&lt;/p&gt;
&lt;p&gt;useradd es&lt;/p&gt;
&lt;p&gt;# 为 es 用户设置密码&lt;/p&gt;
&lt;p&gt;passwd es&lt;/p&gt;
&lt;p&gt;# 创建数据文件目录&lt;/p&gt;
&lt;p&gt;mkdir /opt/module/elasticsearch-8.1.0/data&lt;/p&gt;
&lt;p&gt;# 创建证书目录&lt;/p&gt;
&lt;p&gt;mkdir /opt/module/elasticsearch-8.1.0/config/certs&lt;/p&gt;
&lt;p&gt;#切换目录&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;cd. /opt/module/elasticsearch-8.1.0&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# 修改文件拥有者&lt;/p&gt;
&lt;p&gt;chown -R es:es /opt/module/elasticsearch-8.1.0&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;在第一台服务器节点 es-node-1 设置集群多节点通信密钥&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;# 切换用户&lt;/p&gt;
&lt;p&gt;su es&lt;/p&gt;
&lt;p&gt;# 签发 ca 证书，过程中需按两次回车键&lt;/p&gt;
&lt;p&gt;bin/elasticsearch-certutil ca&lt;/p&gt;
&lt;p&gt;# 用 ca 证书签发节点证书，过程中需按三次回车键&lt;/p&gt;
&lt;p&gt;bin/elasticsearch-certutil cert --ca elastic-stack-ca.p12&lt;/p&gt;
&lt;p&gt;# 将生成的证书文件移动到 config/certs 目录中&lt;/p&gt;
&lt;p&gt;mv elastic-stack-ca.p12 elastic-certificates.p12 config/certs&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;在第一台服务器节点 es-node-1 设置集群多节点 HTTP 证书&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;# 签发 Https 证书&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image20.jpg&#34; class=&#34;&#34;&gt;{width=&#34;2.995416666666667in&#34;
&lt;p&gt;height=&amp;quot;1.3232786526684164in&amp;quot;}&lt;/p&gt;
&lt;p&gt;指定证书路径&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image24.jpg&#34; class=&#34;&#34;&gt;{width=&#34;3.279861111111111in&#34;
&lt;p&gt;height=&amp;quot;0.36527777777777776in&amp;quot;}&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;无需输入密码&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image25.jpg&#34; class=&#34;&#34;&gt;{width=&#34;3.6173611111111112in&#34;
&lt;p&gt;height=&amp;quot;0.4027777777777778in&amp;quot;}&lt;/p&gt;
&lt;p&gt;设置证书失效时间&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image26.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.288888888888889in&#34;
&lt;p&gt;height=&amp;quot;0.4152777777777778in&amp;quot;}&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;无需每个节点配置证书&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image27.jpg&#34; class=&#34;&#34;&gt;{width=&#34;3.31875in&#34; height=&#34;0.5020833333333333in&#34;}
&lt;blockquote&gt;
&lt;p&gt;输出连接到第一个节点的所有主机名称&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image28.jpg&#34; class=&#34;&#34;&gt;{width=&#34;2.9054166666666665in&#34;
&lt;p&gt;height=&amp;quot;1.2348753280839895in&amp;quot;}&lt;/p&gt;
&lt;p&gt;输出连接到第一个节点的所有主机 IP 地址&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image30.jpg&#34; class=&#34;&#34;&gt;{width=&#34;3.092361111111111in&#34;
&lt;p&gt;height=&amp;quot;1.3182075678040246in&amp;quot;}&lt;/p&gt;
&lt;p&gt;不改变证书选项配置&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image32.jpg&#34; class=&#34;&#34;&gt;{width=&#34;2.7354166666666666in&#34;
&lt;p&gt;height=&amp;quot;0.4951388888888889in&amp;quot;}&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image33.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.474445538057743in&#34;
&lt;p&gt;height=&amp;quot;2.4377766841644792in&amp;quot;}&lt;/p&gt;
&lt;p&gt;# 解压文件&lt;/p&gt;
&lt;p&gt;unzip elasticsearch-ssl-http.zip&lt;/p&gt;
&lt;p&gt;将解压后的证书文件移动到 config/certs 目录中&lt;/p&gt;
&lt;p&gt;# 移动文件&lt;/p&gt;
&lt;p&gt;mv elasticsearch/http.p12 kibana/elasticsearch-ca.pem config/certs&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;修改主配置文件：config/elasticsearch.yml&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| &lt;sub&gt;#&lt;/sub&gt; 设置 ES 集群名称                                                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NsdXN0ZXIubmFtZQ==&#34;&gt;cluster.name&lt;/span&gt;: es-cluster                                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # 设置集群中当前节点名称                                            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL25vZGUubmFtZQ==&#34;&gt;node.name&lt;/span&gt;: es-node-1                                                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # 设置数据，日志文件路径                                            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| path.data: /opt/module/elasticsearch-8.1.0/data                      |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| path.logs: /opt/module/elasticsearch-8.1.0/log                       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # 设置网络访问节点                                                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| network.host: linux1                                                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # 设置网络访问端口                                                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| http.port: 9200                                                      |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # 初始节点                                                          |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| discovery.seed_hosts: [&amp;quot;linux1&amp;quot;]                                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # 安全认证                                                          |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| xpack.security.enabled: true xpack.security.enrollment.enabled: true |&lt;br /&gt;
| xpack.security.http.ssl:                                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| enabled: true keystore.path:                                         |&lt;br /&gt;
| /opt/module/elasticsearch-8.1.0/config/certs/http.p12                |&lt;br /&gt;
| truststore.path:                                                     |&lt;br /&gt;
| /opt/module/elasticsearch-8.1.0/config/certs/http.p12                |&lt;br /&gt;
| xpack.security.transport.ssl: enabled: true verification_mode:       |&lt;br /&gt;
| certificate keystore.path:                                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| /                                                                    |&lt;br /&gt;
| opt/module/elasticsearch-8.1.0/config/certs/elastic-certificates.p12 |&lt;br /&gt;
| truststore.path:                                                     |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| /                                                                    |&lt;br /&gt;
| opt/module/elasticsearch-8.1.0/config/certs/elastic-certificates.p12 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # 此处需注意，es-node-1 为上面配置的节点名称                         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| cluster.initial_master_nodes: [&amp;quot;es-node-1&amp;quot;] http.host:           |&lt;br /&gt;
| [_local_, _site_] ingest.geoip.downloader.enabled: false       |&lt;br /&gt;
| xpack.security.http.ssl.client_authentication: none                  |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;启动 ES 软件&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;# 启动 ES 软件&lt;/p&gt;
&lt;p&gt;bin/elasticsearch&lt;/p&gt;
&lt;p&gt;第一次成功启动后，会显示密码，请记住，访问时需要。只有第一次才有哟！&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image35.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.531112204724409in&#34;
&lt;p&gt;height=&amp;quot;2.1725131233595802in&amp;quot;}&lt;/p&gt;
&lt;p&gt;上面图形内容因为涉及到多节点集群配置以及 &lt;strong&gt;kibana&lt;/strong&gt;&lt;br /&gt;
 配置，所以极其重要！！！如果没有出现上面图片，出现下面图片也可以按照指定方式进行配置。&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image37.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.547777777777778in&#34;
&lt;p&gt;height=&amp;quot;1.4765409011373578in&amp;quot;}&lt;/p&gt;
&lt;p&gt;# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━&lt;br /&gt;
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ ━━━━━━━━━━━&lt;/p&gt;
&lt;p&gt;✅ Elasticsearch security features have been automatically configured!&lt;/p&gt;
&lt;p&gt;✅ Authentication is enabled and cluster connections are encrypted.&lt;/p&gt;
&lt;p&gt;ℹ️ Password for the elastic user (reset with&lt;/p&gt;
&lt;p&gt;`bin/elasticsearch-reset-password -u elastic`):&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;O3x0hfu7i=ZbQvlktCnd&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;❌ Unable to generate an enrollment token for Kibana instances, try&lt;br /&gt;
invoking `bin/elasticsearch-create-enrollment-token -s kibana`.&lt;/p&gt;
&lt;p&gt;❌ An enrollment token to enroll new nodes wasn&#39;t generated. To add&lt;br /&gt;
nodes and enroll them into this cluster:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;On this node:&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;⁃ Create an enrollment token with&lt;/p&gt;
&lt;p&gt;`bin/elasticsearch-create-enrollment-token -s node`.&lt;/p&gt;
&lt;p&gt;⁃ Restart Elasticsearch.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;On other nodes:&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;⁃ Start Elasticsearch with `bin/elasticsearch --enrollment-token&lt;br /&gt;
&amp;lt;token&amp;gt;`, using the enrollment token that you generated.&lt;/p&gt;
&lt;p&gt;━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━&lt;/p&gt;
&lt;p&gt;━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ ━━━━━━━━━━&lt;/p&gt;
&lt;p&gt;注意：9300 端口为 Elasticsearch 集群间组件的通信端口，9200&lt;br /&gt;
 端口为浏览器访问的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;http 协议 RESTful 端口。&lt;/p&gt;
&lt;ol start=&#34;9&#34;&gt;
&lt;li&gt;访问服务器节点 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly94bi0tY2VzNmE1ODlkcGxlaTgwYzo5MjAw&#34;&gt;https:// 虚拟机地址：9200&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因为配置了安全协议，所以使用 https&lt;br /&gt;
 协议进行访问，但由于证书是自己生成的，并不 可靠，所以会有安全提示&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image39.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.471111111111111in&#34;
&lt;p&gt;height=&amp;quot;2.3408464566929132in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image41.jpg&#34; class=&#34;&#34;&gt;{width=&#34;1.9756944444444444in&#34;
&lt;p&gt;height=&amp;quot;1.44375in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image42.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.474445538057743in&#34;
&lt;p&gt;height=&amp;quot;2.589443350831146in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;10&#34;&gt;
&lt;li&gt;修改集群中其他节点的配置文件：config/elasticsearch.yml&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;linux2: 证书直接拷贝，其他步骤完全相同，配置文件中修改如下内容即可&lt;/p&gt;
&lt;p&gt;# 设置节点名称&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL25vZGUubmFtZQ==&#34;&gt;node.name&lt;/span&gt;: es-node-2&lt;/p&gt;
&lt;p&gt;# 设置网络访问主机&lt;/p&gt;
&lt;p&gt;network.host: linux2&lt;/p&gt;
&lt;p&gt;linux3: 证书直接拷贝，其他步骤完全相同，配置文件中修改如下内容即可&lt;/p&gt;
&lt;p&gt;# 设置节点名称&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL25vZGUubmFtZQ==&#34;&gt;node.name&lt;/span&gt;: es-node-3&lt;/p&gt;
&lt;p&gt;# 设置网络访问主机&lt;/p&gt;
&lt;p&gt;network.host: linux3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;11&#34;&gt;
&lt;li&gt;依次启动集群的三台服务器节点，不要忘记切换用户后再启动&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;linux1:&lt;/p&gt;
&lt;p&gt;# 后台启动服务&lt;/p&gt;
&lt;p&gt;bin/elasticsearch -d&lt;/p&gt;
&lt;p&gt;linux2:&lt;/p&gt;
&lt;p&gt;# 后台启动服务&lt;/p&gt;
&lt;p&gt;bin/elasticsearch -d&lt;/p&gt;
&lt;p&gt;linux3:&lt;/p&gt;
&lt;p&gt;# 后台启动服务&lt;/p&gt;
&lt;p&gt;bin/elasticsearch -d&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;223-问题解决&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#223-问题解决&#34;&gt;#&lt;/a&gt; 2.2.3 问题解决&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Elasticsearch 是使用 java 开发的，8.1 版本的 ES 需要 JDK17&lt;br /&gt;
 及以上版本。默认安装包中带有 JDK 环境，如果系统配置 &lt;strong&gt;ES_JAVA_HOME&lt;/strong&gt;&lt;br /&gt;
 环境变量，那么会采用系统配置的 &lt;strong&gt;JDK&lt;/strong&gt;。如果没有配置该环境变量，ES&lt;br /&gt;
 会使用自带捆绑的 JDK。虽然自带的 JDK 是 ES 软件推荐的 Java&lt;br /&gt;
 版本，但一般建议使用系统配置的 JDK。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Windows 环境中出现下面的错误信息，是因为开启了 SSL 认证：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image44.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.368055555555555in&#34;
&lt;p&gt;height=&amp;quot;1.1993055555555556in&amp;quot;}&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;修改 config/elasticsearch.yml 文件，将 enabled 的值修改为 false&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| # Enable encryption for HTTP API client connections, such as        |&lt;br /&gt;
| Kibana, Logstash,                                                    |&lt;br /&gt;
+======================================================================+&lt;br /&gt;
| and Agents xpack.security.http.ssl:                                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| enabled: &lt;strong&gt;false&lt;/strong&gt; keystore.path: certs/http.p12                     |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启动成功后，如果访问 localhost:9200 地址后，弹出登录窗口&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image45.jpg&#34; class=&#34;&#34;&gt;{width=&#34;1.8333333333333333in&#34;
&lt;p&gt;height=&amp;quot;1.3395833333333333in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第一次启动时，因为开启了密码验证模式，在启动窗口中会显示输入账号和密码。如果&lt;br /&gt;
没有注意到或没有找到账号密码，可以设置免密登录：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# Enable security features xpack.security.enabled: &lt;strong&gt;false&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;双击启动窗口闪退，通过路径访问追踪错误，如果是 &amp;quot;空间不足&amp;quot;，请修改&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;config/jvm.options 配置文件&lt;/p&gt;
&lt;p&gt;#&lt;br /&gt;
设置 JVM 初始内存为 1G。此值可以设置与 - Xmx 相同，以避免每次垃圾回收完成后 JVM 重新分配内存&lt;/p&gt;
&lt;p&gt;# Xms represents the initial size of total heap space&lt;/p&gt;
&lt;p&gt;# 设置 JVM 最大可用内存为 1G&lt;/p&gt;
&lt;p&gt;# Xmx represents the maximum size of total heap space&lt;/p&gt;
&lt;p&gt;-Xms4g&lt;/p&gt;
&lt;p&gt;-Xmx4g&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;启动后，如果密码忘记了，怎么办？可以采用指令重置密码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;+-------------------------------------------------------------------------+&lt;br /&gt;
| # 使用 es 用户，执行指令，重置 elastic 用户密码                            |&lt;br /&gt;
|                                                                         |&lt;br /&gt;
| bin/elasticsearch-reset-password -u elastic                             |&lt;br /&gt;
+=========================================================================+&lt;br /&gt;
| &amp;gt; &lt;img data-src=&#34;/Distribution/Elasticsearch-8/image46.jpg&#34; class=&#34;&#34;&gt;{width=&amp;quot;5.438888888888889in&amp;quot; height=&amp;quot;1.0375in&amp;quot;} |&lt;br /&gt;
+-------------------------------------------------------------------------+&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果只启动单一节点，此操作可能会失败，至少启动 2 个节点，测试成功&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;23-kibana-安装-使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#23-kibana-安装-使用&#34;&gt;#&lt;/a&gt; &lt;strong&gt;2.3 Kibana&lt;/strong&gt; 安装 &lt;strong&gt;&amp;amp;&lt;/strong&gt; 使用&lt;/h2&gt;
&lt;p&gt;Elasticsearch 的开源分析可视化工具，与存储在 Elasticsearch&lt;br /&gt;
 中的数据进行交互&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image47.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.7539162292213473in&amp;quot;}&lt;/p&gt;
&lt;p&gt;Elasticsearch 下载的版本是 8.1.0，这里我们选择同样的 8.1.0 版本&lt;/p&gt;
&lt;p&gt;下载地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9jbi9kb3dubG9hZHMvcGFzdC1yZWxlYXNlcyNraWJhbmE=&#34;&gt;https://www.elastic.co/cn/downloads/past-releases#kibana&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image49.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.215430883639545in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;2.3.2&lt;/strong&gt; 安装软件本课程着重讲解新版 ES 软件的特性及应用，所以对应的&lt;br /&gt;
 Kibana 也采用 linux 集群配置。&lt;/p&gt;
&lt;p&gt;1) 将压缩包 kibana-8.1.0-linux-x86_64.tar.gz 上传到虚拟机中&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image51.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.490972222222222in&#34;
&lt;p&gt;height=&amp;quot;0.5208333333333334in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;解压缩文件到自定义路径，笔者解压路径为：/opt/module，解压后，软件路径为：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;/opt/module/kibana-8.1.0&lt;/p&gt;
&lt;p&gt;# 切换目录&lt;/p&gt;
&lt;p&gt;cd software&lt;/p&gt;
&lt;p&gt;# 解压缩&lt;/p&gt;
&lt;p&gt;tar -zxvf kibana-8.1.0-linux-x86_64.tar.gz -C /opt/module&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image52.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.766056430446194in&#34;
&lt;p&gt;height=&amp;quot;2.4376377952755908in&amp;quot;}&lt;/p&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| # 在 ES 服务器中生成证书，输入回车即可                                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| cd /opt/module/elasticsearch-8.1.0 bin/elasticsearch-certutil csr    |&lt;br /&gt;
| -name kibana -dns linux1                                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # 解压文件                                                          |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| unzip csr-bundle.zip                                                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # 将解压后的文件移动到 kibana 的 config 目录中                          |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| mv kibana.csr kibana.key /opt/module/kibana-8.1.0/config/            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # 生成 crt 文件                                                       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| openssl x509 -req -in kibana.csr -signkey kibana.key -out kibana.crt |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;修改配置文件：kibana.yml&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;# 服务端口&lt;/p&gt;
&lt;p&gt;server.port: 5601&lt;/p&gt;
&lt;p&gt;# 服务主机名&lt;/p&gt;
&lt;p&gt;server.host: &amp;quot;linux1&amp;quot;&lt;/p&gt;
&lt;p&gt;# 国际化 - 中文&lt;/p&gt;
&lt;p&gt;i18n.locale: &amp;quot;zh-CN&amp;quot;&lt;/p&gt;
&lt;p&gt;# ES 服务主机地址&lt;/p&gt;
&lt;p&gt;elasticsearch.hosts: [&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9saW51eDE6OTIwMA==&#34;&gt;https://linux1:9200&lt;/span&gt;&amp;quot;]&lt;/p&gt;
&lt;p&gt;# 访问 ES 服务的账号密码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| elasticsearch.username: &amp;quot;kibana&amp;quot; elasticsearch.password:           |&lt;br /&gt;
| &amp;quot;fnqIYLQGv81iyW5nWeZ-&amp;quot;                                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| elasticsearch.ssl.verificationMode: none                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| elasticsearch.ssl.certificateAuthorities:                            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| [                                                                   |&lt;br /&gt;
| \                                                                    |&lt;br /&gt;
| &amp;quot;/opt/module/elasticsearch-8.1.0/config/certs/elasticsearch-ca.pem&amp;quot; |&lt;br /&gt;
| ]                                                                   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| server.ssl.enabled: true server.ssl.certificate:                     |&lt;br /&gt;
| /opt/module/kibana-8.1.0/config/kibana.crt server.ssl.key:           |&lt;br /&gt;
| /opt/module/kibana-8.1.0/config/kibana.key                           |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;修改软件目录拥有者&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;# 切换目录&lt;/p&gt;
&lt;p&gt;chown -R es:es /opt/module/kibana-8.1.0/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;切换用户，启动软件&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;# 切换用户&lt;/p&gt;
&lt;p&gt;su es&lt;/p&gt;
&lt;p&gt;# 启动软件&lt;/p&gt;
&lt;p&gt;bin/kibana&lt;/p&gt;
&lt;p&gt;# 也可以后台启动&lt;/p&gt;
&lt;p&gt;nohup /opt/module/kibana-8.1.0/bin/kibana &amp;gt;kibana.log 2&amp;gt;&amp;amp;1 &amp;amp;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image54.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.9029451006124234in&amp;quot;}&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;打开浏览器，输入访问地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9saW51eDE6NTYwMQ==&#34;&gt;https://linux1:5601&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image56.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.384445538057743in&#34;
&lt;p&gt;height=&amp;quot;2.1720964566929135in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image58.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.384445538057743in&#34;
&lt;p&gt;height=&amp;quot;1.75501312335958in&amp;quot;}&lt;/p&gt;
&lt;p&gt;输入 elastic 账号和密码即可访问&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image60.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.467778871391076in&#34;
&lt;p&gt;height=&amp;quot;6.554875328083989in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image66.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.447778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.35876312335958in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;第3章-elasticsearch-基础功能&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第3章-elasticsearch-基础功能&#34;&gt;#&lt;/a&gt; 第 3 章 Elasticsearch 基础功能&lt;/h1&gt;
&lt;p&gt;在之前 7.X 的课程视频中，已经给大家讲解了 Elasticsearch&lt;br /&gt;
 软件的基础功能，这里咱们以 8.X 版本为基础通过 Kibana&lt;br /&gt;
 软件给大家演示基本操作。&lt;/p&gt;
&lt;h2 id=&#34;31-索引操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#31-索引操作&#34;&gt;#&lt;/a&gt; &lt;strong&gt;3.1&lt;/strong&gt; 索引操作&lt;/h2&gt;
&lt;h3 id=&#34;311-创建索引&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#311-创建索引&#34;&gt;#&lt;/a&gt; 3.1.1 创建索引&lt;/h3&gt;
&lt;p&gt;ES 软件的索引可以类比为 MySQL&lt;br /&gt;
 中表的概念，创建一个索引，类似于创建一个表。&lt;/p&gt;
&lt;p&gt;查询完成后，Kibana 右侧会返回响应结果及请求状态&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image68.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.7555555555555555in&#34;
&lt;p&gt;height=&amp;quot;0.7381944444444445in&amp;quot;} 重复创建索引时，Kibana&lt;br /&gt;
 右侧会返回响应结果，其中包含错误信息。&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image69.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.7218339895013124in&amp;quot;}&lt;/p&gt;
&lt;p&gt;根据索引名称查询指定索引，如果查询到，会返回索引的详细信息&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image71.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.9222364391951006in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果查询的索引未存在，会返回错误信息&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image73.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.9764162292213474in&amp;quot;}&lt;/p&gt;
&lt;p&gt;为了方便，可以查询当前所有索引数据。这里请求路径中的_cat&lt;br /&gt;
 表示查看的意思，indices 表示索引，所以整体含义就是查看当前 ES&lt;br /&gt;
 服务器中的所有索引，就好像 MySQL 中的 show&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image75.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.5590266841644795in&amp;quot;}&lt;/p&gt;
&lt;p&gt;这里的查询结果表示索引的状态信息，按顺序数据表示结果如下：&lt;/p&gt;
&lt;p&gt;+------------------------+------------------+------------------------+&lt;br /&gt;
| 内容                   | &amp;gt; 含义           | 具体描述               |&lt;br /&gt;
+&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;+&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;+&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;==================+&lt;br /&gt;
| green                  | &amp;gt; health         | 当前服务器健康状态：   |&lt;br /&gt;
|                        |                  |                        |&lt;br /&gt;
|                        |                  | &lt;strong&gt;green&lt;/strong&gt; (集群完整)    |&lt;br /&gt;
|                        |                  | &lt;strong&gt;yellow&lt;/strong&gt;             |&lt;br /&gt;
|                        |                  | (单点正常、集群不完整) |&lt;br /&gt;
|                        |                  | red (单点不正常)        |&lt;br /&gt;
+------------------------+------------------+------------------------+&lt;br /&gt;
| open                   | &amp;gt; status         | 索引打开、关闭状态     |&lt;br /&gt;
+------------------------+------------------+------------------------+&lt;br /&gt;
| myindex                | &amp;gt; index          | 索引名                 |&lt;br /&gt;
+------------------------+------------------+------------------------+&lt;br /&gt;
| Swx2xWHLR6yv23kTrK3sAg | &amp;gt; uuid           | 索引统一编号           |&lt;br /&gt;
+------------------------+------------------+------------------------+&lt;br /&gt;
| 1                      | &amp;gt; pri            | 主分片数量             |&lt;br /&gt;
+------------------------+------------------+------------------------+&lt;br /&gt;
| 1                      | &amp;gt; rep            | 副本数量               |&lt;br /&gt;
+------------------------+------------------+------------------------+&lt;br /&gt;
| 0                      | &amp;gt; docs.count     | 可用文档数量           |&lt;br /&gt;
+------------------------+------------------+------------------------+&lt;br /&gt;
| 0                      | &amp;gt; docs.deleted   | 文                     |&lt;br /&gt;
|                        |                  | 档删除状态（逻辑删除） |&lt;br /&gt;
+------------------------+------------------+------------------------+&lt;br /&gt;
| 450b                   | &amp;gt; store.size     | 主分片                 |&lt;br /&gt;
|                        |                  | 和副分片整体占空间大小 |&lt;br /&gt;
+------------------------+------------------+------------------------+&lt;br /&gt;
| 225b                   | &amp;gt; pri.store.size | 主分片占空间大小       |&lt;br /&gt;
+------------------------+------------------+------------------------+&lt;/p&gt;
&lt;h3 id=&#34;314-删除索引&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#314-删除索引&#34;&gt;#&lt;/a&gt; 3.1.4 删除索引&lt;/h3&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image77.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.489303368328959in&amp;quot;}&lt;/p&gt;
&lt;p&gt;如果删除一个不存在的索引，那么会返回错误信息&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image79.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.0225360892388453in&amp;quot;}&lt;/p&gt;
&lt;p&gt;文档是 ES 软件搜索数据的最小单位，&lt;br /&gt;
 不依赖预先定义的模式，所以可以将文档类比为表的一行 JSON 类型的数据。我们知道关系型数据库中，要提前定义字段才能使用，在 Elasticsearch&lt;br /&gt;
 中，对于字段是非常灵活的，有时候，我们可以忽略该字段，或者动态的添加一个新的字段。&lt;/p&gt;
&lt;h3 id=&#34;321-创建文档&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#321-创建文档&#34;&gt;#&lt;/a&gt; 3.2.1 创建文档&lt;/h3&gt;
&lt;p&gt;索引已经创建好了，接下来我们来创建文档，并添加数据。这里的文档可以类比为关系型数据库中的表数据，添加的数据格式为&lt;br /&gt;
 JSON 格式&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image81.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.2137642169728784in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此处因为没有指定数据唯一性标识，所以无法使用 PUT 请求，只能使用 POST&lt;br /&gt;
 请求，且对数据会生成随机的唯一性标识。否则会返回错误信息&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image83.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;0.9012642169728784in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果在创建数据时，指定唯一性标识，那么请求范式 POST，PUT 都可以&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image85.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.80111220472441in&#34;
&lt;p&gt;height=&amp;quot;1.421984908136483in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;322-查询文档&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#322-查询文档&#34;&gt;#&lt;/a&gt; 3.2.2 查询文档&lt;/h3&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image87.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.9311089238845145in&amp;quot;}&lt;/p&gt;
&lt;h3 id=&#34;323-修改文档&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#323-修改文档&#34;&gt;#&lt;/a&gt; 3.2.3 修改文档&lt;/h3&gt;
&lt;p&gt;修改文档本质上和新增文档是一样的，如果存在就修改，如果不存在就新增&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image89.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.834388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.4237139107611547in&amp;quot;}&lt;/p&gt;
&lt;p&gt;删除一个文档不会立即从磁盘上移除，它只是被标记成已删除（逻辑删除）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image91.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;2.172652012248469in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;325-查询所有文档&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#325-查询所有文档&#34;&gt;#&lt;/a&gt; 3.2.5 查询所有文档&lt;/h4&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image93.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.807723097112861in&#34;
&lt;p&gt;height=&amp;quot;2.5968416447944005in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image95.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.844303368328959in&amp;quot;}&lt;/p&gt;
&lt;h4 id=&#34;331-查询所有文档&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#331-查询所有文档&#34;&gt;#&lt;/a&gt; 3.3.1 查询所有文档&lt;/h4&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image97.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.763888888888889in&#34;
&lt;p&gt;height=&amp;quot;1.9666666666666666in&amp;quot;}&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.3.2&lt;/strong&gt; 匹配查询文档这里的查询表示文档数据中 JSON 对象数据中的 name&lt;br /&gt;
 属性是 zhangsan。&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image98.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.8372495625546805in&amp;quot;}&lt;/p&gt;
&lt;p&gt;默认情况下，Elasticsearch 在搜索的结果中，会把文档中保存在_source&lt;br /&gt;
 的所有字段都返回。&lt;/p&gt;
&lt;p&gt;如果我们只想获取其中的部分字段，我们可以添加_source 的过滤&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image100.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.2137871828521436in&amp;quot;}&lt;/p&gt;
&lt;p&gt;聚合允许使用者对 es 文档进行统计分析，类似与关系型数据库中的 group&lt;br /&gt;
by，当然还有很多其他的聚合，例如取最大值、平均值等等。&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image102.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.6654582239720037in&amp;quot;}&lt;/p&gt;
&lt;h3 id=&#34;342-求和&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#342-求和&#34;&gt;#&lt;/a&gt; 3.4.2 求和&lt;/h3&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image104.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.9544717847769029in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image106.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.9344728783902012in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image108.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;3.0547583114610672in&amp;quot;}&lt;/p&gt;
&lt;p&gt;我们之前对索引进行一些配置信息设置，但是都是在单个索引上进行设置。在实际开发中，我们可能需要创建不止一个索引，但是每个索引或多或少都有一些共性。比如我们在设计关系型数据库时，一般都会为每个表结构设计一些常用的字段，比如：创建时间，更新时间，备注信息等。elasticsearch&lt;br /&gt;
 在创建索引的时候，就引入了模板的概念，你可以先设置一些通用的模板，在创建索引的时候，elasticsearch&lt;br /&gt;
 会先根据你创建的模板对索引进行设置。 elasticsearch&lt;br /&gt;
 中提供了很多的默认设置模板，这就是为什么我们在新建文档的时候，可以为你自动设置一些信息，做一些字段转换等。&lt;/p&gt;
&lt;p&gt;索引可使用预定义的模板进行创建，这个模板称作 Index&lt;br /&gt;
templates。模板设置包括 settings&lt;/p&gt;
&lt;p&gt;和 mappings&lt;/p&gt;
&lt;h3 id=&#34;351-创建模板&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#351-创建模板&#34;&gt;#&lt;/a&gt; 3.5.1 创建模板&lt;/h3&gt;
&lt;p&gt;# 模板名称小写&lt;/p&gt;
&lt;p&gt;PUT _template/mytemplate&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;index_patterns&amp;quot; : [&lt;/p&gt;
&lt;p&gt;&amp;quot;my*&amp;quot;&lt;/p&gt;
&lt;p&gt;],&lt;/p&gt;
&lt;p&gt;&amp;quot;settings&amp;quot; : {&lt;/p&gt;
&lt;p&gt;&amp;quot;index&amp;quot; : {&lt;/p&gt;
&lt;p&gt;&amp;quot;number_of_shards&amp;quot; : &amp;quot;1&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;},&lt;/p&gt;
&lt;p&gt;&amp;quot;mappings&amp;quot; : {&lt;/p&gt;
&lt;p&gt;&amp;quot;properties&amp;quot; : {&lt;/p&gt;
&lt;p&gt;&amp;quot;now&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;type&amp;quot; : &amp;quot;date&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;format&amp;quot; : &amp;quot;yyyy/MM/dd&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image110.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.821056430446194in&#34;
&lt;p&gt;height=&amp;quot;1.731890857392826in&amp;quot;}&lt;/p&gt;
&lt;h3 id=&#34;352-查看模板&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#352-查看模板&#34;&gt;#&lt;/a&gt; 3.5.2 查看模板&lt;/h3&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image112.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.837723097112861in&#34;
&lt;p&gt;height=&amp;quot;1.9820297462817147in&amp;quot;}&lt;/p&gt;
&lt;h4 id=&#34;353-验证模板是否存在&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#353-验证模板是否存在&#34;&gt;#&lt;/a&gt; 3.5.3 验证模板是否存在&lt;/h4&gt;
&lt;p&gt;#&lt;/p&gt;
&lt;p&gt;HEAD /_template/mytemplate&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image114.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.7652777777777775in&#34;
&lt;p&gt;height=&amp;quot;0.37916666666666665in&amp;quot;}&lt;/p&gt;
&lt;h3 id=&#34;354-创建索引&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#354-创建索引&#34;&gt;#&lt;/a&gt; 3.5.4 创建索引&lt;/h3&gt;
&lt;p&gt;#&lt;/p&gt;
&lt;p&gt;PUT testindex&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image115.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.821056430446194in&#34;
&lt;p&gt;height=&amp;quot;1.9503619860017498in&amp;quot;}&lt;/p&gt;
&lt;h3 id=&#34;355-删除模板&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#355-删除模板&#34;&gt;#&lt;/a&gt; 3.5.5 删除模板&lt;/h3&gt;
&lt;p&gt;#&lt;/p&gt;
&lt;p&gt;DELETE /_template/mytemplate&lt;/p&gt;
&lt;h2 id=&#34;36-中文分词&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#36-中文分词&#34;&gt;#&lt;/a&gt; &lt;strong&gt;3.6&lt;/strong&gt; 中文分词&lt;/h2&gt;
&lt;p&gt;我们在使用 Elasticsearch&lt;br /&gt;
 官方默认的分词插件时会发现，其对中文的分词效果不佳，经常分词后得效果不是我们想要得。&lt;/p&gt;
&lt;p&gt;GET _analyze&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;analyzer&amp;quot;: &amp;quot;chinese&amp;quot;,&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image117.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.837723097112861in&#34;
&lt;p&gt;height=&amp;quot;2.6045188101487313in&amp;quot;}&lt;/p&gt;
&lt;p&gt;为了能够更好地对中文进行搜索和查询，就需要在 Elasticsearch 中集成好的分词器插件，而&lt;br /&gt;
 IK 分词器就是用于对中文提供支持得插件。&lt;/p&gt;
&lt;h3 id=&#34;361-集成-ik-分词器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#361-集成-ik-分词器&#34;&gt;#&lt;/a&gt; 3.6.1 集成 IK 分词器&lt;/h3&gt;
&lt;h4 id=&#34;3611-下载&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3611-下载&#34;&gt;#&lt;/a&gt; 3.6.1.1 下载&lt;/h4&gt;
&lt;p&gt;下载地址：&lt;span&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL21lZGNsL2VsYXN0aWNzZWFyY2gtYW5hbHlzaXMtaWsvcmVsZWFzZXM=&#34;&gt;https://github.com/medcl/elasticsearch-analysis-ik/releases&lt;/span&gt;&lt;/span&gt;[&lt;span class=&#34;ul&#34;&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL21lZGNsL2VsYXN0aWNzZWFyY2gtYW5hbHlzaXMtaWsvcmVsZWFzZXM=&#34;&gt;https://github.com/medcl/elasticsearch-analysis-ik/releases&lt;/span&gt;&lt;/span&gt;](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL21lZGNsL2VsYXN0aWNzZWFyY2gtYW5hbHlzaXMtaWsvcmVsZWFzZXM=&#34;&gt;https://github.com/medcl/elasticsearch-analysis-ik/releases&lt;/span&gt;)&lt;/p&gt;
&lt;p&gt;注意：选择下载的版本要与 Elasticsearch 版本对应。我们这里选择 8.1.0&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image119.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.837723097112861in&#34;
&lt;p&gt;height=&amp;quot;2.3147353455818025in&amp;quot;}&lt;/p&gt;
&lt;p&gt;在安装目录得 plugins 目中，将下载得压缩包直接解压缩得里面即可&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image121.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.837723097112861in&#34;
&lt;p&gt;height=&amp;quot;1.0816797900262467in&amp;quot;}&lt;/p&gt;
&lt;h3 id=&#34;362-使用-ik-分词器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#362-使用-ik-分词器&#34;&gt;#&lt;/a&gt; 3.6.2 使用 IK 分词器&lt;/h3&gt;
&lt;p&gt;IK 分词器提供了两个分词算法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ik_smart: 最少切分&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ik_max_word: 最细粒度划分&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来咱们使用 ik_smart&lt;br /&gt;
 算法对之前得中文内容进行分词，明显会发现和默认分词器得区&lt;/p&gt;
&lt;p&gt;别。&lt;/p&gt;
&lt;p&gt;GET _analyze&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;analyzer&amp;quot;: &amp;quot;ik_smart&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;text&amp;quot;: [&amp;quot;我是一个学生&amp;quot;] }&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image123.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.814444444444445in&#34;
&lt;p&gt;height=&amp;quot;2.1254297900262467in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接下来，再对比 ik_max_word 算法分词后的效果&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image125.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.821056430446194in&#34;
&lt;p&gt;height=&amp;quot;2.5806583552055993in&amp;quot;}&lt;/p&gt;
&lt;p&gt;我们在使用 IK&lt;br /&gt;
 分词器时会发现其实有时候分词的效果也并不是我们所期待的，有时一些特殊得术语会被拆开，比如上面得中文 &amp;quot;一个学生&amp;quot; 希望不要拆开，怎么做呢？其实&lt;br /&gt;
 IK 插件给我们提供了自定义分词字典，我们就可以添加自己想要保留得字了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image127.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.772916666666666in&#34;
&lt;p&gt;height=&amp;quot;1.9034722222222222in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image128.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.214027777777778in&#34;
&lt;p&gt;height=&amp;quot;1.6420953630796151in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接下来我们修改配置文件：IKAnalyzer.cfg.xml&lt;/p&gt;
&lt;p&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt; &amp;lt;!DOCTYPE properties&lt;br /&gt;
SYSTEM &amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2phdmEuc3VuLmNvbS9kdGQvcHJvcGVydGllcy5kdGQ=&#34;&gt;http://java.sun.com/dtd/properties.dtd&lt;/span&gt;&amp;quot;&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;properties&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;comment&amp;gt;IK Analyzer 扩展配置 &amp;lt;/comment&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- 用户可以在这里配置自己的扩展字典 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;entry key=&amp;quot;ext_dict&amp;quot;&amp;gt;test.dic&amp;lt;/entry&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- 用户可以在这里配置自己的扩展停止词字典 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;entry key=&amp;quot;ext_stopwords&amp;quot;&amp;gt;&amp;lt;/entry&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- 用户可以在这里配置远程扩展字典 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- &amp;lt;entry key=&amp;quot;remote_ext_dict&amp;quot;&amp;gt;words_location&amp;lt;/entry&amp;gt; --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- 用户可以在这里配置远程扩展停止词字典 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- &amp;lt;entry key=&amp;quot;remote_ext_stopwords&amp;quot;&amp;gt;words_location&amp;lt;/entry&amp;gt;&lt;br /&gt;
--&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/properties&amp;gt;&lt;/p&gt;
&lt;p&gt;重启 Elasticsearch 服务器查看效果&lt;/p&gt;
&lt;p&gt;GET _analyze&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;analyzer&amp;quot;: &amp;quot;ik_smart&amp;quot;,&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image130.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.821056430446194in&#34;
&lt;p&gt;height=&amp;quot;2.002435476815398in&amp;quot;}&lt;/p&gt;
&lt;h2 id=&#34;37-文档得分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#37-文档得分&#34;&gt;#&lt;/a&gt; &lt;strong&gt;3.7&lt;/strong&gt; 文档得分&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Lucene 和 ES 的得分机制是一个基于词频和逆文档词频的公式，简称为 TF-IDF&lt;br /&gt;
 公式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image132.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.769444444444445in&#34;
&lt;p&gt;height=&amp;quot;0.5486111111111112in&amp;quot;}&lt;/p&gt;
&lt;p&gt;公式中将查询作为输入，使用不同的手段来确定每一篇文档的得分，将每一个因素最后通过公式综合起来，返回该文档的最终得分。这个综合考量的过程，就是我们希望相关的文档被优先返回的考量过程。在&lt;br /&gt;
 Lucene 和 ES 中这种相关性称为得分。&lt;/p&gt;
&lt;p&gt;考虑到查询内容和文档得关系比较复杂，所以公式中需要输入得参数和条件非常得多。但是其中比较重要得其实是两个算法机制&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TF (词频)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Term Frequency :&lt;br /&gt;
 搜索文本中的各个词条（term）在查询文本中出现了多少次，出现次数越多，就越相关，得分会比较高&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IDF (逆文档频率)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Inverse Document Frequency :&lt;br /&gt;
 搜索文本中的各个词条（term）在整个索引的所有文档中出现了多少次，出现的次数越多，说明越不重要，也就越不相关，得分就比较低。&lt;/p&gt;
&lt;h3 id=&#34;371-打分机制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#371-打分机制&#34;&gt;#&lt;/a&gt; 3.7.1 打分机制&lt;/h3&gt;
&lt;p&gt;接下来咱们用一个例子简单分析一下文档的打分机制：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先，咱们先准备一个基础数据&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;# 创建索引&lt;/p&gt;
&lt;p&gt;PUT /atguigu&lt;/p&gt;
&lt;p&gt;# 增加文档数据&lt;/p&gt;
&lt;p&gt;# 此时索引中只有这一条数据&lt;/p&gt;
&lt;p&gt;PUT /atguigu/_doc/1&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;text&amp;quot;:&amp;quot;hello&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;查询匹配条件的文档数据&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;#&lt;/p&gt;
&lt;p&gt;GET /atguigu/_search&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;query&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;match&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;text&amp;quot;: &amp;quot;hello&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image133.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.821056430446194in&#34;
&lt;p&gt;height=&amp;quot;2.114443350831146in&amp;quot;}&lt;/p&gt;
&lt;p&gt;这里文档的得分为：0.2876821，很奇怪，此时索引中只有一个文档数据，且文档数据中可以直接匹配查询条件，为什么分值这么低？这就是公式的计算结果，咱们一起来看看&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;分析文档数据打分过程&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;# 增加分析参数&lt;/p&gt;
&lt;p&gt;GET /atguigu/_search**?explain=true**&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;query&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;match&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;text&amp;quot;: &amp;quot;hello&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;执行后，会发现打分机制中有 2 个重要阶段：计算 TF 值和 IDF 值&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image136.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.837723097112861in&#34;
&lt;p&gt;height=&amp;quot;5.9991808836395455in&amp;quot;}&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image140.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.831112204724409in&#34;
&lt;p&gt;height=&amp;quot;0.7591797900262467in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;计算 TF 值&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image142.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.965277777777778in&#34;
&lt;p&gt;height=&amp;quot;0.4736111111111111in&amp;quot;}&lt;/p&gt;
&lt;p&gt;+----------------+--------------------------------+------------------+&lt;br /&gt;
| 参数           | &amp;gt; 含义                         | &amp;gt; 取值           |&lt;br /&gt;
+&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;+&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;+&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;==+&lt;br /&gt;
| freq           | &amp;gt; 文档中出现词条的次数         | &amp;gt; 1.0            |&lt;br /&gt;
+----------------+--------------------------------+------------------+&lt;br /&gt;
| k1             | &amp;gt; 术语饱和参数                 | &amp;gt; 1.2（默认值）  |&lt;br /&gt;
+----------------+--------------------------------+------------------+&lt;br /&gt;
| b              | &amp;gt; 长度规格化参数（单           | &amp;gt; 0.75（默认值） |&lt;br /&gt;
|                | 词长度对于整个文档的影响程度） |                  |&lt;br /&gt;
+----------------+--------------------------------+------------------+&lt;br /&gt;
| dl             | &amp;gt; 当前文中分解的字段长度       | &amp;gt; 1.0            |&lt;br /&gt;
+----------------+--------------------------------+------------------+&lt;br /&gt;
| avgdl          | &amp;gt; 查询文                       | &amp;gt; 1.0            |&lt;br /&gt;
|                | 档中分解字段数量 / 查询文档数量  |                  |&lt;br /&gt;
+----------------+--------------------------------+------------------+&lt;br /&gt;
| &lt;strong&gt;TF&lt;/strong&gt;（词频） | &amp;gt; &lt;strong&gt;1.0/(1 + 1.2 * (1 - 0.75  | &amp;gt; &lt;strong&gt;0.454545&lt;/strong&gt;   |&lt;br /&gt;
|                | &amp;gt; + 0.75*1.0/1.0))&lt;/strong&gt;          |                  |&lt;br /&gt;
+----------------+--------------------------------+------------------+&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;计算 IDF 值&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image143.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.415277777777778in&#34;
&lt;p&gt;height=&amp;quot;0.6236111111111111in&amp;quot;}&lt;/p&gt;
&lt;p&gt;+-----------------------+-------------------------+---------------+&lt;br /&gt;
| 参数                  | &amp;gt; 含义                  | 取值          |&lt;br /&gt;
+=&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;+&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;=&lt;mark&gt;+&lt;/mark&gt;=============+&lt;br /&gt;
| N                     | &amp;gt;                       | 1             |&lt;br /&gt;
|                       |  包含查询字段的文档总数 |               |&lt;br /&gt;
|                       | （不一定包含查询词条）  |               |&lt;br /&gt;
+-----------------------+-------------------------+---------------+&lt;br /&gt;
| n                     | &amp;gt; 包含查询词条的文档数  | 1             |&lt;br /&gt;
+-----------------------+-------------------------+---------------+&lt;br /&gt;
| &lt;strong&gt;IDF&lt;/strong&gt;（逆文档频率） | &amp;gt; &lt;strong&gt;log(1 + (1 - 1 +    | &lt;strong&gt;0.2876821&lt;/strong&gt; |&lt;br /&gt;
|                       | &amp;gt; 0.5) / (1 + 0.5))&lt;/strong&gt;   |               |&lt;br /&gt;
+-----------------------+-------------------------+---------------+&lt;/p&gt;
&lt;p&gt;注：这里的 &lt;strong&gt;log&lt;/strong&gt; 是底数为 &lt;strong&gt;e&lt;/strong&gt; 的对数&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;计算文档得分&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image144.jpg&#34; class=&#34;&#34;&gt;{width=&#34;1.4736111111111112in&#34;
&lt;p&gt;height=&amp;quot;0.36527777777777776in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;+-------------------+-----------------------+-----------------------+&lt;br /&gt;
| 参数              | &amp;gt; 含义                | &amp;gt; 取值                |&lt;br /&gt;
+=&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;+&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;=&lt;mark&gt;&lt;mark&gt;+&lt;/mark&gt;&lt;/mark&gt;===================+&lt;br /&gt;
| boost             | &amp;gt; 词条权重            | &amp;gt; **                  |&lt;br /&gt;
|                   |                       | 2.2**（基础值）&lt;strong&gt;*&lt;/strong&gt; |&lt;br /&gt;
|                   |                       | &amp;gt; 查询权重 **(1)**     |&lt;br /&gt;
+-------------------+-----------------------+-----------------------+&lt;br /&gt;
| idf               | &amp;gt; 逆文档频率          | &amp;gt; &lt;strong&gt;0.2876821&lt;/strong&gt;       |&lt;br /&gt;
+-------------------+-----------------------+-----------------------+&lt;br /&gt;
| tf                | &amp;gt; 词频                | &amp;gt; &lt;strong&gt;0.454545&lt;/strong&gt;        |&lt;br /&gt;
+-------------------+-----------------------+-----------------------+&lt;br /&gt;
| &lt;strong&gt;Score&lt;/strong&gt;（得分） | &amp;gt; &lt;strong&gt;2.2 * 0.2876821  | &amp;gt; &lt;strong&gt;0.2876821&lt;/strong&gt;       |&lt;br /&gt;
|                   | &amp;gt; * 0.454545&lt;/strong&gt;       |                       |&lt;br /&gt;
+-------------------+-----------------------+-----------------------+&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;增加新的文档，测试得分&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;⚫ 增加一个毫无关系的文档&lt;/p&gt;
&lt;p&gt;# 增加文档&lt;/p&gt;
&lt;p&gt;PUT /atguigu/_doc/2&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;text&amp;quot; : &amp;quot;spark&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;# 因为新文档无词条相关信息，所以匹配的文档数据得分就应该较高：&lt;/p&gt;
&lt;p&gt;# 0.6931741&lt;/p&gt;
&lt;p&gt;GET /atguigu/_search&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;query&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;match&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;text&amp;quot;: &amp;quot;hello&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image145.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.821056430446194in&#34;
&lt;p&gt;height=&amp;quot;1.9970286526684164in&amp;quot;}&lt;/p&gt;
&lt;p&gt;⚫ 增加一个一模一样的文档&lt;/p&gt;
&lt;p&gt;# 增加文档&lt;/p&gt;
&lt;p&gt;PUT /atguigu/_doc/2&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;text&amp;quot; : &amp;quot;hello&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;#&lt;br /&gt;
因为新文档含词条相关信息，且多个文件含有词条，所以显得不是很重要，得分会变低&lt;/p&gt;
&lt;p&gt;# 0.18232156&lt;/p&gt;
&lt;p&gt;GET /atguigu/_search&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;query&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;match&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;text&amp;quot;: &amp;quot;hello&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image147.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.821056430446194in&#34;
&lt;p&gt;height=&amp;quot;2.4303619860017496in&amp;quot;}&lt;/p&gt;
&lt;p&gt;⚫ 增加一个含有词条，但是内容较多的文档&lt;/p&gt;
&lt;p&gt;# 增加文档&lt;/p&gt;
&lt;p&gt;PUT /atguigu/_doc/2&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;text&amp;quot; : &amp;quot;hello &lt;strong&gt;elasticsearch&lt;/strong&gt;&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;#&lt;br /&gt;
因为新文档含词条相关信息，但只是其中一部分，所以查询文档的分数会变得更低一些。&lt;/p&gt;
&lt;p&gt;# 0.14874382&lt;/p&gt;
&lt;p&gt;GET /atguigu/_search&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;query&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;match&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;text&amp;quot;: &amp;quot;hello&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image149.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.821056430446194in&#34;
&lt;p&gt;height=&amp;quot;2.6086953193350833in&amp;quot;}&lt;/p&gt;
&lt;h3 id=&#34;372-案例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#372-案例&#34;&gt;#&lt;/a&gt; 3.7.2 案例&lt;/h3&gt;
&lt;p&gt;需求：&lt;/p&gt;
&lt;p&gt;查询文档标题中含有 &amp;quot;Hadoop&amp;quot;,&amp;quot;Elasticsearch&amp;quot;,&amp;quot;Spark&amp;quot; 的内容。&lt;/p&gt;
&lt;p&gt;优先选择 &amp;quot;Spark&amp;quot; 的内容&lt;/p&gt;
&lt;p&gt;1) 准备数据&lt;/p&gt;
&lt;p&gt;# 准备数据&lt;/p&gt;
&lt;p&gt;PUT /testscore/_doc/1001&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;title&amp;quot; : &amp;quot;Hadoop is a Framework&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;content&amp;quot; : &amp;quot;Hadoop 是一个大数据基础框架&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;PUT /testscore/_doc/1002&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;title&amp;quot; : &amp;quot;Hive is a SQL Tools&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;content&amp;quot; : &amp;quot;Hive 是一个 SQL 工具&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;PUT /testscore/_doc/1003&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;title&amp;quot; : &amp;quot;Spark is a Framework&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;content&amp;quot; : &amp;quot;Spark 是一个分布式计算引擎&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;2) 查询数据&lt;/p&gt;
&lt;p&gt;# 查询文档标题中含有 &amp;quot;Hadoop&amp;quot;,&amp;quot;Elasticsearch&amp;quot;,&amp;quot;Spark&amp;quot; 的内容&lt;/p&gt;
&lt;p&gt;GET /testscore/_search?explain=true&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;query&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;bool&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;should&amp;quot;: [&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;match&amp;quot;: {&lt;/p&gt;
&lt;p query:Hadoop,boost:1=&#34;&#34;&gt;&amp;quot;title&amp;quot;:&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;},&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;match&amp;quot;: {&lt;/p&gt;
&lt;p query:Hive,boost:1=&#34;&#34;&gt;&amp;quot;title&amp;quot;:&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;},&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;match&amp;quot;: {&lt;/p&gt;
&lt;p query:Spark,boost:1=&#34;&#34;&gt;&amp;quot;title&amp;quot;:&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;]&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;此时，你会发现，Spark 的结果并不会放置在最前面&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image151.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.814444444444445in&#34;
&lt;p&gt;height=&amp;quot;2.209458661417323in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此时，咱们可以更改 Spark 查询的权重参数 boost. 看看查询的结果有什么不同&lt;/p&gt;
&lt;p&gt;# 查询文档标题中含有 &amp;quot;Hadoop&amp;quot;,&amp;quot;Elasticsearch&amp;quot;,&amp;quot;Spark&amp;quot; 的内容&lt;/p&gt;
&lt;p&gt;GET /testscore/_search?explain=true&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;query&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;bool&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;should&amp;quot;: [&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;match&amp;quot;: {&lt;/p&gt;
&lt;p query:Hadoop,boost:1=&#34;&#34;&gt;&amp;quot;title&amp;quot;:&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;},&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;match&amp;quot;: {&lt;/p&gt;
&lt;p query:Hive,boost:1=&#34;&#34;&gt;&amp;quot;title&amp;quot;:&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;},&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;match&amp;quot;: {&lt;/p&gt;
&lt;p query:Spark,boost:2=&#34;&#34;&gt;&amp;quot;title&amp;quot;:&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;} ]&lt;/p&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
+======================================================================+&lt;br /&gt;
| &amp;gt; &lt;img data-src=&#34;/Distribution/Elasticsearch-8/image153.jpg&#34; class=&#34;&#34;&gt;{width=&amp;quot;5.761111111111111in&amp;quot;                |&lt;br /&gt;
| &amp;gt; height=&amp;quot;2.1131944444444444in&amp;quot;}                                     |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;h1 id=&#34;第4章-elasticsearch-进阶功能&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第4章-elasticsearch-进阶功能&#34;&gt;#&lt;/a&gt; 第 4 章 Elasticsearch 进阶功能&lt;/h1&gt;
&lt;h2 id=&#34;41-java-api-操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#41-java-api-操作&#34;&gt;#&lt;/a&gt; &lt;strong&gt;4.1 Java API&lt;/strong&gt; 操作&lt;/h2&gt;
&lt;p&gt;随着 Elasticsearch 8.x 新版本的到来，Type&lt;br /&gt;
 的概念被废除，为了适应这种数据结构的改&lt;/p&gt;
&lt;p&gt;变，Elasticsearch 官方从 7.15 版本开始建议使用新的 Elasticsearch Java&lt;br /&gt;
Client。&lt;/p&gt;
&lt;h3 id=&#34;411-增加依赖关系&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#411-增加依赖关系&#34;&gt;#&lt;/a&gt; 4.1.1 增加依赖关系&lt;/h3&gt;
&lt;p&gt;&amp;lt;properties&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;maven.compiler.source&amp;gt;8&amp;lt;/maven.compiler.source&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;maven.compiler.target&amp;gt;8&amp;lt;/maven.compiler.target&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;elastic.version&amp;gt;8.1.0&amp;lt;/elastic.version&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/properties&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;dependencies&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;groupId&amp;gt;org.elasticsearch.plugin&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;x-pack-sql-jdbc&amp;lt;/artifactId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;version&amp;gt;8.1.0&amp;lt;/version&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;groupId&amp;gt;co.elastic.clients&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;elasticsearch-java&amp;lt;/artifactId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;version&amp;gt;${elastic.version}&amp;lt;/version&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;groupId&amp;gt;com.fasterxml.jackson.core&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;jackson-databind&amp;lt;/artifactId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;version&amp;gt;2.12.3&amp;lt;/version&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;groupId&amp;gt;jakarta.json&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;jakarta.json-api&amp;lt;/artifactId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;version&amp;gt;2.0.1&amp;lt;/version&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/dependencies&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.1.2&lt;/strong&gt; 获取客户端对象就像连接 MySQL 数据库一样，Java 通过客户端操作&lt;br /&gt;
 Elasticsearch 也要获取到连接后才可以。咱们现在使用的基于 https 安全的&lt;br /&gt;
 Elasticsearch 服务，所以首先我们需要将之前的证书进行一个转换&lt;/p&gt;
&lt;p&gt;openssl pkcs12 -in elastic-stack-ca.p12 -clcerts -nokeys -out&lt;br /&gt;
&lt;strong&gt;java-ca.crt&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image154.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.831112204724409in&#34;
&lt;p&gt;height=&amp;quot;1.1591797900262468in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;配置证书后，我们就可以采用 https 方式获取连接对象了。&lt;/p&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| # 导入的类                                                          |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| import co.elastic.clients.elasticsearch.*; import                   |&lt;br /&gt;
| co.elastic.clients.json.jackson.JacksonJsonpMapper; import           |&lt;br /&gt;
| co.elastic.clients.transport.ElasticsearchTransport; import          |&lt;br /&gt;
| co.elastic.clients.transport.rest_client.RestClientTransport; import |&lt;br /&gt;
| org.apache.http.HttpHost; import org.apache.http.auth.*; import     |&lt;br /&gt;
| org.apache.http.client.*; import                                    |&lt;br /&gt;
| org.apache.http.conn.ssl.NoopHostnameVerifier; import                |&lt;br /&gt;
| org.apache.http.impl.client.*; import                               |&lt;br /&gt;
| org.apache.http.impl.nio.client.HttpAsyncClientBuilder; import       |&lt;br /&gt;
| org.apache.http.ssl.*; import org.elasticsearch.client.*;          |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| import javax.net.ssl.SSLContext; import java.io.InputStream; import  |&lt;br /&gt;
| java.nio.file.*; import java.security.KeyStore; import              |&lt;br /&gt;
| java.security.cert.*;                                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # 获取客户端对象                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| final CredentialsProvider credentialsProvider = new                  |&lt;br /&gt;
| BasicCredentialsProvider();                                          |&lt;br /&gt;
| credentialsProvider.setCredentials(AuthScope.ANY,                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| new UsernamePasswordCredentials(&amp;quot;&lt;strong&gt;elastic&lt;/strong&gt;&amp;quot;,                     |&lt;br /&gt;
| &amp;quot;&lt;strong&gt;O3x0hfu7i=ZbQvlktCnd&lt;/strong&gt;&amp;quot;));                                      |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| Path caCertificatePath = Paths.get(&amp;quot;&lt;strong&gt;ca.crt&lt;/strong&gt;&amp;quot;);                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| CertificateFactory factory =                                         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| CertificateFactory.getInstance(&amp;quot;X.509&amp;quot;); Certificate trustedCa;    |&lt;br /&gt;
| try (InputStream is = Files.newInputStream(caCertificatePath)) {     |&lt;br /&gt;
| trustedCa = factory.generateCertificate(is);                         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| KeyStore trustStore = KeyStore.getInstance(&amp;quot;pkcs12&amp;quot;);              |&lt;br /&gt;
| trustStore.load(null, null);                                         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| trustStore.setCertificateEntry(&amp;quot;ca&amp;quot;, trustedCa);                   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SSLContextBuilder sslContextBuilder = SSLContexts.custom()           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| .loadTrustMaterial(trustStore, null); final SSLContext sslContext =  |&lt;br /&gt;
| sslContextBuilder.build();                                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| RestClientBuilder builder = RestClient.builder( new                  |&lt;br /&gt;
| HttpHost(&amp;quot;linux1&amp;quot;, 9200, &amp;quot;https&amp;quot;))                               |&lt;br /&gt;
| .setHttpClientConfigCallback(new                                     |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| RestClientBuilder.HttpClientConfigCallback() {                       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @Override                                                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| public HttpAsyncClientBuilder customizeHttpClient(                   |&lt;br /&gt;
| HttpAsyncClientBuilder httpClientBuilder) { return                   |&lt;br /&gt;
| httpClientBuilder.setSSLContext(sslContext)                          |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| .setSSLHostnameVerifier(NoopHostnameVerifier.INSTANCE)               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| .setDefaultCredentialsProvider(credentialsProvider);                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| });                                                                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| RestClient restClient = builder.build();                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| ElasticsearchTransport transport = new RestClientTransport(          |&lt;br /&gt;
| restClient, new JacksonJsonpMapper());                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| ElasticsearchClient client = new ElasticsearchClient(transport);     |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| ElasticsearchAsyncClient asyncClient = new                           |&lt;br /&gt;
| ElasticsearchAsyncClient(transport); ...                            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| transport.close();                                                   |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;h3 id=&#34;413-操作数据普通操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#413-操作数据普通操作&#34;&gt;#&lt;/a&gt; 4.1.3 操作数据（普通操作）&lt;/h3&gt;
&lt;h4 id=&#34;4131-索引操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4131-索引操作&#34;&gt;#&lt;/a&gt; 4.1.3.1 索引操作&lt;/h4&gt;
&lt;p&gt;// 创建索引&lt;/p&gt;
&lt;p&gt;CreateIndexRequest request = new&lt;/p&gt;
&lt;p&gt;CreateIndexRequest.Builder().index(&amp;quot;myindex&amp;quot;).build();&lt;/p&gt;
&lt;p&gt;final CreateIndexResponse createIndexResponse =&lt;br /&gt;
client.indices().create(request);&lt;/p&gt;
&lt;p&gt;System.out.println (&amp;quot;创建索引成功：&amp;quot; +&lt;br /&gt;
createIndexResponse.acknowledged());&lt;/p&gt;
&lt;p&gt;// 查询索引&lt;/p&gt;
&lt;p&gt;GetIndexRequest getIndexRequest = new&lt;/p&gt;
&lt;p&gt;GetIndexRequest.Builder().index(&amp;quot;myindex&amp;quot;).build();&lt;/p&gt;
&lt;p&gt;final GetIndexResponse getIndexResponse =&lt;br /&gt;
client.indices().get(getIndexRequest);&lt;/p&gt;
&lt;p&gt;System.out.println (&amp;quot;索引查询成功：&amp;quot; + getIndexResponse.result ());&lt;/p&gt;
&lt;p&gt;// 删除索引&lt;/p&gt;
&lt;p&gt;DeleteIndexRequest deleteIndexRequest = new&lt;/p&gt;
&lt;p&gt;DeleteIndexRequest.Builder().index(&amp;quot;myindex&amp;quot;).build(); final&lt;br /&gt;
DeleteIndexResponse delete =&lt;br /&gt;
client.indices().delete(deleteIndexRequest); final boolean acknowledged&lt;br /&gt;
= delete.acknowledged (); System.out.println (&amp;quot;删除索引成功：&amp;quot; +&lt;br /&gt;
acknowledged);&lt;/p&gt;
&lt;h4 id=&#34;4132-文档操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4132-文档操作&#34;&gt;#&lt;/a&gt; 4.1.3.2 文档操作&lt;/h4&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| // 创建文档                                                          |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| IndexRequest indexRequest = new IndexRequest.Builder()               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| .index(&amp;quot;myindex&amp;quot;)                                                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| .id(user.getId().toString())                                         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| .document(user) .build();                                            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| final IndexResponse index = client.index(indexRequest);              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| System.out.println (&amp;quot;文档操作结果:&amp;quot; + index.result ());              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // 批量创建文档                                                      |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| final List&amp;lt;BulkOperation&amp;gt; operations = new                         |&lt;br /&gt;
| ArrayList&amp;lt;BulkOperation&amp;gt;(); for ( int i= 1;i &amp;lt;= 5; i++ ) {        |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| final CreateOperation.Builder builder = new                          |&lt;br /&gt;
| CreateOperation.Builder(); builder.index(&amp;quot;myindex&amp;quot;);               |&lt;br /&gt;
| &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2J1aWxkZXIuaWQ=&#34;&gt;builder.id&lt;/span&gt;(&amp;quot;200&amp;quot; + i); builder.document(new User(2000 + i, 30 + i  |&lt;br /&gt;
| * 10, &amp;quot;zhangsan&amp;quot; + i, &amp;quot;beijing&amp;quot;,                                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| 1000 + i*1000)); final CreateOperation&amp;lt;Object&amp;gt;                    |&lt;br /&gt;
| objectCreateOperation = builder.build();                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| final BulkOperation bulk = new                                       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| BulkOperation.Builder().create(objectCreateOperation).build();       |&lt;br /&gt;
| operations.add(bulk);                                                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| BulkRequest bulkRequest = new                                        |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| BulkRequest.Builder().operations(operations).build(); final          |&lt;br /&gt;
| BulkResponse bulkResponse = client.bulk(bulkRequest);                |&lt;br /&gt;
| System.out.println (&amp;quot;数据操作成功：&amp;quot; + bulkResponse);               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // 删除文档                                                          |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| DeleteRequest deleteRequest = new                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| DeleteRequest.Builder().index(&amp;quot;myindex&amp;quot;).id(&amp;quot;1001&amp;quot;).build();     |&lt;br /&gt;
| client.delete(deleteRequest);                                        |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;h4 id=&#34;4133-文档查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4133-文档查询&#34;&gt;#&lt;/a&gt; 4.1.3.3 文档查询&lt;/h4&gt;
&lt;p&gt;+--------------------------------------------------+---+-------+&lt;br /&gt;
| final SearchRequest.Builder searchRequestBuilder | = | &amp;gt; new |&lt;br /&gt;
+==========================================&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;+&lt;/mark&gt;=+&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;=+&lt;br /&gt;
| &amp;gt; SearchRequest.Builder().index(&amp;quot;myindex1&amp;quot;);   |   |       |&lt;br /&gt;
+--------------------------------------------------+---+-------+&lt;/p&gt;
&lt;p&gt;MatchQuery matchQuery = new&lt;/p&gt;
&lt;p&gt;MatchQuery.Builder().field(&amp;quot;city&amp;quot;).query(FieldValue.of(&amp;quot;beijing&amp;quot;)).build();&lt;br /&gt;
Query query = new Query.Builder().match(matchQuery).build();&lt;br /&gt;
searchRequestBuilder.query(query);&lt;/p&gt;
&lt;p&gt;SearchRequest searchRequest = searchRequestBuilder.build();&lt;/p&gt;
&lt;p&gt;final SearchResponse&amp;lt;Object&amp;gt; search = client.search(searchRequest,&lt;/p&gt;
&lt;p&gt;Object.class);&lt;/p&gt;
&lt;p&gt;System.out.println(search);&lt;/p&gt;
&lt;h3 id=&#34;414-操作数据函数操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#414-操作数据函数操作&#34;&gt;#&lt;/a&gt; 4.1.4 操作数据（函数操作）&lt;/h3&gt;
&lt;h4 id=&#34;4141-索引操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4141-索引操作&#34;&gt;#&lt;/a&gt; 4.1.4.1 索引操作&lt;/h4&gt;
&lt;p&gt;+----------------------------+---+---------------------------+-----+&lt;br /&gt;
| &amp;gt; // 创建索引              | = | client.indices ().create (p | -&amp;gt; |&lt;br /&gt;
|                            |   |                           |     |&lt;br /&gt;
| final Boolean acknowledged |   |                           |     |&lt;br /&gt;
+&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;+&lt;/mark&gt;=+&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;=+=====+&lt;br /&gt;
| &amp;gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3AuaW4=&#34;&gt;p.in&lt;/span&gt;                     |   | &amp;gt; )                       |     |&lt;br /&gt;
| dex(&amp;quot;&amp;quot;)).acknowledged(); |   |                           |     |&lt;br /&gt;
| &amp;gt;                          |   |                           |     |&lt;br /&gt;
| &amp;gt; System.out.              |   |                           |     |&lt;br /&gt;
| println (&amp;quot;创建索引成功&amp;quot;); |   |                           |     |&lt;br /&gt;
| &amp;gt;                          |   |                           |     |&lt;br /&gt;
| &amp;gt; // 获取索引              |   |                           |     |&lt;br /&gt;
| &amp;gt;                          |   |                           |     |&lt;br /&gt;
| &amp;gt; System.out.println(      |   |                           |     |&lt;br /&gt;
| &amp;gt; client.indices().get(    |   |                           |     |&lt;br /&gt;
| &amp;gt;                          |   |                           |     |&lt;br /&gt;
| &amp;gt; req -&amp;gt;                  |   |                           |     |&lt;br /&gt;
| &amp;gt; req.index(&amp;quot;myindex1&amp;quot;)  |   |                           |     |&lt;br /&gt;
| &amp;gt;                          |   |                           |     |&lt;br /&gt;
| &amp;gt; ).result());             |   |                           |     |&lt;br /&gt;
| &amp;gt;                          |   |                           |     |&lt;br /&gt;
| &amp;gt; // 删除索引              |   |                           |     |&lt;br /&gt;
| &amp;gt;                          |   |                           |     |&lt;br /&gt;
| &amp;gt; client.indices().delete( |   |                           |     |&lt;br /&gt;
| &amp;gt; reqbuilder -&amp;gt;           |   |                           |     |&lt;br /&gt;
| &amp;gt; re                       |   |                           |     |&lt;br /&gt;
| qbuilder.index(&amp;quot;myindex&amp;quot; |   |                           |     |&lt;br /&gt;
| &amp;gt; ).acknowledged();        |   |                           |     |&lt;br /&gt;
+----------------------------+---+---------------------------+-----+&lt;/p&gt;
&lt;h4 id=&#34;4142-文档操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4142-文档操作&#34;&gt;#&lt;/a&gt; 4.1.4.2 文档操作&lt;/h4&gt;
&lt;p&gt;+---------------------------------------------------------------+-----+&lt;br /&gt;
| &amp;gt; // 创建文档                                                 | -&amp;gt; |&lt;br /&gt;
| &amp;gt;                                                             |     |&lt;br /&gt;
| &amp;gt; System.out.println( client.index( req -&amp;gt;                   |     |&lt;br /&gt;
| &amp;gt; req.index(&amp;quot;myindex&amp;quot;)                                      |     |&lt;br /&gt;
| &amp;gt;                                                             |     |&lt;br /&gt;
| &amp;gt; .id(user.getId().toString())                                |     |&lt;br /&gt;
| &amp;gt;                                                             |     |&lt;br /&gt;
| &amp;gt; .document(user)                                             |     |&lt;br /&gt;
| &amp;gt;                                                             |     |&lt;br /&gt;
| &amp;gt; ).result()                                                  |     |&lt;br /&gt;
| &amp;gt;                                                             |     |&lt;br /&gt;
| &amp;gt; );                                                          |     |&lt;br /&gt;
| &amp;gt;                                                             |     |&lt;br /&gt;
| &amp;gt; // 批量创建文档 client.bulk (req -&amp;gt; { users.forEach ( u -&amp;gt; |     |&lt;br /&gt;
| &amp;gt; { req.operations( b -&amp;gt; {                                   |     |&lt;br /&gt;
| &amp;gt;                                                             |     |&lt;br /&gt;
| &amp;gt; b.create(                                                   |     |&lt;br /&gt;
| &amp;gt;                                                             |     |&lt;br /&gt;
| &amp;gt; d                                                           |     |&lt;br /&gt;
| &amp;gt;                                                             |     |&lt;br /&gt;
| &amp;gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2QuaWQ=&#34;&gt;d.id&lt;/span&gt;(u.getId().toString()).index(&amp;quot;myindex&amp;quot;).document(u)   |     |&lt;br /&gt;
| &amp;gt; );                                                          |     |&lt;br /&gt;
| &amp;gt;                                                             |     |&lt;br /&gt;
| &amp;gt; return b;                                                   |     |&lt;br /&gt;
| &amp;gt;                                                             |     |&lt;br /&gt;
| &amp;gt; }                                                           |     |&lt;br /&gt;
| &amp;gt;                                                             |     |&lt;br /&gt;
| &amp;gt; );                                                          |     |&lt;br /&gt;
| &amp;gt;                                                             |     |&lt;br /&gt;
| &amp;gt; } );                                                        |     |&lt;br /&gt;
| &amp;gt;                                                             |     |&lt;br /&gt;
| &amp;gt; return req;                                                 |     |&lt;br /&gt;
| &amp;gt;                                                             |     |&lt;br /&gt;
| &amp;gt; }                                                           |     |&lt;br /&gt;
| &amp;gt;                                                             |     |&lt;br /&gt;
| &amp;gt; );                                                          |     |&lt;br /&gt;
| &amp;gt;                                                             |     |&lt;br /&gt;
| &amp;gt; // 删除文档                                                 |     |&lt;br /&gt;
| &amp;gt;                                                             |     |&lt;br /&gt;
| &amp;gt; client.delete( req -&amp;gt; req.index(&amp;quot;myindex&amp;quot;).id(&amp;quot;1001&amp;quot;)  |     |&lt;br /&gt;
| &amp;gt; );                                                          |     |&lt;br /&gt;
+---------------------------------------------------------------+-----+&lt;/p&gt;
&lt;h4 id=&#34;4143-文档查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4143-文档查询&#34;&gt;#&lt;/a&gt; 4.1.4.3 文档查询&lt;/h4&gt;
&lt;p&gt;+-----------------------------------------------------+&lt;br /&gt;
| client.search( req -&amp;gt; { req.query( q -&amp;gt;           |&lt;br /&gt;
|                                                     |&lt;br /&gt;
| q.match( m -&amp;gt; m.field(&amp;quot;city&amp;quot;).query(&amp;quot;beijing&amp;quot;) |&lt;br /&gt;
|                                                     |&lt;br /&gt;
| ) );                                                |&lt;br /&gt;
|                                                     |&lt;br /&gt;
| return req;                                         |&lt;br /&gt;
|                                                     |&lt;br /&gt;
| }                                                   |&lt;br /&gt;
|                                                     |&lt;br /&gt;
| , Object.class                                      |&lt;br /&gt;
|                                                     |&lt;br /&gt;
| );                                                  |&lt;br /&gt;
+-----------------------------------------------------+&lt;/p&gt;
&lt;h3 id=&#34;415-客户端异步操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#415-客户端异步操作&#34;&gt;#&lt;/a&gt; 4.1.5 客户端异步操作&lt;/h3&gt;
&lt;p&gt;ES Java API&lt;br /&gt;
 提供了同步和异步的两种客户端处理。之前演示的都是同步处理，异步客户端的处理和同步客户端处理的&lt;br /&gt;
 API 基本原理相同，不同的是需要异步对返回结果进行相应的处理。&lt;/p&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| // 创建索引                                                          |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| asyncClient.indices().create( req -&amp;gt; { req.index(&amp;quot;newindex&amp;quot;);     |&lt;br /&gt;
| return req;                                                          |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| ).&lt;strong&gt;whenComplete&lt;/strong&gt;(                                                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| (resp, error) -&amp;gt; {                                                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| System.out.println (&amp;quot;回调函数&amp;quot;); if ( resp != null ) {              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| System.out.println(resp.acknowledged());                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| } else { error.printStackTrace();                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| );                                                                   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| System.out.println (&amp;quot;主线程操作...&amp;quot;);                              |&lt;br /&gt;
+======================================================================+&lt;br /&gt;
|                                                                      |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;br /&gt;
| asyncClient.indices().create(                                        |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| req -&amp;gt; {                                                            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| req.index(&amp;quot;newindex&amp;quot;); return req;                                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| )                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| .thenApply( resp -&amp;gt; {                                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| return resp.acknowledged();                                          |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| )                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| .whenComplete(                                                       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| (resp, error) -&amp;gt; {                                                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| System.out.println (&amp;quot;回调函数&amp;quot;);                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| if ( !resp ) {                                                       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| System.out.println();                                                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| } else { error.printStackTrace();                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| );                                                                   |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;h2 id=&#34;42-eql-操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#42-eql-操作&#34;&gt;#&lt;/a&gt; &lt;strong&gt;4.2 EQL&lt;/strong&gt; 操作&lt;/h2&gt;
&lt;p&gt;EQL 的全名是 Event Query Language&lt;br /&gt;
 (EQL)。事件查询语言（EQL）是一种用于基于事件的时间序列数据（例如日志，指标和跟踪）的查询语言。在&lt;br /&gt;
 Elastic Security 平台上，当输入有效的 EQL&lt;br /&gt;
 时，查询会在数据节点上编译，执行查询并返回结果。这一切都快速、并行地发生，让用户立即看到结果。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;EQL 的优点：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;EQL 使你可以表达事件之间的关系&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;许多查询语言允许您匹配单个事件。 EQL&lt;br /&gt;
 使你可以匹配不同事件类别和时间跨度的一&lt;/p&gt;
&lt;p&gt;系列事件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;EQL 的学习曲线很低&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;EQL 语法看起来像其他常见查询语言，例如 SQL。 EQL&lt;br /&gt;
 使你可以直观地编写和读取查&lt;/p&gt;
&lt;p&gt;询，从而可以进行快速，迭代的搜索。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;EQL 设计用于安全用例&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;尽管你可以将其用于任何基于事件的数据，但我们创建了 EQL 来进行威胁搜寻。&lt;br /&gt;
EQL 不仅支持危害指标（IOC）搜索，而且可以描述超出 IOC 范围的活动。&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image156.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.761111111111111in&#34;
&lt;p&gt;height=&amp;quot;2.542361111111111in&amp;quot;}&lt;/p&gt;
&lt;h3 id=&#34;421-基础语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#421-基础语法&#34;&gt;#&lt;/a&gt; 4.2.1 基础语法&lt;/h3&gt;
&lt;h4 id=&#34;4211-数据准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4211-数据准备&#34;&gt;#&lt;/a&gt; 4.2.1.1 数据准备&lt;/h4&gt;
&lt;p&gt;要运行 EQL 搜索，搜索到的数据流或索引必须包含时间戳和事件类别字段。&lt;br /&gt;
默认情况下，&lt;/p&gt;
&lt;p&gt;EQL 使用 Elastic 通用模式（ECS）中的 @timestamp 和 event.category&lt;br /&gt;
 字段。&lt;/p&gt;
&lt;p&gt;@timestamp 表示时间戳，event.category 表示事件分类。&lt;/p&gt;
&lt;p&gt;咱们准备一些简单的数据，用于表示电商网站页面跳转&lt;/p&gt;
&lt;p&gt;# 创建索引&lt;/p&gt;
&lt;p&gt;PUT /gmall&lt;/p&gt;
&lt;p&gt;# 批量增加数据&lt;/p&gt;
&lt;p&gt;PUT _bulk&lt;/p&gt;
&lt;p&gt;{&amp;quot;index&amp;quot;:{&amp;quot;_index&amp;quot;:&amp;quot;gmall&amp;quot;}}&lt;/p&gt;
&lt;p&gt;{&amp;quot;@timestamp&amp;quot;:&amp;quot;2022-06-01T12:00:00.00+08:00&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;event&amp;quot;:{&amp;quot;category&amp;quot;:&amp;quot;page&amp;quot;},&amp;quot;page&amp;quot; : {&amp;quot;session_id&amp;quot; :&lt;/p&gt;
&lt;p&gt;&amp;quot;42FC7E13-CB3E-5C05-0000-0010A0125101&amp;quot;,&amp;quot;last_page_id&amp;quot; :&lt;br /&gt;
&amp;quot;&amp;quot;,&amp;quot;page_id&amp;quot; :&lt;/p&gt;
&lt;p&gt;&amp;quot;login&amp;quot;,&amp;quot;user_id&amp;quot; : &amp;quot;&amp;quot;}}&lt;/p&gt;
&lt;p&gt;{&amp;quot;index&amp;quot;:{&amp;quot;_index&amp;quot;:&amp;quot;gmall&amp;quot;}}&lt;/p&gt;
&lt;p&gt;{&amp;quot;@timestamp&amp;quot;:&amp;quot;2022-06-01T12:01:00.00+08:00&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;event&amp;quot;:{&amp;quot;category&amp;quot;:&amp;quot;page&amp;quot;},&amp;quot;page&amp;quot; : {&amp;quot;session_id&amp;quot; :&lt;/p&gt;
&lt;p&gt;&amp;quot;42FC7E13-CB3E-5C05-0000-0010A0125101&amp;quot;,&amp;quot;last_page_id&amp;quot; :&lt;br /&gt;
&amp;quot;login&amp;quot;,&amp;quot;page_id&amp;quot; :&lt;/p&gt;
&lt;p&gt;&amp;quot;good_list&amp;quot;,&amp;quot;user_id&amp;quot; : &amp;quot;1&amp;quot;}}&lt;/p&gt;
&lt;p&gt;{&amp;quot;index&amp;quot;:{&amp;quot;_index&amp;quot;:&amp;quot;gmall&amp;quot;}}&lt;/p&gt;
&lt;p&gt;{&amp;quot;@timestamp&amp;quot;:&amp;quot;2022-06-01T12:05:00.00+08:00&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;event&amp;quot;:{&amp;quot;category&amp;quot;:&amp;quot;page&amp;quot;},&amp;quot;page&amp;quot; : {&amp;quot;session_id&amp;quot; :&lt;/p&gt;
&lt;p&gt;&amp;quot;42FC7E13-CB3E-5C05-0000-0010A0125101&amp;quot;,&amp;quot;last_page_id&amp;quot; :&lt;br /&gt;
&amp;quot;good_list&amp;quot;,&amp;quot;page_id&amp;quot; :&lt;/p&gt;
&lt;p&gt;&amp;quot;good_detail&amp;quot;,&amp;quot;user_id&amp;quot; : &amp;quot;1&amp;quot;}}&lt;/p&gt;
&lt;p&gt;{&amp;quot;index&amp;quot;:{&amp;quot;_index&amp;quot;:&amp;quot;gmall&amp;quot;}}&lt;/p&gt;
&lt;p&gt;{&amp;quot;@timestamp&amp;quot;:&amp;quot;2022-06-01T12:07:00.00+08:00&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;event&amp;quot;:{&amp;quot;category&amp;quot;:&amp;quot;page&amp;quot;},&amp;quot;page&amp;quot; : {&amp;quot;session_id&amp;quot; :&lt;br /&gt;
&amp;quot;42FC7E13-CB3E-5C05-0000-0010A0125101&amp;quot;,&amp;quot;last_page_id&amp;quot; :&lt;/p&gt;
&lt;p&gt;&amp;quot;good_detail&amp;quot;,&amp;quot;page_id&amp;quot; : &amp;quot;order&amp;quot;,&amp;quot;user_id&amp;quot; : &amp;quot;1&amp;quot;}}&lt;/p&gt;
&lt;p&gt;{&amp;quot;index&amp;quot;:{&amp;quot;_index&amp;quot;:&amp;quot;gmall&amp;quot;}}&lt;/p&gt;
&lt;p&gt;{&amp;quot;@timestamp&amp;quot;:&amp;quot;2022-06-01T12:08:00.00+08:00&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;event&amp;quot;:{&amp;quot;category&amp;quot;:&amp;quot;page&amp;quot;},&amp;quot;page&amp;quot; : {&amp;quot;session_id&amp;quot; :&lt;/p&gt;
&lt;p&gt;&amp;quot;42FC7E13-CB3E-5C05-0000-0010A0125101&amp;quot;,&amp;quot;last_page_id&amp;quot; :&lt;br /&gt;
&amp;quot;order&amp;quot;,&amp;quot;page_id&amp;quot; :&lt;/p&gt;
&lt;p&gt;&amp;quot;payment&amp;quot;,&amp;quot;user_id&amp;quot; : &amp;quot;1&amp;quot;}}&lt;/p&gt;
&lt;p&gt;{&amp;quot;index&amp;quot;:{&amp;quot;_index&amp;quot;:&amp;quot;gmall&amp;quot;}}&lt;/p&gt;
&lt;p&gt;{&amp;quot;@timestamp&amp;quot;:&amp;quot;2022-06-01T12:08:00.00+08:00&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;event&amp;quot;:{&amp;quot;category&amp;quot;:&amp;quot;page&amp;quot;},&amp;quot;page&amp;quot; : {&amp;quot;session_id&amp;quot; :&lt;/p&gt;
&lt;p&gt;&amp;quot;42FC7E13-CB3E-5C05-0000-0010A0125102&amp;quot;,&amp;quot;last_page_id&amp;quot; :&lt;br /&gt;
&amp;quot;&amp;quot;,&amp;quot;page_id&amp;quot; :&lt;/p&gt;
&lt;p&gt;&amp;quot;login&amp;quot;,&amp;quot;user_id&amp;quot; : &amp;quot;2&amp;quot;}}&lt;/p&gt;
&lt;p&gt;{&amp;quot;index&amp;quot;:{&amp;quot;_index&amp;quot;:&amp;quot;gmall&amp;quot;}}&lt;/p&gt;
&lt;p&gt;{&amp;quot;@timestamp&amp;quot;:&amp;quot;2022-06-01T12:08:00.00+08:00&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;event&amp;quot;:{&amp;quot;category&amp;quot;:&amp;quot;page&amp;quot;},&amp;quot;page&amp;quot; : {&amp;quot;session_id&amp;quot; :&lt;/p&gt;
&lt;p&gt;&amp;quot;42FC7E13-CB3E-5C05-0000-0010A0125102&amp;quot;,&amp;quot;last_page_id&amp;quot; :&lt;br /&gt;
&amp;quot;login&amp;quot;,&amp;quot;page_id&amp;quot; :&lt;/p&gt;
&lt;p&gt;&amp;quot;payment&amp;quot;,&amp;quot;user_id&amp;quot; : &amp;quot;2&amp;quot;}}&lt;/p&gt;
&lt;h4 id=&#34;4212-数据窗口搜索&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4212-数据窗口搜索&#34;&gt;#&lt;/a&gt; 4.2.1.2 数据窗口搜索&lt;/h4&gt;
&lt;p&gt;在事件响应过程中，有很多时候，了解特定时间发生的所有事件是很有用的。使用一种名为&lt;br /&gt;
 any&lt;br /&gt;
 的特殊事件类型，针对所有事件进行匹配，如果想要匹配特定事件，就需要指明事件分类名称&lt;/p&gt;
&lt;p&gt;#&lt;/p&gt;
&lt;p&gt;GET /gmall/_eql/search&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;query&amp;quot; : &amp;quot;&amp;quot;&amp;quot; any where page.user_id == &amp;quot;1&amp;quot;&lt;/p&gt;
&lt;p&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.2.1.3&lt;/strong&gt; 统计符合条件的事件&lt;/p&gt;
&lt;p&gt;+-----------------------------------+&lt;br /&gt;
| #                                |&lt;br /&gt;
|                                   |&lt;br /&gt;
| GET /gmall/_eql/search           |&lt;br /&gt;
|                                   |&lt;br /&gt;
| {                                 |&lt;br /&gt;
|                                   |&lt;br /&gt;
| &amp;quot;query&amp;quot; : &amp;quot;&amp;quot;&amp;quot; any where true |&lt;br /&gt;
|                                   |&lt;br /&gt;
| &amp;quot;&amp;quot;&amp;quot;,                           |&lt;br /&gt;
+-----------------------------------+&lt;/p&gt;
&lt;p&gt;&amp;quot;filter&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;range&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;@timestamp&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;gte&amp;quot;: &amp;quot;1654056000000&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;lt&amp;quot;: &amp;quot;1654056005000&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;} }&lt;/p&gt;
&lt;h4 id=&#34;4214-事件序列&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4214-事件序列&#34;&gt;#&lt;/a&gt; 4.2.1.4 事件序列&lt;/h4&gt;
&lt;p&gt;+--------------------------------------------------+&lt;br /&gt;
| # 页面先访问 login, 后面又访问了 good_detail 的页面 |&lt;br /&gt;
|                                                  |&lt;br /&gt;
| GET /gmall/_eql/search                          |&lt;br /&gt;
|                                                  |&lt;br /&gt;
| {                                                |&lt;br /&gt;
|                                                  |&lt;br /&gt;
| &amp;quot;query&amp;quot; : &amp;quot;&amp;quot;&amp;quot; sequence by page.session_id   |&lt;br /&gt;
|                                                  |&lt;br /&gt;
| [page where page.page_id==&amp;quot;login&amp;quot;]           |&lt;br /&gt;
|                                                  |&lt;br /&gt;
| [page where page.page_id==&amp;quot;good_detail&amp;quot;]     |&lt;br /&gt;
|                                                  |&lt;br /&gt;
| &amp;quot;&amp;quot;&amp;quot;                                           |&lt;br /&gt;
|                                                  |&lt;br /&gt;
| }                                                |&lt;br /&gt;
+--------------------------------------------------+&lt;/p&gt;
&lt;h3 id=&#34;422-安全检测&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#422-安全检测&#34;&gt;#&lt;/a&gt; 4.2.2 安全检测&lt;/h3&gt;
&lt;p&gt;EQL 在 Elastic Securit 中被广泛使用。实际应用时，我们可以使用 EQL&lt;br /&gt;
 语言来进行检测安全威胁和其他可疑行为。&lt;/p&gt;
&lt;h4 id=&#34;4221-数据准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4221-数据准备&#34;&gt;#&lt;/a&gt; 4.2.2.1 数据准备&lt;/h4&gt;
&lt;p&gt;regsvr32.exe 是一个内置的命令行实用程序，用于在 Windows 中注册.dll&lt;br /&gt;
 库。作为本机工具，regsvr32.exe&lt;br /&gt;
 具有受信任的状态，从而使它可以绕过大多数允许列表软件和脚本阻止程序。&lt;br /&gt;
有权访问用户命令行的攻击者可以使用 regsvr32.exe 通过.dll&lt;br /&gt;
 库运行恶意脚本，即使在其他情况下也不允许这些脚本运行。&lt;/p&gt;
&lt;p&gt;regsvr32 滥用的一种常见变体是 Squfullydoo 攻击。 在 Squfullydoo&lt;br /&gt;
 攻击中，regsvr32.exe 命令使用 scrobj.dll 库注册并运行远程脚本。&lt;/p&gt;
&lt;p&gt;测试数据来自 Atomic Red Team 的测试数据集，其中包括模仿 Squibledoo&lt;br /&gt;
 攻击的事件。&lt;/p&gt;
&lt;p&gt;数据已映射到 Elastic&lt;br /&gt;
 通用架构（ECS）字段：normalized-T1117-AtomicRed-regsvr32.json&lt;/p&gt;
&lt;p&gt;将文件内容导入到 ES 软件中：&lt;/p&gt;
&lt;p&gt;# 创建索引&lt;/p&gt;
&lt;p&gt;PUT my-eql-index&lt;/p&gt;
&lt;p&gt;# 导入数据&lt;/p&gt;
&lt;p&gt;POST my-eql-index/_bulk?pretty&amp;amp;refresh&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image157.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.3033475503062117in&amp;quot;}&lt;/p&gt;
&lt;p&gt;# 导入数据&lt;/p&gt;
&lt;p&gt;GET /_cat/indices/my-eql-index?v=true&amp;amp;h=health,status,index,docs.count&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image159.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.807723097112861in&#34;
&lt;p&gt;height=&amp;quot;1.0391797900262467in&amp;quot;}&lt;/p&gt;
&lt;p&gt;获取与 regsvr32.exe 进程关联的事件数&lt;/p&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| # 查询数据                                                          |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # ?filter_path=-hits.events 从响应中排除 hits.events 属性。         |&lt;br /&gt;
| 此搜索仅用于获取事件计数，                                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| 而不是匹配事件的列表                                                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # query : 匹配任何进程名称为 regsvr32.exe 的事件                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # size : 最多返回 200 个匹配事件的匹配，实际查询结果为 143 个          |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| GET my-eql-index/_eql/search?filter_path=-hits.events               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| {                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| &amp;quot;query&amp;quot;: &amp;quot;&amp;quot;&amp;quot; any where &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3Byb2Nlc3MubmFtZQ==&#34;&gt;process.name&lt;/span&gt; == &amp;quot;regsvr32.exe&amp;quot;         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| &amp;quot;&amp;quot;&amp;quot;,                                                              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| &amp;quot;size&amp;quot;: 200 }                                                      |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image161.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.485152012248469in&amp;quot;}&lt;/p&gt;
&lt;p&gt;regsvr32.exe 进程与 143 个事件相关联。 但是如何首先调用&lt;br /&gt;
 regsvr32.exe？谁调用的？ regsvr32.exe&lt;br /&gt;
 是一个命令行实用程序。将结果缩小到使用命令行的进程&lt;/p&gt;
&lt;p&gt;# 增加过滤条件查询数据&lt;/p&gt;
&lt;p&gt;GET my-eql-index/_eql/search&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;query&amp;quot;: &amp;quot;&amp;quot;&amp;quot; process where &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3Byb2Nlc3MubmFtZQ==&#34;&gt;process.name&lt;/span&gt; == &amp;quot;regsvr32.exe&amp;quot; and&lt;br /&gt;
process.command_line.keyword != null &amp;quot;&amp;quot;&amp;quot;&lt;/p&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
+======================================================================+&lt;br /&gt;
| &amp;gt; &lt;img data-src=&#34;/Distribution/Elasticsearch-8/image163.jpg&#34; class=&#34;&#34;&gt;{width=&amp;quot;5.748611111111111in&amp;quot;                |&lt;br /&gt;
| &amp;gt; height=&amp;quot;2.5618055555555554in&amp;quot;}                                     |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;p&gt;该查询将一个事件与创建的 event.type 相匹配，指示 regsvr32.exe&lt;br /&gt;
 进程的开始。根据事件的&lt;/p&gt;
&lt;p&gt;process.command_line 值，regsvr32.exe 使用 scrobj.dll 注册了脚本&lt;br /&gt;
 RegSvr32.sct. 这符合&lt;/p&gt;
&lt;p&gt;Squibledoo 攻击的行为&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.2.4&lt;/strong&gt; 检查恶意脚本加载&lt;/p&gt;
&lt;p&gt;检查 regsvr32.exe 以后是否加载 scrobj.dll 库&lt;/p&gt;
&lt;p&gt;# 增加过滤条件查询数据&lt;/p&gt;
&lt;p&gt;GET my-eql-index/_eql/search&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;query&amp;quot;: &amp;quot;&amp;quot;&amp;quot; library where &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3Byb2Nlc3MubmFtZQ==&#34;&gt;process.name&lt;/span&gt; == &amp;quot;regsvr32.exe&amp;quot; and&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2RsbC5uYW1l&#34;&gt;dll.name&lt;/span&gt; == &amp;quot;scrobj.dll&amp;quot; &amp;quot;&amp;quot;&amp;quot;&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image164.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.667029746281715in&amp;quot;}&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.2.5&lt;/strong&gt;&lt;br /&gt;
 检查攻击成功可能性在许多情况下，攻击者使用恶意脚本连接到远程服务器或下载其他文件。&lt;br /&gt;
使用 EQL 序列查询来检查以下一系列事件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;regsvr32.exe 进程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过相同的进程加载 scrobj.dll 库&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;同一过程中的任何网络事件&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据上一个响应中看到的命令行值，你可以期望找到一个匹配项。但是，此查询并非针对该特定命令而设计。取而代之的是，它寻找一种可疑行为的模式，这种模式足以检测出相似的威胁&lt;/p&gt;
&lt;p&gt;+----------------------------------------------------+&lt;br /&gt;
| # 增加过滤条件查询数据                            |&lt;br /&gt;
|                                                    |&lt;br /&gt;
| GET my-eql-index/_eql/search                      |&lt;br /&gt;
|                                                    |&lt;br /&gt;
| {                                                  |&lt;br /&gt;
|                                                    |&lt;br /&gt;
| &amp;quot;query&amp;quot;: &amp;quot;&amp;quot;&amp;quot; sequence by process.pid          |&lt;br /&gt;
|                                                    |&lt;br /&gt;
| [process where &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3Byb2Nlc3MubmFtZQ==&#34;&gt;process.name&lt;/span&gt; == &amp;quot;regsvr32.exe&amp;quot;] |&lt;br /&gt;
|                                                    |&lt;br /&gt;
| [library where &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2RsbC5uYW1l&#34;&gt;dll.name&lt;/span&gt; == &amp;quot;scrobj.dll&amp;quot;]       |&lt;br /&gt;
|                                                    |&lt;br /&gt;
| [network where true]                             |&lt;br /&gt;
|                                                    |&lt;br /&gt;
| &amp;quot;&amp;quot;&amp;quot; }                                           |&lt;br /&gt;
+----------------------------------------------------+&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image166.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.6270920822397201in&amp;quot;}&lt;/p&gt;
&lt;p&gt;一般使用 Elasticsearch 的时候，会使用 Query DSL 来查询数据，从&lt;br /&gt;
 Elasticsearch6.3 版本以后，Elasticsearch 已经支持 SQL 查询了。&lt;/p&gt;
&lt;p&gt;Elasticsearch SQL 是一个 X-Pack 组件，它允许针对 Elasticsearch&lt;br /&gt;
 实时执行类似 SQL 的查询。无论使用 REST 接口，命令行还是&lt;br /&gt;
 JDBC，任何客户端都可以使用 SQL 对 Elasticsearch&lt;br /&gt;
 中的数据进行原生搜索和聚合数据。可以将 Elasticsearch SQL&lt;br /&gt;
 看作是一种翻译器，它可以将&lt;/p&gt;
&lt;p&gt;SQL 翻译成 Query DSL。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Elasticsearch SQL 具有如下特性：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;原生支持：Elasticsearch SQL 是专门为 Elasticsearch 打造的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;没有额外的零件：无需其他硬件，处理器，运行环境或依赖库即可查询&lt;br /&gt;
 Elasticsearch，&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Elasticsearch SQL 直接在 Elasticsearch 内部运行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;轻巧高效：Elasticsearch SQL&lt;br /&gt;
 并未抽象化其搜索功能，相反的它拥抱并接受了 SQL&lt;br /&gt;
 来实现全文搜索，以简洁的方式实时运行全文搜索。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;431-sql-和-elasticsearch-的对应关系&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#431-sql-和-elasticsearch-的对应关系&#34;&gt;#&lt;/a&gt; 4.3.1 SQL 和 Elasticsearch 的对应关系&lt;/h3&gt;
&lt;p&gt;虽然 SQL 和 Elasticsearch&lt;br /&gt;
 对数据的组织方式（以及不同的语义）有不同的术语，但它们的目的本质上是相同的。&lt;/p&gt;
&lt;p&gt;+----------+-----------------+---------------------------------------+&lt;br /&gt;
| SQL      | &amp;gt; Elasticsearch | &amp;gt; 描述                                |&lt;br /&gt;
+&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;+&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;=&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;+&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;=================================+&lt;br /&gt;
| Column   | &amp;gt; field         | &amp;gt; 对比两个，数据都存储在              |&lt;br /&gt;
|          |                 | 命名条目中，具有多种数据类型，包含一  |&lt;br /&gt;
|          |                 | &amp;gt;                                     |&lt;br /&gt;
|          |                 | &amp;gt; 个值。SQL 将此类条目称为列，而      |&lt;br /&gt;
|          |                 | &amp;gt; Elasticsearch 称为字段。请注意，    |&lt;br /&gt;
|          |                 | &amp;gt;                                     |&lt;br /&gt;
|          |                 | &amp;gt; 在 Elasticsearch                    |&lt;br /&gt;
|          |                 | &amp;gt; 中，一个字段可以包含多个相          |&lt;br /&gt;
|          |                 | 同类型的值（本质上是一个列表），而在  |&lt;br /&gt;
|          |                 | &amp;gt; SQL                                 |&lt;br /&gt;
|          |                 | &amp;gt; 中，一个列可以                      |&lt;br /&gt;
|          |                 | 只包含一个所述类型的值。Elasticsearch |&lt;br /&gt;
|          |                 | &amp;gt; SQL 将尽最大努力保留 SQL            |&lt;br /&gt;
|          |                 | &amp;gt; 语义，并根据查                      |&lt;br /&gt;
|          |                 | 询拒绝那些返回具有多个值的字段的查询  |&lt;br /&gt;
+----------+-----------------+---------------------------------------+&lt;br /&gt;
| Row      | &amp;gt; document      | &amp;gt; Columns 和 fields                   |&lt;br /&gt;
|          |                 | &amp;gt; 本身不存在；它们是 row 或 a         |&lt;br /&gt;
|          |                 | &amp;gt; 的一部分                            |&lt;br /&gt;
|          |                 | &amp;gt; document。两者的语义略有不同：row   |&lt;br /&gt;
|          |                 | &amp;gt;                                     |&lt;br /&gt;
|          |                 |  趋于严格（并且有更多的强制执行），而 |&lt;br /&gt;
|          |                 | &amp;gt; document                            |&lt;br /&gt;
|          |                 | &amp;gt; 趋于                                |&lt;br /&gt;
|          |                 | 更加灵活或松散（同时仍然具有结构）。  |&lt;br /&gt;
+----------+-----------------+---------------------------------------+&lt;br /&gt;
| Table    | &amp;gt; Index         | &amp;gt; 执行查询的目标                      |&lt;br /&gt;
+----------+-----------------+---------------------------------------+&lt;br /&gt;
| Schema   | &amp;gt; Mapping       | &amp;gt; 在 RDBMS 中，schem                  |&lt;br /&gt;
|          |                 | &amp;gt; 主                                  |&lt;br /&gt;
|          |                 | 要是表的命名空间，通常用作安全边界。  |&lt;br /&gt;
|          |                 | &amp;gt;                                     |&lt;br /&gt;
|          |                 | &amp;gt; Elasticsearch                       |&lt;br /&gt;
|          |                 | &amp;gt; 没有为它提                          |&lt;br /&gt;
|          |                 | 供等效的概念。但是，当启用安全性时，  |&lt;br /&gt;
|          |                 | &amp;gt;                                     |&lt;br /&gt;
|          |                 | &amp;gt; Elasticsearch                       |&lt;br /&gt;
|          |                 | &amp;gt; 会自动应用安全性强制                |&lt;br /&gt;
|          |                 | ，以便角色只能看到它被允许访问的数据  |&lt;br /&gt;
+----------+-----------------+---------------------------------------+&lt;br /&gt;
| Database | &amp;gt; Cluster 实例  | &amp;gt; 在 SQL 中，catalog 或者 database    |&lt;br /&gt;
|          |                 | &amp;gt; 从概念上可以                        |&lt;br /&gt;
|          |                 | 互换使用，表示一组模式，即多个表。在  |&lt;br /&gt;
|          |                 | &amp;gt; Elasticsearch                       |&lt;br /&gt;
|          |                 | &amp;gt; 中，可用的索引集被分组在一个        |&lt;br /&gt;
|          |                 | &amp;gt; cluster，语义也有所不同。database   |&lt;br /&gt;
|          |                 | &amp;gt; 本质上是另一个命名空间（            |&lt;br /&gt;
|          |                 | 可能对数据的存储方式有一些影响），而  |&lt;br /&gt;
|          |                 | &amp;gt; Elasticsearch cluster 是一个运      |&lt;br /&gt;
|          |                 | &amp;gt;                                     |&lt;br /&gt;
|          |                 | &amp;gt; 行                                  |&lt;br /&gt;
|          |                 | 时实例，或者更确切地说是一组至少一个  |&lt;br /&gt;
|          |                 | &amp;gt; Elasticsearch                       |&lt;br /&gt;
|          |                 | &amp;gt; 实例（通常是分                      |&lt;br /&gt;
|          |                 | 布式运行）。在实践中，这意味着虽然在  |&lt;br /&gt;
|          |                 | &amp;gt; SQL                                 |&lt;br /&gt;
|          |                 | &amp;gt; 中，一个实例中可能有多个目录，但在  |&lt;br /&gt;
|          |                 | &amp;gt; Elasticsearch                       |&lt;br /&gt;
|          |                 | &amp;gt; 中，一个目录仅限于一个              |&lt;br /&gt;
+----------+-----------------+---------------------------------------+&lt;/p&gt;
&lt;p&gt;虽然概念之间的映射并不完全是一对一的，语义也有所不同，但共同点多于差异。事实上，&lt;/p&gt;
&lt;p&gt;SQL 的许多概念可以在 Elasticsearch&lt;br /&gt;
 中找到对应关系，并且这两者的术语也很类似&lt;/p&gt;
&lt;h3 id=&#34;432-数据准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#432-数据准备&#34;&gt;#&lt;/a&gt; 4.3.2 数据准备&lt;/h3&gt;
&lt;p&gt;# 创建索引并增加数据，等同于创建表和数据&lt;/p&gt;
&lt;p&gt;PUT my-sql-index/_bulk?refresh&lt;/p&gt;
&lt;p&gt;{&amp;quot;index&amp;quot;:{&amp;quot;_id&amp;quot;: &amp;quot;JAVA&amp;quot;}}&lt;/p&gt;
&lt;p&gt;{&amp;quot;name&amp;quot;: &amp;quot;JAVA&amp;quot;, &amp;quot;author&amp;quot;: &amp;quot;zhangsan&amp;quot;, &amp;quot;release_date&amp;quot;:&lt;br /&gt;
&amp;quot;2022-05-01&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;page_count&amp;quot;: 561}&lt;/p&gt;
&lt;p&gt;{&amp;quot;index&amp;quot;:{&amp;quot;_id&amp;quot;: &amp;quot;BIGDATA&amp;quot;}}&lt;/p&gt;
&lt;p&gt;{&amp;quot;name&amp;quot;: &amp;quot;BIGDATA&amp;quot;, &amp;quot;author&amp;quot;: &amp;quot;lisi&amp;quot;, &amp;quot;release_date&amp;quot;:&lt;br /&gt;
&amp;quot;2022-05-02&amp;quot;, &amp;quot;page_count&amp;quot;:&lt;/p&gt;
&lt;p&gt;482}&lt;/p&gt;
&lt;p&gt;{&amp;quot;index&amp;quot;:{&amp;quot;_id&amp;quot;: &amp;quot;SCALA&amp;quot;}}&lt;/p&gt;
&lt;p&gt;{&amp;quot;name&amp;quot;: &amp;quot;SCALA&amp;quot;, &amp;quot;author&amp;quot;: &amp;quot;wangwu&amp;quot;, &amp;quot;release_date&amp;quot;:&lt;br /&gt;
&amp;quot;2022-05-03&amp;quot;, &amp;quot;page_count&amp;quot;:&lt;/p&gt;
&lt;p&gt;604}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image168.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.213976377952756in&amp;quot;}&lt;/p&gt;
&lt;p&gt;现在可以使用 SQL 对数据进行查询了。&lt;/p&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| # SQL                                                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # 这里的表就是索引                                                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # 可以通过 format 参数控制返回结果的格式，默认为 json 格式 #           |&lt;br /&gt;
| txt: 表示文本格式，看起来更直观点.                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # csv: 使用逗号隔开的数据                                            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # json:JSON 格式数据                                                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # tsv: 使用 tab 键隔开数据                                            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # yaml: 属性配置格式                                                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| POST _sql?format=txt                                                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| {                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| &amp;quot;query&amp;quot;: &amp;quot;&amp;quot;&amp;quot;                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT * FROM &amp;quot;my-sql-index&amp;quot;                                      |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| &amp;quot;&amp;quot;&amp;quot;                                                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
+======================================================================+&lt;br /&gt;
| &amp;gt; &lt;img data-src=&#34;/Distribution/Elasticsearch-8/image170.jpg&#34; class=&#34;&#34;&gt;{width=&amp;quot;5.751388888888889in&amp;quot;                |&lt;br /&gt;
| &amp;gt; height=&amp;quot;1.0090277777777779in&amp;quot;}                                     |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;br /&gt;
| # 条件查询                                                          |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| POST _sql?format=txt                                                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| {                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| &amp;quot;query&amp;quot;: &amp;quot;&amp;quot;&amp;quot;                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT * FROM &amp;quot;my-sql-index&amp;quot; where page_count &amp;gt; 500              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| &amp;quot;&amp;quot;&amp;quot;                                                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image171.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;0.9654297900262467in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;实际上会发现，和 JDBC 操作时的 SQL 语法是基本是一样的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.3.3 SQL&lt;/strong&gt; 转换为 &lt;strong&gt;DSL&lt;/strong&gt; 使用当我们需要使用 Query DSL&lt;br /&gt;
 时，也可以先使用 SQL 来查询，然后通过 Translate API&lt;br /&gt;
 转换即可，查询的结果为 DSL 方式的结果&lt;/p&gt;
&lt;p&gt;# 转换 SQL 为 DSL 进行操作&lt;/p&gt;
&lt;p&gt;POST _sql/translate&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;query&amp;quot;: &amp;quot;&amp;quot;&amp;quot;&lt;/p&gt;
&lt;p&gt;SELECT * FROM &amp;quot;my-sql-index&amp;quot; where page_count &amp;gt; 500&lt;/p&gt;
&lt;p&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image173.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.787722003499563in&#34;
&lt;p&gt;height=&amp;quot;2.2936964129483814in&amp;quot;}&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.3.4 SQL&lt;/strong&gt; 和 &lt;strong&gt;DSL&lt;/strong&gt; 混合使用我们如果在优化 SQL&lt;br /&gt;
 语句之后还不满足查询需求，可以拿 SQL 和 DSL 混用，ES 会先根据&lt;/p&gt;
&lt;p&gt;SQL 进行查询，然后根据 DSL 语句对 SQL 的执行结果进行二次查询&lt;/p&gt;
&lt;p&gt;# SQL 和 DSL 混合使用&lt;/p&gt;
&lt;p&gt;#&lt;br /&gt;
由于索引中含有横线，所以作为表名时需要采用双引号，且外层需要三个引号包含&lt;/p&gt;
&lt;p&gt;POST _sql?format=txt&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;query&amp;quot;: &amp;quot;&amp;quot;&amp;quot;SELECT * FROM &amp;quot;my-sql-index&amp;quot; &amp;quot;&amp;quot;&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;filter&amp;quot; : {&lt;/p&gt;
&lt;p&gt;&amp;quot;range&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;page_count&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;gte&amp;quot;: 400,&lt;/p&gt;
&lt;p&gt;&amp;quot;lte&amp;quot;: 600&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;} },&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image175.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.5866130796150482in&amp;quot;}&lt;/p&gt;
&lt;h3 id=&#34;435-常用-sql-操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#435-常用-sql-操作&#34;&gt;#&lt;/a&gt; 4.3.5 常用 SQL 操作&lt;/h3&gt;
&lt;h4 id=&#34;4351-查询所有索引&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4351-查询所有索引&#34;&gt;#&lt;/a&gt; 4.3.5.1 查询所有索引&lt;/h4&gt;
&lt;p&gt;GET _sql?format=txt&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;query&amp;quot;: &amp;quot;&amp;quot;&amp;quot; show tables&lt;/p&gt;
&lt;p&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image177.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.75625in&#34; height=&#34;0.8486111111111111in&#34;}
&lt;h4 id=&#34;4352-查询指定索引&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4352-查询指定索引&#34;&gt;#&lt;/a&gt; 4.3.5.2 查询指定索引&lt;/h4&gt;
&lt;p&gt;GET _sql?format=txt&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;query&amp;quot;: &amp;quot;&amp;quot;&amp;quot; show tables like &#39;myindex&#39;&lt;/p&gt;
&lt;p&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image178.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.766666666666667in&#34;
&lt;p&gt;height=&amp;quot;0.8430555555555556in&amp;quot;}&lt;/p&gt;
&lt;h4 id=&#34;4353-模糊查询索引&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4353-模糊查询索引&#34;&gt;#&lt;/a&gt; 4.3.5.3 模糊查询索引&lt;/h4&gt;
&lt;p&gt;GET _sql?format=txt&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;query&amp;quot;: &amp;quot;&amp;quot;&amp;quot;&lt;/p&gt;
&lt;p&gt;show tables like &#39;my-%&#39;&lt;/p&gt;
&lt;p&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image179.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.751388888888889in&#34;
&lt;p&gt;height=&amp;quot;0.8458333333333333in&amp;quot;}&lt;/p&gt;
&lt;h4 id=&#34;4354-查看索引结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4354-查看索引结构&#34;&gt;#&lt;/a&gt; 4.3.5.4 查看索引结构&lt;/h4&gt;
&lt;p&gt;GET _sql?format=txt&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;query&amp;quot;: &amp;quot;&amp;quot;&amp;quot; describe myindex&lt;/p&gt;
&lt;p&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image180.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.75in&#34; height=&#34;1.0791666666666666in&#34;}
&lt;h4 id=&#34;4355-基础查询操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4355-基础查询操作&#34;&gt;#&lt;/a&gt; 4.3.5.5 基础查询操作&lt;/h4&gt;
&lt;p&gt;在 ES 中使用 SQL 查询的语法与在数据库中使用基本一致，具体格式如下:&lt;/p&gt;
&lt;p&gt;# 基本 SQL 格式&lt;/p&gt;
&lt;p&gt;SELECT select_expr [, ...]&lt;/p&gt;
&lt;p&gt;[ FROM table_name ]&lt;/p&gt;
&lt;p&gt;[ WHERE condition ]&lt;/p&gt;
&lt;p&gt;[ GROUP BY grouping_element [, ...] ]&lt;/p&gt;
&lt;p&gt;[ HAVING condition]&lt;/p&gt;
&lt;p&gt;[ ORDER BY expression [ ASC | DESC ] [, ...] ]&lt;/p&gt;
&lt;p&gt;[ LIMIT [ count ] ]&lt;/p&gt;
&lt;p&gt;[ PIVOT ( aggregation_expr FOR column IN ( value [ [ AS ] alias ]&lt;br /&gt;
[, ...] ) ) ]&lt;/p&gt;
&lt;p&gt;➢ where&lt;/p&gt;
&lt;p&gt;# 条件过滤&lt;/p&gt;
&lt;p&gt;POST _sql?format=txt&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;query&amp;quot;: &amp;quot;&amp;quot;&amp;quot; SELECT * FROM &amp;quot;my-sql-index&amp;quot; where name = &#39;JAVA&#39;&lt;br /&gt;
&amp;quot;&amp;quot;&amp;quot; }&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image181.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.2285564304461942in&amp;quot;}&lt;/p&gt;
&lt;p&gt;# 查询所有数据&lt;/p&gt;
&lt;p&gt;GET _sql?format=txt&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;query&amp;quot;: &amp;quot;&amp;quot;&amp;quot;&lt;/p&gt;
&lt;p&gt;SELECT * FROM &amp;quot;my-sql-index&amp;quot;&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image183.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.821056430446194in&#34;
&lt;p&gt;height=&amp;quot;1.1336953193350832in&amp;quot;}&lt;/p&gt;
&lt;p&gt;# 按照日期进行分组&lt;/p&gt;
&lt;p&gt;GET _sql?format=txt&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;query&amp;quot;: &amp;quot;&amp;quot;&amp;quot;&lt;/p&gt;
&lt;p&gt;SELECT release_date FROM &amp;quot;my-sql-index&amp;quot; group by release_date&lt;/p&gt;
&lt;p&gt;&amp;quot;&amp;quot;&amp;quot; }&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image185.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.837723097112861in&#34;
&lt;p&gt;height=&amp;quot;1.090430883639545in&amp;quot;}&lt;/p&gt;
&lt;p&gt;# 对分组后的数据进行过滤&lt;/p&gt;
&lt;p&gt;GET _sql?format=txt&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;query&amp;quot;: &amp;quot;&amp;quot;&amp;quot;&lt;/p&gt;
&lt;p&gt;SELECT sum(page_count), release_date as datacnt FROM &amp;quot;my-sql-index&amp;quot;&lt;br /&gt;
group by release_date having sum(page_count) &amp;gt; 1000&lt;/p&gt;
&lt;p&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image187.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.821056430446194in&#34;
&lt;p&gt;height=&amp;quot;1.1549453193350832in&amp;quot;}&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;order by&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;# 对页面数量进行排序（降序）&lt;/p&gt;
&lt;p&gt;GET _sql?format=txt&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;query&amp;quot;: &amp;quot;&amp;quot;&amp;quot;&lt;/p&gt;
&lt;p&gt;select * from &amp;quot;my-sql-index&amp;quot; order by page_count desc&lt;/p&gt;
&lt;p&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image189.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.7625in&#34; height=&#34;0.8666666666666667in&#34;}
&lt;ul&gt;
&lt;li&gt;limit&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;# 限定查询数量&lt;/p&gt;
&lt;p&gt;GET _sql?format=txt&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;query&amp;quot;: &amp;quot;&amp;quot;&amp;quot;&lt;/p&gt;
&lt;p&gt;select * from &amp;quot;my-sql-index&amp;quot; limit 3&lt;/p&gt;
&lt;p&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image190.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.75in&#34; height=&#34;0.8361111111111111in&#34;}
&lt;ul&gt;
&lt;li&gt;cursor&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;游标（cursor）是系统为用户开设的一个数据缓冲区，存储 sql&lt;br /&gt;
 语句的执行结果，每个游标区都有一个名字，用户可以用 sql&lt;br /&gt;
 语句逐一从游标中获取记录，并赋给主变量，交由主语言进一步处理。就本质而言，游标实际上是一种能从包括多条数据记录的结果集中每次提取一条或多条记录的机制&lt;/p&gt;
&lt;p&gt;# 查询数据&lt;/p&gt;
&lt;p&gt;#&lt;br /&gt;
因为查询结果较多，但是获取的数据较少，所以为了提高效果，会将数据存储到临时缓冲区中&lt;/p&gt;
&lt;p&gt;# 此处数据展示格式为 json&lt;/p&gt;
&lt;p&gt;POST _sql?format=json&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;query&amp;quot;: &amp;quot;&amp;quot;&amp;quot; SELECT * FROM &amp;quot;my-sql-index&amp;quot; order by page_count&lt;br /&gt;
desc &amp;quot;&amp;quot;&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;fetch_size&amp;quot;: 2&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image191.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.821056430446194in&#34;
&lt;p&gt;height=&amp;quot;2.705363079615048in&amp;quot;}&lt;/p&gt;
&lt;p&gt;返回结果中的 cursor&lt;br /&gt;
 就是缓冲区的标识，这就意味着可以从缓冲区中直接获取后续数据，操作上有点类似于迭代器，可多次执行。&lt;/p&gt;
&lt;p&gt;# 此处游标 cursor 值需要根据读者执行的操作进行修改，请勿直接使用&lt;/p&gt;
&lt;p&gt;POST /_sql?format=json&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;cursor&amp;quot;:&lt;/p&gt;
&lt;p&gt;&amp;quot;8/LoA0RGTABEissKgkAYRh2QiAh8FZVcuExKaWisxEbHTUzO7wVH7TKSb19Gi87ig8N3UIaeox/&lt;br /&gt;
IgdmjlQW0YLY7iICuhO9aIpHNJvWtLMXOKXGaqKUms0vPb8wXSSJCtyE7N3JP2ggfKCZRjHdxmq9&lt;br /&gt;
/eFc8Zndi0wJoeGY0PJLOq7lZVWJrJXFaee8JQ0fFjA+q6h9IVzAqTUOF3vEW/rq48RIueT90Cum&lt;br /&gt;
y78pvs3yABP6Ei+AK0Py7qm5huowPAAAA//8DAA==&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image193.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.831112204724409in&#34;
&lt;p&gt;height=&amp;quot;1.6764031058617672in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果执行后，无任何结果返回，说明数据已经读取完毕&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image195.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.814444444444445in&#34;
&lt;p&gt;height=&amp;quot;0.8933891076115485in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此时再次执行，会返回错误信息&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image197.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.837723097112861in&#34;
&lt;p&gt;height=&amp;quot;2.3908464566929135in&amp;quot;}&lt;/p&gt;
&lt;p&gt;# 此处游标 cursor 值需要根据读者执行的操作进行修改，请勿直接使用&lt;/p&gt;
&lt;p&gt;POST _sql/close&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;cursor&amp;quot;:&lt;/p&gt;
&lt;p&gt;&amp;quot;8/LoA0RGTABEissKgkAYRh2QiAh8FZVcuExKaWisxEbHTUzO7wVH7TKSb19Gi87ig8N3UIaeox/&lt;/p&gt;
&lt;p&gt;IgdmjlQW0YLY7iICuhO9aIpHNJvWtLMXOKXGaqKUms0vPb8wXSSJCtyE7N3JP2ggfKCZRjHdxmq9&lt;br /&gt;
/eFc8Zndi0wJoeGY0PJLOq7lZVWJrJXFaee8JQ0fFjA+q6h9IVzAqTUOF3vEW/rq48RIueT90Cum&lt;br /&gt;
y78pvs3yABP6Ei+AK0Py7qm5huowPAAAA//8DAA==&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image199.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.753472222222222in&#34;
&lt;p&gt;height=&amp;quot;0.9652777777777778in&amp;quot;}&lt;/p&gt;
&lt;h4 id=&#34;4356-基础聚合操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4356-基础聚合操作&#34;&gt;#&lt;/a&gt; 4.3.5.6 基础聚合操作&lt;/h4&gt;
&lt;p&gt;在 ES 中使用 SQL 查询的聚合语法与在数据库中使用基本一致&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Min&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Max&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Avg&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sum&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Count(*)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Distinct&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;GET _sql?format=txt&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;query&amp;quot;: &amp;quot;&amp;quot;&amp;quot;&lt;/p&gt;
&lt;p&gt;SELECT&lt;/p&gt;
&lt;p&gt;MIN(page_count) min,&lt;/p&gt;
&lt;p&gt;MAX(page_count) max,&lt;/p&gt;
&lt;p&gt;AVG(page_count) avg,&lt;/p&gt;
&lt;p&gt;SUM(page_count) sum,&lt;/p&gt;
&lt;p&gt;COUNT(*) count,&lt;/p&gt;
&lt;p&gt;COUNT(DISTINCT name) dictinct_count FROM &amp;quot;my-sql-index&amp;quot;&lt;/p&gt;
&lt;p&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image200.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.4116119860017498in&amp;quot;}&lt;/p&gt;
&lt;h4 id=&#34;436-支持的函数和运算&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#436-支持的函数和运算&#34;&gt;#&lt;/a&gt; 4.3.6 支持的函数和运算&lt;/h4&gt;
&lt;h5 id=&#34;4361-比较运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4361-比较运算符&#34;&gt;#&lt;/a&gt; 4.3.6.1 比较运算符&lt;/h5&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| # Equality                                                          |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT * FROM &amp;quot;my-sql-index&amp;quot; WHERE name &lt;strong&gt;=&lt;/strong&gt; &#39;JAVA&#39;            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # Null Safe Equality                                                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT &#39;elastic&#39; &lt;strong&gt;&amp;lt;=&amp;gt;&lt;/strong&gt; null AS &amp;quot;equals&amp;quot;                      |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT null &lt;strong&gt;&amp;lt;=&amp;gt;&lt;/strong&gt; null AS &amp;quot;equals&amp;quot;                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # Inequality                                                        |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT * FROM &amp;quot;my-sql-index&amp;quot; WHERE name &lt;strong&gt;&amp;lt;&amp;gt;&lt;/strong&gt; &#39;JAVA&#39; SELECT  |&lt;br /&gt;
| * FROM &amp;quot;my-sql-index&amp;quot; WHERE name &lt;strong&gt;!=&lt;/strong&gt; &#39;JAVA&#39;                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # Comparison                                                        |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT * FROM &amp;quot;my-sql-index&amp;quot; WHERE page_count &lt;strong&gt;&amp;gt;&lt;/strong&gt; 500          |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT * FROM &amp;quot;my-sql-index&amp;quot; WHERE page_count &lt;strong&gt;&amp;gt;=&lt;/strong&gt; 500         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT * FROM &amp;quot;my-sql-index&amp;quot; WHERE page_count &lt;strong&gt;&amp;lt;&lt;/strong&gt; 500 SELECT   |&lt;br /&gt;
| * FROM &amp;quot;my-sql-index&amp;quot; WHERE page_count &lt;strong&gt;&amp;lt;=&lt;/strong&gt; 500                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # BETWEEN                                                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT * FROM &amp;quot;my-sql-index&amp;quot; WHERE page_count &lt;strong&gt;between 100 and   |&lt;br /&gt;
| 500&lt;/strong&gt;                                                                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # Is Null / Is Not Null                                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT * FROM &amp;quot;my-sql-index&amp;quot; WHERE name &lt;strong&gt;is not null&lt;/strong&gt;           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT * FROM &amp;quot;my-sql-index&amp;quot; WHERE name &lt;strong&gt;is null&lt;/strong&gt;               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # IN                                                                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT * FROM &amp;quot;my-sql-index&amp;quot; WHERE name &lt;strong&gt;in&lt;/strong&gt; (&#39;JAVA&#39;,         |&lt;br /&gt;
| &#39;SCALA&#39;)                                                           |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;h5 id=&#34;4362-逻辑运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4362-逻辑运算符&#34;&gt;#&lt;/a&gt; 4.3.6.2 逻辑运算符&lt;/h5&gt;
&lt;p&gt;# AND&lt;/p&gt;
&lt;p&gt;SELECT * FROM &amp;quot;my-sql-index&amp;quot; WHERE name = &#39;JAVA&#39; &lt;strong&gt;AND&lt;/strong&gt; page_count&lt;br /&gt;
&amp;gt; 100&lt;/p&gt;
&lt;p&gt;# OR&lt;/p&gt;
&lt;p&gt;SELECT * FROM &amp;quot;my-sql-index&amp;quot; WHERE name = &#39;JAVA&#39; &lt;strong&gt;OR&lt;/strong&gt; name =&lt;br /&gt;
&#39;SCALA&#39;&lt;/p&gt;
&lt;p&gt;# NOT&lt;/p&gt;
&lt;p&gt;SELECT * FROM &amp;quot;my-sql-index&amp;quot; WHERE NOT name = &#39;JAVA&#39;&lt;/p&gt;
&lt;h5 id=&#34;4363-数学运算符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4363-数学运算符&#34;&gt;#&lt;/a&gt; 4.3.6.3 数学运算符&lt;/h5&gt;
&lt;p&gt;# 加减乘除&lt;/p&gt;
&lt;p&gt;select 1 + 1 as x select 1 - 1 as x select - 1 as x select 6 * 6 as x&lt;br /&gt;
select 30 / 5 as x select 30 % 7 as x&lt;/p&gt;
&lt;h5 id=&#34;4364-类型转换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4364-类型转换&#34;&gt;#&lt;/a&gt; 4.3.6.4 &lt;sup&gt;类型转换&lt;/sup&gt;&lt;/h5&gt;
&lt;p&gt;# 类型转换&lt;/p&gt;
&lt;p&gt;SELECT &#39;123&#39;::long AS long&lt;/p&gt;
&lt;h5 id=&#34;4365-模糊查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4365-模糊查询&#34;&gt;#&lt;/a&gt; 4.3.6.5 &lt;sup&gt;模糊查询&lt;/sup&gt;&lt;/h5&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| # LIKE 通配符                                                       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT * FROM &amp;quot;my-sql-index&amp;quot; WHERE name &lt;strong&gt;like&lt;/strong&gt; &#39;JAVA%&#39; SELECT |&lt;br /&gt;
| * FROM &amp;quot;my-sql-index&amp;quot; WHERE name &lt;strong&gt;like&lt;/strong&gt; &#39;JAVA_&#39;              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # 如果需要匹配通配符本身，使用转义字符                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT * FROM &amp;quot;my-sql-index&amp;quot; WHERE name &lt;strong&gt;like&lt;/strong&gt; &#39;JAVA/%&#39;       |&lt;br /&gt;
| ESCAPE &#39;/&#39;                                                         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # RLIKE 不要误会，这里的 R 表示的不是方向，而是正则表示式 Regex        |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT * FROM &amp;quot;my-sql-index&amp;quot; WHERE name &lt;strong&gt;like&lt;/strong&gt; &#39;JAV*A&#39;       |&lt;br /&gt;
| SELECT * FROM &amp;quot;my-sql-index&amp;quot; WHERE name &lt;strong&gt;rlike&lt;/strong&gt; &#39;JAV*A&#39;      |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # 尽管&lt;strong&gt; LIKE&lt;/strong&gt; 在 &lt;strong&gt;Elasticsearch SQL&lt;/strong&gt;                              |&lt;br /&gt;
| 中搜索或过滤时是一个有效的选项，但全文搜索 &lt;strong&gt;MATCH&lt;/strong&gt; 和&lt;strong&gt; QUERY&lt;/strong&gt;      |&lt;br /&gt;
| 速度更快、功能更强大，并且是首选替代方案。                           |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;h5 id=&#34;4366-聚合分析函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4366-聚合分析函数&#34;&gt;#&lt;/a&gt; 4.3.6.6 聚合分析函数&lt;/h5&gt;
&lt;p&gt;# FIRST / FIRST_VALUE : FIRST (第一个字段，排序字段)&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;first&lt;/strong&gt;(name, release_date) FROM &amp;quot;my-sql-index&amp;quot;&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;first_value&lt;/strong&gt;(substring(name,2,1)) FROM &amp;quot;my-sql-index&amp;quot;&lt;/p&gt;
&lt;p&gt;# LAST / LAST_VALUE : LAST (第一个字段，排序字段)&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;last&lt;/strong&gt;(name, release_date) FROM &amp;quot;my-sql-index&amp;quot;&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;last_value&lt;/strong&gt;(substring(name,2,1)) FROM &amp;quot;my-sql-index&amp;quot;&lt;/p&gt;
&lt;p&gt;# KURTOSIS 量化字段的峰值分布&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;KURTOSIS&lt;/strong&gt;(page_count) FROM &amp;quot;my-sql-index&amp;quot;&lt;/p&gt;
&lt;p&gt;# MAD&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;MAD&lt;/strong&gt;(page_count) FROM &amp;quot;my-sql-index&amp;quot;&lt;/p&gt;
&lt;h5 id=&#34;4367-分组函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4367-分组函数&#34;&gt;#&lt;/a&gt; 4.3.6.7 &lt;sup&gt;分组函数&lt;/sup&gt;&lt;/h5&gt;
&lt;p&gt;# HISTOGRAM : 直方矩阵&lt;/p&gt;
&lt;p&gt;SELECT HISTOGRAM(page_count, 100) as c， count(*) FROM &amp;quot;my-sql-index&amp;quot;&lt;br /&gt;
group by c&lt;/p&gt;
&lt;h5 id=&#34;4368-数学通用函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4368-数学通用函数&#34;&gt;#&lt;/a&gt; 4.3.6.8 数学通用函数&lt;/h5&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| # ABS：求数字的绝对值                                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| select ABS(page_count) from &amp;quot;myindex&amp;quot; limit 5                      |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # CBRT：求数字的立方根，返回 double                                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| select page_count v,CBRT(page_count) cbrt from &amp;quot;myindex&amp;quot; limit 5   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # CEIL：返回大于或者等于指定表达式最小整数（double）                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| select page_count v,CEIL(page_count) from &amp;quot;myindex&amp;quot; limit 5        |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # CEILING：等同于 CEIL select page_count v,CEILING (page_count) from  |&lt;br /&gt;
| &amp;quot;myindex&amp;quot; limit 5                                                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # E：返回自然常数 e (2.718281828459045) select                        |&lt;br /&gt;
| page_count,E(page_count) from &amp;quot;myindex&amp;quot; limit 5                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # ROUND：四舍五入精确到个位                                         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| select ROUND(-3.14)                                                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # FLOOR：向下取整                                                   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| select FLOOR(3.14)                                                   |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;p&gt;# LOG：计算以 2 为底的自然对数&lt;/p&gt;
&lt;p&gt;select LOG(4)&lt;/p&gt;
&lt;p&gt;# LOG10：计算以 10 为底的自然对数&lt;/p&gt;
&lt;p&gt;select LOG10(100)&lt;/p&gt;
&lt;p&gt;# SQRT：求一个非负实数的平方根&lt;/p&gt;
&lt;p&gt;select SQRT(9)&lt;/p&gt;
&lt;p&gt;# EXP：此函数返回 e (自然对数的底) 的 X 次方的值 select EXP (3)&lt;/p&gt;
&lt;h5 id=&#34;4369-三角函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4369-三角函数&#34;&gt;#&lt;/a&gt; 4.3.6.9 &lt;sup&gt;三角函数&lt;/sup&gt;&lt;/h5&gt;
&lt;p&gt;# DEGREES：返回 X 从弧度转换为度值&lt;/p&gt;
&lt;p&gt;select DEGREES(x)&lt;/p&gt;
&lt;p&gt;# RADIANS：返回 X 从度转换成弧度的值&lt;/p&gt;
&lt;p&gt;select RADIANS(x)&lt;/p&gt;
&lt;p&gt;# SIN：返回 X 的正弦&lt;/p&gt;
&lt;p&gt;select SIN(x)&lt;/p&gt;
&lt;p&gt;# COS：返回 X，X 值是以弧度给出的余弦值&lt;/p&gt;
&lt;p&gt;select COS (角度)&lt;/p&gt;
&lt;p&gt;# TAN：返回参数 X，表示以弧度的切线值&lt;/p&gt;
&lt;p&gt;select TAN (角度)&lt;/p&gt;
&lt;p&gt;# ASIN：返回 X 的反正弦，X 的值必须在 - 1 至 1 范围内，返回 NULL&lt;/p&gt;
&lt;p&gt;select ASIN(x)&lt;/p&gt;
&lt;p&gt;# ACOS：返回 X 的反正弦，X 值必须 - 1 到 1 之间范围否则将返回 NULL&lt;/p&gt;
&lt;p&gt;select ACOS(x)&lt;/p&gt;
&lt;p&gt;# ATAN：返回 X 的反正切&lt;/p&gt;
&lt;p&gt;select ATAN(x)&lt;/p&gt;
&lt;p&gt;# SINH：返回 X 的双曲正弦值&lt;/p&gt;
&lt;p&gt;select SINH(x)&lt;/p&gt;
&lt;p&gt;# COSH：返回 X 的双曲余弦值 select COSH (x)&lt;/p&gt;
&lt;h5 id=&#34;43610-日期时间函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#43610-日期时间函数&#34;&gt;#&lt;/a&gt; 4.3.6.10 &lt;sup&gt;日期时间函数&lt;/sup&gt;&lt;/h5&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| # YEAR：                                                            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT YEAR(CAST(&#39;2022-05-01T00:00:00Z&#39; AS TIMESTAMP)) AS year     |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # MONTH_OF_YEAR() or MONTH()：                                      |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT MONTH(CAST(&#39;2022-05-01T00:00:00Z&#39; AS TIMESTAMP)) AS month   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # WEEK_OF_YEAR() or WEEK()：                                        |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT WEEK(CAST(&#39;2022-05-01T00:00:00Z&#39; AS TIMESTAMP)) AS week     |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # DAY_OF_YEAR () or DOY () ， 效 果 等 同 于                          |&lt;br /&gt;
| EXTRACT(&amp;lt;datetime_function&amp;gt; FROM                                   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| &amp;lt;expression&amp;gt;)：                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT DOY(CAST(&#39;2022-05-01T00:00:00Z&#39; AS TIMESTAMP)) AS day       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # DAY_OF_MONTH(), DOM(), or DAY()：                                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT DAY(CAST(&#39;2022-05-01T00:00:00Z&#39; AS TIMESTAMP)) AS day       |&lt;br /&gt;
+======================================================================+&lt;br /&gt;
| # DAY_OF_WEEK() or DOW()：                                          |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT DOW(CAST(&#39;2022-05-01T00:00:00Z&#39; AS TIMESTAMP)) AS day       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # HOUR_OF_DAY() or HOUR()：                                         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT HOUR(CAST(&#39;2022-05-01T00:00:00Z&#39; AS TIMESTAMP)) AS hour     |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # MINUTE_OF_DAY()：                                                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT MINUTE_OF_DAY(CAST(&#39;2022-05-01T00:00:00Z&#39; AS TIMESTAMP)) AS |&lt;br /&gt;
| minute                                                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # MINUTE_OF_HOUR() or MINUTE()：                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT MINUTE(CAST(&#39;2022-05-01T00:00:00Z&#39; AS TIMESTAMP)) AS minute |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # SECOND_OF_MINUTE() or SECOND()：                                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT SECOND(CAST(&#39;2022-05-01T00:00:00Z&#39; AS TIMESTAMP)) AS second |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;h5 id=&#34;43611-全文检索函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#43611-全文检索函数&#34;&gt;#&lt;/a&gt; 4.3.6.11 全文检索函数&lt;/h5&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| # MATCH：MATCH (匹配字段，规则，配置参数 (可选))                      |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT * FROM &amp;quot;my-sql-index&amp;quot; where &lt;strong&gt;MATCH&lt;/strong&gt;(name, &#39;JAVA&#39;)      |&lt;br /&gt;
| SELECT * FROM &amp;quot;my-sql-index&amp;quot; where &lt;strong&gt;MATCH&lt;/strong&gt;(name, &#39;java&#39;)      |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # MATCH：MATCH ((&#39; 匹配字段 ^ 权重 1, 匹配字段 ^ 权重 2&#39;，规则，|&lt;br /&gt;
| 配置参数 (可选))                                                      |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT * FROM &amp;quot;my-sql-index&amp;quot; where                                |&lt;br /&gt;
| &lt;strong&gt;MATCH&lt;/strong&gt;(&#39;author^2,name^5&#39;, &#39;java&#39;)                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # QUERY                                                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT * FROM &amp;quot;my-sql-index&amp;quot; where &lt;strong&gt;QUERY&lt;/strong&gt;(&#39;name:Java&#39;)       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # SCORE : 评分                                                      |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT *, &lt;strong&gt;score&lt;/strong&gt;() FROM &amp;quot;my-sql-index&amp;quot; where                   |&lt;br /&gt;
| QUERY(&#39;name:Java&#39;)                                                 |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;h5 id=&#34;43612-字符串检索函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#43612-字符串检索函数&#34;&gt;#&lt;/a&gt; 4.3.6.12 字符串检索函数&lt;/h5&gt;
&lt;p&gt;# ASCII : 字符串转成 ASC 码&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;ASCII&lt;/strong&gt;(&#39;Elastic&#39;)&lt;/p&gt;
&lt;p&gt;# BIT_LENGTH ： 位长度&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;BIT_LENGTH&lt;/strong&gt;(&#39;Elastic&#39;)&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;BIT_LENGTH&lt;/strong&gt; (&#39; 中国 &#39;)&lt;/p&gt;
&lt;p&gt;# CHAR ：转换字符&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;CHAR&lt;/strong&gt;(69)&lt;/p&gt;
&lt;p&gt;# CHAR_LENGTH ：字符长度&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;CHAR_LENGTH&lt;/strong&gt;(&#39;Elastic&#39;)&lt;/p&gt;
&lt;p&gt;# CONCAT: 合并&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;CONCAT&lt;/strong&gt;(&#39;Elastic&#39;, &#39;search&#39;)&lt;/p&gt;
&lt;p&gt;# INSERT : INSERT (字符串，起始位置，长度，插入的内容)&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;INSERT&lt;/strong&gt;(&#39;Elastic&#39;, 8, 1, &#39;search&#39;)&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;INSERT&lt;/strong&gt;(&#39;Elastic&#39;, 7, 1, &#39;search&#39;)&lt;/p&gt;
&lt;p&gt;# LCASE ：转换小写&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;LCASE&lt;/strong&gt;(&#39;Elastic&#39;)&lt;/p&gt;
&lt;p&gt;# LEFT : 获取左边最多 N 个字符&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;LEFT&lt;/strong&gt;(&#39;Elastic&#39;,3)&lt;/p&gt;
&lt;p&gt;# LENGTH&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;length&lt;/strong&gt;(&#39;Elastic&#39;)&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;length&lt;/strong&gt; (&#39; 中国 &#39;)&lt;/p&gt;
&lt;p&gt;# LOCATE : LOCATE (表达式，字符串，起始位置)，获取满足条件的位置 SELECT&lt;br /&gt;
&lt;strong&gt;LOCATE&lt;/strong&gt;(&#39;a&#39;, &#39;Elasticsearch&#39;)&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;LOCATE&lt;/strong&gt;(&#39;a&#39;, &#39;Elasticsearch&#39;, 5)&lt;/p&gt;
&lt;p&gt;# LTRIM ：去除左边的空格&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;LTRIM&lt;/strong&gt;(&#39; Elastic&#39;)&lt;/p&gt;
&lt;p&gt;# OCTET_LENGTH : 字节长度&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;OCTET_LENGTH&lt;/strong&gt;(&#39;Elastic&#39;)&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;OCTET_LENGTH&lt;/strong&gt; (&#39; 中国 &#39;)&lt;/p&gt;
&lt;p&gt;# POSITION ：获取指定字符串的位置&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;POSITION&lt;/strong&gt;(&#39;Elastic&#39;, &#39;Elasticsearch&#39;)&lt;/p&gt;
&lt;p&gt;# REPEAT ：将字符串重复指定次数&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;REPEAT&lt;/strong&gt;(&#39;Elastic&#39;, 3)&lt;/p&gt;
&lt;p&gt;# REPLACE ：替换数据&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;REPLACE&lt;/strong&gt;(&#39;Elastic&#39;,&#39;El&#39;,&#39;Fant&#39;)&lt;/p&gt;
&lt;p&gt;# RIGHT ：从右边获取指定数量的数据&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;RIGHT&lt;/strong&gt;(&#39;Elastic&#39;,3)&lt;/p&gt;
&lt;p&gt;# RTRIM ：去除右边的空格&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;RTRIM&lt;/strong&gt;(&#39;Elastic &#39;)&lt;/p&gt;
&lt;p&gt;# SPACE : 生成指定数量的空格&lt;/p&gt;
&lt;p&gt;SELECT concat(&lt;strong&gt;SPACE&lt;/strong&gt;(3),&#39;abc&#39;)&lt;/p&gt;
&lt;p&gt;# STARTS_WITH : 判断是否以指定字符串开头&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;STARTS_WITH&lt;/strong&gt;(&#39;Elasticsearch&#39;, &#39;Elastic&#39;)&lt;/p&gt;
&lt;p&gt;# SUBSTRING ： 截取字符串，必须传递三个参数&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;SUBSTRING&lt;/strong&gt;(&#39;Elasticsearch&#39;, 0, 7)&lt;/p&gt;
&lt;p&gt;# TRIM ：去掉首尾空格&lt;/p&gt;
&lt;p&gt;SELECT &lt;strong&gt;TRIM&lt;/strong&gt;(&#39; Elastic &#39;) AS trimmed&lt;/p&gt;
&lt;p&gt;# UCASE : 转换大写 SELECT &lt;strong&gt;UCASE&lt;/strong&gt;(&#39;Elastic&#39;)&lt;/p&gt;
&lt;h5 id=&#34;43613-条件分支函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#43613-条件分支函数&#34;&gt;#&lt;/a&gt; 4.3.6.13 条件分支函数&lt;/h5&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| # 多重分支判断                                                      |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT CASE 5                                                        |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| WHEN 1 THEN &#39;elastic&#39;                                              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| WHEN 2 THEN &#39;search&#39;                                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| WHEN 3 THEN &#39;elasticsearch&#39;                                        |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| ELSE &#39;default&#39;                                                     |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| END AS &amp;quot;case&amp;quot;                                                      |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT CASE WHEN 1 &amp;gt; 2 THEN &#39;elastic&#39;                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| WHEN 2 &amp;gt; 10 THEN &#39;search&#39;                                         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| ELSE &#39;default&#39;                                                     |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| END AS &amp;quot;case&amp;quot;                                                      |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # IFNULL                                                            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT IFNULL(&#39;elastic&#39;, null) AS &amp;quot;ifnull&amp;quot; SELECT IFNULL(null,   |&lt;br /&gt;
| &#39;search&#39;) AS &amp;quot;ifnull&amp;quot;                                            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # IIF                                                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT IIF(1 &amp;lt; 2, &#39;TRUE&#39;, &#39;FALSE&#39;) AS result1, IIF(1 &amp;gt; 2,      |&lt;br /&gt;
| &#39;TRUE&#39;, &#39;FALSE&#39;) AS result2                                      |&lt;br /&gt;
+======================================================================+&lt;br /&gt;
| # ISNULL                                                            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT ISNULL(&#39;elastic&#39;, null) AS &amp;quot;isnull&amp;quot; SELECT ISNULL(null,   |&lt;br /&gt;
| &#39;search&#39;) AS &amp;quot;isnull&amp;quot;                                            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # LEAST: 获取除 null 外的最小值                                        |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT LEAST(null, 2, 11) AS &amp;quot;least&amp;quot;                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT LEAST(null, null, null, null) AS &amp;quot;least&amp;quot;                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # NULLIF :                                                          |&lt;br /&gt;
| 如果两个字符串不相同，则返回第一个字符串，如果相同，返回 null         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT NULLIF(&#39;elastic&#39;, &#39;search&#39;) AS &amp;quot;nullif&amp;quot;                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT NULLIF(&#39;elastic&#39;, &#39;elastic&#39;) AS &amp;quot;nullif&amp;quot;                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # NVL : 返回第一个不是 null 的字符串，如果都是 null, 那么返回 Null       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT NVL(&#39;elastic&#39;, null) AS &amp;quot;nvl&amp;quot;                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SELECT NVL(null, null) AS &amp;quot;nvl&amp;quot;                                    |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;h5 id=&#34;43614-系统函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#43614-系统函数&#34;&gt;#&lt;/a&gt; 4.3.6.14 系统函数&lt;/h5&gt;
&lt;p&gt;# ES 集群&lt;/p&gt;
&lt;p&gt;SELECT DATABASE()&lt;/p&gt;
&lt;p&gt;# 用户&lt;/p&gt;
&lt;p&gt;SELECT USER()&lt;/p&gt;
&lt;h3 id=&#34;437-sql-客户端-datagrip&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#437-sql-客户端-datagrip&#34;&gt;#&lt;/a&gt; 4.3.7 SQL 客户端 - DataGrip&lt;/h3&gt;
&lt;p&gt;DataGrip 是 JetBrains 发布的多引擎数据库环境，这里采用 DataGrip 工具连接&lt;br /&gt;
 Elasticsearch&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image202.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.3125in&#34; height=&#34;2.6958333333333333in&#34;}
&lt;h4 id=&#34;4371-新建驱动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4371-新建驱动&#34;&gt;#&lt;/a&gt; 4.3.7.1 新建驱动&lt;/h4&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image203.jpg&#34; class=&#34;&#34;&gt;{width=&#34;1.4944444444444445in&#34;
&lt;p&gt;height=&amp;quot;1.8722222222222222in&amp;quot;}&lt;/p&gt;
&lt;h4 id=&#34;4372-配置驱动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4372-配置驱动&#34;&gt;#&lt;/a&gt; 4.3.7.2 配置驱动&lt;/h4&gt;
&lt;p&gt;可以先通过 maven 增加依赖，下载驱动程序&lt;/p&gt;
&lt;p&gt;&amp;lt;dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;groupId&amp;gt;org.elasticsearch.plugin&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;x-pack-sql-jdbc&amp;lt;/artifactId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;version&amp;gt;8.1.0&amp;lt;/version&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;配置驱动时，选择对应的 ES 软件版本即可&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image204.jpg&#34; class=&#34;&#34;&gt;{width=&#34;3.7402777777777776in&#34;
&lt;p&gt;height=&amp;quot;2.6118055555555557in&amp;quot;}&lt;/p&gt;
&lt;h4 id=&#34;4373-配置参数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4373-配置参数&#34;&gt;#&lt;/a&gt; 4.3.7.3 配置参数&lt;/h4&gt;
&lt;p&gt;# 用户名和账号采用 ES 自带的 elastic 即可&lt;/p&gt;
&lt;p&gt;# URL 地址&lt;/p&gt;
&lt;p&gt;jdbc🇪🇸//https://linux1:9200&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image205.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.446527777777778in&#34;
&lt;p&gt;height=&amp;quot;3.1055555555555556in&amp;quot;}&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.3.7.4&lt;/strong&gt; 配置 &lt;strong&gt;SSL&lt;/strong&gt; 连接选择 Elasticseach 生成的证书即可&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image206.jpg&#34; class=&#34;&#34;&gt;{width=&#34;3.9347222222222222in&#34;
&lt;p&gt;height=&amp;quot;2.747916666666667in&amp;quot;}&lt;/p&gt;
&lt;h4 id=&#34;4375-更改-license-类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4375-更改-license-类型&#34;&gt;#&lt;/a&gt; 4.3.7.5 更改 license 类型&lt;/h4&gt;
&lt;p&gt;默认情况下，JDBC 客户端必须为白金级别才可以使用&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image207.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.961958661417323in&amp;quot;}&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image209.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.5062642169728784in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为了能够使用相关功能，这里可以将当前的 ES 软件的 License&lt;br /&gt;
 暂时设置为试用版。测试完&lt;/p&gt;
&lt;p&gt;成后，改回 basic 版即可&lt;/p&gt;
&lt;p&gt;# 更改 License 类型 - trial&lt;/p&gt;
&lt;p&gt;POST _license/start_trial?acknowledge=true&lt;/p&gt;
&lt;p&gt;# 更改 License 类型 - basic&lt;/p&gt;
&lt;p&gt;POST _license/start_basic?acknowledge=true&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image211.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.0904297900262467in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image213.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.8312871828521433in&amp;quot;}&lt;/p&gt;
&lt;p&gt;随着 8.0 的发布，Elastic 很高兴能够将 PyTorch 机器学习模型上传到&lt;br /&gt;
 Elasticsearch 中，&lt;/p&gt;
&lt;p&gt;以在 Elastic Stack 中提供现代自然语言处理 (NLP)。现在，Elasticsearch&lt;br /&gt;
 用户能够集成用于构建 NLP 模型的最流行的格式之一，并将这些模型作为 NLP&lt;br /&gt;
 数据管道的一部分通过我们的&lt;/p&gt;
&lt;p&gt;Inference processor 整合到 Elasticsearch 中&lt;/p&gt;
&lt;h4 id=&#34;441-什么是自然语言处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#441-什么是自然语言处理&#34;&gt;#&lt;/a&gt; 4.4.1 什么是自然语言处理？&lt;/h4&gt;
&lt;p&gt;NLP 是指我们可以使用软件来操作和理解口语或书面文本或自然语言的方式。&lt;br /&gt;
2018 年，Google 开源了一种用于 NLP 预训练的新技术，称为来自 Transformers&lt;br /&gt;
 的双向编码器呈现，或 BERT。 BERT&lt;br /&gt;
 通过在没有任何人工参与的情况下对互联网大小的数据集（例如，想想所有的维基百科和数字书籍）进行训练来利用&lt;br /&gt;
 &amp;quot;transfer learning&amp;quot;。&lt;/p&gt;
&lt;p&gt;Transfer learning 允许对 BERT&lt;br /&gt;
 模型进行预训练以进行通用语言理解。一旦模型只经过一次预训练，它就可以被重用并针对更具体的任务进行微调，以了解语言的使用方式。&lt;/p&gt;
&lt;p&gt;为了支持类 BERT 模型（使用与 BERT 相同的标记器的模型），Elasticsearch&lt;br /&gt;
 将首先通过 PyTorch 模型支持支持大多数最常见的 NLP 任务。 PyTorch&lt;br /&gt;
 是最受欢迎的现代机器学习库之一，拥有大量活跃用户，它是一个支持深度神经网络的库，例如&lt;br /&gt;
 BERT 使用的&lt;/p&gt;
&lt;p&gt;Transformer 架构。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;以下是一些示例 NLP 任务：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;情绪分析：用于识别正面与负面陈述的二元分类&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;命名实体识别&lt;br /&gt;
 (NER)：从非结构化文本构建结构，尝试提取名称、位置或组织等细节&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文本分类：零样本分类允许你根据你选择的类对文本进行分类，而无需进行预训练。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文本嵌入：用于 k 近邻 (kNN) 搜索&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;442-elasticsearch-中的自然语言处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#442-elasticsearch-中的自然语言处理&#34;&gt;#&lt;/a&gt; 4.4.2 Elasticsearch 中的自然语言处理&lt;/h3&gt;
&lt;p&gt;在将 NLP 模型集成到 Elastic&lt;br /&gt;
 平台时，我们希望为上传和管理模型提供出色的用户体验。使用用于上传 PyTorch&lt;br /&gt;
 模型的 Eland 客户端和用于管理 Elasticsearch 集群上模型的 Kibana 的 ML&lt;br /&gt;
 模型管理用户界面，用户可以尝试不同的模型并很好地了解它们在数据上的表现。我们还希望使其可跨集群中的多个可用节点进行扩展，并提供良好的推理吞吐量性能。&lt;/p&gt;
&lt;p&gt;为了使这一切成为可能，我们需要一个机器学习库来执行推理。在 Elasticsearch&lt;br /&gt;
 中添加对 PyTorch 的支持需要使用原生库 libtorch，它支持&lt;br /&gt;
 PyTorch，并且仅支持已导出或保存为 TorchScript 表示的 PyTorch 模型。这是&lt;br /&gt;
 libtorch 需要的模型的表示，它将允许&lt;/p&gt;
&lt;p&gt;Elasticsearch 避免运行 Python 解释器。&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image217.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.759722222222222in&#34; height=&#34;2.75in&#34;}
&lt;p&gt;通过与在 PyTorch 模型中构建 NLP&lt;br /&gt;
 模型的最流行的格式之一集成，Elasticsearch&lt;br /&gt;
 可以提供一个平台，该平台可处理大量 NLP&lt;br /&gt;
 任务和用例。许多优秀的库可用于训练 NLP&lt;br /&gt;
 模型，因此我们暂时将其留给其他工具。无论你是使用 PyTorch NLP、Hugging&lt;br /&gt;
Face Transformers 还是 Facebook 的 fairseq&lt;br /&gt;
 等库来训练模型，你都可以将模型导入 Elasticsearch 并对这些模型进行推理。&lt;br /&gt;
Elasticsearch&lt;br /&gt;
 推理最初将仅在摄取时进行，未来还可以扩展以在查询时引入推理。&lt;/p&gt;
&lt;h3 id=&#34;443-nlp-在-elasticsearch-7x-和-8x-中的区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#443-nlp-在-elasticsearch-7x-和-8x-中的区别&#34;&gt;#&lt;/a&gt; 4.4.3 NLP 在 Elasticsearch 7.x 和 8.x 中的区别&lt;/h3&gt;
&lt;p&gt;Elasticsearch 一直是进行 NLP 的好地方，但从历史上看，它需要在&lt;br /&gt;
 Elasticsearch 之外进行一些处理，或者编写一些非常复杂的插件。 借助&lt;br /&gt;
 8.0，用户现在可以在 Elasticsearch&lt;br /&gt;
 中更直接地执行命名实体识别、情感分析、文本分类等操作 ------ 无需额外的组件或编码。&lt;br /&gt;
不仅在 Elasticsearch&lt;br /&gt;
 中本地计算和创建向量在水平可扩展性方面是 &amp;quot;胜利&amp;quot;（通过在服务器集群中分布计算）------ 这一变化还为&lt;br /&gt;
 Elasticsearch 用户节省了大量时间和精力。&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image218.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.760416666666667in&#34;
&lt;p&gt;height=&amp;quot;3.370138888888889in&amp;quot;} 借助 Elastic 8.0，用户可以直接在&lt;br /&gt;
 Elasticsearch 中使用 PyTorch 机器学习模型（例如 BERT），并在&lt;br /&gt;
 Elasticsearch 中使用这些模型进行推理。通过使用户能够直接在 Elasticsearch&lt;br /&gt;
 中执行推理，将现代 NLP&lt;br /&gt;
 的强大功能集成到搜索应用程序和体验、本质上更高效（得益于 Elasticsearch&lt;br /&gt;
 的分布式计算能力）和 NLP 本身比以往任何时候都更容易&lt;br /&gt;
变得更快，因为你不需要将数据移出到单独的进程或系统中。&lt;/p&gt;
&lt;h3 id=&#34;444-nlp-演示&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#444-nlp-演示&#34;&gt;#&lt;/a&gt; 4.4.4 NLP 演示&lt;/h3&gt;
&lt;p&gt;这里我们使用&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3NwaW5zY2FsZS9lbGFzdGljc2VhcmNoLWluZ2VzdC1vcGVubmxwL3JlbGVhc2VzL3RhZy84LjEuMS4x&#34;&gt; https://github.com/spinscale/elasticsearch-ingest-opennlp/releases/tag/8.1.1.1&lt;/span&gt;&lt;br /&gt;
 来进行演示。我们必须安装和自己的 &lt;strong&gt;Elasticsearch&lt;/strong&gt; 一致的版本。&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image222.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.814444444444445in&#34;
&lt;p&gt;height=&amp;quot;2.89251312335958in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;目前这个 NLP 支持检测 Date， Person， Location, POS (part of speech)&lt;br /&gt;
 及其它。&lt;/p&gt;
&lt;h4 id=&#34;4441-安装-opennlp&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4441-安装-opennlp&#34;&gt;#&lt;/a&gt; 4.4.4.1 安装 opennlp&lt;/h4&gt;
&lt;p&gt;将下载下来的插件上传到所有 &lt;strong&gt;ES&lt;/strong&gt; 服务器节点的 plugins 路径中。&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image224.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.771527777777778in&#34;
&lt;p&gt;height=&amp;quot;0.6152777777777778in&amp;quot;}&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.4.4.2&lt;/strong&gt; 下载 &lt;strong&gt;NER&lt;/strong&gt; 模型我们需要从 sourceforge 下载最新的 NER 模型&lt;/p&gt;
&lt;p&gt;bin/ingest-opennlp/download-models&lt;/p&gt;
&lt;p&gt;执行时，可能会提示脚本路径不对等问题。直接修改脚本文件改正即可&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image225.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.772222222222222in&#34;
&lt;p&gt;height=&amp;quot;0.7305555555555555in&amp;quot;}&lt;/p&gt;
&lt;p&gt;执行后，会出现如下内容&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image226.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.837723097112861in&#34;
&lt;p&gt;height=&amp;quot;1.5155686789151357in&amp;quot;}&lt;/p&gt;
&lt;p&gt;修改配置文件：config/elasticsearch.yml&lt;/p&gt;
&lt;p&gt;ingest.opennlp.model.file.persons: en-ner-persons.bin&lt;br /&gt;
ingest.opennlp.model.file.dates: en-ner-dates.bin&lt;br /&gt;
ingest.opennlp.model.file.locations: en-ner-locations.bin&lt;/p&gt;
&lt;p&gt;重新启动 &lt;strong&gt;Elasticsearch&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;4444-运用-opennlp-创建一个支持-nlp-的-pipeline&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4444-运用-opennlp-创建一个支持-nlp-的-pipeline&#34;&gt;#&lt;/a&gt; 4.4.4.4 运用 opennlp 创建一个支持 NLP 的 pipeline&lt;/h4&gt;
&lt;p&gt;PUT _ingest/pipeline/opennlp-pipeline&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;description&amp;quot;: &amp;quot;A pipeline to do named entity extraction&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;processors&amp;quot;: [&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;opennlp&amp;quot; : {&lt;/p&gt;
&lt;p&gt;&amp;quot;field&amp;quot; : &amp;quot;message&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;]&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;增加数据&lt;/p&gt;
&lt;p&gt;PUT my-nlp-index&lt;/p&gt;
&lt;p&gt;PUT my-nlp-index/_doc/1?pipeline=opennlp-pipeline&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;message&amp;quot;: &amp;quot;Shay Banon announced the release of Elasticsearch 6.0 in&lt;br /&gt;
November&lt;/p&gt;
&lt;p&gt;2017&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;PUT my-nlp-index/_doc/2?pipeline=opennlp-pipeline&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;message&amp;quot; : &amp;quot;Kobe Bryant was one of the best basketball players of&lt;br /&gt;
all times. Not even Michael Jordan has ever scored 81 points in one&lt;br /&gt;
game. Munich is really an awesome city, but New York is as well.&lt;br /&gt;
Yesterday has been the hottest day of the year.&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;查看数据&lt;/p&gt;
&lt;p&gt;GET my-nlp-index/_doc/1&lt;/p&gt;
&lt;p&gt;GET my-nlp-index/_doc/2&lt;/p&gt;
&lt;p&gt;从结果我们可以看出来，它正确地识别了 dates，persons 及 locations。&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image228.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.763888888888889in&#34;
&lt;p&gt;height=&amp;quot;1.6979166666666667in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;第5章-elasticsearch-优化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第5章-elasticsearch-优化&#34;&gt;#&lt;/a&gt; 第 5 章 Elasticsearch 优化&lt;/h1&gt;
&lt;h2 id=&#34;51-性能优化之缓存&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#51-性能优化之缓存&#34;&gt;#&lt;/a&gt; &lt;strong&gt;5.1&lt;/strong&gt; 性能优化之缓存&lt;/h2&gt;
&lt;p&gt;Elasticsearch&lt;br /&gt;
 应用时会使用各种缓存，而缓存是加快数据检索速度的王道。接下来，我&lt;/p&gt;
&lt;p&gt;们将着重介绍以下三种缓存：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;页缓存&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分片级请求缓存&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查询缓存&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;511-页缓存&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#511-页缓存&#34;&gt;#&lt;/a&gt; 5.1.1 &lt;sup&gt;页缓存&lt;/sup&gt;&lt;/h3&gt;
&lt;p&gt;为了数据的安全、可靠，常规操作中，数据都是保存在磁盘文件中的。所以对数据的访问，绝大数情况下其实就是对文件的访问，为了提升对文件的读写的访问效率，Linux&lt;br /&gt;
 内核会以页大小（4KB）为单位，将文件划分为多个数据块。当用户对文件中的某个数据块进行读写操作时，内核首先会申请一个内存页（称为&lt;br /&gt;
 PageCache 页缓存）与文件中的数据块进行绑定。&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image229.jpg&#34; class=&#34;&#34;&gt;{width=&#34;3.607638888888889in&#34;
&lt;p&gt;height=&amp;quot;2.3097222222222222in&amp;quot;}&lt;/p&gt;
&lt;p&gt;页缓存的基本理念是从磁盘读取数据后将数据放入可用内存中，以便下次读取时从内存返回数据，而且获取数据不需要进行磁盘查找。所有这些对应用程序来说是完全透明的，应用程序发出相同的系统调用，但操作系统可以使用页缓存而不是从磁盘读取。&lt;/p&gt;
&lt;p&gt;Java&lt;br /&gt;
 程序是跨平台的，所以没有和硬件（磁盘，内存）直接交互的能力，如果想要和磁盘文件交互，那么必须要通过&lt;br /&gt;
 OS&lt;br /&gt;
 操作系统来完成文件的读写，我们一般就称之为用户态转换为内核态。而操作系统对文件进行读写时，实际上就是对文件的页缓存进行读写。所以对文件进行读写操作时，会分以下两种情况进行处理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当从文件中读取数据时，如果要读取的数据所在的页缓存已经存在，那么就直接把页缓存的数据拷贝给用户即可。否则，内核首先会申请一个空闲的内存页（页缓存），然后&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;从文件中读取数据到页缓存，并且把页缓存的数据拷贝给用户。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;当向文件中写入数据时，如果要写入的数据所在的页缓存已经存在，那么直接把新数据写入到页缓存即可。否则，内核首先会申请一个空闲的内存页（页缓存），并且把新数据写入到页缓存中。对于被修改的页缓存，内核会定时把这些页缓存刷新到文件中。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;页缓存对 Elasticsearch&lt;br /&gt;
 来说意味着什么？与访问磁盘上的数据相比，通过页缓存可以更快地访问数据。这就是为什么建议的&lt;br /&gt;
 Elasticsearch&lt;br /&gt;
 内存通常不超过总可用内存的一半，这样另一半就可用于页缓存了。这也意味着不会浪费任何内存&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果数据本身发生更改，页缓存会将数据标记为脏数据，并将这些数据从页缓存中释放。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;由于 Elasticsearch 和 Lucene&lt;br /&gt;
 使用的段只写入一次，因此这种机制非常适合数据的存储方式。段在初始写入之后是只读的，因此数据的更改可能是合并或添加新数据。在这种情况下，需要进行新的磁盘访问。另一种可能是内存被填满了。在这种情况下，缓存数据过期的操作为&lt;br /&gt;
 LRU。&lt;/p&gt;
&lt;h4 id=&#34;512-分片级请求缓存&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#512-分片级请求缓存&#34;&gt;#&lt;/a&gt; 5.1.2 分片级请求缓存&lt;/h4&gt;
&lt;p&gt;对一个或多个索引发送搜索请求时，搜索请求首先会发送到 ES&lt;br /&gt;
 集群中的某个节点，称之为协调节点；协调节点会把该搜索请求分发给其他节点并在相应分片上执行搜索操作，我们把分片上的执行结果称为 &amp;quot;本地结果集&amp;quot;，之后，分片再将执行结果返回给协调节点；协调节点获得所有分片的本地结果集之后，合并成最终的结果并返回给客户端。Elasticsearch&lt;br /&gt;
 会在每个分片上缓存了本地结果集，这使得频繁使用的搜索请求几乎立即返回结果。这里的缓存，称之为&lt;br /&gt;
 Request Cache, 全称是 Shard Request Cache，即分片级请求缓存。&lt;/p&gt;
&lt;p&gt;ES 能够保证在使用与不使用 Request Cache 情况下的搜索结果一致，那 ES&lt;br /&gt;
 是如何保证的呢？这就要通过 Request Cache 的失效机制来了解啦。Request&lt;br /&gt;
Cache 缓存失效是自动的，当索引 refresh&lt;br /&gt;
 时就会失效，也就是说在默认情况下， Request Cache 是每 1&lt;br /&gt;
 秒钟失效一次，但需要注意的是，只有在分片的数据实际上发生了变化时，刷新分片缓存才会失效。也就是说当一个文档被索引&lt;br /&gt;
到 该文档变成 Searchable&lt;br /&gt;
 的这段时间内，不管是否有请求命中缓存该文档都不会被返回。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;所以我们可以通过 index.refresh_interval 参数来设置 refresh&lt;br /&gt;
 的刷新时间间隔，刷新间&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;隔越长，缓存的数据越多，当缓存不够的时候，将使用 LRU&lt;br /&gt;
 最近最少使用策略删除数据。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当然，我们也可以手动设置参数 indices.request.cache.expire&lt;br /&gt;
 指定失效时间（单位为分&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;钟），但是基本上我们没必要去这样做，因为缓存在每次索引 refresh&lt;br /&gt;
 时都会自动失效。&lt;/p&gt;
&lt;p&gt;⚫ Request Cache 的使用&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;默认情况下，Request Cache 是关闭的，我们可以在创建新的索引时启用&lt;/p&gt;
&lt;p&gt;curl -XPUT 服务器 IP: 端口 / 索引名 -d&lt;/p&gt;
&lt;p&gt;&#39;{&lt;/p&gt;
&lt;p&gt;&amp;quot;settings&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;index.requests.cache.enable&amp;quot;: true&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;}&#39;&lt;/p&gt;
&lt;p&gt;也可以通过动态参数配置来进行设置：&lt;/p&gt;
&lt;p&gt;curl -XPUT 服务器 IP: 端口 / 索引名 /_settings -d&lt;/p&gt;
&lt;p&gt;&#39;{&lt;/p&gt;
&lt;p&gt;&amp;quot;index.requests.cache.enable&amp;quot;: true&lt;/p&gt;
&lt;p&gt;}&#39;&lt;/p&gt;
&lt;p&gt;开启缓存后，需要在搜索请求中加上 request_cache=true&lt;br /&gt;
 参数，才能使查询请求被缓存，&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;比如：&lt;/p&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| curl -XGET                                                           |&lt;br /&gt;
| &#39; 服务器 IP: 端口 / 索引名 /_search?request_cache=true&amp;amp;pretty&#39; -H       |&lt;br /&gt;
+======================================================================+&lt;br /&gt;
| &#39;Content-Type: application/json&#39; -d                                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| &#39;{                                                                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| &amp;quot;size&amp;quot;: 0,                                                         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| &amp;quot;aggs&amp;quot;: {                                                          |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| &amp;quot;popular_colors&amp;quot;: {                                                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| &amp;quot;terms&amp;quot;: {                                                         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| &amp;quot;field&amp;quot;: &amp;quot;colors&amp;quot;                                                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }&#39;                                                                  |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;两个注意事项：第一：参数 size：0&lt;br /&gt;
 必须强制指定才能被缓存，否则请求是不会缓存的，即使手动的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;设置 request_cache=true&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;第二：在使用 script&lt;br /&gt;
 脚本执行查询时，由于脚本的执行结果是不确定的（比如使用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;random 函数或使用了当前时间作为参数），一定要指定 request_cache=false&lt;br /&gt;
 禁用 Request&lt;/p&gt;
&lt;p&gt;Cache 缓存。&lt;/p&gt;
&lt;p&gt;⚫ Request Cache 的设置&lt;/p&gt;
&lt;p&gt;Request Cache 作用域为 Node，在 Node 中的 Shard 共享这个 Cache&lt;br /&gt;
 空间。默认最大 大小为 JVM 堆内存的 1％。可以使用以下命令在&lt;br /&gt;
 config/elasticsearch.yml 文件中进行&lt;/p&gt;
&lt;p&gt;更改：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;indices.requests.cache.size: 1%&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Request Cache 是以查询的整个 DSL 语句做为 key&lt;br /&gt;
 的，所以如果要命中缓存，那么查询 生成的 DSL&lt;br /&gt;
 一定要一样，即使修改了一个字符或者条件顺序，都不能利用缓存，需要&lt;br /&gt;
重新生成 Cache。&lt;/p&gt;
&lt;h3 id=&#34;513-查询缓存&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#513-查询缓存&#34;&gt;#&lt;/a&gt; 5.1.3 查询缓存&lt;/h3&gt;
&lt;p&gt;这种缓存的工作方式也与其他缓存有着很大的不同。页缓存方式缓存的数据与实际从查询中读取的数据量无关。当使用类似查询时，分片级请求缓存会缓存数据。查询缓存更精细些，可以缓存在不同查询之间重复使用的数据。&lt;/p&gt;
&lt;p&gt;Elasticsearch 具有 IndicesQueryCache 类。这个类与 IndicesService&lt;br /&gt;
 的生命周期绑定在一起，这意味着它不是按索引，而是按节点的特性 ---&lt;br /&gt;
 这样做是有道理的，因为缓存本身使用了 Java&lt;br /&gt;
 堆。这个索引查询缓存占用以下两个配置选项&lt;/p&gt;
&lt;p&gt;indices.queries.cache.count：缓存条目总数，默认为 10,000&lt;/p&gt;
&lt;p&gt;indices.queries.cache.size：用于此缓存的 Java 堆的百分比，默认为 10%&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;查询缓存已进入下一个粒度级别，可以跨查询重用！凭借其内置的启发式算法，它只缓&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;存多次使用的筛选器，还根据筛选器决定是否值得缓存，或者现有的查询方法是否足够快，以避免浪费任何堆内存。这些位集的生命周期与段的生命周期绑定在一起，以防止返回过时的数据。一旦使用了新段，就需要创建新的位集。&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch-8/image230.jpg&#34; class=&#34;&#34;&gt;{width=&#34;0.3736111111111111in&#34;
&lt;p&gt;height=&amp;quot;0.38472222222222224in&amp;quot;} 缓存是加快检索速度的唯一方法吗？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;io_uring。这是一种在 Linux 下使用自 Linux 5.1&lt;br /&gt;
 以来发布的完成队列进行异步 I/O 的&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;新方法。请注意，io_uring 仍处于大力开发阶段。但是，Java&lt;br /&gt;
 中有一些首次使用 io_uring 的尝试，例如&lt;br /&gt;
 netty。简单应用程序的性能测试结果十分惊人。我想我们还得等一段时间才能看到实际的性能数据，尽管我预计这些数据也会有重大变化。我们希望&lt;br /&gt;
 JDK 将来也能提供对这一功能的支持。有一些计划支持 io_uring 作为 Project&lt;br /&gt;
Loom 的一部分，这可能会将 io_uring 引入 JVM。更多的优化，比如能够通过&lt;br /&gt;
 madvise () 提示 Linux 内核的访问模式，还尚未内置于 JVM&lt;br /&gt;
 中。这个提示可防止预读问题，即内核尝试读取的数据会比预期下次读取的数据要多，这在需要随机访问时是无用的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Lucene&lt;br /&gt;
 开发人员一如既往地忙于从任何系统中获得最大的收益。目前已经有使用&lt;br /&gt;
 Foreign Memory API 重写 Lucene MMapDirectory 的初稿，这可能会成为&lt;br /&gt;
 Java 16&lt;br /&gt;
 中的一个预览功能。然而，这样做并不是出于性能原因，而是为了克服当前&lt;br /&gt;
 MMap 实现的某些限制&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lucene 最近的另一个变化是通过在 FileChannel 类中使用直接 i/o&lt;br /&gt;
 (O_DIRECT) 来摆脱原生扩展。这意味着写入数据将不会让页缓存出现 &amp;quot;抖动&amp;quot; 现象，这将是&lt;br /&gt;
 Lucene 9 的功能&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;52-性能优化之减少内存堆&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#52-性能优化之减少内存堆&#34;&gt;#&lt;/a&gt; &lt;strong&gt;5.2&lt;/strong&gt; 性能优化之减少内存堆&lt;/h2&gt;
&lt;p&gt;由于 Elasticsearch 用户不断突破在 Elasticsearch&lt;br /&gt;
 节点上存储的数据量的极限，所以他们有时会在耗尽磁盘空间之前就将堆内存用完了。对于这些用户来说，这个问题难免让他们沮丧，因为每个节点拟合尽可能多的数据通常是降低成本的重要手段。&lt;/p&gt;
&lt;p&gt;但为什么 Elasticsearch&lt;br /&gt;
 需要堆内存来存储数据呢？为什么它不能只用磁盘空间呢？这其中有几个原因，但最主要的一个是，Lucene&lt;br /&gt;
 需要在内存中存储一些信息，以便知道在磁盘的什么位置进行查找。例如，Lucene&lt;br /&gt;
 的倒排索引由术语字典和术语索引组成，术语字典将术语按排序顺序归入磁盘上的区块，术语索引用于快速查找术语字典。该术语索引将术语前缀与磁盘上区块（包含具有该前缀的术语）起始位置的偏移量建立映射。术语字典在磁盘上，但是术语索引直到最近还在堆上。&lt;/p&gt;
&lt;p&gt;索引需要多少内存？通常情况下，每 GB 索引需要几 MB&lt;br /&gt;
 内存。这并不算多，但随着用户在节点上安装 TB&lt;br /&gt;
 数越来越大的磁盘，索引很快就需要 10-20 GB 的堆内存来存储这些 TB&lt;br /&gt;
 量级的索引。鉴于 Elastic 的建议，不要超过 30&lt;br /&gt;
GB，不然就没有给聚合等其他堆内存消耗者留下太多空间，而且，如果 JVM&lt;br /&gt;
 没有为集群管理操作留出足够的空间，就会导致稳定性问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;使用 &lt;strong&gt;7.7&lt;/strong&gt; 版本减少 &lt;strong&gt;Elasticsearch&lt;/strong&gt; 堆！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;53-功能优化之冻结层和可搜索快照&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#53-功能优化之冻结层和可搜索快照&#34;&gt;#&lt;/a&gt; &lt;strong&gt;5.3&lt;/strong&gt; 功能优化之冻结层和可搜索快照&lt;/h2&gt;
&lt;p&gt;Elasticsearch 7.12&lt;br /&gt;
 版中推出了冻结层的技术预览版，让您能够将计算与存储完全分离，并直接在对象存储（如&lt;br /&gt;
 AWS S3、Microsoft Azure Storage 和 Google Cloud&lt;br /&gt;
Storage）中搜索数据。作为我们数据层旅程的下一个重要里程碑，冻结层实现以超低成本长期存储大量数据的同时，还能保持数据处于完全活动和可搜索状态，显著扩展了您的数据覆盖范围。&lt;/p&gt;
&lt;p&gt;长期以来，我们一直支持通过多个数据层来进行数据生命周期管理：热层用于提供较高的处理速度，温层则用于降低成本，但性能也较低。两者都利用本地硬件来存储主数据和冗余副本。最近，我们引入了冷层，通过消除在本地存储冗余副本的需要，您可以在相同数量的硬件上最多存储两倍于热层的数据。尽管为了获得最佳性能，主数据仍然存储在本地，但冷层中的索引由存储在对象存储中的可搜索快照提供支持，以实现冗余。&lt;br /&gt;
冻结层更进一步，完全不需要在本地存储任何数据。相反，它会使用可搜索快照来直接搜索存储在对象存储中的数据，而无需先将其解冻。本地缓存存储最近查询的数据，以便在进行重复搜索时提供最佳性能。因此，存储成本显著下降：与热层或温层相比，最多可降低&lt;br /&gt;
 90%；与冷层相比，最多可降低&lt;br /&gt;
 80%。数据的全自动生命周期现已成为完整体：从热到温到冷，然后再到冻结，同时还可确保以尽可能低的存储成本获得所需的访问和搜索性能。&lt;/p&gt;
&lt;p&gt;冻结层利用可搜索快照将计算与存储完全分离。在根据索引生命周期管理 (ILM)&lt;br /&gt;
 策略将数据从温层或冷层迁移到冻结层时，本地节点上的索引将迁移到 S3&lt;br /&gt;
 或您选择的对象存储中。冷层将索引迁移到对象存储，但它仍然在本地节点上保留数据的单个完整副本，以确保提供快速而一致的搜索体验。另一方面，冻结层完全消除了本地副本，而是直接搜索对象存储中的数据。它会为最近查询的数据构建本地缓存，以便加快重复搜索的速度，但缓存大小只是存储在冻结层中的完整数据大小的一小部分。&lt;/p&gt;
&lt;p&gt;对于典型的 10%&lt;br /&gt;
 本地缓存大小，这意味着您只需少数几个本地层节点即可处理数百 TB&lt;br /&gt;
 的冻结层数据。下面简单比较一下：如果 RAM 为 64 GB 的典型温层节点可管理&lt;br /&gt;
 10 TB，冷层节点将能够处理大约两倍于此的 20 TB，而冻结层节点将跃升至 100&lt;br /&gt;
TB。这相当于 1:1500 的 RAM 与存储比率，这还只是一个保守的估计。&lt;/p&gt;
&lt;h2 id=&#34;54-功能优化之原生矢量搜索&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#54-功能优化之原生矢量搜索&#34;&gt;#&lt;/a&gt; &lt;strong&gt;5.4&lt;/strong&gt; 功能优化之原生矢量搜索&lt;/h2&gt;
&lt;p&gt;Elasticsearch 8.0&lt;br /&gt;
 版引入了一整套原生矢量搜索功能，让客户和员工能够使用他们自己的文字和语言来搜索并收到高度相关的结果。早在&lt;br /&gt;
 Elasticsearch 7.0 版中，我们就针对高维矢量引入了字段类型。在&lt;br /&gt;
 Elasticsearch 7.3 和 Elasticsearch 7.4&lt;br /&gt;
 版中，引入了对矢量相似函数的支持。在 Elasticsearch 8.0&lt;br /&gt;
 版中，将对自然语言处理 (NLP) 模型的原生支持直接引入了&lt;br /&gt;
 Elasticsearch，让矢量搜索功能更容易实现。此外，Elasticsearch 8.0&lt;br /&gt;
 版还包含了对近似最近邻 (ANN)&lt;br /&gt;
 搜索的原生支持，因此可以快速且大规模地比较基于矢量的查询与基于矢量的文档语料库。&lt;/p&gt;
&lt;p&gt;自然语言处理（Natural Language&lt;br /&gt;
Processing）是计算科学领域与人工智能领域中的一个重要方向。它研究能实现人与计算机之间用自然语言进行有效通信的各种理论和方法。自然语言处理是一门融语言学、计算机科学、数学于一体的科学。因此，这一领域的研究将涉及自然语言，即人们日常使用的语言，所以它与语言学的研究有着密切的联系，但又有重要的区别。自然语言处理并不是一般地研究自然语言，而在于研制能有效地实现自然语言通信的计算机系统，特别是其中的软件系统。因而它是计算机科学的一部分&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NLP 的目标&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NLP&lt;br /&gt;
 的目标是让计算机在理解语言方面像人类一样智能，最终的目标是弥补人类交流（自然语言）和计算机理解（机器语言）之间的差距。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为什么需要 NLP 有了&lt;br /&gt;
 NLP，就可能完成自动语音、自动文本的编写等任务。让我们从大量的数据中解放出来，让计算机去执行。这些任务包括自动生成给定文本的摘要、机器翻译及其他的任务。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;55-功能优化之搜索聚合&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#55-功能优化之搜索聚合&#34;&gt;#&lt;/a&gt; &lt;strong&gt;5.5&lt;/strong&gt; 功能优化之搜索聚合&lt;/h2&gt;
&lt;p&gt;Elasticsearch 7.13 版新增功能可以实现更快的聚合。在 date_histogram&lt;br /&gt;
 聚合方面， Elasticsearch 通过在内部将其重写为 filters&lt;br /&gt;
 聚合，获得了巨大的性能提升。具体来说，它变成了一个包含 range 查询的&lt;br /&gt;
 filters 聚合。这就是 Elasticsearch 优化的内容 --- range 查询。&lt;/p&gt;
&lt;p&gt;为了加快 terms 和 date_histogram 这两个聚合的速度。可以将它们作为&lt;br /&gt;
 filters 运行，&lt;/p&gt;
&lt;p&gt;然后加快 filters 的聚合速度。&lt;/p&gt;

&lt;div id=&#34;gitalk-container&#34;&gt;&lt;/div&gt;
&lt;script src=&#34;https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js&#34;&gt;&lt;/script&gt;&lt;link rel=&#34;stylesheet&#34; href=&#34;https://unpkg.com/gitalk/dist/gitalk.css&#34;&gt;&lt;script src=&#34;https://unpkg.com/gitalk/dist/gitalk.min.js&#34;&gt;&lt;/script&gt;

		&lt;script&gt;
		var gitalkConfig = {&#34;clientID&#34;:&#34;6db178ba46c8af8f6a6f&#34;,&#34;clientSecret&#34;:&#34;90f730e5956024596558df00975cd8eae28cae3d&#34;,&#34;repo&#34;:&#34;bk-comment01&#34;,&#34;owner&#34;:&#34;onlymarryu&#34;,&#34;admin&#34;:[&#34;onlymarryu&#34;],&#34;distractionFreeMode&#34;:false,&#34;language&#34;:&#34;zh-CN&#34;,&#34;proxy&#34;:&#34;https://gitalk-comments.netlify.app/github_access_token&#34;,&#34;perPage&#34;:15};
	    gitalkConfig.id = md5(location.pathname);
		var gitalk = new Gitalk(gitalkConfig);
	    gitalk.render(&#34;gitalk-container&#34;);
	    &lt;/script&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://eth168.top/Distribution/Elasticsearch/</guid>
            <title>Elasticsearch-7</title>
            <link>https://eth168.top/Distribution/Elasticsearch/</link>
            <category term="分布式" scheme="https://eth168.top/categories/%E5%88%86%E5%B8%83%E5%BC%8F/" />
            <category term="分布式" scheme="https://eth168.top/tags/%E5%88%86%E5%B8%83%E5%BC%8F/" />
            <category term="中间件" scheme="https://eth168.top/tags/%E4%B8%AD%E9%97%B4%E4%BB%B6/" />
            <pubDate>Sun, 02 Jul 2023 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;尚硅谷项目课程系列之 &lt;strong&gt;Elasticsearch-7.x&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;版本：V4.0&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image1.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.240972222222222in&#34;
&lt;p&gt;height=&amp;quot;2.0944444444444446in&amp;quot;}&lt;/p&gt;
&lt;p&gt;尚硅谷 JavaEE 教研组&lt;/p&gt;
&lt;h1 id=&#34;第1章-elasticsearch-概述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第1章-elasticsearch-概述&#34;&gt;#&lt;/a&gt; 第 1 章 Elasticsearch 概述&lt;/h1&gt;
&lt;h2 id=&#34;11-elasticsearch-是什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-elasticsearch-是什么&#34;&gt;#&lt;/a&gt; 1.1 Elasticsearch 是什么&lt;/h2&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image2.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.759722222222222in&#34;
&lt;p&gt;height=&amp;quot;1.479861111111111in&amp;quot;}&lt;/p&gt;
&lt;p&gt;The Elastic Stack, 包括 Elasticsearch、Kibana、Beats 和 Logstash（也称为&lt;br /&gt;
 ELK&lt;br /&gt;
Stack）。能够安全可靠地获取任何来源、任何格式的数据，然后实时地对数据进行搜索、分析和可视化。Elaticsearch，简称为&lt;br /&gt;
 ES， ES 是一个开源的高扩展的分布式全文搜索引擎，是整个 Elastic Stack&lt;br /&gt;
 技术栈的核心。它可以近乎实时的存储、检索数据；本身扩展性很好，可以扩展到上百台服务器，处理&lt;br /&gt;
 PB 级别的数据。&lt;/p&gt;
&lt;h3 id=&#34;12-全文搜索引擎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12-全文搜索引擎&#34;&gt;#&lt;/a&gt; 1.2 全文搜索引擎&lt;/h3&gt;
&lt;p&gt;Google，百度类的网站搜索，它们都是根据网页中的关键字生成索引，我们在搜索的时候输入关键字，它们会将该关键字即索引匹配到的所有网页返回；还有常见的项目中应用日志的搜索等等。对于这些非结构化的数据文本，关系型数据库搜索不是能很好的支持。&lt;/p&gt;
&lt;p&gt;一般传统数据库，全文检索都实现的很鸡肋，因为一般也没人用数据库存文本字段。进行全文检索需要扫描整个表，如果数据量大的话即使对&lt;br /&gt;
 SQL 的语法优化，也收效甚微。建立了索引，但是维护起来也很麻烦，对于&lt;br /&gt;
 insert 和 update 操作都会重新构建索引。&lt;/p&gt;
&lt;p&gt;基于以上原因可以分析得出，在一些生产环境中，使用常规的搜索方式，性能是非常差的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;搜索的数据对象是大量的非结构化的文本数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文件记录量达到数十万或数百万个甚至更多。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;支持大量基于交互式文本的查询。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;需求非常灵活的全文搜索查询。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对高度相关的搜索结果的有特殊需求，但是没有可用的关系数据库可以满足。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对不同记录类型、非文本数据操作或安全事务处理的需求相对较少的情况。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了解决结构化数据搜索和非结构化数据搜索性能问题，我们就需要专业，健壮，强大的全文搜索引擎&lt;/p&gt;
&lt;p&gt;这里说到的全文搜索引擎指的是目前广泛应用的主流搜索引擎。它的工作原理是计算机索引程序通过扫描文章中的每一个词，对每一个词建立一个索引，指明该词在文章中出现的次数和位置，当用户查询时，检索程序就根据事先建立的索引进行查找，并将查找的结果反馈给用户的检索方式。这个过程类似于通过字典中的检索字表查字的过程。&lt;/p&gt;
&lt;h2 id=&#34;13-elasticsearch-and-solr&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13-elasticsearch-and-solr&#34;&gt;#&lt;/a&gt; 1.3 Elasticsearch And Solr&lt;/h2&gt;
&lt;p&gt;Lucene 是 Apache 软件基金会 Jakarta&lt;br /&gt;
 项目组的一个子项目，提供了一个简单却强大的应用程式接口，能够做全文索引和搜寻。在&lt;br /&gt;
 Java 开发环境里 Lucene 是一个成熟的免费开源工具。就其本身而言，Lucene&lt;br /&gt;
 是当前以及最近几年最受欢迎的免费 Java 信息检索程序库。但 Lucene&lt;br /&gt;
 只是一个提供全文搜索功能类库的核心工具包，而真正使用它还需要一个完善的服务框架搭建起来进行应用。&lt;/p&gt;
&lt;p&gt;目前市面上流行的搜索引擎软件，主流的就两款：&lt;strong&gt;Elasticsearch&lt;/strong&gt; 和&lt;br /&gt;
&lt;strong&gt; Solr&lt;/strong&gt;, 这两款都是基于 Lucene&lt;br /&gt;
 搭建的，可以独立部署启动的搜索引擎服务软件。由于内核相同，所以两者除了服务器安装、部署、管理、集群以外，对于数据的操作&lt;br /&gt;
修改、添加、保存、查询等等都十分类似。&lt;/p&gt;
&lt;p&gt;在使用过程中，一般都会将 Elasticsearch 和 Solr&lt;br /&gt;
 这两个软件对比，然后进行选型。这两个搜索引擎都是流行的，先进的的开源搜索引擎。它们都是围绕核心底层搜索库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lucene 构建的 -&lt;br /&gt;
 但它们又是不同的。像所有东西一样，每个都有其优点和缺点：&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image3.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.947777777777778in&#34;
&lt;p&gt;height=&amp;quot;2.5037357830271216in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;14-elasticsearch-or-solr&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#14-elasticsearch-or-solr&#34;&gt;#&lt;/a&gt; 1.4 Elasticsearch Or Solr&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Elasticsearch 和 Solr 都是开源搜索引擎，那么我们在使用时该如何选择呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Google 搜索趋势结果表明，与 Solr 相比，Elasticsearch&lt;br /&gt;
 具有很大的吸引力，但这并不意味着 Apache Solr&lt;br /&gt;
 已经死亡。虽然有些人可能不这么认为，但 Solr 仍然是最受欢迎的&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;搜索引擎之一，拥有强大的社区和开源支持。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;与 Solr 相比，Elasticsearch&lt;br /&gt;
 易于安装且非常轻巧。此外，你可以在几分钟内安装并运行&lt;br /&gt;
 Elasticsearch。但是，如果 Elasticsearch&lt;br /&gt;
 管理不当，这种易于部署和使用可能会成为一个问题。基于 JSON&lt;br /&gt;
 的配置很简单，但如果要为文件中的每个配置指定注释，那么它不适合您。总的来说，如果你的应用使用的是&lt;br /&gt;
 JSON，那么 Elasticsearch 是一个更好的选择。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;否则，请使用 Solr，因为它的 schema.xml 和 solrconfig.xml&lt;br /&gt;
 都有很好的文档记录。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Solr 拥有更大，更成熟的用户，开发者和贡献者社区。ES&lt;br /&gt;
 虽拥有的规模较小但活跃的&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;用户社区以及不断增长的贡献者社区。&lt;/p&gt;
&lt;p&gt;Solr 贡献者和提交者来自许多不同的组织，而 Elasticsearch&lt;br /&gt;
 提交者来自单个公司。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Solr 更成熟，但 ES 增长迅速，更稳定。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Solr 是一个非常有据可查的产品，具有清晰的示例和 API 用例场景。&lt;br /&gt;
Elasticsearch 的文档组织良好，但它缺乏好的示例和清晰的配置说明。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;那么，到底是 &lt;strong&gt;Solr&lt;/strong&gt; 还是 &lt;strong&gt;Elasticsearch&lt;/strong&gt;？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有时很难找到明确的答案。无论您选择 Solr 还是&lt;br /&gt;
 Elasticsearch，首先需要了解正确的用例和未来需求。总结他们的每个属性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;由于易于使用，Elasticsearch&lt;br /&gt;
 在新开发者中更受欢迎。一个下载和一个命令就可以启动一切。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果除了搜索文本之外还需要它来处理分析查询，Elasticsearch&lt;br /&gt;
 是更好的选择&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果需要分布式索引，则需要选择&lt;br /&gt;
 Elasticsearch。对于需要良好可伸缩性和以及性能分&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;布式环境，Elasticsearch 是更好的选择。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Elasticsearch 在开源日志管理用例中占据主导地位，许多组织在&lt;br /&gt;
 Elasticsearch 中索引它&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;们的日志以使其可搜索。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;如果你喜欢监控和指标，那么请使用 Elasticsearch，因为相对于&lt;br /&gt;
 Solr，Elasticsearch 暴露了更多的关键指标&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;15-elasticsearch-应用案例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#15-elasticsearch-应用案例&#34;&gt;#&lt;/a&gt; 1.5 Elasticsearch 应用案例&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;GitHub:&lt;/strong&gt; 2013 年初，抛弃了 Solr，采取 Elasticsearch 来做 PB&lt;br /&gt;
 级的搜索。&amp;quot;GitHub 使用&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Elasticsearch 搜索 20TB 的数据，包括 13 亿文件和 1300 亿行代码 &amp;quot;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;维基百科：启动以 Elasticsearch 为基础的核心搜索架构&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SoundCloud&lt;/strong&gt;：&amp;quot;SoundCloud 使用 Elasticsearch 为 1.8&lt;br /&gt;
 亿用户提供即时而精准的音乐搜索服务 &amp;quot;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;百度：目前广泛使用 Elasticsearch&lt;br /&gt;
 作为文本数据分析，采集百度所有服务器上的各类指标数据及用户自定义数据，通过对各种数据进行多维分析展示，辅助定位分析实例异常或业务层面异常。目前覆盖百度内部&lt;br /&gt;
 20&lt;br /&gt;
 多个业务线（包括云分析、网盟、预测、文库、直达号、钱包、风控等），单集群最大&lt;br /&gt;
 100 台机器，200 个 ES 节点，每天导入 30TB+ 数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;新浪：使用 Elasticsearch 分析处理 32 亿条实时日志。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;阿里：使用 Elasticsearch 构建日志采集和分析体系。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Stack Overflow&lt;/strong&gt;：解决 Bug&lt;br /&gt;
 问题的网站，全英文，编程人员交流的网站。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;第2章-elasticsearch-入门&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第2章-elasticsearch-入门&#34;&gt;#&lt;/a&gt; 第 2 章 Elasticsearch 入门&lt;/h1&gt;
&lt;h2 id=&#34;21-elasticsearch-安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21-elasticsearch-安装&#34;&gt;#&lt;/a&gt; 2.1 Elasticsearch 安装&lt;/h2&gt;
&lt;h3 id=&#34;211-下载软件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#211-下载软件&#34;&gt;#&lt;/a&gt; 2.1.1 下载软件&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Elasticsearch 的官方地址：&lt;span class=&#34;ul&#34;&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9jbi8=&#34;&gt;https://www.elastic.co/cn/&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Elasticsearch 最新的版本是 7.11.2（截止 2021.3.10），我们选择 7.8.0&lt;br /&gt;
 版本（最新版本半&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;年前的版本）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;下载地址：&lt;span&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9jbi9kb3dubG9hZHMvcGFzdC1yZWxlYXNlcyNlbGFzdGljc2VhcmNo&#34;&gt;https://www.elastic.co/cn/downloads/past-releases#elasticsearch&lt;/span&gt;&lt;/span&gt;[&lt;span class=&#34;ul&#34;&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9jbi9kb3dubG9hZHMvcGFzdC1yZWxlYXNlcyNlbGFzdGljc2VhcmNo&#34;&gt;https://www.elastic.co/cn/downloads/past-releases#elasticsearch&lt;/span&gt;&lt;/span&gt;](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9jbi9kb3dubG9hZHMvcGFzdC1yZWxlYXNlcyNlbGFzdGljc2VhcmNo&#34;&gt;https://www.elastic.co/cn/downloads/past-releases#elasticsearch&lt;/span&gt;)&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image5.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.545152012248469in&amp;quot;}&lt;/p&gt;
&lt;p&gt;Elasticsearch 分为 Linux 和 Windows 版本，基于我们主要学习的是&lt;br /&gt;
 Elasticsearch 的 Java&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;客户端的使用，所以课程中使用的是安装较为简便的 Windows 版本。&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image7.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.671056430446194in&#34;
&lt;p&gt;height=&amp;quot;1.9451673228346458in&amp;quot;}&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Windows 版的 Elasticsearch 的安装很简单，解压即安装完毕，解压后的&lt;br /&gt;
 Elasticsearch 的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image9.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.7593044619422573in&amp;quot;}&lt;/p&gt;
&lt;p&gt;+---------+------------------+&lt;br /&gt;
| 目录    | &amp;gt; 含义           |&lt;br /&gt;
+=&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;+&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;==========+&lt;br /&gt;
| bin     | &amp;gt; 可执行脚本目录 |&lt;br /&gt;
+---------+------------------+&lt;br /&gt;
| config  | &amp;gt; 配置目录       |&lt;br /&gt;
+---------+------------------+&lt;br /&gt;
| jdk     | &amp;gt; 内置 JDK 目录  |&lt;br /&gt;
+---------+------------------+&lt;br /&gt;
| lib     | &amp;gt; 类库           |&lt;br /&gt;
+---------+------------------+&lt;br /&gt;
| logs    | &amp;gt; 日志目录       |&lt;br /&gt;
+---------+------------------+&lt;br /&gt;
| modules | &amp;gt; 模块目录       |&lt;br /&gt;
+---------+------------------+&lt;br /&gt;
| plugins | &amp;gt; 插件目录       |&lt;br /&gt;
+---------+------------------+&lt;/p&gt;
&lt;p&gt;解压后，进入 bin 文件目录，点击 elasticsearch.bat 文件启动 ES 服务&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image11.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.759722222222222in&#34;
&lt;p&gt;height=&amp;quot;2.8666666666666667in&amp;quot;}&lt;/p&gt;
&lt;p&gt;注意：&lt;strong&gt;9300&lt;/strong&gt; 端口为 &lt;strong&gt;Elasticsearch&lt;/strong&gt; 集群间组件的通信端口，&lt;strong&gt;9200&lt;/strong&gt;&lt;br /&gt;
 端口为浏览器访问的 &lt;strong&gt;http&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;协议 &lt;strong&gt;RESTful&lt;/strong&gt; 端口。&lt;/p&gt;
&lt;p&gt;打开浏览器（推荐使用谷歌浏览器），输入地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xvY2FsaG9zdDo5MjAw&#34;&gt;http://localhost:9200&lt;/span&gt;，测试结果&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image12.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.4629297900262468in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;213-问题解决&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#213-问题解决&#34;&gt;#&lt;/a&gt; 2.1.3 问题解决&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Elasticsearch 是使用 java 开发的，且 7.8 版本的 ES 需要 JDK 版本 1.8&lt;br /&gt;
 以上，默认安装&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;包带有 jdk 环境，如果系统配置 JAVA_HOME，那么使用系统默认的&lt;br /&gt;
 JDK，如果没有配置使用自带的 JDK，一般建议使用系统配置的 JDK。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;双击启动窗口闪退，通过路径访问追踪错误，如果是 &amp;quot;空间不足&amp;quot;，请修改&lt;br /&gt;
 config/jvm.options 配置文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;#&lt;br /&gt;
设置 JVM 初始内存为 1G。此值可以设置与 - Xmx 相同，以避免每次垃圾回收完成后 JVM 重新分配内存&lt;/p&gt;
&lt;p&gt;# Xms represents the initial size of total heap space&lt;/p&gt;
&lt;p&gt;# 设置 JVM 最大可用内存为 1G&lt;/p&gt;
&lt;p&gt;# Xmx represents the maximum size of total heap space&lt;/p&gt;
&lt;p&gt;-Xms1g&lt;/p&gt;
&lt;p&gt;-Xmx1g&lt;/p&gt;
&lt;h2 id=&#34;22-elasticsearch-基本操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22-elasticsearch-基本操作&#34;&gt;#&lt;/a&gt; 2.2 Elasticsearch 基本操作&lt;/h2&gt;
&lt;h3 id=&#34;221-restful&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#221-restful&#34;&gt;#&lt;/a&gt; 2.2.1 RESTful&lt;/h3&gt;
&lt;p&gt;REST&lt;br /&gt;
 指的是一组架构约束条件和原则。满足这些约束条件和原则的应用程序或设计就是&lt;br /&gt;
 RESTful。Web 应用程序最重要的 REST&lt;br /&gt;
 原则是，客户端和服务器之间的交互在请求之间是无状态的。从客户端到服务器的每个请求都必须包含理解请求所必需的信息。如果服务器在请求之间的任何时间点重启，客户端不会得到通知。此外，无状态请求可以由任何可用服务器回答，这十分适合云计算之类的环境。客户端可以缓存数据以改进性能。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在服务器端，应用程序状态和功能可以分为各种资源。资源是一个有趣的概念实体，它&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;向客户端公开。资源的例子有：应用程序对象、数据库记录、算法等等。每个资源都使用&lt;br /&gt;
 URI (Universal Resource Identifier)&lt;br /&gt;
 得到一个唯一的地址。所有资源都共享统一的接口，以便在客户端和服务器之间传输状态。使用的是标准的&lt;br /&gt;
 HTTP 方法，比如 GET、PUT、POST 和&lt;/p&gt;
&lt;p&gt;DELETE。&lt;/p&gt;
&lt;p&gt;在 REST 样式的 Web&lt;br /&gt;
 服务中，每个资源都有一个地址。资源本身都是方法调用的目&lt;/p&gt;
&lt;p&gt;标，方法列表对所有资源都是一样的。这些方法都是标准方法，包括 HTTP&lt;br /&gt;
GET、POST、&lt;/p&gt;
&lt;p&gt;PUT、DELETE，还可能包括 HEAD 和&lt;br /&gt;
 OPTIONS。简单的理解就是，如果想要访问互联网上的资源，就必须向资源所在的服务器发出请求，请求体中必须包含资源的网络路径，以及对资源进行的操作 (增删改查)。&lt;/p&gt;
&lt;h4 id=&#34;222-客户端安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#222-客户端安装&#34;&gt;#&lt;/a&gt; 2.2.2 客户端安装&lt;/h4&gt;
&lt;p&gt;如果直接通过浏览器向 Elasticsearch&lt;br /&gt;
 服务器发请求，那么需要在发送的请求中包含&lt;/p&gt;
&lt;p&gt;HTTP 标准的方法，而 HTTP 的大部分特性且仅支持 GET 和 POST&lt;br /&gt;
 方法。所以为了能方便地进行客户端的访问，可以使用 Postman 软件&lt;/p&gt;
&lt;p&gt;Postman 是一款强大的网页调试工具，提供功能强大的 Web API 和 HTTP&lt;br /&gt;
 请求调试。软件功能强大，界面简洁明晰、操作方便快捷，设计得很人性化。Postman&lt;br /&gt;
 中文版能够发送任何类型的 HTTP 请求 (GET, HEAD, POST,&lt;br /&gt;
PUT..)，不仅能够表单提交，且可以附带任意类型请求体。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Postman 官网：&lt;span class=&#34;ul&#34;&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZ2V0cG9zdG1hbi5jb20=&#34;&gt;https://www.getpostman.com&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Postman&lt;br /&gt;
 下载：&lt;span&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZ2V0cG9zdG1hbi5jb20vYXBwcw==&#34;&gt;https://www.getpostman.com/apps&lt;/span&gt;&lt;/span&gt;[&lt;span class=&#34;ul&#34;&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZ2V0cG9zdG1hbi5jb20vYXBwcw==&#34;&gt;https://www.getpostman.com/apps&lt;/span&gt;&lt;/span&gt;](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZ2V0cG9zdG1hbi5jb20vYXBwcw==&#34;&gt;https://www.getpostman.com/apps&lt;/span&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image14.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;3.0801673228346456in&amp;quot;}&lt;/p&gt;
&lt;p&gt;Elasticsearch&lt;br /&gt;
 是面向文档型数据库，一条数据在这里就是一个文档。为了方便大家理解，我们将&lt;br /&gt;
 Elasticsearch 里存储文档数据和关系型数据库 MySQL&lt;br /&gt;
 存储数据的概念进行一个类比&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image16.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.935416666666667in&#34;
&lt;p&gt;height=&amp;quot;1.4270833333333333in&amp;quot;}&lt;/p&gt;
&lt;p&gt;ES 里的 Index 可以看做一个库，而 Types 相当于表，Documents&lt;br /&gt;
 则相当于表的行。&lt;/p&gt;
&lt;p&gt;这里 Types 的概念已经被逐渐弱化，Elasticsearch 6.X 中，一个 index&lt;br /&gt;
 下已经只能包含一个 type，Elasticsearch 7.X 中，Type 的概念已经被删除了。&lt;/p&gt;
&lt;p&gt;6 用 JSON 作为文档序列化的格式，比如一条用户信息：&lt;/p&gt;
&lt;p&gt;+----------------------------------------------+&lt;br /&gt;
| {                                            |&lt;br /&gt;
|                                              |&lt;br /&gt;
| &amp;quot;name&amp;quot; : &amp;quot;John&amp;quot;,                         |&lt;br /&gt;
|                                              |&lt;br /&gt;
| &amp;quot;sex&amp;quot; : &amp;quot;Male&amp;quot;,                          |&lt;br /&gt;
|                                              |&lt;br /&gt;
| &amp;quot;age&amp;quot; : 25,                                |&lt;br /&gt;
|                                              |&lt;br /&gt;
| &amp;quot;birthDate&amp;quot;: &amp;quot;1990/05/01&amp;quot;,               |&lt;br /&gt;
|                                              |&lt;br /&gt;
| &amp;quot;about&amp;quot; : &amp;quot;I love to go rock climbing&amp;quot;,  |&lt;br /&gt;
|                                              |&lt;br /&gt;
| &amp;quot;interests&amp;quot;: [ &amp;quot;sports&amp;quot;, &amp;quot;music&amp;quot; ] } |&lt;br /&gt;
+----------------------------------------------+&lt;/p&gt;
&lt;h3 id=&#34;224-http-操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#224-http-操作&#34;&gt;#&lt;/a&gt; 2.2.4 HTTP 操作&lt;/h3&gt;
&lt;h4 id=&#34;2241-索引操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2241-索引操作&#34;&gt;#&lt;/a&gt; 2.2.4.1 索引操作&lt;/h4&gt;
&lt;h5 id=&#34;创建索引&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建索引&#34;&gt;#&lt;/a&gt; 创建索引&lt;/h5&gt;
&lt;p&gt;对比关系型数据库，创建索引就等同于创建数据库&lt;/p&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 &lt;strong&gt;PUT&lt;/strong&gt; 请求&lt;br /&gt;
：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3Nob3BwaW5n&#34;&gt;http://127.0.0.1:9200/shopping&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image17.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.766666666666667in&#34;
&lt;p&gt;height=&amp;quot;0.41944444444444445in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image18.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.4093044619422572in&amp;quot;}&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;acknowledged&#34;&lt;/span&gt;【响应结果】&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; # &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;操作成功&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;shards_acknowledged&#34;&lt;/span&gt;【分片结果】&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; # 分片操作成功&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;index&#34;&lt;/span&gt;【索引名称】&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;shopping&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;注意：创建索引库的分片数默认 1 片，在 7.0.0 之前的 Elasticsearch 版本中，默认 5 片&lt;/p&gt;
&lt;p&gt;如果重复添加索引，会返回错误信息&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image20.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;3.611680883639545in&amp;quot;}&lt;/p&gt;
&lt;h5 id=&#34;查看所有索引&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查看所有索引&#34;&gt;#&lt;/a&gt; 查看所有索引&lt;/h5&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 &lt;strong&gt;GET&lt;/strong&gt; 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL19jYXQvaW5kaWNlcz92&#34;&gt;http://127.0.0.1:9200/_cat/indices?v&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image22.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.768055555555556in&#34;
&lt;p&gt;height=&amp;quot;0.32569444444444445in&amp;quot;}&lt;/p&gt;
&lt;p&gt;这里请求路径中的_cat 表示查看的意思，indices&lt;br /&gt;
 表示索引，所以整体含义就是查看当前 ES 服务器中的所有索引，就好像 MySQL&lt;br /&gt;
 中的 show tables 的感觉，服务器响应结果如下&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image23.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.0032075678040244in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;+----------------+----------------------------------------------------+&lt;br /&gt;
| 表头           | &amp;gt; 含义                                             |&lt;br /&gt;
+&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;+&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;====================================+&lt;br /&gt;
| health         | &amp;gt; 当前服务器健康状态：                             |&lt;br /&gt;
|                | &amp;gt;                                                  |&lt;br /&gt;
|                | &amp;gt; &lt;strong&gt;green&lt;/strong&gt; (集群完整)                              |&lt;br /&gt;
|                | &amp;gt; &lt;strong&gt;yellow&lt;/strong&gt; (单点正常、集群不完整) red (单点不正常) |&lt;br /&gt;
+----------------+----------------------------------------------------+&lt;br /&gt;
| status         | &amp;gt; 索引打开、关闭状态                               |&lt;br /&gt;
+----------------+----------------------------------------------------+&lt;br /&gt;
| index          | &amp;gt; 索引名                                           |&lt;br /&gt;
+----------------+----------------------------------------------------+&lt;br /&gt;
| uuid           | &amp;gt; 索引统一编号                                     |&lt;br /&gt;
+----------------+----------------------------------------------------+&lt;br /&gt;
| pri            | &amp;gt; 主分片数量                                       |&lt;br /&gt;
+----------------+----------------------------------------------------+&lt;br /&gt;
| rep            | &amp;gt; 副本数量                                         |&lt;br /&gt;
+----------------+----------------------------------------------------+&lt;br /&gt;
| docs.count     | &amp;gt; 可用文档数量                                     |&lt;br /&gt;
+----------------+----------------------------------------------------+&lt;br /&gt;
| docs.deleted   | &amp;gt; 文档删除状态（逻辑删除）                         |&lt;br /&gt;
+----------------+----------------------------------------------------+&lt;br /&gt;
| store.size     | &amp;gt; 主分片和副分片整体占空间大小                     |&lt;br /&gt;
+----------------+----------------------------------------------------+&lt;br /&gt;
| pri.store.size | &amp;gt; 主分片占空间大小                                 |&lt;br /&gt;
+----------------+----------------------------------------------------+&lt;/p&gt;
&lt;h5 id=&#34;查看单个索引&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查看单个索引&#34;&gt;#&lt;/a&gt; 查看单个索引&lt;/h5&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 &lt;strong&gt;GET&lt;/strong&gt; 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3Nob3BwaW5n&#34;&gt;http://127.0.0.1:9200/shopping&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image25.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.770138888888889in&#34;
&lt;p&gt;height=&amp;quot;0.33402777777777776in&amp;quot;}&lt;/p&gt;
&lt;p&gt;查看索引向 ES 服务器发送的请求路径和创建索引是一致的。但是 HTTP 方法不一致。这里可以体会一下 RESTful 的意义，&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image26.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.993054461942257in&amp;quot;}&lt;/p&gt;
&lt;h5 id=&#34;删除索引&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#删除索引&#34;&gt;#&lt;/a&gt; 删除索引&lt;/h5&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 &lt;strong&gt;DELETE&lt;/strong&gt; 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3Nob3BwaW5n&#34;&gt;http://127.0.0.1:9200/shopping&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image28.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.770138888888889in&#34;
&lt;p&gt;height=&amp;quot;0.3284722222222222in&amp;quot;}&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image29.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;0.8162642169728784in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;重新访问索引时，服务器返回响应：索引不存在&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image25.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;2.9579297900262467in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;2242-文档操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2242-文档操作&#34;&gt;#&lt;/a&gt; 2.2.4.2 文档操作&lt;/h4&gt;
&lt;h5 id=&#34;创建文档&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建文档&#34;&gt;#&lt;/a&gt; 创建文档&lt;/h5&gt;
&lt;p&gt;索引已经创建好了，接下来我们来创建文档，并添加数据。这里的文档可以类比为关系型数据库中的表数据，添加的数据格式为&lt;br /&gt;
 JSON 格式&lt;/p&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 &lt;strong&gt;POST&lt;/strong&gt; 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3Nob3BwaW5nL3Bob25l&#34;&gt;http://127.0.0.1:9200/shopping/phone&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;请求体内容为：&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;title&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;小米手机&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;category&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;小米&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;images&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;http://www.gulixueyuan.com/xm.jpg&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;price&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3999.0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image34.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.8035575240594925in&amp;quot;}&lt;/p&gt;
&lt;p&gt;此处发送请求的方式必须为 &lt;strong&gt;POST&lt;/strong&gt;，不能是 &lt;strong&gt;PUT&lt;/strong&gt;，否则会发生错误&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image36.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.2183475503062118in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image38.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.2212871828521434in&amp;quot;}&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;_index&#34;&lt;/span&gt;【索引】&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;shopping&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;_type&#34;&lt;/span&gt;【类型-文档】&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;_doc&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;_id&#34;&lt;/span&gt;【唯一标识】&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Xhsa2ncBlvF_7lxyCE9G&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;#可以类比为MySQL中的主键，随机生成&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;_version&#34;&lt;/span&gt;【版本】&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;result&#34;&lt;/span&gt;【结果】&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;created&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; #这里的create表示创建成功&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;_shards&#34;&lt;/span&gt;【分片】&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;total&#34;&lt;/span&gt;【分片 - 总数】&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;successful&#34;&lt;/span&gt;【分片 - 成功】&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;failed&#34;&lt;/span&gt;【分片 - 失败】&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;&#34;_seq_no&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;&#34;_primary_term&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;上面的数据创建后，由于没有指定数据唯一性标识（ID），默认情况下，ES&lt;br /&gt;
 服务器会随机生成一个。&lt;/p&gt;
&lt;p&gt;如果想要自定义唯一性标识，需要在创建时指定：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3Nob3BwaW5nL19kb2MvMTAwMQ==&#34;&gt;http://127.0.0.1:9200/shopping/_doc/1001&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image40.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.853111329833771in&#34;
&lt;p&gt;height=&amp;quot;1.715061242344707in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image42.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.85972331583552in&#34;
&lt;p&gt;height=&amp;quot;2.3156167979002626in&amp;quot;}&lt;/p&gt;
&lt;p&gt;此处需要注意：如果增加数据时明确数据主键，那么请求方式也可以为 PUT&lt;/p&gt;
&lt;h5 id=&#34;查看文档&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查看文档&#34;&gt;#&lt;/a&gt; 查看文档&lt;/h5&gt;
&lt;p&gt;查看文档时，需要指明文档的唯一性标识，类似于 MySQL 中数据的主键查询&lt;/p&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 &lt;strong&gt;GET&lt;/strong&gt; 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3Nob3BwaW5nL3Bob25lLzEwMDE=&#34;&gt;http://127.0.0.1:9200/shopping/phone/1001&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image44.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.774305555555555in&#34;
&lt;p&gt;height=&amp;quot;0.3111111111111111in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image45.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.320971128608924in&amp;quot;}&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;_index&amp;quot;【索引】: &amp;quot;shopping&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;_type&amp;quot;【文档类型】: &amp;quot;_doc&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;_id&amp;quot;: &amp;quot;1&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;_version&amp;quot;: 2,&lt;/p&gt;
&lt;p&gt;&amp;quot;_seq_no&amp;quot;: 2,&lt;/p&gt;
&lt;p&gt;&amp;quot;_primary_term&amp;quot;: 2,&lt;/p&gt;
&lt;p&gt;&amp;quot;found&amp;quot;【查询结果】: true, # true 表示查找到，false 表示未查找到&lt;/p&gt;
&lt;p&gt;&amp;quot;_source&amp;quot;【文档源信息】: {&lt;/p&gt;
&lt;p&gt;&amp;quot;title&amp;quot;: &amp;quot;华为手机&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;category&amp;quot;: &amp;quot;华为&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;images&amp;quot;: &amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5ndWxpeHVleXVhbi5jb20vaHcuanBn&#34;&gt;http://www.gulixueyuan.com/hw.jpg&lt;/span&gt;&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;price&amp;quot;: 4999.00&lt;/p&gt;
&lt;p&gt;} }&lt;/p&gt;
&lt;h5 id=&#34;修改文档&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#修改文档&#34;&gt;#&lt;/a&gt; 修改文档&lt;/h5&gt;
&lt;p&gt;和新增文档一样，输入相同的 URL&lt;br /&gt;
 地址请求，如果请求体变化，会将原有的数据内容覆盖&lt;/p&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 &lt;strong&gt;POST&lt;/strong&gt; 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3Nob3BwaW5nL191cGRhdGUvMTAwMQ==&#34;&gt;http://127.0.0.1:9200/shopping/_update/1001&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;请求体内容为:&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;title&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;华为手机&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;category&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;华为&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;images&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;http://www.gulixueyuan.com/hw.jpg&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;price&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4999.0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image47.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.8120286526684164in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image49.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.279304461942257in&amp;quot;}&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;_index&amp;quot;: &amp;quot;shopping&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;_type&amp;quot;: &amp;quot;_doc&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;_id&amp;quot;: &amp;quot;1&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;_version&amp;quot;【版本】: 2,&lt;/p&gt;
&lt;p&gt;&amp;quot;result&amp;quot;【结果】: &amp;quot;updated&amp;quot;, # updated 表示数据被更新&lt;/p&gt;
&lt;p&gt;&amp;quot;_shards&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;total&amp;quot;: 2,&lt;/p&gt;
&lt;p&gt;&amp;quot;successful&amp;quot;: 1,&lt;/p&gt;
&lt;p&gt;&amp;quot;failed&amp;quot;: 0&lt;/p&gt;
&lt;p&gt;},&lt;/p&gt;
&lt;p&gt;&amp;quot;_seq_no&amp;quot;: 2,&lt;/p&gt;
&lt;p&gt;&amp;quot;_primary_term&amp;quot;: 2&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;修改字段修改数据时，也可以只修改某一给条数据的局部信息在 Postman 中，向 ES 服务器发 &lt;strong&gt;POST&lt;/strong&gt; 请求&lt;br /&gt;
：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3Nob3BwcGluZy8xMDAxL191cGRhdGUlRTglQUYlQjclRTYlQjElODIlRTQlQkQlOTMlRTUlODYlODUlRTUlQUUlQjklRTQlQjglQkElRUYlQkMlOUE=&#34;&gt;http://127.0.0.1:9200/shoppping/1001/_update 请求体内容为：&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;doc&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;price&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3000.0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image51.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.9653619860017497in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image53.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.160971128608924in&amp;quot;}&lt;/p&gt;
&lt;p&gt;根据唯一性标识，查询文档数据，文档数据已经更新&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image55.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;2.5230686789151355in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;删除文档&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#删除文档&#34;&gt;#&lt;/a&gt; 删除文档&lt;/h5&gt;
&lt;p&gt;删除一个文档不会立即从磁盘上移除，它只是被标记成已删除（逻辑删除）。&lt;/p&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 &lt;strong&gt;DELETE&lt;/strong&gt; 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3Nob3BwaW5nL3Bob25l&#34;&gt;http://127.0.0.1:9200/shopping/phone&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image59.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.773611111111111in&#34;
&lt;p&gt;height=&amp;quot;0.3347222222222222in&amp;quot;}&lt;/p&gt;
&lt;p&gt;删除成功，服务器响应结果：&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image60.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.1191797900262466in&amp;quot;}&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;_index&amp;quot;: &amp;quot;shopping&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;_type&amp;quot;: &amp;quot;_doc&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;_id&amp;quot;: &amp;quot;1&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;_version&amp;quot;【版本】: 4, #对数据的操作，都会更新版本&lt;/p&gt;
&lt;p&gt;&amp;quot;result&amp;quot;【结果】: &amp;quot;deleted&amp;quot;, # deleted 表示数据被标记为删除&lt;/p&gt;
&lt;p&gt;&amp;quot;_shards&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;total&amp;quot;: 2,&lt;/p&gt;
&lt;p&gt;&amp;quot;successful&amp;quot;: 1,&lt;/p&gt;
&lt;p&gt;&amp;quot;failed&amp;quot;: 0&lt;/p&gt;
&lt;p&gt;},&lt;/p&gt;
&lt;p&gt;&amp;quot;_seq_no&amp;quot;: 4,&lt;/p&gt;
&lt;p&gt;&amp;quot;_primary_term&amp;quot;: 2&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image62.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.8961100174978127in&amp;quot;}&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image66.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;2.3640409011373578in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;_index&amp;quot;: &amp;quot;shopping&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;_type&amp;quot;: &amp;quot;_doc&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;_id&amp;quot;: &amp;quot;1&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;_version&amp;quot;: 1,&lt;/p&gt;
&lt;p&gt;&amp;quot;result&amp;quot;【结果】: &amp;quot;not_found&amp;quot;, # not_found 表示未查找到&lt;/p&gt;
&lt;p&gt;&amp;quot;_shards&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;total&amp;quot;: 2,&lt;/p&gt;
&lt;p&gt;&amp;quot;successful&amp;quot;: 1,&lt;/p&gt;
&lt;p&gt;&amp;quot;failed&amp;quot;: 0&lt;/p&gt;
&lt;p&gt;},&lt;/p&gt;
&lt;p&gt;&amp;quot;_seq_no&amp;quot;: 5,&lt;/p&gt;
&lt;p&gt;&amp;quot;_primary_term&amp;quot;: 2&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;h5 id=&#34;条件删除文档&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#条件删除文档&#34;&gt;#&lt;/a&gt; 条件删除文档&lt;/h5&gt;
&lt;p&gt;一般删除数据都是根据文档的唯一性标识进行删除，实际操作时，也可以根据条件对多条数据进行删除首先分别增加多条数据:&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image70.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;3.698974190726159in&amp;quot;}&lt;/p&gt;
&lt;p&gt;向 ES 服务器发 &lt;strong&gt;POST&lt;/strong&gt; 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3Nob3BwaW5nL19kZWxldGVfYnlfcXVlcnk=&#34;&gt;http://127.0.0.1:9200/shopping/_delete_by_query&lt;/span&gt;&lt;br /&gt;
 请求体内容为：&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;&#34;query&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token property&#34;&gt;&#34;match&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token property&#34;&gt;&#34;price&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4000.00&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image74.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.0703630796150483in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image76.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.129304461942257in&amp;quot;}&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;took&amp;quot;【耗时】: 175,&lt;/p&gt;
&lt;p&gt;&amp;quot;timed_out&amp;quot;【是否超时】: false,&lt;/p&gt;
&lt;p&gt;&amp;quot;total&amp;quot;【总数】: 2,&lt;/p&gt;
&lt;p&gt;&amp;quot;deleted&amp;quot;【删除数量】: 2,&lt;/p&gt;
&lt;p&gt;&amp;quot;batches&amp;quot;: 1,&lt;/p&gt;
&lt;p&gt;&amp;quot;version_conflicts&amp;quot;: 0,&lt;/p&gt;
&lt;p&gt;&amp;quot;noops&amp;quot;: 0,&lt;/p&gt;
&lt;p&gt;&amp;quot;retries&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;bulk&amp;quot;: 0,&lt;/p&gt;
&lt;p&gt;&amp;quot;search&amp;quot;: 0&lt;/p&gt;
&lt;p&gt;},&lt;/p&gt;
&lt;p&gt;&amp;quot;throttled_millis&amp;quot;: 0,&lt;/p&gt;
&lt;p&gt;&amp;quot;requests_per_second&amp;quot;: -1.0,&lt;/p&gt;
&lt;p&gt;&amp;quot;throttled_until_millis&amp;quot;: 0,&lt;/p&gt;
&lt;p&gt;&amp;quot;failures&amp;quot;: []&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;补充：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;关于 query.match 的用法：&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NvbmdZdXhpbklUL2FydGljbGUvZGV0YWlscy8xMjA2NzgyMTc=&#34;&gt;https://blog.csdn.net/SongYuxinIT/article/details/120678217&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分页&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;&#34;query&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 请看接口说明，其中写了 match 和其他的相关方法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 单个条件查询&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token property&#34;&gt;&#34;match&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 匹配字段&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// &#34;price&#34;: 3999.00&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 布尔 -&gt; 多个条件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token property&#34;&gt;&#34;bool&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 相当与 and .or-&gt; should ;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token property&#34;&gt;&#34;must&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token property&#34;&gt;&#34;match&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 匹配 《---》 match_not 不匹配&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        &lt;span class=&#34;token property&#34;&gt;&#34;category&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;小米&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token property&#34;&gt;&#34;match&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        &lt;span class=&#34;token property&#34;&gt;&#34;price&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;3999&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token property&#34;&gt;&#34;filter&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token property&#34;&gt;&#34;range&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token property&#34;&gt;&#34;price&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        &lt;span class=&#34;token property&#34;&gt;&#34;gt&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;&#34;from&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;&#34;size&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 指定显示字段&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;&#34;_source&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;title&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token comment&#34;&gt;// 排序  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;&#34;sort&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;// 排序字段  &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token property&#34;&gt;&#34;price&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;// 排序方式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token property&#34;&gt;&#34;order&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;desc&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;2243-映射操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2243-映射操作&#34;&gt;#&lt;/a&gt; 2.2.4.3 映射操作&lt;/h4&gt;
&lt;p&gt;有了索引库，等于有了数据库中的 database。接下来就需要建索引库 (index) 中的映射了，类似于数据库 (database) 中的表结构 (table)。&lt;/p&gt;
&lt;p&gt;创建数据库表需要设置字段名称，类型，长度，约束等；索引库也一样，需要知道这个类型下有哪些字段，每个字段有哪些约束信息，这就叫做映射 (mapping)。&lt;/p&gt;
&lt;h5 id=&#34;创建映射&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建映射&#34;&gt;#&lt;/a&gt; 创建映射&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;前提：创建索引&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 &lt;strong&gt;PUT&lt;/strong&gt; 请求 http://127.0.0.1:9200/user/_mapping&lt;/p&gt;
&lt;p&gt;请求体内容为：&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;properties&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;type&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;text&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;index&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;sex&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;type&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;text&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;index&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;type&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;long&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;index&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image78.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.198556430446194in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image80.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.4627766841644794in&amp;quot;}&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;字段名：任意填写，下面指定许多属性，例如：title、subtitle、images、price&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;type：类型，Elasticsearch 中支持的数据类型非常丰富，说几个关键的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;String 类型，又分两种：&lt;/p&gt;
&lt;p&gt;text：可分词&lt;br /&gt;
 keyword：不可分词，数据会作为完整字段进行匹配&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Numerical：数值类型，分两类&lt;/p&gt;
&lt;p&gt;基本数据类型：long、integer、short、byte、double、float、half_float&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;浮点数的高精度类型：scaled_float&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Date：日期类型&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Array：数组类型&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Object：对象&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!-- --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;index：是否索引，默认为&lt;br /&gt;
 true，也就是说你不进行任何配置，所有字段都会被索引。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;true：字段会被索引，则可以用来进行搜索&lt;/p&gt;
&lt;p&gt;false：字段不会被索引，不能用来搜索&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;store：是否将数据进行独立存储，默认为 false&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;原始的文本会存储在_source 里面，默认情况下其他提取出来的字段都不是独立存储的，是从_source&lt;br /&gt;
 里面提取出来的。当然你也可以独立的存储某个字段，只要设置 &amp;quot;store&amp;quot;: true 即可，获取独立存储的字段要比从_source 中解析快得多，但是也会占用更多的空间，所以要根据实际业务需求来设置。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;analyzer：分词器，这里的 ik_max_word 即使用 ik&lt;br /&gt;
 分词器，后面会有专门的章节学习&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;查看映射&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查看映射&#34;&gt;#&lt;/a&gt; 查看映射&lt;/h5&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 &lt;strong&gt;GET&lt;/strong&gt; 请求: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3VzZXIvX21hcHBpbmc=&#34;&gt;http://127.0.0.1:9200/user/_mapping&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image82.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.767361111111111in&#34;
&lt;p&gt;height=&amp;quot;0.31666666666666665in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image83.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.5444444444444443in&amp;quot;}&lt;/p&gt;
&lt;h5 id=&#34;索引映射关联&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#索引映射关联&#34;&gt;#&lt;/a&gt; 索引映射关联&lt;/h5&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 &lt;strong&gt;PUT&lt;/strong&gt; 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3N0dWRlbnQx&#34;&gt;http://127.0.0.1:9200/student1&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;settings&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;mappings&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;properties&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token property&#34;&gt;&#34;type&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;text&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token property&#34;&gt;&#34;index&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;sex&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token property&#34;&gt;&#34;type&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;text&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token property&#34;&gt;&#34;index&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token property&#34;&gt;&#34;type&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;long&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token property&#34;&gt;&#34;index&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image85.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.665224190726159in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image87.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.4090266841644794in&amp;quot;}&lt;/p&gt;
&lt;h4 id=&#34;2244-高级查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2244-高级查询&#34;&gt;#&lt;/a&gt; 2.2.4.4 高级查询&lt;/h4&gt;
&lt;p&gt;Elasticsearch 提供了基于 JSON 提供完整的查询 DSL 来定义查询定义数据 :&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# POST /student/_doc/&lt;span class=&#34;token number&#34;&gt;1001&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;zhangsan&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;nickname&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;zhangsan&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token property&#34;&gt;&#34;sex&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;男&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token property&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# POST /student/_doc/&lt;span class=&#34;token number&#34;&gt;1002&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;lisi&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;nickname&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;lisi&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token property&#34;&gt;&#34;sex&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;男&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token property&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# POST /student/_doc/&lt;span class=&#34;token number&#34;&gt;1003&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;wangwu&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token property&#34;&gt;&#34;nickname&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;wangwu&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token property&#34;&gt;&#34;sex&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;女&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token property&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# POST /student/_doc/&lt;span class=&#34;token number&#34;&gt;1004&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;zhangsan1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;nickname&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;zhangsan1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token property&#34;&gt;&#34;sex&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;女&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token property&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;50&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;# POST /student/_doc/&lt;span class=&#34;token number&#34;&gt;1005&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;zhangsan2&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token property&#34;&gt;&#34;nickname&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;zhangsan2&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token property&#34;&gt;&#34;sex&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;女&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token property&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h5 id=&#34;查询所有文档&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查询所有文档&#34;&gt;#&lt;/a&gt; 查询所有文档&lt;/h5&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 &lt;strong&gt;GET&lt;/strong&gt; 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3N0dWRlbnQvX3NlYXJjaA==&#34;&gt;http://127.0.0.1:9200/student/_search&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;query&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;match_all&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;# &amp;quot;query&amp;quot;：这里的 query 代表一个查询对象，里面可以有不同的查询属性&lt;/p&gt;
&lt;p&gt;# &amp;quot;match_all&amp;quot;：查询类型，例如：match_all (代表查询所有)， match，term&lt;br /&gt;
， range 等等&lt;/p&gt;
&lt;p&gt;# {查询条件}：查询条件会根据类型的不同，写法也有差异&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image89.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.58751312335958in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;服务器响应结果如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image91.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;4.659457567804025in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token property&#34;&gt;&#34;took【查询花费时间，单位毫秒】&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1116&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token property&#34;&gt;&#34;timed_out【是否超时】&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token property&#34;&gt;&#34;_shards【分片信息】&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         &lt;span class=&#34;token property&#34;&gt;&#34;total【总数】&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         &lt;span class=&#34;token property&#34;&gt;&#34;successful【成功】&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         &lt;span class=&#34;token property&#34;&gt;&#34;skipped【忽略】&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         &lt;span class=&#34;token property&#34;&gt;&#34;failed【失败】&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; 	&lt;span class=&#34;token property&#34;&gt;&#34;hits【搜索命中结果】&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         &lt;span class=&#34;token string&#34;&gt;&#34;total&#34;&lt;/span&gt;【搜索条件匹配的文档总数】&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#34;value&#34;&lt;/span&gt;【总命中计数的值】&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token string&#34;&gt;&#34;relation&#34;&lt;/span&gt;【计数规则】&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;eq&#34;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;//eq 表示计数准确， gte 表示计数不准确&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         &lt;span class=&#34;token property&#34;&gt;&#34;max_score【匹配度分值】&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         &lt;span class=&#34;token property&#34;&gt;&#34;hits【命中结果集合】&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h5 id=&#34;匹配查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#匹配查询&#34;&gt;#&lt;/a&gt; 匹配查询&lt;/h5&gt;
&lt;p&gt;match 匹配类型查询，会把查询条件进行分词，然后进行查询，多个词条之间是 or 的关系&lt;/p&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 GET 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3N0dWRlbnQvX3NlYXJjaA==&#34;&gt;http://127.0.0.1:9200/student/_search&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;query&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;match&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;zhangsan&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image95.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.0903630796150483in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image97.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.4390266841644794in&amp;quot;}&lt;/p&gt;
&lt;h5 id=&#34;字段匹配查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字段匹配查询&#34;&gt;#&lt;/a&gt; 字段匹配查询&lt;/h5&gt;
&lt;p&gt;multi_match 与 match 类似，不同的是它可以在多个字段中查询。&lt;/p&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 GET 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3N0dWRlbnQvX3NlYXJjaA==&#34;&gt;http://127.0.0.1:9200/student/_search&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;query&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;multi_match&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;query&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;zhangsan&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;fields&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token string&#34;&gt;&#34;nickname&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image99.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.1986964129483813in&amp;quot;}&lt;/p&gt;
&lt;p&gt;服务器响应结果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image101.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.1291797900262468in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;关键字精确查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关键字精确查询&#34;&gt;#&lt;/a&gt; 关键字精确查询&lt;/h5&gt;
&lt;p&gt;term 查询，精确的关键词匹配查询，不对查询条件进行分词。&lt;/p&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 GET 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3N0dWRlbnQvX3NlYXJjaA==&#34;&gt;http://127.0.0.1:9200/student/_search&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;query&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;term&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token property&#34;&gt;&#34;value&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;zhangsan&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image103.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.230224190726159in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image105.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.2173600174978128in&amp;quot;}&lt;/p&gt;
&lt;h5 id=&#34;多关键字精确查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多关键字精确查询&#34;&gt;#&lt;/a&gt; 多关键字精确查询&lt;/h5&gt;
&lt;p&gt;terms 查询和 term 查询一样，但它允许你指定多值进行匹配。&lt;/p&gt;
&lt;p&gt;如果这个字段包含了指定值中的任何一个值，那么这个文档满足条件，类似于 mysql 的 in&lt;/p&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 GET 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3N0dWRlbnQvX3NlYXJjaA==&#34;&gt;http://127.0.0.1:9200/student/_search&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;query&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;terms&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token string&#34;&gt;&#34;zhangsan&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token string&#34;&gt;&#34;lisi&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image107.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.6120964566929135in&amp;quot;}&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image109.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.2758464566929133in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;指定查询字段&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#指定查询字段&#34;&gt;#&lt;/a&gt; 指定查询字段&lt;/h5&gt;
&lt;p&gt;默认情况下，Elasticsearch 在搜索的结果中，会把文档中保存在_source 的所有字段都返回。&lt;/p&gt;
&lt;p&gt;如果我们只想获取其中的部分字段，我们可以添加_source 的过滤&lt;/p&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 GET 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3N0dWRlbnQvX3NlYXJjaA==&#34;&gt;http://127.0.0.1:9200/student/_search&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;_source&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token string&#34;&gt;&#34;nickname&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;query&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;terms&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;nickname&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token string&#34;&gt;&#34;zhangsan&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image111.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.1686953193350833in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image113.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.2690266841644795in&amp;quot;}&lt;/p&gt;
&lt;h5 id=&#34;过滤补充&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#过滤补充&#34;&gt;#&lt;/a&gt; 过滤补充&lt;/h5&gt;
&lt;p&gt;过滤字段我们也可以通过&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;includes：来指定想要显示的字段&lt;/li&gt;
&lt;li&gt;excludes：来指定不想要显示的字段&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 GET 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3N0dWRlbnQvX3NlYXJjaA==&#34;&gt;http://127.0.0.1:9200/student/_search&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;_source&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;includes&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token string&#34;&gt;&#34;nickname&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;query&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;terms&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;nickname&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token string&#34;&gt;&#34;zhangsan&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image115.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.303695319335083in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image117.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.0676377952755907in&amp;quot;}&lt;/p&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 &lt;strong&gt;GET&lt;/strong&gt; 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3N0dWRlbnQvX3NlYXJjaA==&#34;&gt;http://127.0.0.1:9200/student/_search&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;_source&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;excludes&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token string&#34;&gt;&#34;nickname&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;query&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;terms&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;nickname&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token string&#34;&gt;&#34;zhangsan&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image119.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.1666119860017496in&amp;quot;}&lt;/p&gt;
&lt;p&gt;服务器响应结果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image121.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.0033464566929133in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;组合查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#组合查询&#34;&gt;#&lt;/a&gt; 组合查询&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;bool&lt;/code&gt;  把各种其它查询通过 &lt;code&gt;must&lt;/code&gt; （必须）、 &lt;code&gt;must_not&lt;/code&gt; （必须不）、 &lt;code&gt;should&lt;/code&gt; （应该）的方式进行组合&lt;/p&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 &lt;strong&gt;GET&lt;/strong&gt; 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3N0dWRlbnQvX3NlYXJjaA==&#34;&gt;http://127.0.0.1:9200/student/_search&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;query&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;bool&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;must&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					&lt;span class=&#34;token property&#34;&gt;&#34;match&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token property&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;zhangsan&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;must_not&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					&lt;span class=&#34;token property&#34;&gt;&#34;match&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token property&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;40&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;should&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					&lt;span class=&#34;token property&#34;&gt;&#34;match&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;						&lt;span class=&#34;token property&#34;&gt;&#34;sex&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;男&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image123.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.210363079615048in&amp;quot;}&lt;/p&gt;
&lt;p&gt;服务器响应结果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image125.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.1291797900262468in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;范围查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#范围查询&#34;&gt;#&lt;/a&gt; 范围查询&lt;/h5&gt;
&lt;p&gt;range 查询找出那些落在指定区间内的数字或者时间。range 查询允许以下字符&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;操作符&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;gt&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;gt; 大于 &amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;gte&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;大于等于 &amp;gt;=&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;lt&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&amp;gt; 小于 &amp;lt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;lte&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;小于等于 &amp;lt;=&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 &lt;strong&gt;GET&lt;/strong&gt; 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3N0dWRlbnQvX3NlYXJjaA==&#34;&gt;http://127.0.0.1:9200/student/_search&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;query&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;range&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token property&#34;&gt;&#34;gte&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token property&#34;&gt;&#34;lte&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;35&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image127.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.9332797462817148in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image129.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.2473600174978128in&amp;quot;}&lt;/p&gt;
&lt;h5 id=&#34;模糊查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#模糊查询&#34;&gt;#&lt;/a&gt; 模糊查询&lt;/h5&gt;
&lt;p&gt;返回包含与搜索字词相似的字词的文档。&lt;/p&gt;
&lt;p&gt;编辑距离是将一个术语转换为另一个术语所需的一个字符更改的次数。这些更改可以包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;更改字符（box → fox）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;删除字符（black → lack）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;插入字符（sic → sick）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;转置两个相邻字符（act → cat）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了找到相似的术语， &lt;code&gt;fuzzy&lt;/code&gt;  查询会在指定的编辑距离内创建一组搜索词的所有可能的变体或扩展。然后查询返回每个扩展的完全匹配。通过 &lt;code&gt;fuzziness &lt;/code&gt; 修改编辑距离。一般使用默认值 &lt;code&gt;AUTO&lt;/code&gt; ，根据术语的长度生成编辑距离。&lt;/p&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 &lt;strong&gt;GET&lt;/strong&gt; 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3N0dWRlbnQvX3NlYXJjaA==&#34;&gt;http://127.0.0.1:9200/student/_search&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;query&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;fuzzy&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;title&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token property&#34;&gt;&#34;value&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;zhangsan&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image131.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.2199453193350833in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image133.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.4090266841644794in&amp;quot;}&lt;/p&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 &lt;strong&gt;GET&lt;/strong&gt; 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3N0dWRlbnQvX3NlYXJjaA==&#34;&gt;http://127.0.0.1:9200/student/_search&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;query&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;fuzzy&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;title&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token property&#34;&gt;&#34;value&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;zhangsan&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token property&#34;&gt;&#34;fuzziness&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image135.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.1100131233595802in&amp;quot;}&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image137.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.1091797900262468in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;单字段排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#单字段排序&#34;&gt;#&lt;/a&gt; 单字段排序&lt;/h5&gt;
&lt;p&gt;sort 可以让我们按照不同的字段进行排序，并且通过 order 指定排序的方式。desc 降序，asc 升序。&lt;/p&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 GET 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3N0dWRlbnQvX3NlYXJjaA==&#34;&gt;http://127.0.0.1:9200/student/_search&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;query&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;match&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;zhangsan&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;sort&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token property&#34;&gt;&#34;order&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;desc&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image139.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.1670286526684164in&amp;quot;}&lt;/p&gt;
&lt;p&gt;服务器响应结果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image141.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.2533464566929133in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;多字段排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多字段排序&#34;&gt;#&lt;/a&gt; 多字段排序&lt;/h5&gt;
&lt;p&gt;假定我们想要结合使用 age 和 _score 进行查询，并且匹配的结果首先按照年龄排序，然后按照相关性得分排序&lt;/p&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 &lt;strong&gt;GET&lt;/strong&gt; 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3N0dWRlbnQvX3NlYXJjaA==&#34;&gt;http://127.0.0.1:9200/student/_search&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;query&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;match_all&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;sort&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token property&#34;&gt;&#34;order&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;desc&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;_score&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token property&#34;&gt;&#34;order&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;desc&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image143.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.9953619860017497in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image145.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.4706933508311462in&amp;quot;}&lt;/p&gt;
&lt;h5 id=&#34;高亮查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#高亮查询&#34;&gt;#&lt;/a&gt; 高亮查询&lt;/h5&gt;
&lt;p&gt;在进行关键字搜索时，搜索出的内容中的关键字会显示不同的颜色，称之为高亮。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在百度搜索 &amp;quot;京东&amp;quot;&lt;/li&gt;
&lt;/ul&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image147.jpg&#34; class=&#34;&#34;&gt;{width=&#34;3.245833333333333in&#34;
&lt;p&gt;height=&amp;quot;2.546527777777778in&amp;quot;}&lt;/p&gt;
&lt;p&gt;Elasticsearch 可以对查询内容中的关键字部分，进行标签和样式 (高亮) 的设置。&lt;/p&gt;
&lt;p&gt;在使用 match 查询的同时，加上一个 highlight 属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;pre_tags：前置标签&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;post_tags：后置标签&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fields：需要高亮的字段&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;title：这里声明 title&lt;br /&gt;
 字段需要高亮，后面可以为这个字段设置特有配置，也可以空&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 GET 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3N0dWRlbnQvX3NlYXJjaA==&#34;&gt;http://127.0.0.1:9200/student/_search&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;query&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;match&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;zhangsan&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;highlight&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;pre_tags&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;font color=&#39;red&#39;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;post_tags&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;/font&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;fields&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image148.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.167029746281715in&amp;quot;}&lt;/p&gt;
&lt;p&gt;服务器响应结果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image150.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.17001312335958in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;分页查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分页查询&#34;&gt;#&lt;/a&gt; 分页查询&lt;/h5&gt;
&lt;p&gt;from：当前页的起始索引，默认从 0 开始。 from = (pageNum - 1) * size&lt;/p&gt;
&lt;p&gt;size：每页显示多少条&lt;/p&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 &lt;strong&gt;GET&lt;/strong&gt; 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3N0dWRlbnQvX3NlYXJjaA==&#34;&gt;http://127.0.0.1:9200/student/_search&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;query&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;match_all&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;sort&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token property&#34;&gt;&#34;order&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;desc&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;from&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;size&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image152.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.1685575240594925in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image154.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.4611100174978127in&amp;quot;}&lt;/p&gt;
&lt;h5 id=&#34;聚合查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#聚合查询&#34;&gt;#&lt;/a&gt; 聚合查询&lt;/h5&gt;
&lt;p&gt;聚合允许使用者对 es 文档进行统计分析，类似与关系型数据库中的 group by，当然还有很多其他的聚合，例如取最大值、平均值等等。&lt;/p&gt;
&lt;h6 id=&#34;对某个字段取最大值-max&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#对某个字段取最大值-max&#34;&gt;#&lt;/a&gt; 对某个字段取最大值 max&lt;/h6&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 GET 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3N0dWRlbnQvX3NlYXJjaA==&#34;&gt;http://127.0.0.1:9200/student/_search&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;aggs&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;max_age&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;max&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token property&#34;&gt;&#34;field&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;size&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image156.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.1770286526684166in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image158.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.4626377952755905in&amp;quot;}&lt;/p&gt;
&lt;h6 id=&#34;对某个字段取最大值-min&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#对某个字段取最大值-min&#34;&gt;#&lt;/a&gt; 对某个字段取最大值 min&lt;/h6&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 GET 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3N0dWRlbnQvX3NlYXJjaA==&#34;&gt;http://127.0.0.1:9200/student/_search&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;aggs&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;min_age&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;min&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token property&#34;&gt;&#34;field&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;size&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image160.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.167029746281715in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image162.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.4626367016622923in&amp;quot;}&lt;/p&gt;
&lt;h6 id=&#34;对某个字段求和&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#对某个字段求和&#34;&gt;#&lt;/a&gt; 对某个字段求和&lt;/h6&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 GET 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3N0dWRlbnQvX3NlYXJjaA==&#34;&gt;http://127.0.0.1:9200/student/_search&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;aggs&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;sum_age&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;sum&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token property&#34;&gt;&#34;field&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;size&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image164.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.1886953193350833in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image166.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.4626367016622923in&amp;quot;}&lt;/p&gt;
&lt;h6 id=&#34;对某个字段求平均值&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#对某个字段求平均值&#34;&gt;#&lt;/a&gt; 对某个字段求平均值&lt;/h6&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 GET 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3N0dWRlbnQvX3NlYXJjaA==&#34;&gt;http://127.0.0.1:9200/student/_search&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;aggs&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;avg_age&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;avg&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token property&#34;&gt;&#34;field&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;size&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image168.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.167029746281715in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image170.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.2059722222222222in&amp;quot;}&lt;/p&gt;
&lt;h6 id=&#34;对某个字段的值进行去重之后再取总数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#对某个字段的值进行去重之后再取总数&#34;&gt;#&lt;/a&gt; 对某个字段的值进行去重之后再取总数&lt;/h6&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 GET 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3N0dWRlbnQvX3NlYXJjaA==&#34;&gt;http://127.0.0.1:9200/student/_search&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;aggs&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;distinct_age&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;cardinality&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token property&#34;&gt;&#34;field&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;size&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image172.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.1770286526684166in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image174.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.0776377952755904in&amp;quot;}&lt;/p&gt;
&lt;h6 id=&#34;state-聚合&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#state-聚合&#34;&gt;#&lt;/a&gt; State 聚合&lt;/h6&gt;
&lt;p&gt;stats 聚合，对某个字段一次性返回 count，max，min，avg 和 sum 五个指标&lt;/p&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 GET 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3N0dWRlbnQvX3NlYXJjaA==&#34;&gt;http://127.0.0.1:9200/student/_search&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;aggs&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;stats_age&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;stats&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token property&#34;&gt;&#34;field&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;size&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image176.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.1570286526684166in&amp;quot;}&lt;/p&gt;
&lt;p&gt;服务器响应结果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image178.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.0033464566929133in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h6 id=&#34;桶聚合查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#桶聚合查询&#34;&gt;#&lt;/a&gt; 桶聚合查询&lt;/h6&gt;
&lt;p&gt;桶聚和相当于 sql 中的 group by 语句 terms 聚合，分组统计&lt;/p&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 GET 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3N0dWRlbnQvX3NlYXJjaA==&#34;&gt;http://127.0.0.1:9200/student/_search&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;aggs&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;age_groupby&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;terms&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token property&#34;&gt;&#34;field&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;size&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image180.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.1685564304461944in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image182.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.6794433508311462in&amp;quot;}&lt;/p&gt;
&lt;h6 id=&#34;在-terms-分组下再进行聚合&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#在-terms-分组下再进行聚合&#34;&gt;#&lt;/a&gt; 在 terms 分组下再进行聚合&lt;/h6&gt;
&lt;p&gt;在 Postman 中，向 ES 服务器发 GET 请求：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL3N0dWRlbnQvX3NlYXJjaA==&#34;&gt;http://127.0.0.1:9200/student/_search&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;aggs&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token property&#34;&gt;&#34;age_groupby&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token property&#34;&gt;&#34;terms&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token property&#34;&gt;&#34;field&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token property&#34;&gt;&#34;aggs&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token property&#34;&gt;&#34;sum_age&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                    &lt;span class=&#34;token property&#34;&gt;&#34;sum&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token property&#34;&gt;&#34;field&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token property&#34;&gt;&#34;size&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image184.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.0683464566929133in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image186.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.6670964566929134in&amp;quot;}&lt;/p&gt;
&lt;h3 id=&#34;225-java-api-操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#225-java-api-操作&#34;&gt;#&lt;/a&gt; 2.2.5 Java API 操作&lt;/h3&gt;
&lt;p&gt;Elasticsearch 软件是由 Java 语言开发的，所以也可以通过 Java API 的方式对&lt;br /&gt;
 Elasticsearch&lt;/p&gt;
&lt;p&gt;服务进行访问&lt;/p&gt;
&lt;h4 id=&#34;2251-创建-maven-项目&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2251-创建-maven-项目&#34;&gt;#&lt;/a&gt; 2.2.5.1 创建 Maven 项目&lt;/h4&gt;
&lt;p&gt;我们在 IDEA 开发工具中创建 Maven 项目 (模块也可) ES&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image188.jpg&#34; class=&#34;&#34;&gt;{width=&#34;2.8703608923884514in&#34;
&lt;p&gt;height=&amp;quot;2.090430883639545in&amp;quot;}&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption data-lang=&#34;JSON&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;lt;dependencies&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &amp;lt;dependency&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &amp;lt;groupId&gt;org.elasticsearch&amp;lt;/groupId&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &amp;lt;artifactId&gt;elasticsearch&amp;lt;/artifactId&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &amp;lt;version&gt;&lt;span class=&#34;token number&#34;&gt;7.8&lt;/span&gt;.&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&amp;lt;/version&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &amp;lt;/dependency&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &amp;lt;!-- elasticsearch 的客户端 --&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &amp;lt;dependency&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &amp;lt;groupId&gt;org.elasticsearch.client&amp;lt;/groupId&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &amp;lt;artifactId&gt;elasticsearch-rest-high-level-client&amp;lt;/artifactId&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &amp;lt;version&gt;&lt;span class=&#34;token number&#34;&gt;7.8&lt;/span&gt;.&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&amp;lt;/version&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &amp;lt;/dependency&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &amp;lt;!-- elasticsearch 依赖 &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;.x 的 log4j --&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &amp;lt;dependency&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &amp;lt;groupId&gt;org.apache.logging.log4j&amp;lt;/groupId&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &amp;lt;artifactId&gt;log4j-api&amp;lt;/artifactId&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &amp;lt;version&gt;&lt;span class=&#34;token number&#34;&gt;2.8&lt;/span&gt;.&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&amp;lt;/version&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &amp;lt;/dependency&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &amp;lt;dependency&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &amp;lt;groupId&gt;org.apache.logging.log4j&amp;lt;/groupId&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &amp;lt;artifactId&gt;log4j-core&amp;lt;/artifactId&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &amp;lt;version&gt;&lt;span class=&#34;token number&#34;&gt;2.8&lt;/span&gt;.&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&amp;lt;/version&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &amp;lt;/dependency&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &amp;lt;dependency&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &amp;lt;groupId&gt;com.fasterxml.jackson.core&amp;lt;/groupId&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &amp;lt;artifactId&gt;jackson-databind&amp;lt;/artifactId&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &amp;lt;version&gt;&lt;span class=&#34;token number&#34;&gt;2.9&lt;/span&gt;.&lt;span class=&#34;token number&#34;&gt;9&lt;/span&gt;&amp;lt;/version&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &amp;lt;/dependency&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &amp;lt;!-- junit 单元测试 --&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &amp;lt;dependency&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &amp;lt;groupId&gt;junit&amp;lt;/groupId&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &amp;lt;artifactId&gt;junit&amp;lt;/artifactId&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &amp;lt;version&gt;&lt;span class=&#34;token number&#34;&gt;4.12&lt;/span&gt;&amp;lt;/version&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &amp;lt;/dependency&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &amp;lt;/dependencies&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;2252-客户端对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2252-客户端对象&#34;&gt;#&lt;/a&gt; 2.2.5.2 客户端对象&lt;/h4&gt;
&lt;p&gt;创建 com.atguigu.es.test.Elasticsearch01_Client 类，代码中创建&lt;br /&gt;
 Elasticsearch 客户端对象&lt;/p&gt;
&lt;p&gt;因为早期版本的客户端对象已经不再推荐使用，且在未来版本中会被删除，所以这里我们采&lt;/p&gt;
&lt;p&gt;用高级 REST 客户端对象&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建客户端对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;RestHighLevelClient&lt;/span&gt; client &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RestHighLevelClient&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;RestClient&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;builder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;HttpHost&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;localhost&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;9200&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;http&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 关闭客户端连接&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image190.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.4829297900262468in&amp;quot;} 注意：&lt;strong&gt;9200&lt;/strong&gt; 端口为 Elasticsearch 的 Web&lt;br /&gt;
 通信端口，&lt;strong&gt;localhost&lt;/strong&gt; 为启动 ES 服务的主机名&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image192.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.4843044619422572in&amp;quot;}&lt;/p&gt;
&lt;h4 id=&#34;2253-索引操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2253-索引操作&#34;&gt;#&lt;/a&gt; 2.2.5.3 索引操作&lt;/h4&gt;
&lt;p&gt;ES 服务器正常启动后，可以通过 Java API 客户端对象对 ES 索引进行操作&lt;/p&gt;
&lt;h5 id=&#34;创建索引-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建索引-2&#34;&gt;#&lt;/a&gt; 创建索引&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建索引 - 请求对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;CreateIndexRequest&lt;/span&gt; request &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;CreateIndexRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 发送请求，获取响应&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;CreateIndexResponse&lt;/span&gt; response &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;indices&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;create&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;RequestOptions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;DEFAULT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;boolean&lt;/span&gt; acknowledged &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isAcknowledged&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 响应状态&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;操作状态 = &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; acknowledged&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image194.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.5676377952755907in&amp;quot;}&lt;/p&gt;
&lt;h5 id=&#34;查看索引&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查看索引&#34;&gt;#&lt;/a&gt; 查看索引&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 查询索引 - 请求对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;GetIndexRequest&lt;/span&gt; request &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;GetIndexRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;\&#34;user\&#34;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 发送请求，获取响应&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;GetIndexResponse&lt;/span&gt; response &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;indices&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;RequestOptions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;DEFAULT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                              &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;aliases:&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getAliases&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;mappings:&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getMappings&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;settings:&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getSettings&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image196.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.5261100174978128in&amp;quot;}&lt;/p&gt;
&lt;h5 id=&#34;删除索引-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#删除索引-2&#34;&gt;#&lt;/a&gt; 删除索引&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 删除索引 - 请求对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;DeleteIndexRequest&lt;/span&gt; request &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DeleteIndexRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 发送请求，获取响应&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;AcknowledgedResponse&lt;/span&gt; response &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;indices&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;delete&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;RequestOptions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;DEFAULT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 操作结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;操作结果 ： &#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isAcknowledged&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image198.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.110693350831146in&amp;quot;}&lt;/p&gt;
&lt;h4 id=&#34;2254-文档操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2254-文档操作&#34;&gt;#&lt;/a&gt; 2.2.5.4 文档操作&lt;/h4&gt;
&lt;h5 id=&#34;新增文档&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#新增文档&#34;&gt;#&lt;/a&gt; 新增文档&lt;/h5&gt;
&lt;h6 id=&#34;创建数据模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建数据模型&#34;&gt;#&lt;/a&gt; 创建数据模型&lt;/h6&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Integer&lt;/span&gt; age&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; sex&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;setName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; name&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Integer&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getAge&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; age&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;setAge&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Integer&lt;/span&gt; age&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;age &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; age&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;getSex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; sex&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;setSex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; sex&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sex &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; sex&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h6 id=&#34;创建数据添加到文档中&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建数据添加到文档中&#34;&gt;#&lt;/a&gt; 创建数据，添加到文档中&lt;/h6&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 新增文档 - 请求对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;IndexRequest&lt;/span&gt; request &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;IndexRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 设置索引及唯一性标识&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;1001&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建数据对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;User&lt;/span&gt; user &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;zhangsan&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setAge&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;user&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setSex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;男&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;ObjectMapper&lt;/span&gt; objectMapper &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;ObjectMapper&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; productJson &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; objectMapper&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;writeValueAsString&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;user&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 添加文档数据，数据格式为 JSON 格式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;productJson&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;XContentType&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 客户端发送请求，获取响应对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;IndexResponse&lt;/span&gt; response &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RequestOptions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;DEFAULT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;////3. 打印结果信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;_index:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getIndex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;_id:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;_result:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getResult&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image200.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.4623600174978129in&amp;quot;}&lt;/p&gt;
&lt;h5 id=&#34;修改文档-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#修改文档-2&#34;&gt;#&lt;/a&gt; 修改文档&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 修改文档 - 请求对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;UpdateRequest&lt;/span&gt; request &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;UpdateRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 配置修改参数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;1001&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 设置请求体，对数据进行修改&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;doc&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;XContentType&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;sex&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;女&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 客户端发送请求，获取响应对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;UpdateResponse&lt;/span&gt; response &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;update&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RequestOptions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;DEFAULT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;_index:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getIndex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;_id:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;_result:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getResult&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;执行结果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image202.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.1291797900262468in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;查询文档&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查询文档&#34;&gt;#&lt;/a&gt; 查询文档&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//1. 创建请求对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;GetRequest&lt;/span&gt; request &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;GetRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;1001&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//2. 客户端发送请求，获取响应对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;GetResponse&lt;/span&gt; response &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RequestOptions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;DEFAULT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;////3. 打印结果信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;_index:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getIndex&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;_type:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getType&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;_id:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;source:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getSourceAsString&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image204.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.5059700349956255in&amp;quot;}&lt;/p&gt;
&lt;h5 id=&#34;删除文档-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#删除文档-2&#34;&gt;#&lt;/a&gt; 删除文档&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建请求对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;DeleteRequest&lt;/span&gt; request &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DeleteRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;1&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 客户端发送请求，获取响应对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;DeleteResponse&lt;/span&gt; response &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;delete&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RequestOptions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;DEFAULT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 打印信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image206.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.4961100174978128in&amp;quot;}&lt;/p&gt;
&lt;h5 id=&#34;批量操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#批量操作&#34;&gt;#&lt;/a&gt; 批量操作&lt;/h5&gt;
&lt;h6 id=&#34;批量新增&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#批量新增&#34;&gt;#&lt;/a&gt; 批量新增&lt;/h6&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建批量新增请求对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;BulkRequest&lt;/span&gt; request &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;BulkRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token class-name&#34;&gt;IndexRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;1001&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;XContentType&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                                           &lt;span class=&#34;token string&#34;&gt;&#34;zhangsan&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;IndexRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;1002&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;XContentType&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                                               &lt;span class=&#34;token string&#34;&gt;&#34;lisi&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token class-name&#34;&gt;IndexRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;1003&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;XContentType&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;JSON&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                                           &lt;span class=&#34;token string&#34;&gt;&#34;wangwu&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 客户端发送请求，获取响应对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;BulkResponse&lt;/span&gt; responses &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;bulk&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RequestOptions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;DEFAULT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 打印结果信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;took:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; responses&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTook&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;items:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; responses&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getItems&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;执行结果为：&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image208.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.7732786526684166in&#34;
&lt;p&gt;height=&amp;quot;1.9161242344706912in&amp;quot;}&lt;/p&gt;
&lt;h6 id=&#34;批量删除&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#批量删除&#34;&gt;#&lt;/a&gt; 批量删除&lt;/h6&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建批量删除请求对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;BulkRequest&lt;/span&gt; request &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;BulkRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DeleteRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;1001&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DeleteRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;1002&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;DeleteRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;user&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;1003&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 客户端发送请求，获取响应对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;BulkResponse&lt;/span&gt; responses &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;bulk&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RequestOptions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;DEFAULT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 打印结果信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;took:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; responses&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTook&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;items:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; responses&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getItems&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image210.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.834388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.6724584426946631in&amp;quot;}&lt;/p&gt;
&lt;h4 id=&#34;2255-高级查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2255-高级查询&#34;&gt;#&lt;/a&gt; 2.2.5.5 高级查询&lt;/h4&gt;
&lt;h5 id=&#34;请求体查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#请求体查询&#34;&gt;#&lt;/a&gt; 请求体查询&lt;/h5&gt;
&lt;h6 id=&#34;查询所有索引数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查询所有索引数据&#34;&gt;#&lt;/a&gt; 查询所有索引数据&lt;/h6&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建搜索请求对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchRequest&lt;/span&gt; request &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SearchRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;indices&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;student&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 构建查询的请求体&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchSourceBuilder&lt;/span&gt; sourceBuilder &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SearchSourceBuilder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 查询所有数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;QueryBuilders&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;matchAllQuery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchResponse&lt;/span&gt; response &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RequestOptions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;DEFAULT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 查询匹配&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchHits&lt;/span&gt; hits &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getHits&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;took:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTook&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;timeout:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isTimedOut&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;total:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; hits&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTotalHits&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;MaxScore:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; hits&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getMaxScore&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;hits========&gt;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchHit&lt;/span&gt; hit &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; hits&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 输出每条查询的结果信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;hit&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getSourceAsString&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;&amp;lt;========&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image212.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.6494586614173228in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h6 id=&#34;term-查询查询条件为关键字&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#term-查询查询条件为关键字&#34;&gt;#&lt;/a&gt; term 查询，查询条件为关键字&lt;/h6&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建搜索请求对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchRequest&lt;/span&gt; request &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SearchRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;indices&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;student&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 构建查询的请求体&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchSourceBuilder&lt;/span&gt; sourceBuilder &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SearchSourceBuilder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;QueryBuilders&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;termQuery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;30&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchResponse&lt;/span&gt; response &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RequestOptions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;DEFAULT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 查询匹配&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchHits&lt;/span&gt; hits &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getHits&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;took:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTook&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;timeout:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isTimedOut&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;total:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; hits&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTotalHits&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;MaxScore:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; hits&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getMaxScore&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;hits========&gt;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchHit&lt;/span&gt; hit &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; hits&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 输出每条查询的结果信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;hit&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getSourceAsString&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;&amp;lt;========&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image214.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.7070964566929134in&amp;quot;}&lt;/p&gt;
&lt;h6 id=&#34;分页查询-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分页查询-2&#34;&gt;#&lt;/a&gt; 分页查询&lt;/h6&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建搜索请求对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchRequest&lt;/span&gt; request &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SearchRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;indices&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;student&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 构建查询的请求体&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchSourceBuilder&lt;/span&gt; sourceBuilder &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SearchSourceBuilder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;QueryBuilders&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;matchAllQuery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 分页查询&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 当前页其实索引 (第一条数据的顺序号)，from&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 每页显示多少条 size&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchResponse&lt;/span&gt; response &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RequestOptions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;DEFAULT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 查询匹配&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchHits&lt;/span&gt; hits &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getHits&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;took:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTook&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;timeout:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isTimedOut&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;total:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; hits&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTotalHits&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;MaxScore:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; hits&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getMaxScore&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;hits========&gt;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchHit&lt;/span&gt; hit &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; hits&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 输出每条查询的结果信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;hit&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getSourceAsString&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;&amp;lt;========&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image216.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.2752909011373579in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h6 id=&#34;数据排序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据排序&#34;&gt;#&lt;/a&gt; 数据排序&lt;/h6&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 构建查询的请求体&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchSourceBuilder&lt;/span&gt; sourceBuilder &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SearchSourceBuilder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;QueryBuilders&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;matchAllQuery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 排序&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SortOrder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;ASC&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchResponse&lt;/span&gt; response &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RequestOptions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;DEFAULT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 查询匹配&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchHits&lt;/span&gt; hits &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getHits&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;took:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTook&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;timeout:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isTimedOut&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;total:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; hits&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTotalHits&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;MaxScore:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; hits&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getMaxScore&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;hits========&gt;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchHit&lt;/span&gt; hit &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; hits&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 输出每条查询的结果信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;hit&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getSourceAsString&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;&amp;lt;========&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image218.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.4740409011373579in&amp;quot;}&lt;/p&gt;
&lt;h6 id=&#34;过滤字段&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#过滤字段&#34;&gt;#&lt;/a&gt; 过滤字段&lt;/h6&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建搜索请求对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchRequest&lt;/span&gt; request &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SearchRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;indices&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;student&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 构建查询的请求体&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchSourceBuilder&lt;/span&gt; sourceBuilder &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SearchSourceBuilder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;QueryBuilders&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;matchAllQuery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 查询字段过滤&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; excludes &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; includes &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fetchSource&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;includes&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; excludes&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchResponse&lt;/span&gt; response &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RequestOptions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;DEFAULT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 查询匹配&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchHits&lt;/span&gt; hits &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getHits&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;took:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTook&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;timeout:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isTimedOut&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;total:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; hits&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTotalHits&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;MaxScore:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; hits&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getMaxScore&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;hits========&gt;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchHit&lt;/span&gt; hit &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; hits&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 输出每条查询的结果信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;hit&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getSourceAsString&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;&amp;lt;========&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image220.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.7180686789151356in&amp;quot;}&lt;/p&gt;
&lt;h6 id=&#34;bool-查询&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bool-查询&#34;&gt;#&lt;/a&gt; Bool 查询&lt;/h6&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建搜索请求对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchRequest&lt;/span&gt; request &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SearchRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;	&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;indices&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;student&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 构建查询的请求体&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchSourceBuilder&lt;/span&gt; sourceBuilder &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SearchSourceBuilder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;BoolQueryBuilder&lt;/span&gt; boolQueryBuilder &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;QueryBuilders&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;boolQuery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 必须包含&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;boolQueryBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;must&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;QueryBuilders&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;matchQuery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;30&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 一定不含&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;boolQueryBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mustNot&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;QueryBuilders&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;matchQuery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;zhangsan&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 可能包含&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;boolQueryBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;should&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;QueryBuilders&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;matchQuery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;sex&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;男&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;boolQueryBuilder&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchResponse&lt;/span&gt; response &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RequestOptions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;DEFAULT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 查询匹配&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchHits&lt;/span&gt; hits &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getHits&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;took:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTook&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;timeout:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isTimedOut&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;total:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; hits&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTotalHits&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;MaxScore:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; hits&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getMaxScore&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;hits========&gt;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchHit&lt;/span&gt; hit &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; hits&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 输出每条查询的结果信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;hit&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getSourceAsString&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;&amp;lt;========&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image222.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.1711242344706911in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h6 id=&#34;范围查询-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#范围查询-2&#34;&gt;#&lt;/a&gt; 范围查询&lt;/h6&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建搜索请求对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchRequest&lt;/span&gt; request &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SearchRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;indices&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;student&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 构建查询的请求体&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchSourceBuilder&lt;/span&gt; sourceBuilder &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SearchSourceBuilder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;RangeQueryBuilder&lt;/span&gt; rangeQuery &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;QueryBuilders&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;rangeQuery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 大于等于&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;rangeQuery&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;gte&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;30&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 小于等于&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;rangeQuery&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;lte&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;40&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;rangeQuery&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchResponse&lt;/span&gt; response &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RequestOptions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;DEFAULT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 查询匹配&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchHits&lt;/span&gt; hits &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getHits&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;took:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTook&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;timeout:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isTimedOut&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;total:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; hits&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTotalHits&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;MaxScore:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; hits&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getMaxScore&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;hits========&gt;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchHit&lt;/span&gt; hit &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; hits&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 输出每条查询的结果信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;hit&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getSourceAsString&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;&amp;lt;========&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image224.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.3666130796150482in&amp;quot;}&lt;/p&gt;
&lt;h6 id=&#34;模糊查询-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#模糊查询-2&#34;&gt;#&lt;/a&gt; 模糊查询&lt;/h6&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 创建搜索请求对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchRequest&lt;/span&gt; request &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SearchRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;indices&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;student&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 构建查询的请求体&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchSourceBuilder&lt;/span&gt; sourceBuilder &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SearchSourceBuilder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;QueryBuilders&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fuzzyQuery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;zhangsan&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;fuzziness&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;Fu&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                                                          zziness&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;ONE&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchResponse&lt;/span&gt; response &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RequestOptions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;DEFAULT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 查询匹配&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchHits&lt;/span&gt; hits &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getHits&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;took:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTook&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;timeout:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isTimedOut&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;total:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; hits&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTotalHits&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;MaxScore:&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; hits&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getMaxScore&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;hits========&gt;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchHit&lt;/span&gt; hit &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; hits&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 输出每条查询的结果信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;hit&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getSourceAsString&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;&amp;lt;========&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image226.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.421402012248469in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;高亮查询-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#高亮查询-2&#34;&gt;#&lt;/a&gt; 高亮查询&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 高亮查询&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchRequest&lt;/span&gt; request &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SearchRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;indices&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;student&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//2. 创建查询请求体构建器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchSourceBuilder&lt;/span&gt; sourceBuilder &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SearchSourceBuilder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 构建查询方式：高亮查询&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;TermsQueryBuilder&lt;/span&gt; termsQueryBuilder &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;QueryBuilders&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;termsQuery&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;zhangsan&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 设置查询方式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;termsQueryBuilder&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 构建高亮字段&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;HighlightBuilder&lt;/span&gt; highlightBuilder &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;HighlightBuilder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;highlightBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;preTags&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;font color=&#39;red&#39;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 设置标签前缀&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;highlightBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;postTags&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;/font&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 设置标签后缀&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;highlightBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;name&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 设置高亮字段&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 设置高亮构建对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;highlighter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;highlightBuilder&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 设置请求体&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//3. 客户端发送请求，获取响应对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchResponse&lt;/span&gt; response &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RequestOptions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;DEFAULT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//4. 打印响应结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchHits&lt;/span&gt; hits &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getHits&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;took::&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTook&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;time_out::&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;isTimedOut&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;total::&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;hits&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getTotalHits&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;max_score::&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt;hits&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getMaxScore&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;hits::::&gt;&gt;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchHit&lt;/span&gt; hit &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; hits&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt; sourceAsString &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; hit&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getSourceAsString&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sourceAsString&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 打印高亮结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;Map&lt;/span&gt;&lt;span class=&#34;token generics&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;HighlightField&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt; highlightFields &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; hit&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getHighlightFields&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;highlightFields&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;&amp;lt;&amp;lt;::::&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image228.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.6369575678040245in&amp;quot;}&lt;/p&gt;
&lt;h5 id=&#34;聚合查询-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#聚合查询-2&#34;&gt;#&lt;/a&gt; 聚合查询&lt;/h5&gt;
&lt;h6 id=&#34;最大年龄&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#最大年龄&#34;&gt;#&lt;/a&gt; 最大年龄&lt;/h6&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 高亮查询&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchRequest&lt;/span&gt; request &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SearchRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;indices&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;student&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchSourceBuilder&lt;/span&gt; sourceBuilder &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SearchSourceBuilder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;aggregation&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;AggregationBuilders&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;maxAge&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;age&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 设置请求体&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//3. 客户端发送请求，获取响应对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchResponse&lt;/span&gt; response &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RequestOptions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;DEFAULT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//4. 打印响应结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchHits&lt;/span&gt; hits &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getHits&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;response&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;img data-src=&#34;/Distribution/Elasticsearch/image230.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.47376312335958in&amp;quot;}&lt;/p&gt;
&lt;h6 id=&#34;分组统计&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分组统计&#34;&gt;#&lt;/a&gt; 分组统计&lt;/h6&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;figcaption data-lang=&#34;java&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 高亮查询&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchRequest&lt;/span&gt; request &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SearchRequest&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;indices&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;student&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchSourceBuilder&lt;/span&gt; sourceBuilder &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;SearchSourceBuilder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;aggregation&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;AggregationBuilders&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;terms&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;age_groupby&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&#34;ag&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;e&#34;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 设置请求体&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sourceBuilder&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//3. 客户端发送请求，获取响应对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchResponse&lt;/span&gt; response &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;RequestOptions&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;DEFAULT&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//4. 打印响应结果&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;SearchHits&lt;/span&gt; hits &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; response&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getHits&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;response&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image232.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.4211242344706911in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;第3章-elasticsearch-环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第3章-elasticsearch-环境&#34;&gt;#&lt;/a&gt; 第 3 章 Elasticsearch 环境&lt;/h1&gt;
&lt;h2 id=&#34;31-相关概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#31-相关概念&#34;&gt;#&lt;/a&gt; 3.1 相关概念&lt;/h2&gt;
&lt;h3 id=&#34;311-单机-集群&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#311-单机-集群&#34;&gt;#&lt;/a&gt; 3.1.1 单机 &amp;amp; &lt;sup&gt;集群&lt;/sup&gt;&lt;/h3&gt;
&lt;p&gt;单台 Elasticsearch&lt;br /&gt;
 服务器提供服务，往往都有最大的负载能力，超过这个阈值，服务器性能就会大大降低甚至不可用，所以生产环境中，一般都是运行在指定服务器集群中。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;除了负载能力，单点服务器也存在其他问题：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;单台机器存储容量有限&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;单服务器容易出现单点故障，无法实现高可用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;单服务的并发处理能力有限配置服务器集群时，集群中节点数量没有限制，大于等于&lt;br /&gt;
 2&lt;br /&gt;
 个节点就可以看做是集群了。一般出于高性能及高可用方面来考虑集群中节点数量都是&lt;br /&gt;
 3 个以上。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;312-集群-cluster&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#312-集群-cluster&#34;&gt;#&lt;/a&gt; 3.1.2 集群 Cluster&lt;/h3&gt;
&lt;p&gt;一个集群就是由一个或多个服务器节点组织在一起，共同持有整个的数据，并一起提供索引和搜索功能。一个&lt;br /&gt;
 Elasticsearch&lt;br /&gt;
 集群有一个唯一的名字标识，这个名字默认就是 &amp;quot;elasticsearch&amp;quot;。这个名字是重要的，因为一个节点只能通过指定某个集群的名字，来加入这个集群。&lt;/p&gt;
&lt;h3 id=&#34;313-节点-node&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#313-节点-node&#34;&gt;#&lt;/a&gt; 3.1.3 节点 Node&lt;/h3&gt;
&lt;p&gt;集群中包含很多服务器，一个节点就是其中的一个服务器。作为集群的一部分，它存储数据，参与集群的索引和搜索功能。&lt;/p&gt;
&lt;p&gt;一个节点也是由一个名字来标识的，默认情况下，这个名字是一个随机的漫威漫画角色的名字，这个名字会在启动的时候赋予节点。这个名字对于管理工作来说挺重要的，因为在这个管理过程中，你会去确定网络中的哪些服务器对应于&lt;br /&gt;
 Elasticsearch 集群中的哪些节点。&lt;/p&gt;
&lt;p&gt;一个节点可以通过配置集群名称的方式来加入一个指定的集群。默认情况下，每个节点都会被安排加入到一个叫做 &amp;quot;elasticsearch&amp;quot; 的集群中，这意味着，如果你在你的网络中启动了若干个节点，并假定它们能够相互发现彼此，它们将会自动地形成并加入到一个叫做&lt;/p&gt;
&lt;p&gt;&amp;quot;elasticsearch&amp;quot; 的集群中。在一个集群里，只要你想，可以拥有任意多个节点。而且，如果当前你的网络中没有运&lt;/p&gt;
&lt;p&gt;行任何 Elasticsearch&lt;br /&gt;
 节点，这时启动一个节点，会默认创建并加入一个叫做 &amp;quot;elasticsearch&amp;quot; 的&lt;/p&gt;
&lt;h2 id=&#34;集群-32-windows-集群&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#集群-32-windows-集群&#34;&gt;#&lt;/a&gt; 集群。 3.2 Windows 集群&lt;/h2&gt;
&lt;h3 id=&#34;321-部署集群&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#321-部署集群&#34;&gt;#&lt;/a&gt; 3.2.1 部署集群&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;创建 elasticsearch-cluster 文件夹，在内部复制三个 elasticsearch 服务&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image234.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;0.9618186789151356in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;修改集群文件目录中每个节点的 config/elasticsearch.yml 配置文件&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;node-1001 节点&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| #节点 1 的配置信息：                                                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #集群名称，节点之间要保持一致                                       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NsdXN0ZXIubmFtZQ==&#34;&gt;cluster.name&lt;/span&gt;: my-elasticsearch                                       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #节点名称，集群内要唯一                                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL25vZGUubmFtZQ==&#34;&gt;node.name&lt;/span&gt;: node-1001 node.master: true node.data: true               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #ip 地址                                                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| network.host: localhost                                              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #http 端口                                                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| http.port: 1001                                                      |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #tcp 监听端口                                                        |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| transport.tcp.port: 9301                                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #discovery.seed_hosts: [&amp;quot;localhost:9301&amp;quot;,                        |&lt;br /&gt;
| &amp;quot;localhost:9302&amp;quot;,&amp;quot;localhost:9303&amp;quot;]                              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #discovery.zen.fd.ping_timeout: 1m                                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #discovery.zen.fd.ping_retries: 5                                   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #集群内的可以被选为主节点的节点列表                                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #cluster.initial_master_nodes: [&amp;quot;node-1&amp;quot;,                        |&lt;br /&gt;
| &amp;quot;node-2&amp;quot;,&amp;quot;node-3&amp;quot;]                                              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #跨域配置                                                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #action.destructive_requires_name: true http.cors.enabled: true     |&lt;br /&gt;
| http.cors.allow-origin: &amp;quot;*&amp;quot;                                       |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;node-1002 节点&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| #节点 2 的配置信息：                                                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #集群名称，节点之间要保持一致                                       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NsdXN0ZXIubmFtZQ==&#34;&gt;cluster.name&lt;/span&gt;: my-elasticsearch                                       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #节点名称，集群内要唯一                                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL25vZGUubmFtZQ==&#34;&gt;node.name&lt;/span&gt;: node-1002 node.master: true node.data: true               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #ip 地址                                                             |&lt;br /&gt;
+======================================================================+&lt;br /&gt;
| network.host: localhost                                              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #http 端口                                                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| http.port: 1002                                                      |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #tcp 监听端口                                                        |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| transport.tcp.port: 9302                                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| discovery.seed_hosts: [&amp;quot;localhost:9301&amp;quot;]                         |&lt;br /&gt;
| discovery.zen.fd.ping_timeout: 1m discovery.zen.fd.ping_retries: 5   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #集群内的可以被选为主节点的节点列表                                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #cluster.initial_master_nodes: [&amp;quot;node-1&amp;quot;,                        |&lt;br /&gt;
| &amp;quot;node-2&amp;quot;,&amp;quot;node-3&amp;quot;]                                              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #跨域配置                                                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #action.destructive_requires_name: true http.cors.enabled: true     |&lt;br /&gt;
| http.cors.allow-origin: &amp;quot;*&amp;quot;                                       |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;node-1003 节点&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| #节点 3 的配置信息：                                                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #集群名称，节点之间要保持一致                                       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NsdXN0ZXIubmFtZQ==&#34;&gt;cluster.name&lt;/span&gt;: my-elasticsearch                                       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #节点名称，集群内要唯一                                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL25vZGUubmFtZQ==&#34;&gt;node.name&lt;/span&gt;: node-1003 node.master: true node.data: true               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #ip 地址                                                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| network.host: localhost                                              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #http 端口                                                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| http.port: 1003                                                      |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #tcp 监听端口                                                        |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| transport.tcp.port: 9303                                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #候选主节点的地址，在开启服务后可以被选为主节点                     |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| discovery.seed_hosts: [&amp;quot;localhost:9301&amp;quot;, &amp;quot;localhost:9302&amp;quot;]     |&lt;br /&gt;
| discovery.zen.fd.ping_timeout: 1m discovery.zen.fd.ping_retries: 5   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #集群内的可以被选为主节点的节点列表                                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #cluster.initial_master_nodes: [&amp;quot;node-1&amp;quot;,                        |&lt;br /&gt;
| &amp;quot;node-2&amp;quot;,&amp;quot;node-3&amp;quot;]                                              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #跨域配置                                                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #action.destructive_requires_name: true http.cors.enabled: true     |&lt;br /&gt;
| http.cors.allow-origin: &amp;quot;*&amp;quot;                                       |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;h3 id=&#34;322-启动集群&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#322-启动集群&#34;&gt;#&lt;/a&gt; 3.2.2 启动集群&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;启动前先删除每个节点中的 data 目录中所有内容（如果存在）&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image236.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.759028871391076in&#34;
&lt;p&gt;height=&amp;quot;1.026402012248469in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;分别双击执行 bin/elasticsearch.bat,&lt;br /&gt;
 启动节点服务器，启动后，会自动加入指定名称的&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;集群&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image242.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.444444444444445in&#34;
&lt;p&gt;height=&amp;quot;0.7602909011373579in&amp;quot;}&lt;/p&gt;
&lt;h3 id=&#34;323-测试集群&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#323-测试集群&#34;&gt;#&lt;/a&gt; 3.2.3 测试集群&lt;/h3&gt;
&lt;p&gt;查看集群状态&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image248.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;3.5234416010498686in&amp;quot;}&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image252.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;2.755847550306212in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt; node-1003 节点&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image256.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.770138888888889in&#34;
&lt;p&gt;height=&amp;quot;0.3340288713910761in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image257.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;4.259597550306212in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image261.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.7182086614173229in&amp;quot;}&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image265.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;2.7569575678040246in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;33-linux-单机&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#33-linux-单机&#34;&gt;#&lt;/a&gt; 3.3 Linux 单机&lt;/h2&gt;
&lt;h3 id=&#34;331-软件下载&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#331-软件下载&#34;&gt;#&lt;/a&gt; 3.3.1 软件下载&lt;/h3&gt;
&lt;p&gt;软件下载地址：&lt;span&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9jbi9kb3dubG9hZHMvcGFzdC1yZWxlYXNlcy9lbGFzdGljc2VhcmNoLTctOC0w&#34;&gt;https://www.elastic.co/cn/downloads/past-releases/elasticsearch-7-8-0&lt;/span&gt;&lt;/span&gt;[&lt;span class=&#34;ul&#34;&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9jbi9kb3dubG9hZHMvcGFzdC1yZWxlYXNlcy9lbGFzdGljc2VhcmNoLTctOC0w&#34;&gt;https://www.elastic.co/cn/downloads/past-releases/elasticsearch-7-8-0&lt;/span&gt;&lt;/span&gt;](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9jbi9kb3dubG9hZHMvcGFzdC1yZWxlYXNlcy9lbGFzdGljc2VhcmNoLTctOC0w&#34;&gt;https://www.elastic.co/cn/downloads/past-releases/elasticsearch-7-8-0&lt;/span&gt;)&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image269.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.7736384514435695in&amp;quot;}&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1)&lt;/strong&gt; 解压软件将下载的软件解压缩&lt;/p&gt;
&lt;p&gt;# 解压缩&lt;/p&gt;
&lt;p&gt;tar -zxvf elasticsearch-7.8.0-linux-x86_64.tar.gz -C /opt/module&lt;/p&gt;
&lt;p&gt;# 改名&lt;/p&gt;
&lt;p&gt;mv elasticsearch-7.8.0 es&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;创建用户因为安全问题，Elasticsearch 不允许 root&lt;br /&gt;
 用户直接运行，所以要创建新用户，在 root 用户中创建新用户&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| useradd es #新增 es 用户 passwd es #为 es 用户设置密码                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| userdel -r es #如果错了，可以删除再加 chown -R es:es /opt/module/es |&lt;br /&gt;
| #文件夹所有者                                                       |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;修改配置文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;修改 /opt/module/es/config/elasticsearch.yml 文件&lt;/p&gt;
&lt;p&gt;# 加入如下配置&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NsdXN0ZXIubmFtZQ==&#34;&gt;cluster.name&lt;/span&gt;: elasticsearch &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL25vZGUubmFtZQ==&#34;&gt;node.name&lt;/span&gt;: node-1 network.host: 0.0.0.0&lt;br /&gt;
http.port: 9200&lt;/p&gt;
&lt;p&gt;cluster.initial_master_nodes: [&amp;quot;node-1&amp;quot;]&lt;/p&gt;
&lt;p&gt;修改 /etc/security/limits.conf&lt;/p&gt;
&lt;p&gt;+---------------------------------------------------------------+&lt;br /&gt;
| # 在文件末尾中增加下面内容 # 每个进程可以打开的文件数的限制 |&lt;br /&gt;
|                                                               |&lt;br /&gt;
| es soft nofile 65536 es hard nofile 65536                     |&lt;br /&gt;
+---------------------------------------------------------------+&lt;/p&gt;
&lt;p&gt;修改 /etc/security/limits.d/20-nproc.conf&lt;/p&gt;
&lt;p&gt;+---------------------------------------------------------------+&lt;br /&gt;
| # 在文件末尾中增加下面内容 # 每个进程可以打开的文件数的限制 |&lt;br /&gt;
|                                                               |&lt;br /&gt;
| es soft nofile 65536 es hard nofile 65536                     |&lt;br /&gt;
+---------------------------------------------------------------+&lt;/p&gt;
&lt;p&gt;# 操作系统级别对每个用户创建的进程数的限制&lt;/p&gt;
&lt;p&gt;* hard nproc 4096&lt;/p&gt;
&lt;p&gt;# 注：* 带表 Linux 所有用户名称&lt;/p&gt;
&lt;p&gt;修改 /etc/sysctl.conf&lt;/p&gt;
&lt;p&gt;# 在文件中增加下面内容&lt;/p&gt;
&lt;p&gt;# 一个进程可以拥有的 VMA (虚拟内存区域) 的数量，默认值为 65536&lt;br /&gt;
vm.max_map_count=655360&lt;/p&gt;
&lt;p&gt;重新加载&lt;/p&gt;
&lt;p&gt;sysctl -p&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.3.3&lt;/strong&gt; 启动软件使用 ES 用户启动&lt;/p&gt;
&lt;p&gt;cd /opt/module/es/&lt;/p&gt;
&lt;p&gt;#启动&lt;/p&gt;
&lt;p&gt;bin/elasticsearch&lt;/p&gt;
&lt;p&gt;#后台启动&lt;/p&gt;
&lt;p&gt;，如果文件所属用户不匹配，会发生错误，需要重新进行修改用户和用户组&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image271.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;3.1739031058617675in&amp;quot;}&lt;/p&gt;
&lt;p&gt;#暂时关闭防火墙&lt;/p&gt;
&lt;p&gt;systemctl stop firewalld&lt;/p&gt;
&lt;p&gt;#永久关闭防火墙&lt;/p&gt;
&lt;p&gt;systemctl enable firewalld.service&lt;br /&gt;
# 打开放货抢永久性生效，重启后不会复原 systemctl disable&lt;br /&gt;
firewalld.service #关闭防火墙，永久性生效，重启后不会复原&lt;/p&gt;
&lt;h3 id=&#34;333-测试软件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#333-测试软件&#34;&gt;#&lt;/a&gt; 3.3.3 测试软件&lt;/h3&gt;
&lt;p&gt;浏览器中输入地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xpbnV4MTo5MjAwLw==&#34;&gt;http://linux1:9200/&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image273.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.7683694225721784in&amp;quot;}&lt;/p&gt;
&lt;h3 id=&#34;341-软件下载&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#341-软件下载&#34;&gt;#&lt;/a&gt; 3.4.1 软件下载&lt;/h3&gt;
&lt;p&gt;软件下载地址：&lt;span&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9jbi9kb3dubG9hZHMvcGFzdC1yZWxlYXNlcy9lbGFzdGljc2VhcmNoLTctOC0w&#34;&gt;https://www.elastic.co/cn/downloads/past-releases/elasticsearch-7-8-0&lt;/span&gt;&lt;/span&gt;[&lt;span class=&#34;ul&#34;&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9jbi9kb3dubG9hZHMvcGFzdC1yZWxlYXNlcy9lbGFzdGljc2VhcmNoLTctOC0w&#34;&gt;https://www.elastic.co/cn/downloads/past-releases/elasticsearch-7-8-0&lt;/span&gt;&lt;/span&gt;](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9jbi9kb3dubG9hZHMvcGFzdC1yZWxlYXNlcy9lbGFzdGljc2VhcmNoLTctOC0w&#34;&gt;https://www.elastic.co/cn/downloads/past-releases/elasticsearch-7-8-0&lt;/span&gt;)&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image269.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.7736384514435695in&amp;quot;}&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1)&lt;/strong&gt; 解压软件将下载的软件解压缩&lt;/p&gt;
&lt;p&gt;# 解压缩&lt;/p&gt;
&lt;p&gt;tar -zxvf elasticsearch-7.8.0-linux-x86_64.tar.gz -C /opt/module&lt;/p&gt;
&lt;p&gt;# 改名&lt;/p&gt;
&lt;p&gt;mv elasticsearch-7.8.0 es-cluster&lt;/p&gt;
&lt;p&gt;将软件分发到其他节点：linux2, linux3&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;创建用户因为安全问题，Elasticsearch 不允许 root&lt;br /&gt;
 用户直接运行，所以要在每个节点中创建新用户，在 root 用户中创建新用户&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| useradd es #新增 es 用户 passwd es #为 es 用户设置密码                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| userdel -r es #如果错了，可以删除再加 chown -R es:es                |&lt;br /&gt;
| /opt/module/es-cluster #文件夹所有者                                |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;修改配置文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;修改 /opt/module/es/config/elasticsearch.yml 文件，分发文件&lt;/p&gt;
&lt;p&gt;# 加入如下配置&lt;/p&gt;
&lt;p&gt;#集群名称&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NsdXN0ZXIubmFtZQ==&#34;&gt;cluster.name&lt;/span&gt;: cluster-es&lt;/p&gt;
&lt;p&gt;#节点名称，每个节点的名称不能重复 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL25vZGUubmFtZQ==&#34;&gt;node.name&lt;/span&gt;: node-1&lt;/p&gt;
&lt;p&gt;#ip 地址，每个节点的地址不能重复&lt;/p&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| network.host: linux1                                                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #是不是有资格主节点                                                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| node.master: true node.data: true http.port: 9200                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # head 插件需要这打开这两个配置 http.cors.allow-origin: &amp;quot;*&amp;quot;      |&lt;br /&gt;
| http.cors.enabled: true http.max_content_length: 200mb               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #es7.x 之后新增的配置，初始化一个新的集群时需要此配置来选举 master   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| cluster.initial_master_nodes: [&amp;quot;node-1&amp;quot;]                         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #es7.x 之后新增的配置，节点发现                                     |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| discovery.seed_hosts:                                                |&lt;br /&gt;
| [&amp;quot;linux1:9300&amp;quot;,&amp;quot;linux2:9300&amp;quot;,&amp;quot;linux3:9300&amp;quot;]                  |&lt;br /&gt;
| gateway.recover_after_nodes: 2 network.tcp.keep_alive: true          |&lt;br /&gt;
| network.tcp.no_delay: true                                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| transport.tcp.compress: true                                         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #集群内同时启动的数据任务个数，默认是 2 个                            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| cluster.routing.allocation.cluster_concurrent_rebalance: 16          |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #添加或删除节点及负载均衡时并发恢复的线程个数，默认 4 个              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| cluster.routing.allocation.node_concurrent_recoveries: 16            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #初始化数据恢复时，并发恢复线程的个数，默认 4 个                      |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| cluster.routing.allocation.node_initial_primaries_recoveries: 16     |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;p&gt;修改 /etc/security/limits.conf ，分发文件&lt;/p&gt;
&lt;p&gt;# 在文件末尾中增加下面内容&lt;/p&gt;
&lt;p&gt;es soft nofile 65536 es hard nofile 65536&lt;/p&gt;
&lt;p&gt;修改 /etc/security/limits.d/20-nproc.conf，分发文件&lt;/p&gt;
&lt;p&gt;+-------------------------------------------+&lt;br /&gt;
| # 在文件末尾中增加下面内容               |&lt;br /&gt;
|                                           |&lt;br /&gt;
| es soft nofile 65536 es hard nofile 65536 |&lt;br /&gt;
|                                           |&lt;br /&gt;
| * hard nproc 4096                        |&lt;br /&gt;
|                                           |&lt;br /&gt;
| # 注：* 带表 Linux 所有用户名称           |&lt;br /&gt;
+-------------------------------------------+&lt;/p&gt;
&lt;p&gt;修改 /etc/sysctl.conf&lt;/p&gt;
&lt;p&gt;# 在文件中增加下面内容&lt;/p&gt;
&lt;p&gt;vm.max_map_count=655360&lt;/p&gt;
&lt;p&gt;重新加载&lt;/p&gt;
&lt;p&gt;sysctl -p&lt;/p&gt;
&lt;h3 id=&#34;343-启动软件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#343-启动软件&#34;&gt;#&lt;/a&gt; 3.4.3 启动软件&lt;/h3&gt;
&lt;p&gt;分别在不同节点上启动 ES 软件&lt;/p&gt;
&lt;p&gt;cd /opt/module/es-cluster&lt;/p&gt;
&lt;p&gt;#启动&lt;/p&gt;
&lt;p&gt;bin/elasticsearch&lt;/p&gt;
&lt;p&gt;#后台启动&lt;/p&gt;
&lt;p&gt;bin/elasticsearch -d&lt;/p&gt;
&lt;h3 id=&#34;344-测试集群&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#344-测试集群&#34;&gt;#&lt;/a&gt; 3.4.4 测试集群&lt;/h3&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image275.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.772916666666666in&#34;
&lt;p&gt;height=&amp;quot;0.5027777777777778in&amp;quot;}&lt;/p&gt;
&lt;h1 id=&#34;第4章-elasticsearch-进阶&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第4章-elasticsearch-进阶&#34;&gt;#&lt;/a&gt; 第 4 章 Elasticsearch 进阶&lt;/h1&gt;
&lt;h2 id=&#34;41-核心概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#41-核心概念&#34;&gt;#&lt;/a&gt; 4.1 核心概念&lt;/h2&gt;
&lt;h3 id=&#34;411-索引index&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#411-索引index&#34;&gt;#&lt;/a&gt; 4.1.1 索引（Index）&lt;/h3&gt;
&lt;p&gt;一个索引就是一个拥有几分相似特征的文档的集合。比如说，你可以有一个客户数据的索引，另一个产品目录的索引，还有一个订单数据的索引。一个索引由一个名字来标识（必须全部是小写字母），并且当我们要对这个索引中的文档进行索引、搜索、更新和删除的时候，都要使用到这个名字。在一个集群中，可以定义任意多的索引。&lt;/p&gt;
&lt;p&gt;能搜索的数据必须索引，这样的好处是可以提高查询速度，比如：新华字典前面的目录就是索引的意思，目录可以提高查询速度。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Elasticsearch&lt;/strong&gt; 索引的精髓：一切设计都是为了提高搜索的性能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;412-类型type&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#412-类型type&#34;&gt;#&lt;/a&gt; 4.1.2 类型（Type）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;在一个索引中，你可以定义一种或多种类型。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一个类型是你的索引的一个逻辑上的分类 / 分区，其语义完全由你来定。通常，会为具有一组共同字段的文档定义一个类型。不同的版本，类型发生了不同的变化&lt;/p&gt;
&lt;p&gt;+------+---------------------------------------------------+&lt;br /&gt;
| 版本 | &amp;gt; Type                                            |&lt;br /&gt;
+&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;+&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;=============================================+&lt;br /&gt;
| 5.x  | &amp;gt; 支持多种 type                                   |&lt;br /&gt;
+------+---------------------------------------------------+&lt;br /&gt;
| 6.x  | &amp;gt; 只能有一种 type                                 |&lt;br /&gt;
+------+---------------------------------------------------+&lt;br /&gt;
| 7.x  | &amp;gt; 默认不再支持自定义索引类型（默认类型为：_doc） |&lt;br /&gt;
+------+---------------------------------------------------+&lt;/p&gt;
&lt;h3 id=&#34;413-文档document&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#413-文档document&#34;&gt;#&lt;/a&gt; 4.1.3 文档（Document）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;一个文档是一个可被索引的基础信息单元，也就是一条数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;比如：你可以拥有某一个客户的文档，某一个产品的一个文档，当然，也可以拥有某个订单的一个文档。文档以&lt;br /&gt;
 JSON（Javascript Object Notation）格式来表示，而 JSON&lt;br /&gt;
 是一个到处存在的互联网数据交互格式。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在一个 index/type 里面，你可以存储任意多的文档。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;4.1.3&lt;/strong&gt; 字段（&lt;strong&gt;Field&lt;/strong&gt;）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;相当于是数据表的字段，对文档数据根据不同属性进行的分类标识。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;415-映射mapping&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#415-映射mapping&#34;&gt;#&lt;/a&gt; 4.1.5 映射（Mapping）&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;mapping&lt;br /&gt;
 是处理数据的方式和规则方面做一些限制，如：某个字段的数据类型、默认值、&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;分析器、是否被索引等等。这些都是映射里面可以设置的，其它就是处理 ES&lt;br /&gt;
 里面数据的一些使用规则设置也叫做映射，按着最优规则处理数据对性能提高很大，因此才需要建立映射，并且需要思考如何建立映射才能对性能更好。&lt;/p&gt;
&lt;h3 id=&#34;416-分片shards&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#416-分片shards&#34;&gt;#&lt;/a&gt; 4.1.6 分片（Shards）&lt;/h3&gt;
&lt;p&gt;一个索引可以存储超出单个节点硬件限制的大量数据。比如，一个具有 10&lt;br /&gt;
 亿文档数据的索引占据 1TB&lt;br /&gt;
 的磁盘空间，而任一节点都可能没有这样大的磁盘空间。或者单个节点处理搜索请求，响应太慢。为了解决这个问题，Elasticsearch&lt;br /&gt;
 提供了将索引划分成多份的能力，每一份就称之为分片。当你创建一个索引的时候，你可以指定你想要的分片的数量。每个分片本身也是一个功能完善并且独立的 &amp;quot;索引&amp;quot;，这个 &amp;quot;索引&amp;quot; 可以被放置到集群中的任何节点上。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;分片很重要，主要有两方面的原因：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;允许你水平分割 / 扩展你的内容容量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;允许你在分片之上进行分布式的、并行的操作，进而提高性能 / 吞吐量。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;至于一个分片怎样分布，它的文档怎样聚合和搜索请求，是完全由 Elasticsearch&lt;br /&gt;
 管理的，对于作为用户的你来说，这些都是透明的，无需过分关心。&lt;/p&gt;
&lt;p&gt;被混淆的概念是，一个 &lt;strong&gt;Lucene&lt;/strong&gt; 索引 我们在 &lt;strong&gt;Elasticsearch&lt;/strong&gt; 称作 分片&lt;br /&gt;
。 一个 &lt;strong&gt;Elasticsearch&lt;/strong&gt; 索引 是分片的集合。 当 &lt;strong&gt;Elasticsearch&lt;/strong&gt;&lt;br /&gt;
 在索引中搜索的时候， 他发送查询到每一个属于索引的分片 **(Lucene**&lt;br /&gt;
 索引 **)**，然后合并每个分片的结果到一个全局的结果集。&lt;/p&gt;
&lt;h3 id=&#34;417-副本replicas&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#417-副本replicas&#34;&gt;#&lt;/a&gt; 4.1.7 副本（Replicas&lt;sup&gt;）&lt;/sup&gt;&lt;/h3&gt;
&lt;p&gt;在一个网络 /&lt;br /&gt;
 云的环境里，失败随时都可能发生，在某个分片 / 节点不知怎么的就处于离线状态，或者由于任何原因消失了，这种情况下，有一个故障转移机制是非常有用并且是强烈推荐的。为此目的，Elasticsearch&lt;br /&gt;
 允许你创建分片的一份或多份拷贝，这些拷贝叫做复制分片 (副本)。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;复制分片之所以重要，有两个主要原因：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在分片 / 节点失败的情况下，提供了高可用性。因为这个原因，注意到复制分片从不与原 / 主要（original/primary）分片置于同一节点上是非常重要的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;扩展你的搜索量 / 吞吐量，因为搜索可以在所有的副本上并行运行。总之，每个索引可以被分成多个分片。一个索引也可以被复制&lt;br /&gt;
 0 次（意思是没有复制）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;或多次。一旦复制了，每个索引就有了主分片（作为复制源的原来的分片）和复制分片（主分片的拷贝）之别。分片和复制的数量可以在索引创建的时候指定。在索引创建之后，你可以在任何时候动态地改变复制的数量，但是你事后不能改变分片的数量。默认情况下，&lt;br /&gt;
Elasticsearch 中的每个索引被分片 1 个主分片和 1&lt;br /&gt;
 个复制，这意味着，如果你的集群中至少有两个节点，你的索引将会有 1&lt;br /&gt;
 个主分片和另外 1 个复制分片（1 个完全拷贝），这样的话每个索引总共就有 2&lt;br /&gt;
 个分片，我们需要根据索引需要确定分片个数。&lt;/p&gt;
&lt;h3 id=&#34;418-分配allocation&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#418-分配allocation&#34;&gt;#&lt;/a&gt; 4.1.8 分配（Allocation&lt;sup&gt;）&lt;/sup&gt;&lt;/h3&gt;
&lt;p&gt;将分片分配给某个节点的过程，包括分配主分片或者副本。如果是副本，还包含从主分片复制数据的过程。这个过程是由&lt;br /&gt;
 master 节点完成的。&lt;/p&gt;
&lt;h2 id=&#34;42-系统架构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#42-系统架构&#34;&gt;#&lt;/a&gt; 4.2 系统架构&lt;/h2&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image276.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.539583333333334in&#34;
&lt;p&gt;height=&amp;quot;2.285416666666667in&amp;quot;}&lt;/p&gt;
&lt;p&gt;一个运行中的 Elasticsearch&lt;br /&gt;
 实例称为一个节点，而集群是由一个或者多个拥有相同&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NsdXN0ZXIubmFtZQ==&#34;&gt;cluster.name&lt;/span&gt; 配置的节点组成，&lt;br /&gt;
它们共同承担数据和负载的压力。当有节点加入集群中或者从集群中移除节点时，集群将会重新平均分布所有的数据。&lt;/p&gt;
&lt;p&gt;当一个节点被选举成为主节点时，&lt;br /&gt;
它将负责管理集群范围内的所有变更，例如增加、删除索引，或者增加、删除节点等。&lt;br /&gt;
而主节点并不需要涉及到文档级别的变更和搜索等操作，所以当集群只拥有一个主节点的情况下，即使流量的增加它也不会成为瓶颈。&lt;br /&gt;
任何节点都可以成为主节点。我们的示例集群就只有一个节点，所以它同时也成为了主节点。&lt;/p&gt;
&lt;p&gt;作为用户，我们可以将请求发送到集群中的任何节点 ，包括主节点。&lt;br /&gt;
每个节点都知道任意文档所处的位置，并且能够将我们的请求直接转发到存储我们所需文档的节点。&lt;br /&gt;
无论我们将请求发送到哪个节点，它都能负责从各个包含我们所需文档的节点收集回数据，并将最终结果返回給客户端。&lt;br /&gt;
Elasticsearch 对这一切的管理都是透明的。&lt;/p&gt;
&lt;h2 id=&#34;43-分布式集群&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#43-分布式集群&#34;&gt;#&lt;/a&gt; 4.3 分布式集群&lt;/h2&gt;
&lt;h3 id=&#34;431-单节点集群&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#431-单节点集群&#34;&gt;#&lt;/a&gt; 4.3.1 单节点集群&lt;/h3&gt;
&lt;p&gt;我们在包含一个空节点的集群内创建名为 users&lt;br /&gt;
 的索引，为了演示目的，我们将分配 3&lt;/p&gt;
&lt;p&gt;个主分片和一份副本（每个主分片拥有一个副本分片）&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;settings&amp;quot; : {&lt;/p&gt;
&lt;p&gt;&amp;quot;number_of_shards&amp;quot; : 3,&lt;/p&gt;
&lt;p&gt;&amp;quot;number_of_replicas&amp;quot; : 1&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image277.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.9753619860017497in&amp;quot;}&lt;/p&gt;
&lt;p&gt;+---+-------------------------------+-------------------------------+&lt;br /&gt;
|   | 集群健康值:yellow (3 of 6)   | :                             |&lt;br /&gt;
|   |                               | 表示当前集                    |&lt;br /&gt;
|   |                               | 群的全部主分片都正常运行，但  |&lt;br /&gt;
|   |                               | 是副本分片没有全部处在正常状  |&lt;br /&gt;
|   |                               |                               |&lt;br /&gt;
|   |                               | &amp;gt; : 3 个主分片正常            |&lt;br /&gt;
|   |                               |                               |&lt;br /&gt;
|   |                               | : 3 个副本分片都是 Unassigned |&lt;br /&gt;
|   |                               | ------                        |&lt;br /&gt;
|   |                               | 它们都没有被分配到任何节点。  |&lt;br /&gt;
|   |                               | 在同一个节                    |&lt;br /&gt;
|   |                               | 点上既保存原始数据又保存副本  |&lt;br /&gt;
|   |                               | 是没有意义的，因为一旦失去了  |&lt;br /&gt;
|   |                               | 那个节点，我们也将丢失该节点  |&lt;br /&gt;
+=&lt;mark&gt;+&lt;/mark&gt;=&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;+&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;===+&lt;br /&gt;
|   | 态                            |                               |&lt;br /&gt;
|   |                               |                               |&lt;br /&gt;
|   | ![](../_Porgram_IT/pandoc-3.1.2/images/media              |                               |&lt;br /&gt;
|   | /image279.jpg){width=&amp;quot;1.55in&amp;quot; |                               |&lt;br /&gt;
|   | he                            |                               |&lt;br /&gt;
|   | ight=&amp;quot;0.23402777777777778in&amp;quot;} |                               |&lt;br /&gt;
|   |                               |                               |&lt;br /&gt;
|   | !                             |                               |&lt;br /&gt;
|   | &lt;a href=&#34;images%5Cmedia%5Cimage280.jpg&#34;&gt;&lt;/a&gt; |                               |&lt;br /&gt;
|   | {width=&amp;quot;1.5743055555555556in&amp;quot; |                               |&lt;br /&gt;
|   | he                            |                               |&lt;br /&gt;
|   | ight=&amp;quot;0.22916666666666666in&amp;quot;} |                               |&lt;br /&gt;
|   |                               |                               |&lt;br /&gt;
|   | 上的所有副本数据。            |                               |&lt;br /&gt;
+---+-------------------------------+-------------------------------+&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image281.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.2754297900262468in&amp;quot;} 我们的集群现在是拥有一个索引的单节点集群。所有&lt;br /&gt;
 3 个主分片都被分配在 node-1 。&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image283.jpg&#34; class=&#34;&#34;&gt;{width=&#34;3.6206397637795273in&#34;
&lt;p&gt;height=&amp;quot;1.2504297900262467in&amp;quot;}&lt;/p&gt;
&lt;p&gt;当前我们的集群是正常运行的，但是在硬件故障时有丢失数据的风险。&lt;/p&gt;
&lt;h3 id=&#34;432-故障转移&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#432-故障转移&#34;&gt;#&lt;/a&gt; 4.3.2 故障转移&lt;/h3&gt;
&lt;p&gt;当集群中只有一个节点在运行时，意味着会有一个单点故障问题 ------ 没有冗余。&lt;br /&gt;
幸运的是，我们只需再启动一个节点即可防止数据丢失。当你在同一台机器上启动了第二个节点时，只要它和第一个节点有同样的&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NsdXN0ZXIubmFtZQ==&#34;&gt; cluster.name&lt;/span&gt;&lt;br /&gt;
 配置，它就会自动发现集群并加入到其中。但是在不同机器上启动节点的时候，为了加入到同一集群，你需要配置一个可连接到的单播主机列表。之所以配置为使用单播发现，以防止节点无意中加入集群。只有在同一台机器上运行的节点才会自动组成集群。&lt;/p&gt;
&lt;p&gt;如果启动了第二个节点，我们的集群将会拥有两个节点的集群 :&lt;br /&gt;
 所有主分片和副本分片都已被分配&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image285.jpg&#34; class=&#34;&#34;&gt;{width=&#34;3.848973097112861in&#34;
&lt;p&gt;height=&amp;quot;1.291819772528434in&amp;quot;}&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image287.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.2120964566929133in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;+---+-------------------------------+-------------------------------+&lt;br /&gt;
|   | 集群健康值:green (6 of 6)    | : 表示所有 6 个分片（包括 3   |&lt;br /&gt;
|   |                               | 个主分片和 3                  |&lt;br /&gt;
|   |                               | 个副本分片）都在正常运行。    |&lt;br /&gt;
|   |                               |                               |&lt;br /&gt;
|   |                               | &amp;gt; : 3 个主分片正常            |&lt;br /&gt;
|   |                               | &amp;gt;                             |&lt;br /&gt;
|   |                               | &amp;gt; :                           |&lt;br /&gt;
|   |                               | &amp;gt; 当第二个节点加入到集群后，3 |&lt;br /&gt;
|   |                               | &amp;gt; 个副本分片                  |&lt;br /&gt;
|   |                               | 将会分配到这个节点上 ------ 每  |&lt;br /&gt;
|   |                               |                               |&lt;br /&gt;
|   |                               | 个主分                        |&lt;br /&gt;
|   |                               | 片对应一个副本分片。这意味着  |&lt;br /&gt;
|   |                               | 当集群内任何一个节点出现问题  |&lt;br /&gt;
|   |                               | 时，我们的数据都完好无损。所  |&lt;br /&gt;
|   |                               |                               |&lt;br /&gt;
|   |                               | 有新近                        |&lt;br /&gt;
|   |                               | 被索引的文档都将会保存在主分  |&lt;br /&gt;
|   |                               | 片上，然后被并行的复制到对应  |&lt;br /&gt;
|   |                               | 的副本分片上。这就保证了我们  |&lt;br /&gt;
+=&lt;mark&gt;+&lt;/mark&gt;=&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;+&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;===+&lt;br /&gt;
|   | ![](../_Porgram_IT/pandoc-3.1.2/images/media              |                               |&lt;br /&gt;
|   | /image279.jpg){width=&amp;quot;1.55in&amp;quot; |                               |&lt;br /&gt;
|   | he                            |                               |&lt;br /&gt;
|   | ight=&amp;quot;0.23402777777777778in&amp;quot;} |                               |&lt;br /&gt;
|   |                               |                               |&lt;br /&gt;
|   | !                             |                               |&lt;br /&gt;
|   | &lt;a href=&#34;images%5Cmedia%5Cimage289.jpg&#34;&gt;&lt;/a&gt; |                               |&lt;br /&gt;
|   | {width=&amp;quot;1.5291666666666666in&amp;quot; |                               |&lt;br /&gt;
|   | h                             |                               |&lt;br /&gt;
|   | eight=&amp;quot;0.2076388888888889in&amp;quot;} |                               |&lt;br /&gt;
|   |                               |                               |&lt;br /&gt;
|   | 既可以从主分片                |                               |&lt;br /&gt;
|   | 又可以从副本分片上获得文档。  |                               |&lt;br /&gt;
+---+-------------------------------+-------------------------------+&lt;/p&gt;
&lt;h3 id=&#34;433-水平扩容&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#433-水平扩容&#34;&gt;#&lt;/a&gt; 4.3.3 水平扩容&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;怎样为我们的正在增长中的应用程序按需扩容呢？当启动了第三个节点，我们的集群将&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;会拥有三个节点的集群：为了分散负载而对分片进行重新分配&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image290.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.412306430446194in&#34;
&lt;p&gt;height=&amp;quot;1.4633464566929133in&amp;quot;}&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image292.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.4629297900262468in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;+---+-------------------------------+-------------------------------+&lt;br /&gt;
|   | 集群健康值:green (6 of 6)    | : 表示所有 6 个分片（包括 3   |&lt;br /&gt;
|   |                               | 个主分片和 3                  |&lt;br /&gt;
|   |                               | 个副本分片）都在正常运行。    |&lt;br /&gt;
|   |                               |                               |&lt;br /&gt;
|   |                               | 上各有一个分片被迁移到了新的  |&lt;br /&gt;
|   |                               | Node 3                        |&lt;br /&gt;
|   |                               | 节点，现在每个节点上都拥有 2  |&lt;br /&gt;
|   |                               | 个分片，                      |&lt;br /&gt;
|   |                               |                               |&lt;br /&gt;
|   |                               | 这                            |&lt;br /&gt;
|   |                               | 表示每个节点的硬件资源（CPU,  |&lt;br /&gt;
|   |                               | RAM,                          |&lt;br /&gt;
|   |                               | I/O）将                       |&lt;br /&gt;
|   |                               | 被更少的分片所共享，每个分片  |&lt;br /&gt;
|   |                               |                               |&lt;br /&gt;
|   |                               | 分片是一个功                  |&lt;br /&gt;
|   |                               | 能完整的搜索引擎，它拥有使用  |&lt;br /&gt;
|   |                               | 一个节点上的所有资源的能力。  |&lt;br /&gt;
|   |                               | 我们这个拥有 6                |&lt;br /&gt;
|   |                               | 个分个副                      |&lt;br /&gt;
|   |                               | 本分片）的索引可以最大扩容到  |&lt;br /&gt;
|   |                               | 6                             |&lt;br /&gt;
|   |                               | 个节点，每个                  |&lt;br /&gt;
|   |                               | 节点上存在一个分片，并且每个  |&lt;br /&gt;
+=&lt;mark&gt;+&lt;/mark&gt;=&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;+&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;===+&lt;br /&gt;
|   | !                             |                               |&lt;br /&gt;
|   | &lt;a href=&#34;images%5Cmedia%5Cimage294.jpg&#34;&gt;&lt;/a&gt; |                               |&lt;br /&gt;
|   | {width=&amp;quot;1.4388888888888889in&amp;quot; |                               |&lt;br /&gt;
|   | he                            |                               |&lt;br /&gt;
|   | ight=&amp;quot;0.24513888888888888in&amp;quot;} |                               |&lt;br /&gt;
|   |                               |                               |&lt;br /&gt;
|   | !                             |                               |&lt;br /&gt;
|   | &lt;a href=&#34;images%5Cmedia%5Cimage295.jpg&#34;&gt;&lt;/a&gt; |                               |&lt;br /&gt;
|   | {width=&amp;quot;1.4479166666666667in&amp;quot; |                               |&lt;br /&gt;
|   | height=&amp;quot;0.20625in&amp;quot;}           |                               |&lt;br /&gt;
|   |                               |                               |&lt;br /&gt;
|   | !                             |                               |&lt;br /&gt;
|   | &lt;a href=&#34;images%5Cmedia%5Cimage296.jpg&#34;&gt;&lt;/a&gt; |                               |&lt;br /&gt;
|   | {width=&amp;quot;1.4583333333333333in&amp;quot; |                               |&lt;br /&gt;
|   | height=&amp;quot;0.21875in&amp;quot;}           |                               |&lt;br /&gt;
|   |                               |                               |&lt;br /&gt;
|   | Node 1 和 Node 2 而不是之前的 |                               |&lt;br /&gt;
|   | 3 个。                        |                               |&lt;br /&gt;
|   |                               |                               |&lt;br /&gt;
|   | 的性能将会得到提升。          |                               |&lt;br /&gt;
|   |                               |                               |&lt;br /&gt;
|   | 片（3 个主分片和 3            |                               |&lt;br /&gt;
|   |                               |                               |&lt;br /&gt;
|   | 分片拥有所在节点的全部资源。  |                               |&lt;br /&gt;
+---+-------------------------------+-------------------------------+&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image297.jpg&#34; class=&#34;&#34;&gt;{width=&#34;0.23472222222222222in&#34;
&lt;p&gt;height=&amp;quot;0.24166666666666667in&amp;quot;} 但是如果我们想要扩容超过 &lt;strong&gt;6&lt;/strong&gt;&lt;br /&gt;
 个节点怎么办呢？&lt;/p&gt;
&lt;p&gt;主分片的数目在索引创建时就已经确定了下来。实际上，这个数目定义了这个索引能够存储&lt;br /&gt;
的最大数据量。（实际大小取决于你的数据、硬件和使用场景。）&lt;br /&gt;
但是，读操作 ------ 搜索和返回数据 ------ 可以同时被主分片 或&lt;br /&gt;
副本分片所处理，所以当你拥有越多的副本分片时，也将拥有越高的吞吐量。&lt;/p&gt;
&lt;p&gt;在运行中的集群上是可以动态调整副本分片数目的，我们可以按需伸缩集群。让我们把副本数从默认的&lt;br /&gt;
 1 增加到 2&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;number_of_replicas&amp;quot; : 2&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image298.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.2958475503062117in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;users 索引现在拥有 9 个分片：3 个主分片和 6 个副本分片。&lt;br /&gt;
这意味着我们可以将集群扩容到 9 个节点，每个节点上一个分片。相比原来 3&lt;br /&gt;
 个节点时，集群搜索性能可以提升 3 倍。&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image300.jpg&#34; class=&#34;&#34;&gt;{width=&#34;3.973973097112861in&#34;
&lt;p&gt;height=&amp;quot;1.3033464566929134in&amp;quot;}&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image302.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.5040409011373579in&amp;quot;}&lt;/p&gt;
&lt;p&gt;当然，如果只是在相同节点数目的集群上增加更多的副本分片并不能提高性能，因为每&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;个分片从节点上获得的资源会变少。 你需要增加更多的硬件资源来提升吞吐量。&lt;/p&gt;
&lt;p&gt;但是更多的副本分片数提高了数据冗余量：按照上面的节点配置，我们可以在失去&lt;br /&gt;
 2 个节点的情况下不丢失任何数据。&lt;/p&gt;
&lt;h3 id=&#34;434-应对故障&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#434-应对故障&#34;&gt;#&lt;/a&gt; 4.3.4 应对故障&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;我们关闭第一个节点，这时集群的状态为：关闭了一个节点后的集群。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image304.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.412638888888889in&#34;
&lt;p&gt;height=&amp;quot;1.6894586614173228in&amp;quot;}&lt;/p&gt;
&lt;p&gt;我们关闭的节点是一个主节点。而集群必须拥有一个主节点来保证正常工作，所以发生的第一件事情就是选举一个新的主节点：&lt;br /&gt;
Node 2 。在我们关闭 Node 1 的同时也失去了主分片 1 和 2&lt;br /&gt;
，并且在缺失主分片的时候索引也不能正常工作。&lt;br /&gt;
如果此时来检查集群的状况，我们看到的状态将会为 red&lt;br /&gt;
：不是所有主分片都在正常工作。&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image310.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.482930883639545in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;幸运的是，在其它节点上存在着这两个主分片的完整副本，&lt;br /&gt;
所以新的主节点立即将这些分片在 Node 2 和 Node 3&lt;br /&gt;
 上对应的副本分片提升为主分片， 此时集群的状态将会为&lt;br /&gt;
 yellow。这个提升主分片的过程是瞬间发生的，如同按下一个开关一般。&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image297.jpg&#34; class=&#34;&#34;&gt;{width=&#34;0.23472222222222222in&#34;
&lt;p&gt;height=&amp;quot;0.24166666666666667in&amp;quot;} 为什么我们集群状态是 &lt;strong&gt;yellow&lt;/strong&gt; 而不是&lt;br /&gt;
&lt;strong&gt; green&lt;/strong&gt; 呢？&lt;/p&gt;
&lt;p&gt;虽然我们拥有所有的三个主分片，但是同时设置了每个主分片需要对应 2&lt;br /&gt;
 份副本分片，而此时只存在一份副本分片。 所以集群不能为 green&lt;br /&gt;
 的状态，不过我们不必过于担心：如果我们同样关闭了 Node 2 ，我们的程序&lt;br /&gt;
依然 可以保持在不丢任何数据的情况下运行，因为&lt;/p&gt;
&lt;p&gt;Node 3 为每一个分片都保留着一份副本。&lt;/p&gt;
&lt;p&gt;如果我们重新启动 Node 1&lt;br /&gt;
，集群可以将缺失的副本分片再次进行分配，那么集群的状态也将恢复成之前的状态。&lt;br /&gt;
如果 Node 1&lt;br /&gt;
 依然拥有着之前的分片，它将尝试去重用它们，同时仅从主分片复制发生了修改的数据文件。和之前的集群相比，只是&lt;br /&gt;
 Master 节点切换了。&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image312.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.5779538495188101in&amp;quot;}&lt;/p&gt;
&lt;p&gt;当索引一个文档的时候，文档会被存储到一个主分片中。 Elasticsearch&lt;br /&gt;
 如何知道一个&lt;/p&gt;
&lt;p&gt;文档应该存放到哪个分片中呢？当我们创建文档时，它如何决定这个文档应当被存储在分片&lt;br /&gt;
 1 还是分片 2&lt;br /&gt;
 中呢？首先这肯定不会是随机的，否则将来要获取文档的时候我们就不知道从何处寻找了。实际上，这个过程是根据下面这个公式决定的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image314.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.666666666666667in&#34;
&lt;p&gt;height=&amp;quot;0.3333333333333333in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;routing 是一个可变值，默认是文档的 _id ，也可以设置成一个自定义的值。&lt;br /&gt;
routing 通过 hash 函数生成一个数字，然后这个数字再除以&lt;br /&gt;
 number_of_primary_shards （主分片的数量）后得到余数 。这个分布在 0 到&lt;br /&gt;
 number_of_primary_shards-1&lt;br /&gt;
 之间的余数，就是我们所寻求的文档所在分片的位置。&lt;/p&gt;
&lt;p&gt;这就解释了为什么我们要在创建索引的时候就确定好主分片的数量&lt;br /&gt;
并且永远不会改变这个数量：因为如果数量变化了，那么所有之前路由的值都会无效，文档也再也找不到了。&lt;/p&gt;
&lt;p&gt;所有的文档 API（ get 、 index 、 delete 、 bulk 、 update 以及 mget&lt;br /&gt;
）都接受一个叫做 routing 的路由参数&lt;br /&gt;
，通过这个参数我们可以自定义文档到分片的映射。一个自定义的路由参数可以用来确保所有相关的文档 ------ 例如所有属于同一个用户的文档 ------ 都被存储到同一个分片中。&lt;/p&gt;
&lt;h2 id=&#34;45-分片控制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#45-分片控制&#34;&gt;#&lt;/a&gt; 4.5 分片控制&lt;/h2&gt;
&lt;p&gt;我们假设有一个集群由三个节点组成。 它包含一个叫 emps&lt;br /&gt;
 的索引，有两个主分片，每个主分片有两个副本分片。相同分片的副本不会放在同一节点。&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image315.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;2.6419575678040244in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过 elasticsearch-head&lt;br /&gt;
 插件查看集群情况，所以我们的集群是一个有三个节点和一个索&lt;/p&gt;
&lt;p&gt;引的集群。&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image319.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.4841797900262468in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们可以发送请求到集群中的任一节点。 每个节点都有能力处理任意请求。&lt;br /&gt;
每个节点都知道集群中任一文档位置，所以可以直接将请求转发到需要的节点上。&lt;br /&gt;
在下面的例子中，将所有的请求发送到 Node 1，我们将其称为&lt;br /&gt;
协调节点 (coordinating node)&lt;br /&gt;
。&lt;img data-src=&#34;/Distribution/Elasticsearch/image321.jpg&#34; class=&#34;&#34;&gt;{width=&amp;quot;0.1625in&amp;quot;&lt;br /&gt;
height=&amp;quot;0.16666666666666666in&amp;quot;}：当发送请求的时候，&lt;br /&gt;
为了扩展负载，更好的做法是轮询集群中所有的节点。&lt;/p&gt;
&lt;h3 id=&#34;451-写流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#451-写流程&#34;&gt;#&lt;/a&gt; 4.5.1 &lt;sup&gt;写流程&lt;/sup&gt;&lt;/h3&gt;
&lt;p&gt;新建、索引和删除 请求都是 写 操作，&lt;br /&gt;
必须在主分片上面完成之后才能被复制到相关的副本分片&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image322.jpg&#34; class=&#34;&#34;&gt;{width=&#34;3.571527777777778in&#34;
&lt;p&gt;height=&amp;quot;1.6in&amp;quot;} 新建，索引和删除文档所需要的步骤顺序：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;客户端向 Node 1 发送新建、索引或者删除请求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;节点使用文档的 _id 确定文档属于分片 0 。请求会被转发到 Node&lt;br /&gt;
3，因为分片 0 的主分片目前被分配在 Node 3 上。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Node 3 在主分片上面执行请求。如果成功了，它将请求并行转发到 Node 1&lt;br /&gt;
 和 Node 2&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;的副本分片上。一旦所有的副本分片都报告成功，Node 3&lt;br /&gt;
 将向协调节点报告成功，协调节点向客户端报告成功。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在客户端收到成功响应时，文档变更已经在主分片和所有副本分片执行完成，变更是安全的。有一些可选的请求参数允许您影响这个过程，可能以数据安全为代价提升性能。这些选项很少使用，因为&lt;br /&gt;
 Elasticsearch 已经很快，但是为了完整起见，请参考下面表格：&lt;/p&gt;
&lt;p&gt;+-------------+-------------------------------------------------------+&lt;br /&gt;
| 参数        | &amp;gt; 含义                                                |&lt;br /&gt;
+=&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;+&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;===========================================+&lt;br /&gt;
| consistency | &amp;gt; consistency，即一致性。在默认设置下，               |&lt;br /&gt;
|             | 即使仅仅是在试图执行一个_写_操作之前，主分片都会要求 |&lt;br /&gt;
|             | &amp;gt; 必须要有                                            |&lt;br /&gt;
|             | &amp;gt; 规定数量 (quorum)（或者                              |&lt;br /&gt;
|             | 换种说法，也即必须要有大多数）的分片副本处于活跃可用  |&lt;br /&gt;
|             | 状态，才会去执行_写_操作 (其中分片副本可以是主分片或  |&lt;br /&gt;
|             | 者副本分片)。这是为了避免在发生网络分区故障（network  |&lt;br /&gt;
|             | &amp;gt;                                                     |&lt;br /&gt;
|             | &amp;gt; partition）的时                                     |&lt;br /&gt;
|             | 候进行_写_操作，进而导致数据不一致。_规定数量_即：  |&lt;br /&gt;
|             | &amp;gt; &lt;strong&gt;int( (primary + number_of_replicas) / 2 ) + 1&lt;/strong&gt;   |&lt;br /&gt;
|             | &amp;gt;                                                     |&lt;br /&gt;
|             | &amp;gt; consistency 参数的值可以设为 one （只要主分片状态   |&lt;br /&gt;
|             | &amp;gt; ok                                                  |&lt;br /&gt;
|             | &amp;gt; 就允许执行_写_操作）,all（必须要主                 |&lt;br /&gt;
|             | 分片和所有副本分片的状态没问题才允许执行_写_操作）,  |&lt;br /&gt;
|             | &amp;gt; 或 quorum 。默认值为 quorum ,                       |&lt;br /&gt;
|             | &amp;gt; 即大多数的分片副本状态没问题就允许执行_写_ 操作。  |&lt;br /&gt;
|             | &amp;gt;                                                     |&lt;br /&gt;
|             | &amp;gt; 注意，规定数量 的计算公式中 number_of_replicas      |&lt;br /&gt;
|             | &amp;gt; 指的是在索引设置中的设定副本分片数，而不是          |&lt;br /&gt;
|             | 指当前处理活动状态的副本分片数。如果你的索引设置中指  |&lt;br /&gt;
+-------------+-------------------------------------------------------+&lt;br /&gt;
|             | &amp;gt; 定                                                  |&lt;br /&gt;
|             | 了当前索引拥有三个副本分片，那规定数量的计算结果即：  |&lt;br /&gt;
|             | &amp;gt; &lt;strong&gt;int( (primary + 3 replicas) / 2 ) + 1 = 3&lt;/strong&gt;       |&lt;br /&gt;
|             | &amp;gt;                                                     |&lt;br /&gt;
|             | &amp;gt; 如果                                                |&lt;br /&gt;
|             | 此时你只启动两个节点，那么处于活跃状态的分片副本数量  |&lt;br /&gt;
|             | 就达不到规定数量，也因此您将无法索引和删除任何文档。  |&lt;br /&gt;
+-------------+-------------------------------------------------------+&lt;br /&gt;
| timeout     | &amp;gt; 如果没有足够的副本分片会发生什么？ Elasticsearch    |&lt;br /&gt;
|             | &amp;gt; 会等待，希望更多的分片出现。默认情况下，它最多等待  |&lt;br /&gt;
|             | &amp;gt; 1 分钟。 如果你需要，你可以使用 timeout             |&lt;br /&gt;
|             | &amp;gt; 参数使它更早终止： 100 100 毫秒，30s 是 30 秒。     |&lt;br /&gt;
+-------------+-------------------------------------------------------+&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image323.jpg&#34; class=&#34;&#34;&gt;{width=&#34;0.2520833333333333in&#34;
&lt;p&gt;height=&amp;quot;0.29375in&amp;quot;} 新索引默认有 1&lt;br /&gt;
 个副本分片，这意味着为满足规定数量应该需要两个活动的分片副本。&lt;br /&gt;
但是，这些默认的设置会阻止我们在单一节点上做任何事情。为了避免这个问题，要求只有当&lt;br /&gt;
 number_of_replicas 大于 1 的时候，规定数量才会执行。&lt;/p&gt;
&lt;h3 id=&#34;452-读流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#452-读流程&#34;&gt;#&lt;/a&gt; 4.5.2 &lt;sup&gt;读流程&lt;/sup&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;我们可以从主分片或者从其它任意副本分片检索文档&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image324.jpg&#34; class=&#34;&#34;&gt;{width=&#34;3.932638888888889in&#34;
&lt;p&gt;height=&amp;quot;1.3770833333333334in&amp;quot;} 从主分片或者副本分片检索文档的步骤顺序：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;客户端向 Node 1 发送获取请求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;节点使用文档的 _id 来确定文档属于分片 0 。分片 0&lt;br /&gt;
 的副本分片存在于所有的三个节点上。 在这种情况下，它将请求转发到 Node&lt;br /&gt;
2 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Node 2 将文档返回给 Node 1 ，然后将文档返回给客户端。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在处理读取请求时，协调结点在每次请求的时候都会通过轮询所有的副本分片来达到负载均衡。在文档被检索时，已经被索引的文档可能已经存在于主分片上但是还没有复制到副本分片。&lt;br /&gt;
在这种情况下，副本分片可能会报告文档不存在，但是主分片可能成功返回文档。&lt;br /&gt;
一旦索引请求成功返回给用户，文档在主分片和副本分片都是可用的。&lt;/p&gt;
&lt;h3 id=&#34;453-更新流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#453-更新流程&#34;&gt;#&lt;/a&gt; 4.5.3 更新流程&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;部分更新一个文档结合了先前说明的读取和写入流程：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image325.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.189583333333333in&#34;
&lt;p&gt;height=&amp;quot;1.6881944444444446in&amp;quot;} 部分更新一个文档的步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;客户端向 Node 1 发送更新请求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;它将请求转发到主分片所在的 Node 3 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Node 3 从主分片检索文档，修改 _source 字段中的 JSON&lt;br /&gt;
，并且尝试重新索引主分片的文档。&lt;br /&gt;
如果文档已经被另一个进程修改，它会重试步骤 3 ，超过&lt;br /&gt;
 retry_on_conflict 次后放弃。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果 Node 3 成功地更新文档，它将新版本的文档并行转发到 Node 1 和&lt;br /&gt;
 Node 2 上的副本分片，重新建立索引。一旦所有副本分片都返回成功， Node&lt;br /&gt;
3 向协调节点也返回成功，协调节点向客户端返回成功。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当主分片把更改转发到副本分片时， 它不会转发更新请求。&lt;br /&gt;
相反，它转发完整文档的新版本。请记住，这些更改将会异步转发到副本分片，并且不能保证它们以发送它们相同的顺序到达。&lt;br /&gt;
如果 Elasticsearch&lt;br /&gt;
 仅转发更改请求，则可能以错误的顺序应用更改，导致得到损坏的文档。&lt;/p&gt;
&lt;h4 id=&#34;454-多文档操作流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#454-多文档操作流程&#34;&gt;#&lt;/a&gt; 4.5.4 多文档操作流程&lt;/h4&gt;
&lt;p&gt;mget 和 bulk API&lt;br /&gt;
 的模式类似于单文档模式。区别在于协调节点知道每个文档存在于哪个分片中。它将整个多文档请求分解成&lt;br /&gt;
每个分片 的多文档请求，并且将这些请求并行转发到每个参与节点。&lt;/p&gt;
&lt;p&gt;协调节点一旦收到来自每个节点的应答，就将每个节点的响应收集整理成单个响应，返回给客户端&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image326.jpg&#34; class=&#34;&#34;&gt;{width=&#34;3.9277777777777776in&#34;
&lt;p&gt;height=&amp;quot;1.3486111111111112in&amp;quot;} 用单个 &lt;strong&gt;mget&lt;/strong&gt;&lt;br /&gt;
 请求取回多个文档所需的步骤顺序:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;客户端向 Node 1 发送 mget 请求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Node 1&lt;br /&gt;
 为每个分片构建多文档获取请求，然后并行转发这些请求到托管在每个所需的主分片或者副本分片的节点上。一旦收到所有答复，&lt;br /&gt;
Node 1 构建响应并将其返回给客户端。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可以对 docs 数组中每个文档设置 routing 参数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;bulk API&lt;/strong&gt;， 允许在单个批量请求中执行多个创建、索引、删除和更新请求。&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image327.jpg&#34; class=&#34;&#34;&gt;{width=&#34;3.38125in&#34;
&lt;p&gt;height=&amp;quot;1.4520833333333334in&amp;quot;} bulk API 按如下步骤顺序执行：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;客户端向 Node 1 发送 bulk 请求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Node 1&lt;br /&gt;
 为每个节点创建一个批量请求，并将这些请求并行转发到每个包含主分片的节点主机。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主分片一个接一个按顺序执行每个操作。当每个操作成功时，主分片并行转发新文档（或删除）到副本分片，然后执行下一个操作。&lt;br /&gt;
一旦所有的副本分片报告所有操作成功，该节点将向协调节点报告成功，协调节点将这些响应收集整理并返回给客户端。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;46-分片原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#46-分片原理&#34;&gt;#&lt;/a&gt; 4.6 分片原理&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;分片是 Elasticsearch&lt;br /&gt;
 最小的工作单元。但是究竟什么是一个分片，它是如何工作的？传统的数据库每个字段存储单个值，但这对全文检索并不够。文本字段中的每个单词需&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;要被搜索，对数据库意味着需要单个字段有索引多值的能力。最好的支持是一个字段多个值需求的数据结构是倒排索引。&lt;/p&gt;
&lt;h3 id=&#34;461-倒排索引&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#461-倒排索引&#34;&gt;#&lt;/a&gt; 4.6.1 倒排索引&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Elasticsearch 使用一种称为倒排索引的结构，它适用于快速的全文搜索。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;见其名，知其意，有倒排索引，肯定会对应有正向索引。正向索引（forward&lt;br /&gt;
index），反向索引（inverted index）更熟悉的名字是倒排索引。&lt;/p&gt;
&lt;p&gt;所谓的正向索引，就是搜索引擎会将待搜索的文件都对应一个文件&lt;br /&gt;
 ID，搜索时将这个&lt;/p&gt;
&lt;p&gt;ID 和搜索关键字进行对应，形成 K-V 对，然后对关键字进行统计计数&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image328.jpg&#34; class=&#34;&#34;&gt;{width=&#34;2.967361111111111in&#34;
&lt;p&gt;height=&amp;quot;1.3366797900262468in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但是互联网上收录在搜索引擎中的文档的数目是个天文数字，这样的索引结构根本无法满足实时返回排名结果的要求。所以，搜索引擎会将正向索引重新构建为倒排索引，即把文件&lt;/p&gt;
&lt;p&gt;ID 对应到关键词的映射转换为关键词到文件 ID 的映射，每个关键词都对应着一系列的文件，这些文件中都出现这个关键词。&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image330.jpg&#34; class=&#34;&#34;&gt;{width=&#34;2.9254166666666666in&#34;
&lt;p&gt;height=&amp;quot;1.44251312335958in&amp;quot;}&lt;/p&gt;
&lt;p&gt;一个倒排索引由文档中所有不重复词的列表构成，对于其中每个词，有一个包含它的文&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;档列表。例如，假设我们有两个文档，每个文档的 content 域包含如下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The quick brown fox jumped over the lazy dog&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Quick brown foxes leap over lazy dogs in summer&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了创建倒排索引，我们首先将每个文档的 content 域拆分成单独的&lt;br /&gt;
词（我们称它为 词条或 tokens&lt;br /&gt;
），创建一个包含所有不重复词条的排序列表，然后列出每个词条出现在哪个文档。结果如下所示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image332.jpg&#34; class=&#34;&#34;&gt;{width=&#34;1.155in&#34;
&lt;p&gt;height=&amp;quot;2.0045964566929135in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;现在，如果我们想搜索 quick brown ，我们只需要查找包含每个词条的文档：&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image334.jpg&#34; class=&#34;&#34;&gt;{width=&#34;1.5504166666666668in&#34;
&lt;p&gt;height=&amp;quot;1.0254297900262468in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;两个文档都匹配，但是第一个文档比第二个匹配度更高。如果我们使用仅计算匹配词条数量的简单相似性算法，那么我们可以说，对于我们查询的相关性来讲，第一个文档比第二个文档更佳。&lt;/p&gt;
&lt;p&gt;但是，我们目前的倒排索引有一些问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Quick 和 quick 以独立的词条出现，然而用户可能认为它们是相同的词。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;fox 和 foxes 非常相似，就像 dog 和 dogs ；他们有相同的词根。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;jumped 和 leap,&lt;br /&gt;
 尽管没有相同的词根，但他们的意思很相近。他们是同义词。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用前面的索引搜索 +Quick +fox 不会得到任何匹配文档。（记住，+&lt;br /&gt;
 前缀表明这个词必须存在。）只有同时出现 Quick 和 fox&lt;br /&gt;
 的文档才满足这个查询条件，但是第一个文档包含 quick fox ，第二个文档包含&lt;br /&gt;
 Quick foxes 。&lt;/p&gt;
&lt;p&gt;我们的用户可以合理的期望两个文档与查询匹配。我们可以做的更好。&lt;/p&gt;
&lt;p&gt;如果我们将词条规范为标准模式，那么我们可以找到与用户搜索的词条不完全一致，但具有足够相关性的文档。例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Quick 可以小写化为 quick 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;foxes 可以 词干提取 -- 变为词根的格式 -- 为 fox 。类似的， dogs&lt;br /&gt;
 可以为提取为 dog 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;jumped 和 leap 是同义词，可以索引为相同的单词 jump 。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;现在索引看上去像这样：&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image336.jpg&#34; class=&#34;&#34;&gt;{width=&#34;1.3833333333333333in&#34;
&lt;p&gt;height=&amp;quot;1.8804297900262468in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这还远远不够。我们搜索 +Quick +fox 仍然&lt;br /&gt;
会失败，因为在我们的索引中，已经没有 Quick&lt;br /&gt;
 了。但是，如果我们对搜索的字符串使用与 content&lt;br /&gt;
 域相同的标准化规则，会变成查询&lt;/p&gt;
&lt;p&gt;+quick&lt;br /&gt;
+fox，这样两个文档都会匹配！分词和标准化的过程称为分析这非常重要。你只能搜索在索引中出现的词条，所以索引文本和查询字符串必须标准化为相同的格式。&lt;/p&gt;
&lt;h3 id=&#34;462-文档搜索&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#462-文档搜索&#34;&gt;#&lt;/a&gt; 4.6.2 文档搜索&lt;/h3&gt;
&lt;p&gt;早期的全文检索会为整个文档集合建立一个很大的倒排索引并将其写入到磁盘。&lt;br /&gt;
一旦新的索引就绪，旧的就会被其替换，这样最近的变化便可以被检索到。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;倒排索引被写入磁盘后是 不可改变 的：它永远不会修改。&lt;/p&gt;
&lt;p&gt;不变性有重要的价值：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;不需要锁。如果你从来不更新索引，你就不需要担心多进程同时修改数据的问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一旦索引被读入内核的文件系统缓存，便会留在哪里，由于其不变性。只要文件系统缓存中还有足够&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;的空间，那么大部分读请求会直接请求内存，而不会命中磁盘。这提供了很大的性能提升。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;其它缓存 (像 filter&lt;br /&gt;
 缓存)，在索引的生命周期内始终有效。它们不需要在每次数据改变时被重建，因为&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;数据不会变化。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;写入单个大的倒排索引允许数据被压缩，减少磁盘 I/O 和&lt;br /&gt;
需要被缓存到内存的索引的使用量。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然，一个不变的索引也有不好的地方。主要事实是它是不可变的！&lt;br /&gt;
 你不能修改它。如果你需要让一个新的文档&lt;br /&gt;
可被搜索，你需要重建整个索引。这要么对一个索引所能包含的数据量造成了很大的限制，要么对索引可被更新的频率造成了很大的限制。&lt;/p&gt;
&lt;h4 id=&#34;463-动态更新索引&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#463-动态更新索引&#34;&gt;#&lt;/a&gt; 4.6.3 动态更新索引&lt;/h4&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image297.jpg&#34; class=&#34;&#34;&gt;{width=&#34;0.23472222222222222in&#34;
&lt;p&gt;height=&amp;quot;0.24166666666666667in&amp;quot;} 如何在保留不变性的前提下实现倒排索引的更新？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;答案是:&lt;br /&gt;
 用更多的索引。通过增加新的补充索引来反映新近的修改，而不是直接重写整个倒排索引。每一个倒排索引都会被轮流查询到，从最早的开始查询完后再对结果进行合并。&lt;/p&gt;
&lt;p&gt;Elasticsearch 基于 Lucene, 这个 java 库引入了按段搜索的概念。 每一 段&lt;br /&gt;
本身都是一个倒排索引， 但索引在 Lucene 中除表示所有段的集合外，&lt;br /&gt;
还增加了提交点的概念 --- 一个列出了所有已知段的文件&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image338.jpg&#34; class=&#34;&#34;&gt;{width=&#34;3.0720833333333335in&#34;
&lt;p&gt;height=&amp;quot;1.8170691163604549in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;按段搜索会以如下流程执行：&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image340.jpg&#34; class=&#34;&#34;&gt;{width=&#34;2.453694225721785in&#34;
&lt;p&gt;height=&amp;quot;2.124829396325459in&amp;quot;}&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;不时地，缓存被 提交&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;一个新的段 --- 一个追加的倒排索引 --- 被写入磁盘。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一个新的包含新段名字的 提交点 被写入磁盘&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;磁盘进行 同步 ---&lt;br /&gt;
 所有在文件系统缓存中等待的写入都刷新到磁盘，以确保它们被写入物理文件&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;新的段被开启，让它包含的文档可见以被搜索&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;内存缓存被清空，等待接收新的文档&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image342.jpg&#34; class=&#34;&#34;&gt;{width=&#34;3.1754166666666666in&#34;
&lt;p&gt;height=&amp;quot;2.3379297900262466in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当一个查询被触发，所有已知的段按顺序被查询。词项统计会对所有段的结果进行聚合，以保证每个词和每个文档的关联都被准确计算。&lt;br /&gt;
这种方式可以用相对较低的成本将新文档添加到索引。&lt;/p&gt;
&lt;p&gt;段是不可改变的，所以既不能从把文档从旧的段中移除，也不能修改旧的段来进行反映文档的更新。&lt;br /&gt;
取而代之的是，每个提交点会包含一个 .del&lt;br /&gt;
 文件，文件中会列出这些被删除文档的段信息。&lt;/p&gt;
&lt;p&gt;当一个文档被 &amp;quot;删除&amp;quot; 时，它实际上只是在 .del 文件中被 标记&lt;br /&gt;
删除。一个被标记删除的文档仍然可以被查询匹配到，&lt;br /&gt;
但它会在最终结果被返回前从结果集中移除。&lt;/p&gt;
&lt;p&gt;文档更新也是类似的操作方式：当一个文档被更新时，旧版本文档被标记删除，文档的新版本被索引到一个新的段中。&lt;br /&gt;
可能两个版本的文档都会被一个查询匹配到，但被删除的那个旧版本文档在结果集返回前就已经被移除。&lt;/p&gt;
&lt;h4 id=&#34;464-近实时搜索&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#464-近实时搜索&#34;&gt;#&lt;/a&gt; 4.6.4 近实时搜索&lt;/h4&gt;
&lt;p&gt;随着按段（per-segment）搜索的发展，一个新的文档从索引到可被搜索的延迟显著降低了。新文档在几分钟之内即可被检索，但这样还是不够快。磁盘在这里成为了瓶颈。提交（Commiting）一个新的段到磁盘需要一个&lt;br /&gt;
 fsync 来确保段被物理性地写入磁盘，这样在断电的时候就不会丢失数据。 但是&lt;br /&gt;
 fsync 操作代价很大；&lt;br /&gt;
 如果每次索引一个文档都去执行一次的话会造成很大的性能问题。&lt;/p&gt;
&lt;p&gt;我们需要的是一个更轻量的方式来使一个文档可被搜索，这意味着 fsync&lt;br /&gt;
 要从整个过程中被移除。在 Elasticsearch 和磁盘之间是文件系统缓存。&lt;br /&gt;
像之前描述的一样， 在内存索引缓冲区中的文档会被写入到一个新的段中。&lt;br /&gt;
但是这里新段会被先写入到文件系统缓存 --- 这一步代价会比较低，稍后再被刷新到磁盘 --- 这一步代价比较高。不过只要文件已经在缓存中，就可以像其它文件一样被打开和读取了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image344.jpg&#34; class=&#34;&#34;&gt;{width=&#34;1.86375in&#34;
&lt;p&gt;height=&amp;quot;1.8991797900262468in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Lucene&lt;br /&gt;
 允许新段被写入和打开 --- 使其包含的文档在未进行一次完整提交时便对搜索可见。这种方式比进行一次提交代价要小得多，并且在不影响性能的前提下可以被频繁地执行。&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image346.jpg&#34; class=&#34;&#34;&gt;{width=&#34;2.2804166666666665in&#34;
&lt;p&gt;height=&amp;quot;2.1495964566929135in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 Elasticsearch 中，写入和打开一个新段的轻量的过程叫做 refresh 。&lt;br /&gt;
默认情况下每个分片会每秒自动刷新一次。这就是为什么我们说 Elasticsearch&lt;br /&gt;
 是 近 实时搜索：文档的变化并不是立即对搜索可见，但会在一秒之内变为可见。&lt;/p&gt;
&lt;p&gt;这些行为可能会对新用户造成困惑:&lt;br /&gt;
 他们索引了一个文档然后尝试搜索它，但却没有搜到。&lt;/p&gt;
&lt;p&gt;这个问题的解决办法是用 refresh API 执行一次手动刷新: /users/_refresh&lt;/p&gt;
&lt;p&gt;尽管刷新是比提交轻量很多的操作，它还是会有性能开销。当写测试的时候，&lt;br /&gt;
手动刷新很有用，但是不要在生产环境下每次索引一个文档都去手动刷新。&lt;br /&gt;
相反，你的应用需要意识到 Elasticsearch 的近实时的性质，并接受它的不足。&lt;/p&gt;
&lt;p&gt;并不是所有的情况都需要每秒刷新。可能你正在使用 Elasticsearch&lt;br /&gt;
 索引大量的日志文件，你可能想优化索引速度而不是近实时搜索， 可以通过设置&lt;br /&gt;
 refresh_interval ， 降低每个索引的刷新频率&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;settings&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;refresh_interval&amp;quot;: &amp;quot;30s&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;refresh_interval 可以在既存索引上进行动态更新。&lt;br /&gt;
在生产环境中，当你正在建立一个大的&lt;/p&gt;
&lt;p&gt;新索引时，可以先关闭自动刷新，待开始使用该索引时，再把它们调回来&lt;/p&gt;
&lt;p&gt;# 关闭自动刷新&lt;/p&gt;
&lt;p&gt;PUT /users/_settings&lt;/p&gt;
&lt;p refresh_interval:-1=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;# 每一秒刷新&lt;/p&gt;
&lt;p&gt;PUT /users/_settings&lt;/p&gt;
&lt;p refresh_interval:1s=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;465-持久化变更&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#465-持久化变更&#34;&gt;#&lt;/a&gt; 4.6.5 持久化变更&lt;/h4&gt;
&lt;p&gt;如果没有用 fsync&lt;br /&gt;
 把数据从文件系统缓存刷（flush）到硬盘，我们不能保证数据在断电甚至是程序正常退出之后依然存在。为了保证&lt;br /&gt;
 Elasticsearch 的可靠性，需要确保数据变化被持久化到磁盘。在&lt;br /&gt;
动态更新索引，我们说一次完整的提交会将段刷到磁盘，并写入一个包含所有段列表的提交点。Elasticsearch&lt;br /&gt;
 在启动或重新打开一个索引的过程中使用这个提交点来判断哪些段隶属于当前分片。&lt;/p&gt;
&lt;p&gt;即使通过每秒刷新（refresh）实现了近实时搜索，我们仍然需要经常进行完整提交来确保能从失败中恢复。但在两次提交之间发生变化的文档怎么办？我们也不希望丢失掉这些数据。Elasticsearch&lt;br /&gt;
 增加了一个 translog ，或者叫事务日志，在每一次对 Elasticsearch&lt;br /&gt;
 进行操作时均进行了日志记录整个流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一个文档被索引之后，就会被添加到内存缓冲区，并且追加到了 translog&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image348.jpg&#34; class=&#34;&#34;&gt;{width=&#34;2.1754166666666666in&#34;
&lt;p&gt;height=&amp;quot;1.8591797900262468in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;刷新（refresh）使分片每秒被刷新（refresh）一次：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;这些在内存缓冲区的文档被写入到一个新的段中，且没有进行 fsync&lt;br /&gt;
 操作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这个段被打开，使其可被搜索&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image350.jpg&#34; class=&#34;&#34;&gt;{width=&#34;2.4254166666666666in&#34;
&lt;p&gt;height=&amp;quot;2.3568886701662293in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;这个进程继续工作，更多的文档被添加到内存缓冲区和追加到事务日志&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image352.jpg&#34; class=&#34;&#34;&gt;{width=&#34;2.50875in&#34;
&lt;p&gt;height=&amp;quot;2.129179790026247in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;每隔一段时间 --- 例如 translog&lt;br /&gt;
 变得越来越大 --- 索引被刷新（flush）；一个新的 translog&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;被创建，并且一个全量提交被执行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;所有在内存缓冲区的文档都被写入一个新的段。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;缓冲区被清空。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一个提交点被写入硬盘。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文件系统缓存通过 fsync 被刷新（flush）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;老的 translog 被删除。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;translog 提供所有还没有被刷到磁盘的操作的一个持久化纪录。当&lt;br /&gt;
 Elasticsearch 启动的时候，&lt;br /&gt;
它会从磁盘中使用最后一个提交点去恢复已知的段，并且会重放 translog&lt;br /&gt;
 中所有在最后一次提交后发生的变更操作。&lt;/p&gt;
&lt;p&gt;translog 也被用来提供实时 CRUD 。当你试着通过 ID&lt;br /&gt;
 查询、更新、删除一个文档，它会在尝试从相应的段中检索之前， 首先检查&lt;br /&gt;
 translog 任何最近的变更。这意味着它总是能够实时地获取到文档的最新版本。&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image354.jpg&#34; class=&#34;&#34;&gt;{width=&#34;2.9470833333333335in&#34;
&lt;p&gt;height=&amp;quot;2.4433464566929133in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;执行一个提交并且截断 translog 的行为在 Elasticsearch 被称作一次 flush&lt;/p&gt;
&lt;p&gt;分片每 30 分钟被自动刷新（flush），或者在 translog&lt;br /&gt;
 太大的时候也会刷新你很少需要自己手动执行 flush&lt;br /&gt;
 操作；通常情况下，自动刷新就足够了。这就是说，在重启节点或关闭索引之前执行&lt;br /&gt;
 flush 有益于你的索引。当 Elasticsearch 尝试恢复或重新打开一个索引，&lt;br /&gt;
它需要重放 translog 中所有的操作，所以如果日志越短，恢复越快。&lt;/p&gt;
&lt;p&gt;translog 的目的是保证操作不会丢失，在文件被 fsync&lt;br /&gt;
 到磁盘前，被写入的文件在重启之后就会丢失。默认 translog 是每 5 秒被&lt;br /&gt;
 fsync 刷新到硬盘， 或者在每次写请求完成之后执行 (e.g. index, delete,&lt;br /&gt;
update, bulk)。这个过程在主分片和复制分片都会发生。最终，&lt;br /&gt;
基本上，这意味着在整个请求被 fsync 到主分片和复制分片的 translog&lt;br /&gt;
 之前，你的客户端不会得到一个 200 OK 响应。&lt;/p&gt;
&lt;p&gt;在每次请求后都执行一个 fsync&lt;br /&gt;
 会带来一些性能损失，尽管实践表明这种损失相对较小（特别是 bulk&lt;br /&gt;
 导入，它在一次请求中平摊了大量文档的开销）。&lt;/p&gt;
&lt;p&gt;但是对于一些大容量的偶尔丢失几秒数据问题也并不严重的集群，使用异步的&lt;br /&gt;
 fsync&lt;/p&gt;
&lt;p&gt;还是比较有益的。比如，写入的数据被缓存到内存中，再每 5 秒执行一次 fsync&lt;br /&gt;
。如果你决定使用异步 translog 的话，你需要 保证 在发生 crash 时，丢失掉&lt;br /&gt;
 sync_interval&lt;br /&gt;
 时间段的数据也无所谓。请在决定前知晓这个特性。如果你不确定这个行为的后果，最好是使用默认的参数（&lt;br /&gt;
&amp;quot;index.translog.durability&amp;quot;: &amp;quot;request&amp;quot; ）来避免数据丢失。&lt;/p&gt;
&lt;h3 id=&#34;466-段合并&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#466-段合并&#34;&gt;#&lt;/a&gt; 4.6.6 段合并&lt;/h3&gt;
&lt;p&gt;由于自动刷新流程每秒会创建一个新的段&lt;br /&gt;
，这样会导致短时间内的段数量暴增。而段数目太多会带来较大的麻烦。&lt;br /&gt;
每一个段都会消耗文件句柄、内存和 cpu 运行周期。更重要&lt;/p&gt;
&lt;p&gt;的是，每个搜索请求都必须轮流检查每个段；所以段越多，搜索也就越慢。&lt;/p&gt;
&lt;p&gt;Elasticsearch&lt;br /&gt;
 通过在后台进行段合并来解决这个问题。小的段被合并到大的段，然后这些大的段再被合并到更大的段。&lt;/p&gt;
&lt;p&gt;段合并的时候会将那些旧的已删除文档从文件系统中清除。被删除的文档（或被更新文档的旧版本）不会被拷贝到新的大段中。&lt;/p&gt;
&lt;p&gt;启动段合并不需要你做任何事。进行索引和搜索时会自动进行。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;当索引的时候，刷新（refresh）操作会创建新的段并将段打开以供搜索使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;合并进程选择一小部分大小相似的段，并且在后台将它们合并到更大的段中。这并不会&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;中断索引和搜索。&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image356.jpg&#34; class=&#34;&#34;&gt;{width=&#34;2.6554166666666665in&#34;
&lt;p&gt;height=&amp;quot;1.5254297900262468in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;一旦合并结束，老的段被删除&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;新的段被刷新（flush）到了磁盘。 **&lt;br /&gt;
 写入一个包含新段且排除旧的和较小的段的新提交点。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;新的段被打开用来搜索。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image358.jpg&#34; class=&#34;&#34;&gt;{width=&#34;2.73875in&#34;
&lt;p&gt;height=&amp;quot;1.9113582677165355in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;合并大的段需要消耗大量的 I/O 和 CPU&lt;br /&gt;
 资源，如果任其发展会影响搜索性能。Elasticsearch&lt;br /&gt;
 在默认情况下会对合并流程进行资源限制，所以搜索仍然&lt;br /&gt;
有足够的资源很好地执行。&lt;/p&gt;
&lt;h2 id=&#34;47-文档分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#47-文档分析&#34;&gt;#&lt;/a&gt; 4.7 文档分析&lt;/h2&gt;
&lt;p&gt;分析 包含下面的过程：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;将一块文本分成适合于倒排索引的独立的 词条&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将这些词条统一化为标准格式以提高它们的 &amp;quot;可搜索性&amp;quot;，或者 recall&lt;br /&gt;
 分析器执行上面的工作。分析器实际上是将三个功能封装到了一个包里：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!-- --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;字符过滤器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;首先，字符串按顺序通过每个 字符过滤器&lt;br /&gt;
。他们的任务是在分词前整理字符串。一个&lt;/p&gt;
&lt;p&gt;字符过滤器可以用来去掉 HTML，或者将 &amp;amp; 转化成 and。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分词器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其次，字符串被 分词器&lt;br /&gt;
分为单个的词条。一个简单的分词器遇到空格和标点的时候，&lt;/p&gt;
&lt;p&gt;可能会将文本拆分成词条。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Token 过滤器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最后，词条按顺序通过每个 token 过滤器&lt;br /&gt;
。这个过程可能会改变词条（例如，小写化 Quick ），删除词条（例如， 像 a，&lt;br /&gt;
and， the 等无用词），或者增加词条（例如，像 jump 和 leap 这种同义词）。&lt;/p&gt;
&lt;h3 id=&#34;471-内置分析器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#471-内置分析器&#34;&gt;#&lt;/a&gt; 4.7.1 内置分析器&lt;/h3&gt;
&lt;p&gt;Elasticsearch&lt;br /&gt;
 还附带了可以直接使用的预包装的分析器。接下来我们会列出最重要的分析器。为了证明它们的差异，我们看看每个分析器会从下面的字符串得到哪些词条：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;Set the shape to semi-transparent by calling set_trans(5)&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;标准分析器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;标准分析器是 Elasticsearch&lt;br /&gt;
 默认使用的分析器。它是分析各种语言文本最常用的选择。它根据 Unicode 联盟&lt;br /&gt;
定义的 单词边界 划分文本。删除绝大部分标点。最后，将词条小写。&lt;/p&gt;
&lt;p&gt;它会产生：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;set, the, shape, to, semi, transparent, by, calling, set_trans, 5&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;简单分析器&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;简单分析器在任何不是字母的地方分隔文本，将词条小写。它会产生： set,&lt;br /&gt;
the, shape, to, semi, transparent, by, calling, set, trans&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;空格分析器&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;空格分析器在空格的地方划分文本。它会产生：&lt;/p&gt;
&lt;p&gt;Set, the, shape, to, semi-transparent, by, calling, set_trans(5)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;语言分析器&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;特定语言分析器可用于 很多语言。它们可以考虑指定语言的特点。例如， 英语&lt;br /&gt;
分析&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;器附带了一组英语无用词（常用单词，例如 and 或者 the&lt;br /&gt;
，它们对相关性没有多少影响），它们会被删除。&lt;br /&gt;
由于理解英语语法的规则，这个分词器可以提取英语单词的 词干 。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;英语 分词器会产生下面的词条：&lt;/p&gt;
&lt;p&gt;set, shape, semi, transpar, call, set_tran, 5&lt;/p&gt;
&lt;p&gt;注意看 transparent、 calling 和 set_trans 已经变为词根格式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;472-分析器使用场景&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#472-分析器使用场景&#34;&gt;#&lt;/a&gt; 4.7.2 分析器使用场景&lt;/h3&gt;
&lt;p&gt;当我们 索引 一个文档，它的全文域被分析成词条以用来创建倒排索引。&lt;br /&gt;
但是，当我们在全文域 搜索 的时候，我们需要将查询字符串通过&lt;br /&gt;
相同的分析过程&lt;br /&gt;
，以保证我们搜索的词条格式与索引中的词条格式一致。全文查询，理解每个域是如何定义的，因此它们可以做正确的事：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;当你查询一个 全文 域时，&lt;br /&gt;
会对查询字符串应用相同的分析器，以产生正确的搜索词条列表。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当你查询一个 精确值&lt;br /&gt;
域时，不会分析查询字符串，而是搜索你指定的精确值。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;473-测试分析器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#473-测试分析器&#34;&gt;#&lt;/a&gt; 4.7.3 测试分析器&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;有些时候很难理解分词的过程和实际被存储到索引中的词条，特别是你刚接触&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Elasticsearch。为了理解发生了什么，你可以使用 analyze API&lt;br /&gt;
 来看文本是如何被分析的。&lt;/p&gt;
&lt;p&gt;在消息体里，指定分析器和要分析的文本&lt;/p&gt;
&lt;p&gt;+-------------------------------------+&lt;br /&gt;
| GET &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xvY2FsaG9zdDo5MjAwL19hbmFseXpl&#34;&gt;http://localhost:9200/_analyze&lt;/span&gt; |&lt;br /&gt;
|                                     |&lt;br /&gt;
| {                                   |&lt;br /&gt;
|                                     |&lt;br /&gt;
| &amp;quot;analyzer&amp;quot;: &amp;quot;standard&amp;quot;,         |&lt;br /&gt;
|                                     |&lt;br /&gt;
| &amp;quot;text&amp;quot;: &amp;quot;Text to analyze&amp;quot; }     |&lt;br /&gt;
+-------------------------------------+&lt;/p&gt;
&lt;p&gt;结果中每个元素代表一个单独的词条：&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;tokens&amp;quot;: [&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;token&amp;quot;: &amp;quot;text&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;start_offset&amp;quot;: 0,&lt;/p&gt;
&lt;p&gt;&amp;quot;end_offset&amp;quot;: 4,&lt;/p&gt;
&lt;p&gt;&amp;quot;type&amp;quot;: &amp;quot;&amp;lt;ALPHANUM&amp;gt;&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;position&amp;quot;: 1&lt;/p&gt;
&lt;p&gt;},&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;token&amp;quot;: &amp;quot;to&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;start_offset&amp;quot;: 5,&lt;/p&gt;
&lt;p&gt;&amp;quot;end_offset&amp;quot;: 7,&lt;/p&gt;
&lt;p&gt;&amp;quot;type&amp;quot;: &amp;quot;&amp;lt;ALPHANUM&amp;gt;&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;position&amp;quot;: 2&lt;/p&gt;
&lt;p&gt;},&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;token&amp;quot;: &amp;quot;analyze&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;start_offset&amp;quot;: 8,&lt;/p&gt;
&lt;p&gt;&amp;quot;end_offset&amp;quot;: 15,&lt;/p&gt;
&lt;p&gt;&amp;quot;type&amp;quot;: &amp;quot;&amp;lt;ALPHANUM&amp;gt;&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;position&amp;quot;: 3&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;]&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;token 是实际存储到索引中的词条。 position&lt;br /&gt;
 指明词条在原始文本中出现的位置。&lt;/p&gt;
&lt;p&gt;start_offset 和 end_offset 指明字符在原始字符串中的位置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.7.4&lt;/strong&gt;&lt;br /&gt;
 指定分析器当 Elasticsearch 在你的文档中检测到一个新的字符串域，它会自动设置其为一个全文&lt;br /&gt;
字符串 域，使用 标准&lt;br /&gt;
分析器对它进行分析。你不希望总是这样。可能你想使用一个不同的分析器，适用于你的数据使用的语言。有时候你想要一个字符串域就是一个字符串域 --- 不使用分析，直接索引你传入的精确值，例如用户&lt;br /&gt;
 ID&lt;br /&gt;
 或者一个内部的状态域或标签。要做到这一点，我们必须手动指定这些域的映射。&lt;/p&gt;
&lt;h3 id=&#34;475-ik-分词器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#475-ik-分词器&#34;&gt;#&lt;/a&gt; 4.7.5 IK &lt;sup&gt;分词器&lt;/sup&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;首先我们通过 Postman 发送 &lt;strong&gt;GET&lt;/strong&gt; 请求查询分词效果&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;# GET &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xvY2FsaG9zdDo5MjAwL19hbmFseXpl&#34;&gt;http://localhost:9200/_analyze&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;text&amp;quot;:&amp;quot;测试单词&amp;quot;&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image360.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.5586953193350832in&amp;quot;}&lt;/p&gt;
&lt;p&gt;ES&lt;br /&gt;
 的默认分词器无法识别中文中测试、单词这样的词汇，而是简单的将每个字拆完分为一&lt;/p&gt;
&lt;p&gt;个词&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;tokens&amp;quot;: [&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;token&amp;quot;: &amp;quot;测&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;start_offset&amp;quot;: 0,&lt;/p&gt;
&lt;p&gt;&amp;quot;end_offset&amp;quot;: 1,&lt;/p&gt;
&lt;p&gt;&amp;quot;type&amp;quot;: &amp;quot;&amp;lt;IDEOGRAPHIC&amp;gt;&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;position&amp;quot;: 0&lt;/p&gt;
&lt;p&gt;},&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;token&amp;quot;: &amp;quot;试&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;start_offset&amp;quot;: 1,&lt;/p&gt;
&lt;p&gt;&amp;quot;end_offset&amp;quot;: 2,&lt;/p&gt;
&lt;p&gt;&amp;quot;type&amp;quot;: &amp;quot;&amp;lt;IDEOGRAPHIC&amp;gt;&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;position&amp;quot;: 1&lt;/p&gt;
&lt;p&gt;},&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;token&amp;quot;: &amp;quot;单&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;start_offset&amp;quot;: 2,&lt;/p&gt;
&lt;p&gt;&amp;quot;end_offset&amp;quot;: 3,&lt;/p&gt;
&lt;p&gt;&amp;quot;type&amp;quot;: &amp;quot;&amp;lt;IDEOGRAPHIC&amp;gt;&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;position&amp;quot;: 2&lt;/p&gt;
&lt;p&gt;},&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;token&amp;quot;: &amp;quot;词&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;start_offset&amp;quot;: 3,&lt;/p&gt;
&lt;p&gt;&amp;quot;end_offset&amp;quot;: 4,&lt;/p&gt;
&lt;p&gt;&amp;quot;type&amp;quot;: &amp;quot;&amp;lt;IDEOGRAPHIC&amp;gt;&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;position&amp;quot;: 3&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;]&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;这样的结果显然不符合我们的使用要求，所以我们需要下载 ES&lt;br /&gt;
 对应版本的中文分词器。我们这里采用 IK 中文分词器，下载地址为:&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL21lZGNsL2VsYXN0aWNzZWFyY2gtYW5hbHlzaXMtaWsvcmVsZWFzZXMvdGFnL3Y3LjguMA==&#34;&gt;https://github.com/medcl/elasticsearch-analysis-ik/releases/tag/v7.8.0&lt;/span&gt;&lt;/span&gt;[&lt;span class=&#34;ul&#34;&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL21lZGNsL2VsYXN0aWNzZWFyY2gtYW5hbHlzaXMtaWsvcmVsZWFzZXMvdGFnL3Y3LjguMA==&#34;&gt;https://github.com/medcl/elasticsearch-analysis-ik/releases/tag/v7.8.0&lt;/span&gt;&lt;/span&gt;](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL21lZGNsL2VsYXN0aWNzZWFyY2gtYW5hbHlzaXMtaWs=&#34;&gt;https://github.com/medcl/elasticsearch-analysis-ik&lt;/span&gt;)&lt;/p&gt;
&lt;p&gt;将解压后的后的文件夹放入 ES 根目录下的 plugins 目录下，重启 ES&lt;br /&gt;
 即可使用。&lt;/p&gt;
&lt;p&gt;我们这次加入新的查询参数 &amp;quot;analyzer&amp;quot;:&amp;quot;ik_max_word&amp;quot;&lt;/p&gt;
&lt;p&gt;+----------------------------------------+&lt;br /&gt;
| # GET &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xvY2FsaG9zdDo5MjAwL19hbmFseXpl&#34;&gt;http://localhost:9200/_analyze&lt;/span&gt; |&lt;br /&gt;
|                                        |&lt;br /&gt;
| {                                      |&lt;br /&gt;
|                                        |&lt;br /&gt;
| &amp;quot;text&amp;quot;:&amp;quot;测试单词&amp;quot;,                 |&lt;br /&gt;
|                                        |&lt;br /&gt;
| &amp;quot;analyzer&amp;quot;:&amp;quot;ik_max_word&amp;quot; }         |&lt;br /&gt;
+----------------------------------------+&lt;/p&gt;
&lt;p&gt; ik_max_word：会将文本做最细粒度的拆分&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image362.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.6764709098862642in&amp;quot;}&lt;/p&gt;
&lt;p&gt;使用中文分词后的结果为：&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;tokens&amp;quot;: [&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;token&amp;quot;: &amp;quot;测试&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;start_offset&amp;quot;: 0, &amp;quot;end_offset&amp;quot;: 2,&lt;/p&gt;
&lt;p&gt;&amp;quot;type&amp;quot;: &amp;quot;CN_WORD&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;position&amp;quot;: 0&lt;/p&gt;
&lt;p&gt;},&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;token&amp;quot;: &amp;quot;单词&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;start_offset&amp;quot;: 2, &amp;quot;end_offset&amp;quot;: 4,&lt;/p&gt;
&lt;p&gt;&amp;quot;type&amp;quot;: &amp;quot;CN_WORD&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;position&amp;quot;: 1&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;] }&lt;/p&gt;
&lt;p&gt;ES 中也可以进行扩展词汇，首先查询&lt;/p&gt;
&lt;p&gt;+----------------------------------------+&lt;br /&gt;
| # GET &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xvY2FsaG9zdDo5MjAwL19hbmFseXpl&#34;&gt;http://localhost:9200/_analyze&lt;/span&gt; |&lt;br /&gt;
|                                        |&lt;br /&gt;
| {                                      |&lt;br /&gt;
|                                        |&lt;br /&gt;
| &amp;quot;text&amp;quot;:&amp;quot;弗雷尔卓德&amp;quot;,               |&lt;br /&gt;
|                                        |&lt;br /&gt;
| &amp;quot;analyzer&amp;quot;:&amp;quot;ik_max_word&amp;quot; }         |&lt;br /&gt;
+----------------------------------------+&lt;/p&gt;
&lt;p&gt;仅仅可以得到每个字的分词结果，我们需要做的就是使分词器识别到弗雷尔卓德也是一个词&lt;/p&gt;
&lt;p&gt;语&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;tokens&amp;quot;: [ { &amp;quot;token&amp;quot;: &amp;quot;弗&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;start_offset&amp;quot;: 0,&lt;/p&gt;
&lt;p&gt;&amp;quot;end_offset&amp;quot;: 1,&lt;/p&gt;
&lt;p&gt;&amp;quot;type&amp;quot;: &amp;quot;CN_CHAR&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;position&amp;quot;: 0&lt;/p&gt;
&lt;p&gt;},&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;token&amp;quot;: &amp;quot;雷&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;start_offset&amp;quot;: 1,&lt;/p&gt;
&lt;p&gt;&amp;quot;end_offset&amp;quot;: 2,&lt;/p&gt;
&lt;p&gt;&amp;quot;type&amp;quot;: &amp;quot;CN_CHAR&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;position&amp;quot;: 1&lt;/p&gt;
&lt;p&gt;},&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;token&amp;quot;: &amp;quot;尔&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;start_offset&amp;quot;: 2,&lt;/p&gt;
&lt;p&gt;&amp;quot;end_offset&amp;quot;: 3,&lt;/p&gt;
&lt;p&gt;&amp;quot;type&amp;quot;: &amp;quot;CN_CHAR&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;position&amp;quot;: 2&lt;/p&gt;
&lt;p&gt;},&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;token&amp;quot;: &amp;quot;卓&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;start_offset&amp;quot;: 3, &amp;quot;end_offset&amp;quot;: 4,&lt;/p&gt;
&lt;p&gt;&amp;quot;type&amp;quot;: &amp;quot;CN_CHAR&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;position&amp;quot;: 3&lt;/p&gt;
&lt;p&gt;},&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;token&amp;quot;: &amp;quot;德&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;start_offset&amp;quot;: 4, &amp;quot;end_offset&amp;quot;: 5,&lt;/p&gt;
&lt;p&gt;&amp;quot;type&amp;quot;: &amp;quot;CN_CHAR&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;position&amp;quot;: 4&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;]&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;首先进入 ES 根目录中的 plugins 文件夹下的 ik 文件夹，进入 config&lt;br /&gt;
 目录，创建 custom.dic 文件，写入弗雷尔卓德。同时打开 IKAnalyzer.cfg.xml&lt;br /&gt;
 文件，将新建的 custom.dic 配置其中，&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image364.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.078973097112861in&#34;
&lt;p&gt;height=&amp;quot;1.5677766841644794in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image366.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;2.626213910761155in&amp;quot;}&lt;/p&gt;
&lt;p&gt;虽然 Elasticsearch 带有一些现成的分析器，然而在分析器上 Elasticsearch&lt;br /&gt;
 真正的强大之处在于，你可以通过在一个适合你的特定数据的设置之中组合字符过滤器、分词器、词汇单元过滤器来创建自定义的分析器。在&lt;br /&gt;
分析与分析器 我们说过，一个 分析器&lt;br /&gt;
就是在一个包里面组合了三种函数的一个包装器， 三种函数按照顺序被执行:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;字符过滤器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;字符过滤器 用来 整理 一个尚未被分词的字符串。例如，如果我们的文本是 HTML&lt;br /&gt;
 格式的，它会包含像 &amp;lt;p&amp;gt; 或者 &amp;lt;div&amp;gt; 这样的 HTML&lt;br /&gt;
 标签，这些标签是我们不想索引的。我们可以使用 html 清除 字符过滤器&lt;br /&gt;
来移除掉所有的 HTML 标签，并且像把 Á 转换为相对应的 Unicode 字符&lt;br /&gt;
 Á 这样，转换 HTML 实体。一个分析器可能有 0 个或者多个字符过滤器。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分词器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一个分析器 必须 有一个唯一的分词器。&lt;br /&gt;
分词器把字符串分解成单个词条或者词汇单元。 标准 分析器里使用的 标准&lt;br /&gt;
分词器&lt;br /&gt;
把一个字符串根据单词边界分解成单个词条，并且移除掉大部分的标点符号，然而还有其他不同行为的分词器存在。&lt;/p&gt;
&lt;p&gt;例如， 关键词 分词器 完整地输出 接收到的同样的字符串，并不做任何分词。&lt;br /&gt;
空格 分词器 只根据空格分割文本 。 正则 分词器&lt;br /&gt;
根据匹配正则表达式来分割文本 。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;词单元过滤器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;经过分词，作为结果的 词单元流 会按照指定的顺序通过指定的词单元过滤器 。&lt;/p&gt;
&lt;p&gt;词单元过滤器可以修改、添加或者移除词单元。我们已经提到过 lowercase 和&lt;br /&gt;
 stop 词过滤器 ，但是在 Elasticsearch&lt;br /&gt;
 里面还有很多可供选择的词单元过滤器。 词干过滤器 把单词 遏制 为 词干。&lt;br /&gt;
ascii_folding 过滤器移除变音符，把一个像 &amp;quot;très&amp;quot; 这样的词转换为&lt;br /&gt;
 &amp;quot;tres&amp;quot; 。 ngram 和 edge_ngram 词单元过滤器 可以产生&lt;br /&gt;
适合用于部分匹配或者自动补全的词单元。&lt;/p&gt;
&lt;p&gt;接下来，我们看看如何创建自定义的分析器：&lt;/p&gt;
&lt;p&gt;# PUT &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xvY2FsaG9zdDo5MjAwL215X2luZGV4&#34;&gt;http://localhost:9200/my_index&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;settings&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;analysis&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;char_filter&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;&amp;amp;_to_and&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;type&amp;quot;: &amp;quot;mapping&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;mappings&amp;quot;: [ &amp;quot;&amp;amp;=&amp;gt; and &amp;quot;]&lt;/p&gt;
&lt;p&gt;}},&lt;/p&gt;
&lt;p&gt;&amp;quot;filter&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;my_stopwords&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;type&amp;quot;: &amp;quot;stop&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;stopwords&amp;quot;: [ &amp;quot;the&amp;quot;, &amp;quot;a&amp;quot; ]&lt;/p&gt;
&lt;p&gt;}},&lt;/p&gt;
&lt;p&gt;&amp;quot;analyzer&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;my_analyzer&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;type&amp;quot;: &amp;quot;custom&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;char_filter&amp;quot;: [ &amp;quot;html_strip&amp;quot;, &amp;quot;&amp;amp;_to_and&amp;quot; ],&lt;/p&gt;
&lt;p&gt;&amp;quot;tokenizer&amp;quot;: &amp;quot;standard&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;filter&amp;quot;: [ &amp;quot;lowercase&amp;quot;, &amp;quot;my_stopwords&amp;quot; ]&lt;/p&gt;
&lt;p&gt;}}&lt;/p&gt;
&lt;p&gt;}}}&lt;/p&gt;
&lt;p&gt;索引被创建以后，使用 analyze API 来 测试这个新的分析器&lt;/p&gt;
&lt;p&gt;# GET &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovLzEyNy4wLjAuMTo5MjAwL215X2luZGV4L19hbmFseXpl&#34;&gt;http://127.0.0.1:9200/my_index/_analyze&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;text&amp;quot;:&amp;quot;The quick &amp;amp; brown fox&amp;quot;,&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image368.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.829388670166229in&#34;
&lt;p&gt;height=&amp;quot;1.794945319335083in&amp;quot;}&lt;/p&gt;
&lt;p&gt;下面的缩略结果展示出我们的分析器正在正确地运行&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;tokens&amp;quot;: [&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;token&amp;quot;: &amp;quot;quick&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;start_offset&amp;quot;: 4,&lt;/p&gt;
&lt;p&gt;&amp;quot;end_offset&amp;quot;: 9,&lt;/p&gt;
&lt;p&gt;&amp;quot;type&amp;quot;: &amp;quot;&amp;lt;ALPHANUM&amp;gt;&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;position&amp;quot;: 1&lt;/p&gt;
&lt;p&gt;},&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;token&amp;quot;: &amp;quot;and&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;start_offset&amp;quot;: 10,&lt;/p&gt;
&lt;p&gt;&amp;quot;end_offset&amp;quot;: 11,&lt;/p&gt;
&lt;p&gt;&amp;quot;type&amp;quot;: &amp;quot;&amp;lt;ALPHANUM&amp;gt;&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;position&amp;quot;: 2&lt;/p&gt;
&lt;p&gt;}, { &amp;quot;token&amp;quot;: &amp;quot;brown&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;start_offset&amp;quot;: 12,&lt;/p&gt;
&lt;p&gt;&amp;quot;end_offset&amp;quot;: 17,&lt;/p&gt;
&lt;p&gt;&amp;quot;type&amp;quot;: &amp;quot;&amp;lt;ALPHANUM&amp;gt;&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;position&amp;quot;: 3&lt;/p&gt;
&lt;p&gt;},&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;token&amp;quot;: &amp;quot;fox&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;start_offset&amp;quot;: 18,&lt;/p&gt;
&lt;p&gt;&amp;quot;end_offset&amp;quot;: 21,&lt;/p&gt;
&lt;p&gt;&amp;quot;type&amp;quot;: &amp;quot;&amp;lt;ALPHANUM&amp;gt;&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;position&amp;quot;: 4&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;]&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;h2 id=&#34;48-文档处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#48-文档处理&#34;&gt;#&lt;/a&gt; 4.8 文档处理&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;4.8.1&lt;/strong&gt; 文档冲突当我们使用 index API 更新文档&lt;br /&gt;
，可以一次性读取原始文档，做我们的修改，然后重新索引 整个文档 。&lt;br /&gt;
最近的索引请求将获胜：无论最后哪一个文档被索引，都将被唯一存&lt;/p&gt;
&lt;p&gt;储在 Elasticsearch 中。如果其他人同时更改这个文档，他们的更改将丢失。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;很多时候这是没有问题的。也许我们的主数据存储是一个关系型数据库，我们只是将数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;据复制到 Elasticsearch 中并使其可被搜索。&lt;br /&gt;
也许两个人同时更改相同的文档的几率很小。或者对于我们的业务来说偶尔丢失更改并不是很严重的问题。&lt;/p&gt;
&lt;p&gt;但有时丢失了一个变更就是 非常严重的 。试想我们使用 Elasticsearch&lt;br /&gt;
 存储我们网上商城商品库存的数量， 每次我们卖一个商品的时候，我们在&lt;br /&gt;
 Elasticsearch&lt;br /&gt;
 中将库存数量减少。有一天，管理层决定做一次促销。突然地，我们一秒要卖好几个商品。&lt;br /&gt;
假设有两个 web 程序并行运行，每一个都同时处理所有商品的销售&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image370.jpg&#34; class=&#34;&#34;&gt;{width=&#34;1.675417760279965in&#34;
&lt;p&gt;height=&amp;quot;2.1920964566929135in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;web_1 对 stock_count 所做的更改已经丢失，因为 web_2 不知道它的&lt;br /&gt;
 stock_count 的&lt;/p&gt;
&lt;p&gt;拷贝已经过期。&lt;br /&gt;
结果我们会认为有超过商品的实际数量的库存，因为卖给顾客的库存商品并不存在，我们将让他们非常失望。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;变更越频繁，读数据和更新数据的间隙越长，也就越可能丢失变更。&lt;/p&gt;
&lt;p&gt;在数据库领域中，有两种方法通常被用来确保并发更新时变更不会丢失：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;悲观并发控制&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这种方法被关系型数据库广泛使用，它假定有变更冲突可能发生，因此阻塞访问资源以防止冲突。&lt;br /&gt;
一个典型的例子是读取一行数据之前先将其锁住，确保只有放置锁的线程能够对这行数据进行修改。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;乐观并发控制&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Elasticsearch&lt;br /&gt;
 中使用的这种方法假定冲突是不可能发生的，并且不会阻塞正在尝试的操作。&lt;br /&gt;
然而，如果源数据在读写当中被修改，更新将会失败。应用程序接下来将决定该如何解决冲突。&lt;br /&gt;
例如，可以重试更新、使用新的数据、或者将相关情况报告给用户。&lt;/p&gt;
&lt;h3 id=&#34;482-乐观并发控制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#482-乐观并发控制&#34;&gt;#&lt;/a&gt; 4.8.2 乐观并发控制&lt;/h3&gt;
&lt;p&gt;Elasticsearch 是分布式的。当文档创建、更新或删除时，&lt;br /&gt;
新版本的文档必须复制到集群中的其他节点。Elasticsearch&lt;br /&gt;
 也是异步和并发的，这意味着这些复制请求被并行发送，并且到达目的地时也许&lt;br /&gt;
顺序是乱的 。 Elasticsearch&lt;br /&gt;
 需要一种方法确保文档的旧版本不会覆盖新的版本。&lt;/p&gt;
&lt;p&gt;当我们之前讨论 index ， GET 和 delete 请求时，我们指出每个文档都有一个&lt;br /&gt;
_version （版本）号，当文档被修改时版本号递增。 Elasticsearch 使用这个&lt;br /&gt;
 version&lt;br /&gt;
 号来确保变更以正确顺序得到执行。如果旧版本的文档在新版本之后到达，它可以被简单的忽略。&lt;/p&gt;
&lt;p&gt;我们可以利用 version 号来确保&lt;br /&gt;
应用中相互冲突的变更不会导致数据丢失。我们通过指定想要修改文档的 version&lt;br /&gt;
 号来达到这个目的。 如果该版本不是当前版本号，我们的请求将会失败。&lt;/p&gt;
&lt;p&gt;老的版本 es 使用 version，但是新版本不支持了，会报下面的错误，提示我们用&lt;br /&gt;
 if_seq_no 和 if_primary_term&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;error&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;root_cause&amp;quot;: [&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;type&amp;quot;: &amp;quot;action_request_validation_exception&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;reason&amp;quot;: &amp;quot;Validation Failed: 1: internal versioning can not be used&lt;br /&gt;
for optimistic concurrency control. Please use `if_seq_no` and&lt;br /&gt;
`if_primary_term` instead;&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;],&lt;/p&gt;
&lt;p&gt;&amp;quot;type&amp;quot;: &amp;quot;action_request_validation_exception&amp;quot;,&lt;/p&gt;
&lt;p&gt;&amp;quot;reason&amp;quot;: &amp;quot;Validation Failed: 1: internal versioning can not be used&lt;br /&gt;
for optimistic concurrency control. Please use `if_seq_no` and&lt;br /&gt;
`if_primary_term` instead;&amp;quot;&lt;/p&gt;
&lt;p&gt;},&lt;/p&gt;
&lt;p&gt;&amp;quot;status&amp;quot;: 400&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4.8.3&lt;/strong&gt;&lt;br /&gt;
 外部系统版本控制一个常见的设置是使用其它数据库作为主要的数据存储，使用&lt;br /&gt;
 Elasticsearch 做数据检索，&lt;br /&gt;
这意味着主数据库的所有更改发生时都需要被复制到 Elasticsearch&lt;br /&gt;
，如果多个进程负责这一数据同步，你可能遇到类似于之前描述的并发问题。如果你的主数据库已经有了版本号 --- 或一个能作为版本号的字段值比如&lt;br /&gt;
 timestamp ---&lt;/p&gt;
&lt;p&gt;那么你就可以在 Elasticsearch 中通过增加 version_type=external&lt;br /&gt;
 到查询字符串的方式重用这些相同的版本号， 版本号必须是大于零的整数，&lt;br /&gt;
且小于 9.2E+18 --- 一个 Java 中 long&lt;/p&gt;
&lt;p&gt;类型的正值。&lt;/p&gt;
&lt;p&gt;外部版本号的处理方式和我们之前讨论的内部版本号的处理方式有些不同，&lt;/p&gt;
&lt;p&gt;Elasticsearch 不是检查当前 _version 和请求中指定的版本号是否相同，&lt;br /&gt;
而是检查当前 _version 是否 小于 指定的版本号。&lt;br /&gt;
如果请求成功，外部的版本号作为文档的新 _version 进行存储。&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image372.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;2.92001312335958in&amp;quot;}&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image374.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;3.003764216972878in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;外部版本号不仅在索引和删除请求是可以指定，而且在 创建&lt;br /&gt;
新文档时也可以指定。&lt;/p&gt;
&lt;h2 id=&#34;45-kibana&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#45-kibana&#34;&gt;#&lt;/a&gt; 4.5 Kibana&lt;/h2&gt;
&lt;p&gt;Kibana 是一个免费且开放的用户界面，能够让你对 Elasticsearch&lt;br /&gt;
 数据进行可视化，并让你在 Elastic Stack&lt;br /&gt;
 中进行导航。你可以进行各种操作，从跟踪查询负载，到理解请求如何流经你的整个应用，都能轻松完成。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;下载地址：&lt;span&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hcnRpZmFjdHMuZWxhc3RpYy5jby9kb3dubG9hZHMva2liYW5hL2tpYmFuYS03LjguMC13aW5kb3dzLXg4Nl82NC56aXA=&#34;&gt;https://artifacts.elastic.co/downloads/kibana/kibana-7.8.0-windows-x86_64.zip&lt;/span&gt;&lt;/span&gt;[&lt;span class=&#34;ul&#34;&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hcnRpZmFjdHMuZWxhc3RpYy5jby9kb3dubG9hZHMva2liYW5hL2tpYmFuYS03LjguMC13aW5kb3dzLXg4Nl82NC56aXA=&#34;&gt;https://artifacts.elastic.co/downloads/kibana/kibana-7.8.0-windows-x86_64.zip&lt;/span&gt;&lt;/span&gt;](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hcnRpZmFjdHMuZWxhc3RpYy5jby9kb3dubG9hZHMva2liYW5hL2tpYmFuYS03LjguMC13aW5kb3dzLXg4Nl82NC56aXA=&#34;&gt;https://artifacts.elastic.co/downloads/kibana/kibana-7.8.0-windows-x86_64.zip&lt;/span&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;解压缩下载的 zip 文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改 config/kibana.yml 文件&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;# 默认端口&lt;/p&gt;
&lt;p&gt;server.port: 5601&lt;/p&gt;
&lt;p&gt;# ES 服务器的地址&lt;/p&gt;
&lt;p&gt;elasticsearch.hosts: [&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xvY2FsaG9zdDo5MjAw&#34;&gt;http://localhost:9200&lt;/span&gt;&amp;quot;]&lt;/p&gt;
&lt;p&gt;# 索引名&lt;/p&gt;
&lt;p&gt;kibana.index: &amp;quot;.kibana&amp;quot;&lt;/p&gt;
&lt;p&gt;# 支持中文&lt;/p&gt;
&lt;p&gt;i18n.locale: &amp;quot;zh-CN&amp;quot;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Windows 环境下执行 bin/kibana.bat 文件&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image376.jpg&#34; class=&#34;&#34;&gt;{width=&#34;3.51875in&#34;
&lt;p&gt;height=&amp;quot;1.8243055555555556in&amp;quot;}&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;通过浏览器访问 : &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2xvY2FsaG9zdDo1NjAx&#34;&gt;http://localhost:5601&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image377.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.453973097112861in&#34;
&lt;p&gt;height=&amp;quot;2.2845833333333334in&amp;quot;}&lt;/p&gt;
&lt;h2 id=&#34;51-spring-data-框架集成&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#51-spring-data-框架集成&#34;&gt;#&lt;/a&gt; 5.1 Spring Data 框架集成&lt;/h2&gt;
&lt;h3 id=&#34;511-spring-data-框架介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#511-spring-data-框架介绍&#34;&gt;#&lt;/a&gt; 5.1.1 Spring Data 框架介绍&lt;/h3&gt;
&lt;p&gt;Spring Data&lt;br /&gt;
 是一个用于简化数据库、非关系型数据库、索引库访问，并支持云服务的开源框架。其主要目标是使得对数据的访问变得方便快捷，并支持&lt;br /&gt;
 map-reduce 框架和云计算数据服务。 Spring Data 可以极大的简化&lt;br /&gt;
 JPA（Elasticsearch„）的写法，可以在几乎不用写实现的情况下，实现对数据的访问和操作。除了&lt;br /&gt;
 CRUD 外，还包括如分页、排序等一些常用的功能。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p class=&#34;ul&#34;&gt;Spring Data&lt;br /&gt;
 的官网：[&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcHJpbmcuaW8vcHJvamVjdHMvc3ByaW5n&#34;&gt;https://spring.io/projects/spring&lt;/span&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcHJpbmcuaW8vcHJvamVjdHMvc3ByaW5nLWRhdGE=&#34;&gt;-data&lt;/span&gt;]&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image379.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.822778871391076in&#34;
&lt;p&gt;height=&amp;quot;1.7329297900262468in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Spring Data 常用的功能模块如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image381.jpg&#34; class=&#34;&#34;&gt;{width=&#34;1.3416666666666666in&#34;
&lt;p&gt;height=&amp;quot;3.2758464566929133in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;512-spring-data-elasticsearch-介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#512-spring-data-elasticsearch-介绍&#34;&gt;#&lt;/a&gt; 5.1.2 Spring Data Elasticsearch 介绍&lt;/h3&gt;
&lt;p&gt;Spring Data Elasticsearch 基于 spring data API 简化 Elasticsearch&lt;br /&gt;
 操作，将原始操作&lt;/p&gt;
&lt;p&gt;Elasticsearch 的客户端 API 进行封装 。Spring Data 为 Elasticsearch&lt;br /&gt;
 项目提供集成搜索引擎。 Spring Data Elasticsearch POJO&lt;br /&gt;
 的关键功能区域为中心的模型与 Elastichsearch 交互文档和轻&lt;/p&gt;
&lt;p&gt;松地编写一个存储索引库数据访问层。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;官方网站: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zcHJpbmcuaW8vcHJvamVjdHMvc3ByaW5nLWRhdGEtZWxhc3RpY3NlYXJjaA==&#34;&gt;https://spring.io/projects/spring-data-elasticsearch&lt;/span&gt;&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image383.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.072361111111111in&#34;
&lt;p&gt;height=&amp;quot;1.8791797900262468in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;513-spring-data-elasticsearch-版本对比&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#513-spring-data-elasticsearch-版本对比&#34;&gt;#&lt;/a&gt; 5.1.3 Spring Data Elasticsearch 版本对比&lt;/h3&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image385.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.246527777777778in&#34;
&lt;p&gt;height=&amp;quot;1.5291666666666666in&amp;quot;}&lt;/p&gt;
&lt;p&gt;目前最新 springboot 对应 Elasticsearch7.6.2，Spring boot2.3.x&lt;br /&gt;
 一般可以兼容 Elasticsearch7.x&lt;/p&gt;
&lt;h3 id=&#34;514-框架集成&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#514-框架集成&#34;&gt;#&lt;/a&gt; 5.1.4 框架集成&lt;/h3&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image386.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.703973097112861in&#34;
&lt;p&gt;height=&amp;quot;2.8731627296587927in&amp;quot;}&lt;/p&gt;
&lt;p&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;project xmlns=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21hdmVuLmFwYWNoZS5vcmcvUE9NLzQuMC4w&#34;&gt;http://maven.apache.org/POM/4.0.0&lt;/span&gt;&amp;quot;&lt;br /&gt;
xmlns:xsi=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2U=&#34;&gt;http://www.w3.org/2001/XMLSchema-instance&lt;/span&gt;&amp;quot;&lt;br /&gt;
xsi:schemaLocation=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21hdmVuLmFwYWNoZS5vcmcvUE9NLzQuMC4w&#34;&gt;http://maven.apache.org/POM/4.0.0&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21hdmVuLmFwYWNoZS5vcmcveHNkL21hdmVuLTQuMC4wLnhzZA==&#34;&gt;http://maven.apache.org/xsd/maven-4.0.0.xsd&lt;/span&gt;&amp;quot;&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;parent&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;spring-boot-starter-parent&amp;lt;/artifactId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;version&amp;gt;2.3.6.RELEASE&amp;lt;/version&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;relativePath/&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/parent&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;groupId&amp;gt;com.atguigu.es&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;springdata-elasticsearch&amp;lt;/artifactId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;version&amp;gt;1.0&amp;lt;/version&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;properties&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;maven.compiler.source&amp;gt;8&amp;lt;/maven.compiler.source&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;maven.compiler.target&amp;gt;8&amp;lt;/maven.compiler.target&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/properties&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;dependencies&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;groupId&amp;gt;org.projectlombok&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;lombok&amp;lt;/artifactId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;spring-boot-starter-data-elasticsearch&amp;lt;/artifactId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;spring-boot-devtools&amp;lt;/artifactId&amp;gt;&lt;br /&gt;
&amp;lt;scope&amp;gt;runtime&amp;lt;/scope&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;optional&amp;gt;true&amp;lt;/optional&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;spring-boot-starter-test&amp;lt;/artifactId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;spring-boot-test&amp;lt;/artifactId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;groupId&amp;gt;org.springframework&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;spring-test&amp;lt;/artifactId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/dependencies&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/project&amp;gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;增加配置文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在 resources 目录中增加 application.properties 文件&lt;/p&gt;
&lt;p&gt;# es 服务地址&lt;/p&gt;
&lt;p&gt;elasticsearch.host=127.0.0.1&lt;/p&gt;
&lt;p&gt;# es 服务端口&lt;/p&gt;
&lt;p&gt;elasticsearch.port=9200&lt;/p&gt;
&lt;p&gt;# 配置日志级别，开启 debug 日志&lt;/p&gt;
&lt;p&gt;logging.level.com.atguigu.es=debug&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;SpringBoot 主程序&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| package &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NvbS5hdGd1aWd1LmVz&#34;&gt;com.atguigu.es&lt;/span&gt;;                                              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| import org.springframework.boot.SpringApplication; import            |&lt;br /&gt;
| org.springframework.boot.autoconfigure.SpringBootApplication;        |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @SpringBootApplication public class                                 |&lt;br /&gt;
| SpringDataElasticSearchMainApplication { public static void          |&lt;br /&gt;
| main(String[] args) {                                              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| Sprin                                                                |&lt;br /&gt;
| gApplication.run(SpringDataElasticSearchMainApplication.class,args); |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;数据实体类&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;package &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NvbS5hdGd1aWd1LmVz&#34;&gt;com.atguigu.es&lt;/span&gt;;&lt;/p&gt;
&lt;p&gt;import lombok.AllArgsConstructor; import lombok.Data; import&lt;br /&gt;
lombok.NoArgsConstructor; import lombok.ToString;&lt;/p&gt;
&lt;p&gt;@Data&lt;/p&gt;
&lt;p&gt;@NoArgsConstructor&lt;/p&gt;
&lt;p&gt;@AllArgsConstructor @ToString public class Product { private Long&lt;br /&gt;
id;// 商品唯一标识 private String title;// 商品名称 private String&lt;br /&gt;
category;// 分类名称 private Double price;// 商品价格 private String&lt;br /&gt;
images;// 图片地址&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;6. 配置类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ElasticsearchRestTemplate 是 spring-data-elasticsearch&lt;br /&gt;
 项目中的一个类，和其他 spring 项目中的 template 类似。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在新版的 spring-data-elasticsearch 中，ElasticsearchRestTemplate&lt;br /&gt;
 代替了原来的 ElasticsearchTemplate。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;原因是 ElasticsearchTemplate 基于 TransportClient，TransportClient&lt;br /&gt;
 即将在 8.x 以后的版本中移除。所以，我们推荐使用&lt;br /&gt;
 ElasticsearchRestTemplate。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ElasticsearchRestTemplate 基于 RestHighLevelClient&lt;br /&gt;
 客户端的。需要自定义配置类，继承&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;AbstractElasticsearchConfiguration，并实现&lt;br /&gt;
 elasticsearchClient () 抽象方法，创建 RestHighLevelClient 对象。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| package &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NvbS5hdGd1aWd1LmVz&#34;&gt;com.atguigu.es&lt;/span&gt;;                                              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| import lombok.Data; import org.apache.http.HttpHost; import          |&lt;br /&gt;
| org.elasticsearch.client.RestClient; import                          |&lt;br /&gt;
| org.elasticsearch.client.RestClientBuilder; import                   |&lt;br /&gt;
| org.elasticsearch.client.RestHighLevelClient; import                 |&lt;br /&gt;
| org.springframework.boot.context.properties.ConfigurationProperties; |&lt;br /&gt;
| import org.springframework.context.annotation.Configuration; import  |&lt;br /&gt;
| org.spri                                                             |&lt;br /&gt;
| ngframework.data.elasticsearch.config.AbstractElasticsearchConfigura |&lt;br /&gt;
| tion;                                                                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @ConfigurationProperties(prefix = &amp;quot;elasticsearch&amp;quot;)                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @Configuration                                                      |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @Data public class ElasticsearchConfig extends                      |&lt;br /&gt;
| AbstractElasticsearchConfiguration { private String host ; private   |&lt;br /&gt;
| Integer port ;                                                       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // 重写父类方法                                                       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @Override                                                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| public RestHighLevelClient elasticsearchClient() {                   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| RestClientBuilder builder = RestClient.builder(new HttpHost(host,    |&lt;br /&gt;
| port));                                                              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| RestHighLevelClient restHighLevelClient = new                        |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| RestHighLevelClient(builder); return restHighLevelClient;            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;DAO 数据访问对象&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;package &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NvbS5hdGd1aWd1LmVz&#34;&gt;com.atguigu.es&lt;/span&gt;;&lt;/p&gt;
&lt;p&gt;import&lt;br /&gt;
org.springframework.data.elasticsearch.repository.ElasticsearchRepository;&lt;br /&gt;
import org.springframework.stereotype.Repository;&lt;/p&gt;
&lt;p&gt;@Repository public interface ProductDao extends&lt;br /&gt;
ElasticsearchRepository&amp;lt;Product,Long&amp;gt; {&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;实体类映射操作&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;package &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NvbS5hdGd1aWd1LmVz&#34;&gt;com.atguigu.es&lt;/span&gt;;&lt;/p&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| import lombok.AllArgsConstructor; import lombok.Data; import         |&lt;br /&gt;
| lombok.NoArgsConstructor; import lombok.ToString; import             |&lt;br /&gt;
| &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL29yZy5zcHJpbmdmcmFtZXdvcmsuZGF0YS5hbm5vdGF0aW9uLklk&#34;&gt;org.springframework.data.annotation.Id&lt;/span&gt;; import                       |&lt;br /&gt;
| org.springframework.data.elasticsearch.annotations.Document; import  |&lt;br /&gt;
| org.springframework.data.elasticsearch.annotations.Field; import     |&lt;br /&gt;
| org.springframework.data.elasticsearch.annotations.FieldType;        |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @Data                                                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @NoArgsConstructor                                                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @AllArgsConstructor                                                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @ToString                                                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @Document(indexName = &amp;quot;shopping&amp;quot;, shards = 3, replicas = 1)       |&lt;br /&gt;
| public class Product {                                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // 必须有 id, 这里的 id 是全局唯一的标识，等同于 es 中的 &amp;quot;_id&amp;quot;            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @Id                                                                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| private Long id;// 商品唯一标识                                       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| /**                                                                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| -   type : 字段数据类型                                              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| -   analyzer : 分词器类型                                            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| -   index : 是否索引 (默认:true)                                      |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| -   Keyword : 短语，不进行分词                                        |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| */                                                                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @Field(type = FieldType.Text, analyzer = &amp;quot;ik_max_word&amp;quot;) private   |&lt;br /&gt;
| String title;// 商品名称 @Field (type = FieldType.Keyword) private    |&lt;br /&gt;
| String category;// 分类名称 @Field (type = FieldType.Double) private  |&lt;br /&gt;
| Double price;// 商品价格                                              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @Field(type = FieldType.Keyword, index = false) private String      |&lt;br /&gt;
| images;// 图片地址                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;ol start=&#34;9&#34;&gt;
&lt;li&gt;索引操作&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| package &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NvbS5hdGd1aWd1LmVz&#34;&gt;com.atguigu.es&lt;/span&gt;;                                              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| import org.junit.Test; import org.junit.runner.RunWith; import       |&lt;br /&gt;
| org.springframework.beans.factory.annotation.Autowired; import       |&lt;br /&gt;
| org.springframework.boot.test.context.SpringBootTest; import         |&lt;br /&gt;
| or                                                                   |&lt;br /&gt;
| g.springframework.data.elasticsearch.core.ElasticsearchRestTemplate; |&lt;br /&gt;
| import org.springframework.test.context.junit4.SpringRunner;         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @RunWith(SpringRunner.class)                                        |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @SpringBootTest public class SpringDataESIndexTest {                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // 注入 ElasticsearchRestTemplate                                      |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @Autowired                                                          |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| private ElasticsearchRestTemplate elasticsearchRestTemplate;         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // 创建索引并增加映射配置                                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @Test                                                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| public void createIndex(){                                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // 创建索引，系统初始化会自动创建索引                                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| System.out.println (&amp;quot;创建索引&amp;quot;);                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @Test                                                               |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;p&gt;public void deleteIndex(){&lt;/p&gt;
&lt;p&gt;// 创建索引，系统初始化会自动创建索引&lt;/p&gt;
&lt;p&gt;boolean flg = elasticsearchRestTemplate.deleteIndex(Product.class);&lt;/p&gt;
&lt;p&gt;System.out.println (&amp;quot;删除索引 =&amp;quot; + flg);&lt;/p&gt;
&lt;p&gt;} }&lt;/p&gt;
&lt;ol start=&#34;10&#34;&gt;
&lt;li&gt;文档操作&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| package &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NvbS5hdGd1aWd1LmVz&#34;&gt;com.atguigu.es&lt;/span&gt;;                                              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| import org.junit.Test; import org.junit.runner.RunWith; import       |&lt;br /&gt;
| org.springframework.beans.factory.annotation.Autowired; import       |&lt;br /&gt;
| org.springframework.boot.test.context.SpringBootTest; import         |&lt;br /&gt;
| org.springframework.data.domain.Page; import                         |&lt;br /&gt;
| org.springframework.data.domain.PageRequest; import                  |&lt;br /&gt;
| org.springframework.data.domain.Sort; import                         |&lt;br /&gt;
| org.springframework.test.context.junit4.SpringRunner;                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| import java.util.ArrayList; import java.util.List;                   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @RunWith(SpringRunner.class)                                        |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @SpringBootTest public class SpringDataESProductDaoTest {           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @Autowired private ProductDao productDao;                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| /**                                                                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| * 新增                                                              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| */ @Test                                                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| public void save(){                                                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| Product product = new Product(); product.setId(2L);                  |&lt;br /&gt;
| product.setTitle (&amp;quot;华为手机&amp;quot;); product.setCategory (&amp;quot;手机&amp;quot;);       |&lt;br /&gt;
| product.setPrice(2999.0);                                            |&lt;br /&gt;
| product.setImages(&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5hdGd1aWd1L2h3LmpwZw==&#34;&gt;http://www.atguigu/hw.jpg&lt;/span&gt;&amp;quot;);                    |&lt;br /&gt;
| productDao.save(product);                                            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // 修改                                                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @Test                                                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| public void update(){                                                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| Product product = new Product(); product.setId(1L);                  |&lt;br /&gt;
| product.setTitle (&amp;quot;小米 2 手机&amp;quot;); product.setCategory (&amp;quot;手机&amp;quot;);      |&lt;br /&gt;
| product.setPrice(9999.0);                                            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| product.setImages(&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5hdGd1aWd1L3htLmpwZw==&#34;&gt;http://www.atguigu/xm.jpg&lt;/span&gt;&amp;quot;);                    |&lt;br /&gt;
| productDao.save(product);                                            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // 根据 id 查询                                                         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @Test                                                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| public void findById(){                                              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| Product product = productDao.findById(1L).get();                     |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| System.out.println(product);                                         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // 查询所有                                                           |&lt;br /&gt;
+======================================================================+&lt;br /&gt;
| @Test                                                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| public void findAll(){                                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| Iterable&amp;lt;Product&amp;gt; products = productDao.findAll();                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| for (Product product : products) {                                   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| System.out.println(product);                                         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // 删除                                                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @Test                                                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| public void delete(){                                                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| Product product = new Product(); product.setId(1L);                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| productDao.delete(product);                                          |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // 批量新增                                                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @Test                                                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| public void saveAll(){                                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| List&amp;lt;Product&amp;gt; productList = new ArrayList&amp;lt;&amp;gt;(); for (int i = 0; i |&lt;br /&gt;
| &amp;lt; 10; i++) { Product product = new Product();                       |&lt;br /&gt;
| product.setId(Long.valueOf(i));                                      |&lt;br /&gt;
| product.setTitle (&amp;quot;[&amp;quot;+i+&amp;quot;] 小米手机&amp;quot;);                           |&lt;br /&gt;
| product.setCategory (&amp;quot;手机&amp;quot;); product.setPrice (1999.0+i);           |&lt;br /&gt;
| product.setImages(&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5hdGd1aWd1L3htLmpwZw==&#34;&gt;http://www.atguigu/xm.jpg&lt;/span&gt;&amp;quot;);                    |&lt;br /&gt;
| productList.add(product);                                            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| } productDao.saveAll(productList);                                   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // 分页查询                                                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @Test public void findByPageable(){                                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // 设置排序 (排序方式，正序还是倒序，排序的 id)                         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| Sort sort = &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL1NvcnQuYnk=&#34;&gt;Sort.by&lt;/span&gt;(Sort.Direction.DESC,&amp;quot;id&amp;quot;); int                 |&lt;br /&gt;
| currentPage=0;// 当前页，第一页从 0 开始，1 表示第二页 int pageSize =    |&lt;br /&gt;
| 5;// 每页显示多少条                                                   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // 设置查询分页                                                       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| PageRequest pageRequest = PageRequest.of(currentPage,                |&lt;br /&gt;
| pageSize,sort); // 分页查询                                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| Page&amp;lt;Product&amp;gt; productPage = productDao.findAll(pageRequest);       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| for (Product Product : productPage.getContent()) {                   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| System.out.println(Product);                                         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;ol start=&#34;11&#34;&gt;
&lt;li&gt;文档搜索&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;package &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NvbS5hdGd1aWd1LmVz&#34;&gt;com.atguigu.es&lt;/span&gt;;&lt;/p&gt;
&lt;p&gt;import org.elasticsearch.index.query.QueryBuilders; import&lt;br /&gt;
org.elasticsearch.index.query.TermQueryBuilder; import org.junit.Test;&lt;br /&gt;
import org.junit.runner.RunWith; import&lt;br /&gt;
org.springframework.beans.factory.annotation.Autowired; import&lt;br /&gt;
org.springframework.boot.test.context.SpringBootTest; import&lt;br /&gt;
org.springframework.data.domain.PageRequest; import&lt;br /&gt;
org.springframework.test.context.junit4.SpringRunner;&lt;/p&gt;
&lt;p&gt;@RunWith(SpringRunner.class)&lt;/p&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| @SpringBootTest public class SpringDataESSearchTest {               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @Autowired private ProductDao productDao;                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| /**                                                                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| -   term 查询                                                         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| -   search (termQueryBuilder) 调用搜索方法，参数查询构建器对象        |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| */ @Test                                                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| public void termQuery(){                                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| TermQueryBuilder termQueryBuilder =                                  |&lt;br /&gt;
| QueryBuilders.termQuery (&amp;quot;title&amp;quot;, &amp;quot;小米&amp;quot;);                       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| Iterable&amp;lt;Product&amp;gt; products = productDao.search(termQueryBuilder);  |&lt;br /&gt;
| for (Product product : products) {                                   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| System.out.println(product);                                         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| /**                                                                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| * term 查询加分页                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| */ @Test public void termQueryByPage(){ int currentPage= 0 ;       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| int pageSize = 5;                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // 设置查询分页                                                       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| PageRequest pageRequest = PageRequest.of(currentPage, pageSize);     |&lt;br /&gt;
| TermQueryBuilder termQueryBuilder =                                  |&lt;br /&gt;
| QueryBuilders.termQuery (&amp;quot;title&amp;quot;, &amp;quot;小米&amp;quot;);                       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| Iterable&amp;lt;Product&amp;gt; products =                                       |&lt;br /&gt;
| productDao.search(termQueryBuilder,pageRequest); for (Product        |&lt;br /&gt;
| product : products) {                                                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| System.out.println(product);                                         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;h2 id=&#34;52-spark-streaming-框架集成&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#52-spark-streaming-框架集成&#34;&gt;#&lt;/a&gt; 5.2 Spark Streaming 框架集成&lt;/h2&gt;
&lt;h3 id=&#34;521-spark-streaming-框架介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#521-spark-streaming-框架介绍&#34;&gt;#&lt;/a&gt; 5.2.1 Spark Streaming 框架介绍&lt;/h3&gt;
&lt;p&gt;Spark Streaming 是 Spark core API&lt;br /&gt;
 的扩展，支持实时数据流的处理，并且具有可扩展，&lt;/p&gt;
&lt;p&gt;高吞吐量，容错的特点。 数据可以从许多来源获取，如 Kafka，Flume，Kinesis&lt;br /&gt;
 或 TCP sockets，并且可以使用复杂的算法进行处理，这些算法使用诸如&lt;br /&gt;
 map，reduce，join 和 window 等高级函数表示。&lt;br /&gt;
最后，处理后的数据可以推送到文件系统，数据库等。 实际上，您可以将&lt;/p&gt;
&lt;p&gt;Spark 的机器学习和图形处理算法应用于数据流。&lt;/p&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image388.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.030555555555556in&#34;
&lt;p&gt;height=&amp;quot;1.3458333333333334in&amp;quot;}&lt;/p&gt;
&lt;h3 id=&#34;522-框架集成&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#522-框架集成&#34;&gt;#&lt;/a&gt; 5.2.2 框架集成&lt;/h3&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image389.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.223973097112861in&#34;
&lt;p&gt;height=&amp;quot;2.6564971566054245in&amp;quot;}&lt;/p&gt;
&lt;p&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt; &amp;lt;project&lt;br /&gt;
xmlns=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21hdmVuLmFwYWNoZS5vcmcvUE9NLzQuMC4w&#34;&gt;http://maven.apache.org/POM/4.0.0&lt;/span&gt;&amp;quot;&lt;br /&gt;
xmlns:xsi=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2U=&#34;&gt;http://www.w3.org/2001/XMLSchema-instance&lt;/span&gt;&amp;quot;&lt;br /&gt;
xsi:schemaLocation=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21hdmVuLmFwYWNoZS5vcmcvUE9NLzQuMC4w&#34;&gt;http://maven.apache.org/POM/4.0.0&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21hdmVuLmFwYWNoZS5vcmcveHNkL21hdmVuLTQuMC4wLnhzZA==&#34;&gt;http://maven.apache.org/xsd/maven-4.0.0.xsd&lt;/span&gt;&amp;quot;&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;groupId&amp;gt;com.atguigu.es&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;sparkstreaming-elasticsearch&amp;lt;/artifactId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;version&amp;gt;1.0&amp;lt;/version&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;properties&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;maven.compiler.source&amp;gt;8&amp;lt;/maven.compiler.source&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;maven.compiler.target&amp;gt;8&amp;lt;/maven.compiler.target&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/properties&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;dependencies&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;groupId&amp;gt;org.apache.spark&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;spark-core_2.12&amp;lt;/artifactId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;version&amp;gt;3.0.0&amp;lt;/version&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;groupId&amp;gt;org.apache.spark&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;spark-streaming_2.12&amp;lt;/artifactId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;version&amp;gt;3.0.0&amp;lt;/version&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;groupId&amp;gt;org.elasticsearch&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;elasticsearch&amp;lt;/artifactId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;version&amp;gt;7.8.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- elasticsearch 的客户端 --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;groupId&amp;gt;org.elasticsearch.client&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;elasticsearch-rest-high-level-client&amp;lt;/artifactId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;version&amp;gt;7.8.0&amp;lt;/version&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- elasticsearch 依赖 2.x 的 log4j --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;groupId&amp;gt;org.apache.logging.log4j&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;log4j-api&amp;lt;/artifactId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;version&amp;gt;2.8.2&amp;lt;/version&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;groupId&amp;gt;org.apache.logging.log4j&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;log4j-core&amp;lt;/artifactId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;version&amp;gt;2.8.2&amp;lt;/version&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- &amp;lt;dependency&amp;gt;--&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- &amp;lt;groupId&amp;gt;com.fasterxml.jackson.core&amp;lt;/groupId&amp;gt;--&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- &amp;lt;artifactId&amp;gt;jackson-databind&amp;lt;/artifactId&amp;gt;--&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- &amp;lt;version&amp;gt;2.11.1&amp;lt;/version&amp;gt;--&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- &amp;lt;/dependency&amp;gt;--&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- &amp;lt;!– junit 单元测试 –&amp;gt;--&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- &amp;lt;dependency&amp;gt;--&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- &amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt;--&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- &amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt;--&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- &amp;lt;version&amp;gt;4.12&amp;lt;/version&amp;gt;--&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- &amp;lt;/dependency&amp;gt;--&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/dependencies&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/project&amp;gt;&lt;/p&gt;
&lt;p&gt;3. 功能实现&lt;/p&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| package &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NvbS5hdGd1aWd1LmVz&#34;&gt;com.atguigu.es&lt;/span&gt;                                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| import org.apache.http.HttpHost import org.apache.spark.SparkConf    |&lt;br /&gt;
| import org.apache.spark.streaming.dstream.ReceiverInputDStream       |&lt;br /&gt;
| import org.apache.spark.streaming.{Seconds, StreamingContext} import |&lt;br /&gt;
| org.elasticsearch.action.index.IndexRequest import                   |&lt;br /&gt;
| org.elasticsearch.client.indices.CreateIndexRequest                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| import org.elasticsearch.client.{RequestOptions, RestClient,         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| RestHighLevelClient} import                                          |&lt;br /&gt;
| org.elasticsearch.common.xcontent.XContentType                       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| import java.util.Date                                                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| object SparkStreamingESTest {                                        |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| def main(args: Array[String]): Unit = {                            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| val sparkConf = new                                                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| SparkConf().setMaster(&amp;quot;local[*]&amp;quot;).setAppName(&amp;quot;ESTest&amp;quot;) val    |&lt;br /&gt;
| ssc = new StreamingContext(sparkConf, Seconds(3))                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| val ds: ReceiverInputDStream[String] =                             |&lt;br /&gt;
| ssc.socketTextStream(&amp;quot;localhost&amp;quot;,                                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| 9999)                                                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| ds.foreachRDD( rdd =&amp;gt; {                                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| println(&amp;quot;*************** &amp;quot; + new Date())            |&lt;br /&gt;
| rdd.foreach( data =&amp;gt; {                                              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| val client = new RestHighLevelClient(                                |&lt;br /&gt;
+======================================================================+&lt;br /&gt;
| RestClient.builder(new HttpHost(&amp;quot;localhost&amp;quot;, 9200,                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| &amp;quot;http&amp;quot;))                                                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| );                                                                   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // 新增文档 - 请求对象 val request = new IndexRequest ();             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // 设置索引及唯一性标识 val ss = data.split (&amp;quot; &amp;quot;)                   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| println(&amp;quot;ss = &amp;quot; + ss.mkString(&amp;quot;,&amp;quot;))                              |&lt;br /&gt;
| request.index(&amp;quot;sparkstreaming&amp;quot;).id(ss(0)); val productJson =       |&lt;br /&gt;
| s&amp;quot;&amp;quot;&amp;quot;                                                              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| | { &amp;quot;data&amp;quot;:&amp;quot;${ss(1)}&amp;quot; }                                        |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| |&amp;quot;&amp;quot;&amp;quot;.stripMargin;                                                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // 添加文档数据，数据格式为 JSON 格式                                  |&lt;br /&gt;
| request.source(productJson,XContentType.JSON);                       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // 客户端发送请求，获取响应对象                                      |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| val response = client.index(request,                                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| RequestOptions.DEFAULT);                                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| System.out.println(&amp;quot;_index:&amp;quot; + response.getIndex());              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| System.out.println(&amp;quot;_id:&amp;quot; + response.getId());                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| System.out.println(&amp;quot;_result:&amp;quot; + response.getResult());            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| client.close()                                                       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| )                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| )                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| ssc.start() ssc.awaitTermination()                                   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;h2 id=&#34;53-flink-框架集成&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#53-flink-框架集成&#34;&gt;#&lt;/a&gt; 5.3 Flink 框架集成&lt;/h2&gt;
&lt;h3 id=&#34;531-flink-框架介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#531-flink-框架介绍&#34;&gt;#&lt;/a&gt; 5.3.1 Flink 框架介绍&lt;/h3&gt;
&lt;blockquote&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image391.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.916666666666667in&#34;
&lt;p&gt;height=&amp;quot;1.8333333333333333in&amp;quot;} Apache Spark&lt;br /&gt;
 是一种基于内存的快速、通用、可扩展的大数据分析计算引擎。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Apache Spark&lt;br /&gt;
 掀开了内存计算的先河，以内存作为赌注，赢得了内存计算的飞速发展。但是在其火热的同时，开发人员发现，在&lt;br /&gt;
 Spark 中，计算框架普遍存在的缺点和不足依然没有完全解决，而这些问题随着&lt;br /&gt;
 5G 时代的来临以及决策者对实时数据分析结果的迫切需要而凸显的更加明显：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;数据精准一次性处理（Exactly-Once）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;乱序数据，迟到数据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;低延迟，高吞吐，准确性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;容错性&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Apache Flink&lt;br /&gt;
 是一个框架和分布式处理引擎，用于对无界和有界数据流进行有状态计算。在&lt;br /&gt;
 Spark&lt;br /&gt;
 火热的同时，也默默地发展自己，并尝试着解决其他计算框架的问题。慢慢地，随着这些问题的解决，Flink&lt;br /&gt;
 慢慢被绝大数程序员所熟知并进行大力推广，阿里公司在 2015 年改进&lt;br /&gt;
 Flink，并创建了内部分支&lt;br /&gt;
 Blink，目前服务于阿里集团内部搜索、推荐、广告和蚂蚁等大量核心实时业务。&lt;/p&gt;
&lt;h3 id=&#34;532-框架集成&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#532-框架集成&#34;&gt;#&lt;/a&gt; 5.3.2 框架集成&lt;/h3&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image392.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.390639763779528in&#34;
&lt;p&gt;height=&amp;quot;2.873024934383202in&amp;quot;}&lt;/p&gt;
&lt;p&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;project xmlns=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21hdmVuLmFwYWNoZS5vcmcvUE9NLzQuMC4w&#34;&gt;http://maven.apache.org/POM/4.0.0&lt;/span&gt;&amp;quot;&lt;br /&gt;
xmlns:xsi=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2U=&#34;&gt;http://www.w3.org/2001/XMLSchema-instance&lt;/span&gt;&amp;quot;&lt;br /&gt;
xsi:schemaLocation=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21hdmVuLmFwYWNoZS5vcmcvUE9NLzQuMC4w&#34;&gt;http://maven.apache.org/POM/4.0.0&lt;/span&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21hdmVuLmFwYWNoZS5vcmcveHNkL21hdmVuLTQuMC4wLnhzZA==&#34;&gt;http://maven.apache.org/xsd/maven-4.0.0.xsd&lt;/span&gt;&amp;quot;&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;groupId&amp;gt;com.atguigu.es&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;flink-elasticsearch&amp;lt;/artifactId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;version&amp;gt;1.0&amp;lt;/version&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;properties&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;maven.compiler.source&amp;gt;8&amp;lt;/maven.compiler.source&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;maven.compiler.target&amp;gt;8&amp;lt;/maven.compiler.target&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/properties&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;dependencies&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;groupId&amp;gt;org.apache.flink&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;flink-scala_2.12&amp;lt;/artifactId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;version&amp;gt;1.12.0&amp;lt;/version&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.flink&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;flink-streaming-scala_2.12&amp;lt;/artifactId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;version&amp;gt;1.12.0&amp;lt;/version&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;groupId&amp;gt;org.apache.flink&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;flink-clients_2.12&amp;lt;/artifactId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;version&amp;gt;1.12.0&amp;lt;/version&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;groupId&amp;gt;org.apache.flink&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;flink-connector-elasticsearch7_2.11&amp;lt;/artifactId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;version&amp;gt;1.12.0&amp;lt;/version&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;!-- jackson --&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;groupId&amp;gt;com.fasterxml.jackson.core&amp;lt;/groupId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;artifactId&amp;gt;jackson-core&amp;lt;/artifactId&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;version&amp;gt;2.11.1&amp;lt;/version&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/dependency&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/dependencies&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/project&amp;gt;&lt;/p&gt;
&lt;p&gt;3. 功能实现&lt;/p&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| package &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NvbS5hdGd1aWd1LmVz&#34;&gt;com.atguigu.es&lt;/span&gt;;                                              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| import org.apache.flink.api.common.functions.RuntimeContext; import  |&lt;br /&gt;
| org.apache.flink.streaming.api.datastream.DataStreamSource; import   |&lt;br /&gt;
| or                                                                   |&lt;br /&gt;
| g.apache.flink.streaming.api.environment.StreamExecutionEnvironment; |&lt;br /&gt;
| import                                                               |&lt;br /&gt;
| org.apac                                                             |&lt;br /&gt;
| he.flink.streaming.connectors.elasticsearch.ElasticsearchSinkFunctio |&lt;br /&gt;
| n; import                                                            |&lt;br /&gt;
| org.apache.flink.streaming.connectors.elasticsearch.RequestIndexer;  |&lt;br /&gt;
| import                                                               |&lt;br /&gt;
| org                                                                  |&lt;br /&gt;
| .apache.flink.streaming.connectors.elasticsearch7.ElasticsearchSink; |&lt;br /&gt;
| import org.apache.http.HttpHost; import                              |&lt;br /&gt;
| org.elasticsearch.action.index.IndexRequest; import                  |&lt;br /&gt;
| org.elasticsearch.client.Requests;                                   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| import java.util.ArrayList; import java.util.HashMap; import         |&lt;br /&gt;
| java.util.List; import java.util.Map;                                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| public class FlinkElasticsearchSinkTest { public static void         |&lt;br /&gt;
| main(String[] args) throws Exception {                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| StreamExecutionEnvironment env =                                     |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| StreamExecutionEnvironment.getExecutionEnvironment();                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| DataStreamSource&amp;lt;String&amp;gt; source =                                  |&lt;br /&gt;
| env.socketTextStream(&amp;quot;localhost&amp;quot;,                                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| 9999);                                                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| List&amp;lt;HttpHost&amp;gt; httpHosts = new ArrayList&amp;lt;&amp;gt;(); httpHosts.add(new  |&lt;br /&gt;
| HttpHost(&amp;quot;127.0.0.1&amp;quot;, 9200, &amp;quot;http&amp;quot;));                            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| &lt;a href=&#34;//httpHosts.add&#34;&gt;//httpHosts.add&lt;/a&gt;(new HttpHost(&amp;quot;10.2.3.1&amp;quot;, 9200, &amp;quot;http&amp;quot;));         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // use a ElasticsearchSink.Builder to create an ElasticsearchSink    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| ElasticsearchSink.Builder&amp;lt;String&amp;gt; esSinkBuilder = new              |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| ElasticsearchSink.Builder&amp;lt;&amp;gt;(                                       |&lt;br /&gt;
+======================================================================+&lt;br /&gt;
| httpHosts,                                                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| new ElasticsearchSinkFunction&amp;lt;String&amp;gt;() {                          |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| public IndexRequest createIndexRequest(String element) {             |&lt;br /&gt;
| Map&amp;lt;String, String&amp;gt; json = new HashMap&amp;lt;&amp;gt;(); json.put(&amp;quot;data&amp;quot;,   |&lt;br /&gt;
| element);                                                            |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| return Requests.indexRequest()                                       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| .index(&amp;quot;my-index&amp;quot;)                                                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| //.type(&amp;quot;my-type&amp;quot;)                                                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| .source(json);                                                       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| @Override                                                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| public void process(String element, RuntimeContext ctx,              |&lt;br /&gt;
| RequestIndexer indexer) { indexer.add(createIndexRequest(element));  |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| );                                                                   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // configuration for the bulk requests; this instructs the sink to   |&lt;br /&gt;
| emit after every element, otherwise they would be buffered           |&lt;br /&gt;
| esSinkBuilder.setBulkFlushMaxActions(1);                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // provide a RestClientFactory for custom configuration on the       |&lt;br /&gt;
| internally created REST client                                       |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // esSinkBuilder.setRestClientFactory(                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // restClientBuilder -&amp;gt; {                                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // restClientBuilder.setDefaultHeaders(...)                         |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // restClientBuilder.setMaxRetryTimeoutMillis(...)                  |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // restClientBuilder.setPathPrefix(...)                             |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // restClientBuilder.setHttpClientConfigCallback(...)               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // }                                                                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| // );                                                                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| source.addSink(esSinkBuilder.build());                               |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| env.execute(&amp;quot;flink-es&amp;quot;);                                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| }                                                                    |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;h1 id=&#34;第6章-elasticsearch-优化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第6章-elasticsearch-优化&#34;&gt;#&lt;/a&gt; 第 6 章 Elasticsearch 优化&lt;/h1&gt;
&lt;h2 id=&#34;61-硬件选择&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#61-硬件选择&#34;&gt;#&lt;/a&gt; 6.1 硬件选择&lt;/h2&gt;
&lt;p&gt;Elasticsearch 的基础是&lt;br /&gt;
 Lucene，所有的索引和文档数据是存储在本地的磁盘中，具体的路径可在 ES&lt;br /&gt;
 的配置文件../config/elasticsearch.yml 中配置，如下：&lt;/p&gt;
&lt;p&gt;+----------------------------------------------------------------------+&lt;br /&gt;
| #\                                                                  |&lt;br /&gt;
| ----------------------------------- |&lt;br /&gt;
| Paths                                                                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| -\                                                                  |&lt;br /&gt;
| ----------------------------------- |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #                                                                   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # Path to directory where to store the data (separate multiple      |&lt;br /&gt;
| locations by comma):                                                 |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #                                                                   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #path.data: /path/to/data                                           |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #                                                                   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| # Path to log files:                                                |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #                                                                   |&lt;br /&gt;
|                                                                      |&lt;br /&gt;
| #path.logs: /path/to/logs #                                        |&lt;br /&gt;
+----------------------------------------------------------------------+&lt;/p&gt;
&lt;p&gt;磁盘在现代服务器上通常都是瓶颈。Elasticsearch&lt;br /&gt;
 重度使用磁盘，你的磁盘能处理的吞吐量越大，你的节点就越稳定。这里有一些优化磁盘&lt;br /&gt;
 I/O 的技巧：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用 SSD。就像其他地方提过的， 他们比机械磁盘优秀多了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 RAID 0。条带化 RAID 会提高磁盘&lt;br /&gt;
 I/O，代价显然就是当一块硬盘故障时整个就故障了。不要&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;使用镜像或者奇偶校验 RAID 因为副本已经提供了这个功能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;另外，使用多块硬盘，并允许 Elasticsearch 通过多个 path.data&lt;br /&gt;
 目录配置把数据条带化分配到它们上&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;面。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;不要使用远程挂载的存储，比如 NFS 或者&lt;br /&gt;
 SMB/CIFS。这个引入的延迟对性能来说完全是背道而驰的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;62-分片策略&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#62-分片策略&#34;&gt;#&lt;/a&gt; 6.2 分片策略&lt;/h2&gt;
&lt;h3 id=&#34;621-合理设置分片数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#621-合理设置分片数&#34;&gt;#&lt;/a&gt; 6.2.1 合理设置分片数&lt;/h3&gt;
&lt;p&gt;分片和副本的设计为 ES&lt;br /&gt;
 提供了支持分布式和故障转移的特性，但并不意味着分片和副本是可以无限分配的。而且索引的分片完成分配后由于索引的路由机制，我们是不能重新修改分片数的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可能有人会说，我不知道这个索引将来会变得多大，并且过后我也不能更改索引的大小，&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以为了保险起见，还是给它设为 1000&lt;br /&gt;
 个分片吧。但是需要知道的是，一个分片并不是没有代价的。需要了解：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;一个分片的底层即为一个 Lucene 索引，会消耗一定文件句柄、内存、以及&lt;br /&gt;
 CPU 运转。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每一个搜索请求都需要命中索引中的每一个分片，如果每一个分片都处于不同的节点还好，&lt;br /&gt;
但如果多个分片都需要在同一个节点上竞争使用相同的资源就有些糟糕了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用于计算相关度的词项统计信息是基于分片的。如果有许多分片，每一个都只有很少的数据会导致很&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;低的相关度。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一个业务索引具体需要分配多少分片可能需要架构师和技术人员对业务的增长有个预先的判断，横向扩展应当分阶段进行。为下一阶段准备好足够的资源。&lt;br /&gt;
只有当你进入到下一个阶段，你才有时间思考需要作出哪些改变来达到这个阶段。一般来说，我们遵循一些原则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;控制每个分片占用的硬盘容量不超过 ES 的最大 JVM&lt;br /&gt;
 的堆空间设置（一般设置不超过 32G，参考下文的 JVM&lt;br /&gt;
 设置原则），因此，如果索引的总容量在 500G 左右，那分片大小在 16&lt;br /&gt;
 个左右即可；当然，&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;最好同时考虑原则 2。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;考虑一下 node&lt;br /&gt;
 数量，一般一个节点有时候就是一台物理机，如果分片数过多，大大超过了节点数，&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;很可能会导致一个节点上存在多个分片，一旦该节点故障，即使保持了 1&lt;br /&gt;
 个以上的副本，同样有可能&lt;/p&gt;
&lt;p&gt;会导致数据丢失，集群无法恢复。所以， 一般都设置分片数不超过节点数的 3&lt;br /&gt;
 倍。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;主分片，副本和节点最大数之间数量，我们分配的时候可以参考以下关系：节点数 &amp;lt;= 主分片数 *（副本数 + 1）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;622-推迟分片分配&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#622-推迟分片分配&#34;&gt;#&lt;/a&gt; 6.2.2 推迟分片分配&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;对于节点瞬时中断的问题，默认情况，集群会等待一分钟来查看节点是否会重新加入，&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果这个节点在此期间重新加入，重新加入的节点会保持其现有的分片数据，不会触发新的分片分配。这样就可以减少&lt;br /&gt;
 ES 在自动再平衡可用分片时所带来的极大开销。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;通过修改参数 delayed_timeout&lt;br /&gt;
，可以延长再均衡的时间，可以全局设置也可以在索引&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;级别进行修改:&lt;/p&gt;
&lt;p&gt;PUT /_all/_settings&lt;/p&gt;
&lt;p&gt;{&lt;/p&gt;
&lt;p&gt;&amp;quot;settings&amp;quot;: {&lt;/p&gt;
&lt;p&gt;&amp;quot;index.unassigned.node_left.delayed_timeout&amp;quot;: &amp;quot;5m&amp;quot;&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;h2 id=&#34;63-路由选择&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#63-路由选择&#34;&gt;#&lt;/a&gt; 6.3 路由选择&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;当我们查询文档的时候，Elasticsearch&lt;br /&gt;
 如何知道一个文档应该存放到哪个分片中呢？它&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其实是通过下面这个公式来计算出来:&lt;/p&gt;
&lt;p&gt;shard = hash(routing) % number_of_primary_shards&lt;/p&gt;
&lt;p&gt;routing 默认值是文档的 id，也可以采用自定义值，比如用户 id。&lt;/p&gt;
&lt;p&gt;不带 &lt;strong&gt;routing&lt;/strong&gt; 查询&lt;/p&gt;
&lt;p&gt;在查询的时候因为不知道要查询的数据具体在哪个分片上，所以整个过程分为 2&lt;br /&gt;
 个步骤&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;分发：请求到达协调节点后，协调节点将查询请求分发到每个分片上。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;聚合:&lt;br /&gt;
 协调节点搜集到每个分片上查询结果，在将查询的结果进行排序，之后给用户返回结果。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;带 &lt;strong&gt;routing&lt;/strong&gt; 查询&lt;/p&gt;
&lt;p&gt;查询的时候，可以直接根据 routing&lt;br /&gt;
 信息定位到某个分配查询，不需要查询所有的分配，经过协调节点排序。&lt;/p&gt;
&lt;p&gt;向上面自定义的用户查询，如果 routing 设置为 userid&lt;br /&gt;
 的话，就可以直接查询出数据来，效率提升很多。&lt;/p&gt;
&lt;h2 id=&#34;64-写入速度优化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#64-写入速度优化&#34;&gt;#&lt;/a&gt; 6.4 写入速度优化&lt;/h2&gt;
&lt;p&gt;ES&lt;br /&gt;
 的默认配置，是综合了数据可靠性、写入速度、搜索实时性等因素。实际使用时，我们需要根据公司要求，进行偏向性的优化。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;针对于搜索性能要求不高，但是对写入要求较高的场景，我们需要尽可能的选择恰当写&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;优化策略。综合来说，可以考虑以下几个方面来提升写索引的性能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;加大 Translog Flush ，目的是降低 Iops、Writeblock。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;增加 Index Refresh 间隔，目的是减少 Segment Merge 的次数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;调整 Bulk 线程池和队列。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;优化节点间的任务分布。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;优化 Lucene 层的索引建立，目的是降低 CPU 及 IO。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;641-批量数据提交&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#641-批量数据提交&#34;&gt;#&lt;/a&gt; 6.4.1 批量数据提交&lt;/h3&gt;
&lt;p&gt;ES 提供了 Bulk API 支持批量操作，当我们有大量的写任务时，可以使用 Bulk&lt;br /&gt;
 来进行批量写入。&lt;/p&gt;
&lt;p&gt;通用的策略如下：Bulk 默认设置批量提交的数据量不能超过&lt;br /&gt;
 100M。数据条数一般是根据文档的大小和服务器性能而定的，但是单次批处理的数据大小应从&lt;br /&gt;
 5MB～15MB 逐渐增加，当性能没有提升时，把这个数据量作为最大值。&lt;/p&gt;
&lt;h3 id=&#34;642-优化存储设备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#642-优化存储设备&#34;&gt;#&lt;/a&gt; 6.4.2 优化存储设备&lt;/h3&gt;
&lt;p&gt;ES&lt;br /&gt;
 是一种密集使用磁盘的应用，在段合并的时候会频繁操作磁盘，所以对磁盘要求较&lt;/p&gt;
&lt;p&gt;高，当磁盘速度提升之后，集群的整体性能会大幅度提高。&lt;/p&gt;
&lt;h3 id=&#34;643-合理使用合并&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#643-合理使用合并&#34;&gt;#&lt;/a&gt; 6.4.3 合理使用合并&lt;/h3&gt;
&lt;p&gt;Lucene 以段的形式存储数据。当有新的数据写入索引时，Lucene&lt;br /&gt;
 就会自动创建一个新的段。&lt;/p&gt;
&lt;p&gt;随着数据量的变化，段的数量会越来越多，消耗的多文件句柄数及 CPU&lt;br /&gt;
 就越多，查询效率就会下降。&lt;/p&gt;
&lt;p&gt;由于 Lucene 段合并的计算量庞大，会消耗大量的 I/O，所以 ES&lt;br /&gt;
 默认采用较保守的策略，让后台定期进行段合并&lt;/p&gt;
&lt;h3 id=&#34;644-减少-refresh-的次数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#644-减少-refresh-的次数&#34;&gt;#&lt;/a&gt; 6.4.4 减少 Refresh 的次数&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Lucene 在新增数据时，采用了延迟写入的策略，默认情况下索引的&lt;br /&gt;
 refresh_interval 为&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;1 秒。&lt;/p&gt;
&lt;p&gt;Lucene 将待写入的数据先写到内存中，超过 1 秒（默认）时就会触发一次&lt;br /&gt;
 Refresh，然后 Refresh 会把内存中的的数据刷新到操作系统的文件缓存系统中。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果我们对搜索的实效性要求不高，可以将 Refresh 周期延长，例如 30 秒。&lt;/p&gt;
&lt;p&gt;这样还可以有效地减少段刷新次数，但这同时意味着需要消耗更多的 Heap&lt;br /&gt;
 内存。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;645-加大-flush-设置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#645-加大-flush-设置&#34;&gt;#&lt;/a&gt; 6.4.5 加大 Flush 设置&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Flush 的主要目的是把文件缓存系统中的段持久化到硬盘，当 Translog&lt;br /&gt;
 的数据量达到&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;512MB 或者 30 分钟时，会触发一次 Flush。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;index.translog.flush_threshold_size 参数的默认值是&lt;br /&gt;
 512MB，我们进行修改。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;增加参数值意味着文件缓存系统中可能需要存储更多的数据，所以我们需要为操作系统的文件缓存系统留下足够的空间。&lt;/p&gt;
&lt;h4 id=&#34;646-减少副本的数量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#646-减少副本的数量&#34;&gt;#&lt;/a&gt; 6.4.6 减少副本的数量&lt;/h4&gt;
&lt;p&gt;ES 为了保证集群的可用性，提供了&lt;br /&gt;
 Replicas（副本）支持，然而每个副本也会执行分析、索引及可能的合并过程，所以&lt;br /&gt;
 Replicas 的数量会严重影响写索引的效率。&lt;/p&gt;
&lt;p&gt;当写索引时，需要把写入的数据都同步到副本节点，副本节点越多，写索引的效率就越慢。&lt;/p&gt;
&lt;p&gt;如果我们需要大批量进行写入操作，可以先禁止 Replica 复制，设置&lt;br /&gt;
 index.number_of_replicas: 0 关闭副本。在写入完成后，Replica&lt;br /&gt;
 修改回正常的状态。&lt;/p&gt;
&lt;h2 id=&#34;65-内存设置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#65-内存设置&#34;&gt;#&lt;/a&gt; 6.5 内存设置&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;ES 默认安装后设置的内存是&lt;br /&gt;
 1GB，对于任何一个现实业务来说，这个设置都太小了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果是通过解压安装的 ES，则在 ES 安装文件中包含一个 jvm.option&lt;br /&gt;
 文件，添加如下命令来设置 ES 的堆大小，Xms 表示堆的初始大小，Xmx&lt;br /&gt;
 表示可分配的最大内存，都是 1GB。&lt;/p&gt;
&lt;p&gt;确保 Xmx 和 Xms 的大小是相同的，其目的是为了能够在 Java&lt;br /&gt;
 垃圾回收机制清理完堆区后不需要重新分隔计算堆区的大小而浪费资源，可以减轻伸缩堆大小带来的压力。&lt;/p&gt;
&lt;p&gt;假设你有一个 64G 内存的机器，按照正常思维思考，你可能会认为把 64G&lt;br /&gt;
 内存都给 ES 比较好，但现实是这样吗， 越大越好？虽然内存对 ES&lt;br /&gt;
 来说是非常重要的，但是答案是否定的！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;因为 ES 堆内存的分配需要满足以下两个原则：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;不要超过物理内存的 50%：Lucene 的设计目的是把底层 OS&lt;br /&gt;
 里的数据缓存到内存中。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lucene&lt;br /&gt;
 的段是分别存储到单个文件中的，这些文件都是不会变化的，所以很利于缓存，同时操作系&lt;br /&gt;
统也会把这些段文件缓存起来，以便更快的访问。&lt;/p&gt;
&lt;p&gt;如果我们设置的堆内存过大，Lucene 可用的内存将会减少，就会严重影响降低&lt;br /&gt;
 Lucene 的全文本查 询性能。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;堆内存的大小最好不要超过 32GB：在 Java&lt;br /&gt;
 中，所有对象都分配在堆上，然后有一个 Klass Pointer&lt;br /&gt;
 指针指向它的类元数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个指针在 64 位的操作系统上为 64 位，64&lt;br /&gt;
 位的操作系统可以使用更多的内存（2^64）。在 32 位 的系统上为 32 位，32&lt;br /&gt;
 位的操作系统的最大寻址空间为 4GB（2^32）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;但是 64&lt;br /&gt;
 位的指针意味着更大的浪费，因为你的指针本身大了。浪费内存不算，更糟糕的是，更大的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;指针在主内存和缓存器（例如 LLC, L1&lt;br /&gt;
 等）之间移动数据的时候，会占用更多的带宽。&lt;/p&gt;
&lt;p&gt;最终我们都会采用 31 G 设置&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;-Xms 31g&lt;/p&gt;
&lt;p&gt;-Xmx 31g&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;假设你有个机器有 128 GB&lt;br /&gt;
 的内存，你可以创建两个节点，每个节点内存分配不超过 32 GB。&lt;br /&gt;
也就是说不超过 64 GB 内存给 ES 的堆内存，剩下的超过 64 GB 的内存给&lt;br /&gt;
 Lucene&lt;/p&gt;
&lt;h2 id=&#34;66-重要配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#66-重要配置&#34;&gt;#&lt;/a&gt; 6.6 重要配置&lt;/h2&gt;
&lt;p&gt;+------------------------+-----------------+------------------------+&lt;br /&gt;
| 参数名                 | &amp;gt; 参数值        | &amp;gt; 说明                 |&lt;br /&gt;
+&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;&lt;mark&gt;+&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;=+&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;&lt;/mark&gt;================+&lt;br /&gt;
| &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NsdXN0ZXIubmFtZQ==&#34;&gt;cluster.name&lt;/span&gt;           | &amp;gt; elasticsearch | &amp;gt; 配置 ES              |&lt;br /&gt;
|                        |                 | &amp;gt; 的集群名称，默认值是 |&lt;br /&gt;
|                        |                 | &amp;gt; ES，建议改成与所     |&lt;br /&gt;
+------------------------+-----------------+------------------------+&lt;br /&gt;
|                        |                 | 存数据相关的名称，ES   |&lt;br /&gt;
|                        |                 | 会自动发现在同一网段   |&lt;br /&gt;
|                        |                 | 下的集群名称相同的节点 |&lt;br /&gt;
+------------------------+-----------------+------------------------+&lt;br /&gt;
| &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL25vZGUubmFtZQ==&#34;&gt;node.name&lt;/span&gt;              | node-1          | 集群中                 |&lt;br /&gt;
|                        |                 | 的节点名，在同一个集群 |&lt;br /&gt;
|                        |                 | 中不能重复。节点的名称 |&lt;br /&gt;
|                        |                 | 一旦设置，就不能再改变 |&lt;br /&gt;
|                        |                 | 了。当然，也可以设置成 |&lt;br /&gt;
|                        |                 | 服务器的主机名称，例如 |&lt;br /&gt;
|                        |                 | no                     |&lt;br /&gt;
|                        |                 | &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2RlLm5hbWU=&#34;&gt;de.name&lt;/span&gt;😒{HOSTNAME}。 |&lt;br /&gt;
+------------------------+-----------------+------------------------+&lt;br /&gt;
| node.master            | true            | 指定该节               |&lt;br /&gt;
|                        |                 | 点是否有资格被选举成为 |&lt;br /&gt;
|                        |                 | Master 节点，默认是    |&lt;br /&gt;
|                        |                 | True，如果被设置为     |&lt;br /&gt;
|                        |                 | True，则只是有资格成为 |&lt;br /&gt;
|                        |                 | Master                 |&lt;br /&gt;
|                        |                 | 节点，具体能否成为     |&lt;br /&gt;
|                        |                 | Master                 |&lt;br /&gt;
|                        |                 | 节                     |&lt;br /&gt;
|                        |                 | 点，需要通过选举产生。 |&lt;br /&gt;
+------------------------+-----------------+------------------------+&lt;br /&gt;
| node.data              | true            | 指定该节点是           |&lt;br /&gt;
|                        |                 | 否存储索引数据，默认为 |&lt;br /&gt;
|                        |                 | True。数据             |&lt;br /&gt;
|                        |                 | 的增、删、改、查都是在 |&lt;br /&gt;
|                        |                 | Data 节点完成的。      |&lt;br /&gt;
+------------------------+-----------------+------------------------+&lt;br /&gt;
| index.number_of_shards | 1               | 设置                   |&lt;br /&gt;
|                        |                 | 都索引分片个数，默认是 |&lt;br /&gt;
|                        |                 | 1                      |&lt;br /&gt;
|                        |                 | 片。也可以             |&lt;br /&gt;
|                        |                 | 在创建索引时设置该值， |&lt;br /&gt;
|                        |                 | 具体设置为多大都值要根 |&lt;br /&gt;
|                        |                 | 据数据量的大小来定。如 |&lt;br /&gt;
|                        |                 | 果数据量不大，则设置成 |&lt;br /&gt;
|                        |                 | 1 时效率最高           |&lt;br /&gt;
+------------------------+-----------------+------------------------+&lt;br /&gt;
| in                     | 1               | 设置默认               |&lt;br /&gt;
| dex.number_of_replicas |                 | 的索引副本个数，默认为 |&lt;br /&gt;
|                        |                 | 1                      |&lt;br /&gt;
|                        |                 | 个。副本数越多，集群的 |&lt;br /&gt;
|                        |                 | 可用性越好，但是写索引 |&lt;br /&gt;
|                        |                 | 时需要同步的数据越多。 |&lt;br /&gt;
+------------------------+-----------------+------------------------+&lt;br /&gt;
| transport.tcp.compress | true            | 设置在节点间传输       |&lt;br /&gt;
|                        |                 | 数据时是否压缩，默认为 |&lt;br /&gt;
|                        |                 | False，不压缩          |&lt;br /&gt;
+------------------------+-----------------+------------------------+&lt;br /&gt;
| discovery.ze           | 1               | 设置在选举 Master      |&lt;br /&gt;
| n.minimum_master_nodes |                 | 节点时需要参与的最少   |&lt;br /&gt;
|                        |                 | 的候选主节点数，默认为 |&lt;br /&gt;
|                        |                 | 1。如果使              |&lt;br /&gt;
|                        |                 | 用默认值，则当网络不稳 |&lt;br /&gt;
|                        |                 | 定时有可能会出现脑裂。 |&lt;br /&gt;
|                        |                 |                        |&lt;br /&gt;
|                        |                 | 合理的数值为           |&lt;br /&gt;
|                        |                 | (mast                  |&lt;br /&gt;
|                        |                 | er_eligible_nodes/2)+1 |&lt;br /&gt;
|                        |                 | ，其中                 |&lt;br /&gt;
|                        |                 |                        |&lt;br /&gt;
|                        |                 | master_eligible_nodes  |&lt;br /&gt;
|                        |                 | 表                     |&lt;br /&gt;
|                        |                 | 示集群中的候选主节点数 |&lt;br /&gt;
+------------------------+-----------------+------------------------+&lt;br /&gt;
| disc                   | 3s              | 设置在集               |&lt;br /&gt;
| overy.zen.ping.timeout |                 | 群中自动发现其他节点时 |&lt;br /&gt;
|                        |                 | Ping                   |&lt;br /&gt;
|                        |                 | 连接的超时时间，默认为 |&lt;br /&gt;
|                        |                 | 3 秒。                 |&lt;br /&gt;
|                        |                 |                        |&lt;br /&gt;
|                        |                 | 在较差的网络环境下需要 |&lt;br /&gt;
|                        |                 | 设置得大一点，防止因误 |&lt;br /&gt;
|                        |                 |                        |&lt;br /&gt;
|                        |                 | 判该节点的存           |&lt;br /&gt;
|                        |                 | 活状态而导致分片的转移 |&lt;br /&gt;
+------------------------+-----------------+------------------------+&lt;/p&gt;
&lt;h1 id=&#34;第7章-elasticsearch-面试题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第7章-elasticsearch-面试题&#34;&gt;#&lt;/a&gt; 第 7 章 Elasticsearch 面试题&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;7.1&lt;/strong&gt; 为什么要使用 &lt;strong&gt;Elasticsearch?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;系统中的数据，随着业务的发展，时间的推移，将会非常多，而业务中往往采用模糊查询进行数据的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;搜索，而模糊查询会导致查询引擎放弃索引，导致系统查询数据时都是全表扫描，在百万级别的数据库中，查询效率是非常低下的，而我们使用&lt;br /&gt;
 ES&lt;br /&gt;
 做一个全文索引，将经常查询的系统功能的某些字段，比如说电商系统的商品表中商品名，描述、价格还有&lt;br /&gt;
 id 这些字段我们放入 ES 索引库里，可以提高查询速度。&lt;/p&gt;
&lt;h2 id=&#34;72-elasticsearch-的-master-选举流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#72-elasticsearch-的-master-选举流程&#34;&gt;#&lt;/a&gt; 7.2 Elasticsearch 的 master 选举流程？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Elasticsearch 的选主是 ZenDiscovery 模块负责的，主要包含&lt;br /&gt;
 Ping（节点之间通过这个 RPC 来发现彼此）&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;和 Unicast（单播模块包含一个主机列表以控制哪些节点需要 ping&lt;br /&gt;
 通）这两部分&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;对所有可以成为 master 的节点（node.master: true）根据 nodeId&lt;br /&gt;
 字典排序，每次选举每个节点都把自&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;己所知道节点排一次序，然后选出第一个（第 0 位）节点，暂且认为它是&lt;br /&gt;
 master 节点。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;如果对某个节点的投票数达到一定的值（可以成为 master 节点数&lt;br /&gt;
 n/2+1）并且该节点自己也选举自己，&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;那这个节点就是 master。否则重新选举一直到满足上述条件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;master&lt;br /&gt;
 节点的职责主要包括集群、节点和索引的管理，不负责文档级别的管理；data&lt;br /&gt;
 节点可以关闭 http 功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;73-elasticsearch-集群脑裂问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#73-elasticsearch-集群脑裂问题&#34;&gt;#&lt;/a&gt; 7.3 Elasticsearch 集群脑裂问题？&lt;/h2&gt;
&lt;p&gt;&amp;quot;脑裂&amp;quot; 问题可能的成因 **😗*&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网络问题：集群间的网络延迟导致一些节点访问不到 master，认为 master&lt;br /&gt;
 挂掉了从而选举出新的&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;master，并对 master 上的分片和副本标红，分配新的主分片&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;节点负载：主节点的角色既为 master 又为 data，访问量较大时可能会导致&lt;br /&gt;
 ES 停止响应造成大面积延&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;迟，此时其他节点得不到主节点的响应认为主节点挂掉了，会重新选取主节点。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;内存回收：data 节点上的 ES 进程占用的内存较大，引发 JVM&lt;br /&gt;
 的大规模内存回收，造成 ES 进程失去&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;响应。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;脑裂问题解决方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;减少误判：discovery.zen.ping_timeout 节点状态的响应时间，默认为&lt;br /&gt;
 3s，可以适当调大，如果 master&lt;br /&gt;
 在该响应时间的范围内没有做出响应应答，判断该节点已经挂掉了。调大参数（如&lt;br /&gt;
 6s，&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;discovery.zen.ping_timeout:6），可适当减少误判。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;选举触发: discovery.zen.minimum_master_nodes:1&lt;br /&gt;
 该参数是用于控制选举行为发生的最小集群主节点数量。当备选主节点的个数大于等于该参数的值，&lt;br /&gt;
且备选主节点中有该参数个节点认为主节点挂了，进行选举。官方建议为（n/2）+1，n&lt;br /&gt;
 为主节点个数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（即有资格成为主节点的节点个数）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;角色分离：即 master 节点与 data&lt;br /&gt;
 节点分离，限制角色主节点配置为：node.master: true node.data: false&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;从节点配置为：node.master: false node.data: true&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;74-elasticsearch-索引文档的流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#74-elasticsearch-索引文档的流程&#34;&gt;#&lt;/a&gt; 7.4 Elasticsearch 索引文档的流程？&lt;/h2&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image394.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.190972222222222in&#34;
&lt;p&gt;height=&amp;quot;1.7541666666666667in&amp;quot;}&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;协调节点默认使用文档 ID 参与计算（也支持通过&lt;br /&gt;
 routing），以便为路由提供合适的分片： &lt;strong&gt;shard = hash(document_id) %&lt;br /&gt;
(num_of_primary_shards)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当分片所在的节点接收到来自协调节点的请求后，会将请求写入到 Memory&lt;br /&gt;
Buffer，然后定时（默认&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;是每隔 1 秒）写入到 Filesystem Cache，这个从 Memory Buffer 到&lt;br /&gt;
 Filesystem Cache 的过程就叫做 refresh；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;当然在某些情况下，存在 Momery Buffer 和 Filesystem Cache&lt;br /&gt;
 的数据可能会丢失，ES 是通过 translog&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;的机制来保证数据的可靠性的。其实现机制是接收到请求后，同时也会写入到&lt;br /&gt;
 translog 中，当 Filesystem&lt;/p&gt;
&lt;p&gt;cache 中的数据写入到磁盘中时，才会清除掉，这个过程叫做 flush；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;在 flush 过程中，内存中的缓冲将被清除，内容被写入一个新段，段的&lt;br /&gt;
 fsync 将创建一个新的提交点，&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;并将内容刷新到磁盘，旧的 translog 将被删除并开始一个新的 translog。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;flush 触发的时机是定时触发（默认 30 分钟）或者 translog&lt;br /&gt;
 变得太大（默认为 512M）时；&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;75-elasticsearch-更新和删除文档的流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#75-elasticsearch-更新和删除文档的流程&#34;&gt;#&lt;/a&gt; 7.5 Elasticsearch 更新和删除文档的流程？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;删除和更新也都是写操作，但是 Elasticsearch&lt;br /&gt;
 中的文档是不可变的，因此不能被删除或者改动以展示&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;其变更；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;磁盘上的每个段都有一个相应的.del&lt;br /&gt;
 文件。当删除请求发送后，文档并没有真的被删除，而是在.del&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;文件中被标记为删除。该文档依然能匹配查询，但是会在结果中被过滤掉。当段合并时，在.del&lt;br /&gt;
 文件中被标记为删除的文档将不会被写入新段。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;在新的文档被创建时，Elasticsearch&lt;br /&gt;
 会为该文档指定一个版本号，当执行更新时，旧版本的文档在.del&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;文件中被标记为删除，新版本的文档被索引到一个新段。旧版本的文档依然能匹配查询，但是会在结&lt;/p&gt;
&lt;p&gt;果中被过滤掉。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;76-elasticsearch-搜索的流程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#76-elasticsearch-搜索的流程&#34;&gt;#&lt;/a&gt; 7.6 Elasticsearch 搜索的流程？&lt;/h2&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image395.jpg&#34; class=&#34;&#34;&gt;{width=&#34;4.625in&#34;
&lt;p&gt;height=&amp;quot;2.1590277777777778in&amp;quot;}&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;搜索被执行成一个两阶段过程，我们称之为 Query Then Fetch；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在初始查询阶段时，查询会广播到索引中每一个分片拷贝（主分片或者副本分片）。&lt;br /&gt;
每个分片在本地执行搜索并构建一个匹配文档的大小为 from + size&lt;br /&gt;
 的优先队列。PS：在搜索的时候是会查询&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Filesystem Cache 的，但是有部分数据还在 Memory&lt;br /&gt;
Buffer，所以搜索是近实时的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;每个分片返回各自优先队列中 所有文档的 ID 和排序值&lt;br /&gt;
给协调节点，它合并这些值到自己的优先队&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;列中来产生一个全局排序后的结果列表。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;接下来就是取回阶段，协调节点辨别出哪些文档需要被取回并向相关的分片提交多个&lt;br /&gt;
 GET 请求。每&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;个分片加载并丰富文档，如果有需要的话，接着返回文档给协调节点。一旦所有的文档都被取回了，&lt;/p&gt;
&lt;p&gt;协调节点返回结果给客户端。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Query Then Fetch&lt;br /&gt;
 的搜索类型在文档相关性打分的时候参考的是本分片的数据，这样在文档数量较少&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;的时候可能不够准确，DFS Query Then Fetch 增加了一个预查询的处理，询问&lt;br /&gt;
 Term 和 Document&lt;/p&gt;
&lt;p&gt;frequency，这个评分更准确，但是性能会变差。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;77-elasticsearch-在部署时对-linux-的设置有哪些优化方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#77-elasticsearch-在部署时对-linux-的设置有哪些优化方法&#34;&gt;#&lt;/a&gt; 7.7 Elasticsearch 在部署时，对 Linux 的设置有哪些优化方法？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;64 GB 内存的机器是非常理想的， 但是 32 GB 和 16 GB&lt;br /&gt;
 机器也是很常见的。少于 8 GB 会适得其反。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果你要在更快的 CPUs&lt;br /&gt;
 和更多的核心之间选择，选择更多的核心更好。多个内核提供的额外并发远胜过稍微快一点点的时钟频率。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果你负担得起 SSD，它将远远超出任何旋转介质。 基于 SSD&lt;br /&gt;
 的节点，查询和索引性能都有提升。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你负担得起，SSD 是一个好的选择。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;即使数据中心们近在咫尺，也要避免集群跨越多个数据中心。绝对要避免集群跨越大的地理距离。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;请确保运行你应用程序的 JVM 和服务器的 JVM 是完全一样的。 在&lt;br /&gt;
 Elasticsearch 的几个地方，使&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;用 Java 的本地序列化。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;通过设置&lt;br /&gt;
 gateway.recover_after_nodes、gateway.expected_nodes、gateway.recover_after_time&lt;br /&gt;
 可以在集群重启的时候避免过多的分片交换，这可能会让数据恢复从数个小时缩短为几秒钟。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Elasticsearch&lt;br /&gt;
 默认被配置为使用单播发现，以防止节点无意中加入集群。只有在同一台机器上运行的&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;节点才会自动组成集群。最好使用单播代替组播。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;不要随意修改垃圾回收器（CMS）和各个线程池的大小。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;把你的内存的（少于）一半给 Lucene（但不要超过 32 GB！），通过&lt;br /&gt;
 ES_HEAP_SIZE 环境变量设置。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;内存交换到磁盘对服务器性能来说是致命的。如果内存交换到磁盘上，一个&lt;br /&gt;
 100 微秒的操作可能变成 10 毫秒。 再想想那么多 10&lt;br /&gt;
 微秒的操作时延累加起来。 不难看出 swapping 对于性能是多么可&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;怕。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Lucene 使用了大量的文件。同时，Elasticsearch 在节点和 HTTP&lt;br /&gt;
 客户端之间进行通信也使用了大量&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;的套接字。&lt;br /&gt;
所有这一切都需要足够的文件描述符。你应该增加你的文件描述符，设置一个很大的值，&lt;/p&gt;
&lt;p&gt;如 64,000。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;补充：索引阶段性能提升方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用批量请求并调整其大小：每次批量数据 5--15 MB 大是个不错的起始点。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;存储：使用 SSD&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;段和合并：Elasticsearch 默认值是 20&lt;br /&gt;
MB/s，对机械磁盘应该是个不错的设置。如果你用的是 SSD，&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;可以考虑提高到 100--200&lt;br /&gt;
MB/s。如果你在做批量导入，完全不在意搜索，你可以彻底关掉合并限流。另外还可以增加&lt;br /&gt;
 index.translog.flush_threshold_size 设置，从默认的 512 MB&lt;br /&gt;
 到更大一些的值，比如 1&lt;/p&gt;
&lt;p&gt;GB，这可以在一次清空触发的时候在事务日志里积累出更大的段。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果你的搜索结果不需要近实时的准确度，考虑把每个索引的&lt;br /&gt;
 index.refresh_interval 改到 30s。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果你在做大批量导入，考虑通过设置 index.number_of_replicas: 0&lt;br /&gt;
 关闭副本。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;78-gc-方面在使用-elasticsearch-时要注意什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#78-gc-方面在使用-elasticsearch-时要注意什么&#34;&gt;#&lt;/a&gt; 7.8 GC 方面，在使用 Elasticsearch 时要注意什么？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;倒排词典的索引需要常驻内存，无法 GC，需要监控 data node 上 segment&lt;br /&gt;
memory 增长趋势。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;各类缓存，field cache, filter cache, indexing cache, bulk queue&lt;br /&gt;
 等等，要设置合理的大小，并且要应该根&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;据最坏的情况来看 heap 是否够用，也就是各类缓存全部占满的时候，还有&lt;br /&gt;
 heap 空间可以分配给其他&lt;/p&gt;
&lt;p&gt;任务吗？避免采用 clear cache 等 &amp;quot;自欺欺人&amp;quot; 的方式来释放内存。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;避免返回大量结果集的搜索与聚合。确实需要大量拉取数据的场景，可以采用&lt;br /&gt;
 scan &amp;amp; scroll api 来实现。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cluster stats&lt;br /&gt;
 驻留内存并无法水平扩展，超大规模集群可以考虑分拆成多个集群通过 tribe&lt;br /&gt;
node 连接。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;想知道 heap 够不够，必须结合实际应用场景，并对集群的 heap&lt;br /&gt;
 使用情况做持续的监控。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;79-elasticsearch-对于大数据量上亿量级的聚合如何实现&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#79-elasticsearch-对于大数据量上亿量级的聚合如何实现&#34;&gt;#&lt;/a&gt; 7.9 Elasticsearch 对于大数据量（上亿量级）的聚合如何实现？&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Elasticsearch 提供的首个近似聚合是 cardinality&lt;br /&gt;
 度量。它提供一个字段的基数，即该字段的 distinct&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;或者 unique 值的数目。它是基于 HLL 算法的。HLL&lt;br /&gt;
 会先对我们的输入作哈希运算，然后根据哈希运算的结果中的 bits&lt;br /&gt;
 做概率估算从而得到基数。其特点是：可配置的精度，用来控制内存的使用（更精确&lt;br /&gt;
＝ 更&lt;/p&gt;
&lt;p&gt;多内存）；小的数据集精度是非常高的；我们可以通过配置参数，来设置去重需要的固定内存使用量。无&lt;/p&gt;
&lt;p&gt;论数千还是数十亿的唯一值，内存使用量只与你配置的精确度相关&lt;/p&gt;
&lt;h2 id=&#34;710-在并发情况下elasticsearch-如果保证读写一致&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#710-在并发情况下elasticsearch-如果保证读写一致&#34;&gt;#&lt;/a&gt; 7.10 在并发情况下，Elasticsearch 如果保证读写一致？&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;可以通过版本号使用乐观并发控制，以确保新版本不会被旧版本覆盖，由应用层来处理具体的冲突；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;另外对于写操作，一致性级别支持 quorum/one/all，默认为&lt;br /&gt;
 quorum，即只有当大多数分片可用时才允&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;许写操作。但即使大多数可用，也可能存在因为网络等原因导致写入副本失败，这样该副本被认为故&lt;/p&gt;
&lt;p&gt;障，分片将会在一个不同的节点上重建。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;对于读操作，可以设置 replication 为&lt;br /&gt;
 sync (默认)，这使得操作在主分片和副本分片都完成后才会返回；如果设置&lt;br /&gt;
 replication 为 async 时，也可以通过设置搜索请求参数_preference 为&lt;br /&gt;
 primary 来查询主分片，&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;确保文档是最新版本。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;711-如何监控-elasticsearch-集群状态&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#711-如何监控-elasticsearch-集群状态&#34;&gt;#&lt;/a&gt; 7.11 如何监控 Elasticsearch 集群状态？&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;elasticsearch-head 插件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过 Kibana 监控&lt;br /&gt;
 Elasticsearch。你可以实时查看你的集群健康状态和性能，也可以分析过去的集群、索引和节点指标&lt;/p&gt;
&lt;h3 id=&#34;712-是否了解字典树&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#712-是否了解字典树&#34;&gt;#&lt;/a&gt; 7.12 是否了解字典树？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;常用字典数据结构如下所示:&lt;/li&gt;
&lt;/ul&gt;
&lt;img data-src=&#34;/Distribution/Elasticsearch/image396.jpg&#34; class=&#34;&#34;&gt;{width=&#34;5.759722222222222in&#34;
&lt;p&gt;height=&amp;quot;1.426388888888889in&amp;quot;}&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;字典树又称单词查找树，Trie&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9UcmllJUU2JUEwJTkx&#34;&gt; 树，&lt;/span&gt;是一种&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlQTAlOTElRTUlQkQlQTIlRTclQkIlOTMlRTYlOUUlODQvOTY2MzgwNw==&#34;&gt;树形结构，&lt;/span&gt;是一种哈希树的变种。典型应用是用于统计，排&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;序和保存大量的字符串（但不仅限于字符串），所以经常被搜索引擎系统用于文本词频统计。它的优点是：利用字符串的公共前缀来减少查询时间，最大限度地减少无谓的字符串比较，查询效率比哈希树高。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Trie&lt;br /&gt;
 的核心思想是空间换时间，利用字符串的公共前缀来降低查询时间的开销以达到提高效率的目的。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;它有 3 个基本性质:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;根节点不包含字符，除根节点外每一个节点都只包含一个字符。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从根节点到某一节点，路径上经过的字符连接起来，为该节点对应的字符串。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每个节点的所有子节点包含的字符都不相同。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于中文的字典树，每个节点的子节点用一个哈希表存储，这样就不用浪费太大的空间，而且查询速度上可以保留哈希的复杂度&lt;br /&gt;
 O (1)。&lt;/p&gt;
&lt;h3 id=&#34;713-elasticsearch-中的集群-节点-索引-文档-类型是什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#713-elasticsearch-中的集群-节点-索引-文档-类型是什么&#34;&gt;#&lt;/a&gt; 7.13 Elasticsearch 中的集群、节点、索引、文档、类型是什么？&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;集群是一个或多个节点（服务器）的集合，它们共同保存您的整个数据，并提供跨所有节点的联合索&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;引和搜索功能。群集由唯一名称标识，默认情况下为 &amp;quot;elasticsearch&amp;quot;。此名称很重要，因为如果节点设&lt;/p&gt;
&lt;p&gt;置为按名称加入群集，则该节点只能是群集的一部分。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;节点是属于集群一部分的单个服务器。它存储数据并参与群集索引和搜索功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;索引就像关系数据库中的 &amp;quot;数据库&amp;quot;。它有一个定义多种类型的映射。索引是逻辑名称空间，映射到一&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;个或多个主分片，并且可以有零个或多个副本分片。 MySQL =&amp;gt; 数据库&lt;br /&gt;
 Elasticsearch =&amp;gt; 索引&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;文档类似于关系数据库中的一行。不同之处在于索引中的每个文档可以具有不同的结构（字段），但是对于通用字段应该具有相同的数据类型。&lt;br /&gt;
MySQL =&amp;gt; Databases =&amp;gt; Tables =&amp;gt; Columns / Rows&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Elasticsearch =&amp;gt; Indices =&amp;gt; Types =&amp;gt; 具有属性的文档&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;类型是索引的逻辑类别 / 分区，其语义完全取决于用户。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;714-elasticsearch-中的倒排索引是什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#714-elasticsearch-中的倒排索引是什么&#34;&gt;#&lt;/a&gt; 7.14 Elasticsearch 中的倒排索引是什么？&lt;/h2&gt;
&lt;p&gt;倒排索引是搜索引擎的核心。搜索引擎的主要目标是在查找发生搜索条件的文档时提供快速搜索。ES&lt;br /&gt;
 中的倒排索引其实就是 lucene&lt;br /&gt;
 的倒排索引，区别于传统的正向索引，倒排索引会再存储数据时将关键词和数据进行关联，保存到倒排表中，然后查询时，将查询内容进行分词后在倒排表中进行查询，最后匹配数据即可。&lt;/p&gt;

&lt;div id=&#34;gitalk-container&#34;&gt;&lt;/div&gt;
&lt;script src=&#34;https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js&#34;&gt;&lt;/script&gt;&lt;link rel=&#34;stylesheet&#34; href=&#34;https://unpkg.com/gitalk/dist/gitalk.css&#34;&gt;&lt;script src=&#34;https://unpkg.com/gitalk/dist/gitalk.min.js&#34;&gt;&lt;/script&gt;

		&lt;script&gt;
		var gitalkConfig = {&#34;clientID&#34;:&#34;6db178ba46c8af8f6a6f&#34;,&#34;clientSecret&#34;:&#34;90f730e5956024596558df00975cd8eae28cae3d&#34;,&#34;repo&#34;:&#34;bk-comment01&#34;,&#34;owner&#34;:&#34;onlymarryu&#34;,&#34;admin&#34;:[&#34;onlymarryu&#34;],&#34;distractionFreeMode&#34;:false,&#34;language&#34;:&#34;zh-CN&#34;,&#34;proxy&#34;:&#34;https://gitalk-comments.netlify.app/github_access_token&#34;,&#34;perPage&#34;:15};
	    gitalkConfig.id = md5(location.pathname);
		var gitalk = new Gitalk(gitalkConfig);
	    gitalk.render(&#34;gitalk-container&#34;);
	    &lt;/script&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://eth168.top/Web-anteriore/Vue2-3/Vue/</guid>
            <title>Vue2</title>
            <link>https://eth168.top/Web-anteriore/Vue2-3/Vue/</link>
            <category term="前端" scheme="https://eth168.top/categories/%E5%89%8D%E7%AB%AF/" />
            <category term="框架" scheme="https://eth168.top/categories/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/" />
            <category term="框架" scheme="https://eth168.top/tags/%E6%A1%86%E6%9E%B6/" />
            <pubDate>Fri, 02 Jun 2023 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;Vue 技术栈 (全家桶)&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;尚硅谷前端研究院&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;第-1-章vue-核心&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第-1-章vue-核心&#34;&gt;#&lt;/a&gt; 第 1 章：Vue 核心&lt;/h1&gt;
&lt;h2 id=&#34;11-vue-简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-vue-简介&#34;&gt;#&lt;/a&gt; 1.1. Vue 简介&lt;/h2&gt;
&lt;h3 id=&#34;111-官网&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#111-官网&#34;&gt;#&lt;/a&gt; 1.1.1. 官网&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;英文官网: &lt;span&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWVqcy5vcmcv&#34;&gt;https://vuejs.org/&lt;/span&gt;&lt;/span&gt;[&lt;span class=&#34;underline&#34;&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWVqcy5vcmcv&#34;&gt;https://vuejs.org/&lt;/span&gt;&lt;/span&gt;](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92dWVqcy5vcmcv&#34;&gt;https://vuejs.org/&lt;/span&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中文官网:&lt;br /&gt;
&lt;span&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jbi52dWVqcy5vcmcv&#34;&gt;https://cn.vuejs.org/&lt;/span&gt;&lt;/span&gt;[&lt;span class=&#34;underline&#34;&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jbi52dWVqcy5vcmcv&#34;&gt;https://cn.vuejs.org/&lt;/span&gt;&lt;/span&gt;](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jbi52dWVqcy5vcmcv&#34;&gt;https://cn.vuejs.org/&lt;/span&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;112-介绍与描述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#112-介绍与描述&#34;&gt;#&lt;/a&gt; 1.1.2. 介绍与描述&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;动态构建用户界面的&lt;strong&gt;渐进式&lt;/strong&gt; JavaScript 框架&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;作者：尤雨溪&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;113-vue-的特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#113-vue-的特点&#34;&gt;#&lt;/a&gt; 1.1.3. Vue 的特点&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;遵循 &lt;strong&gt;MVVM&lt;/strong&gt; 模式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编码简洁，体积小，运行效率高，适合移动 / PC 端开发&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;它本身只关注 UI, 也可以引入其它第三方库开发项目&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;114-与其它-js-框架的关联&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#114-与其它-js-框架的关联&#34;&gt;#&lt;/a&gt; 1.1.4. 与其它 JS 框架的关联&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;借鉴 Angular 的&lt;strong&gt;模板&lt;/strong&gt;和&lt;strong&gt;数据绑定&lt;/strong&gt;技术&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;借鉴 React 的&lt;strong&gt;组件化&lt;/strong&gt;和&lt;strong&gt;虚拟 DOM&lt;/strong&gt; 技术&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;115-vue-周边库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#115-vue-周边库&#34;&gt;#&lt;/a&gt; 1.1.5. Vue 周边库&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;vue-cli: vue 脚手架&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;vue-resource&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;axios&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;vue-router: 路由&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;vuex: 状态管理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;element-ui: 基于 vue 的 UI 组件库 (PC 端)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;......&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;12-初识-vue&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#12-初识-vue&#34;&gt;#&lt;/a&gt; 1.2. 初识 Vue&lt;/h2&gt;
{width=&#34;3.730944881889764in&#34;
&lt;p&gt;height=&amp;quot;2.4135837707786525in&amp;quot;}&lt;/p&gt;
&lt;h2 id=&#34;13-模板语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13-模板语法&#34;&gt;#&lt;/a&gt; 1.3. 模板语法&lt;/h2&gt;
&lt;h3 id=&#34;131-效果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#131-效果&#34;&gt;#&lt;/a&gt; 1.3.1. 效果&lt;/h3&gt;
{width=&#34;3.4712226596675415in&#34;
&lt;p&gt;height=&amp;quot;2.501083770778653in&amp;quot;}&lt;/p&gt;
&lt;h3 id=&#34;132-模板的理解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#132-模板的理解&#34;&gt;#&lt;/a&gt; 1.3.2. 模板的理解&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;html 中包含了一些 JS 语法代码，语法分为两种，分别为：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;插值语法（双大括号表达式）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;指令（以 v - 开头）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;133-插值语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#133-插值语法&#34;&gt;#&lt;/a&gt; 1.3.3. 插值语法&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;功能：用于解析&lt;strong&gt;标签体&lt;/strong&gt;内容&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;语法:  ，xxxx 会作为 js 表达式解析&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;134-指令语法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#134-指令语法&#34;&gt;#&lt;/a&gt; 1.3.4. 指令语法&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;功能：解析&lt;strong&gt;标签属性&lt;/strong&gt;、解析&lt;strong&gt;标签体内容&lt;/strong&gt;、&lt;strong&gt;绑定事件&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;举例：v-bind:href = &#39;xxxx&#39; ，xxxx 会作为 js 表达式被解析&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;说明：Vue 中有有很多的指令，此处只是用 v-bind 举个例子&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;14-数据绑定&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#14-数据绑定&#34;&gt;#&lt;/a&gt; 1.4. 数据绑定&lt;/h2&gt;
&lt;h3 id=&#34;141-效果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#141-效果&#34;&gt;#&lt;/a&gt; 1.4.1. 效果&lt;/h3&gt;
{width=&#34;3.291360454943132in&#34;
&lt;p&gt;height=&amp;quot;3.0205282152230972in&amp;quot;}&lt;/p&gt;
&lt;h3 id=&#34;142-单向数据绑定&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#142-单向数据绑定&#34;&gt;#&lt;/a&gt; 1.4.2. 单向数据绑定&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;v-bind:href =&amp;quot;xxx&amp;quot;&lt;/p&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;语法：或简写为 :href&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;特点：数据只能从 data 流向页面&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;143-双向数据绑定&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#143-双向数据绑定&#34;&gt;#&lt;/a&gt; 1.4.3. 双向数据绑定&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;v-mode:value=&amp;quot;xxx&amp;quot;&lt;/p&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li&gt;语法： 或简写为     v-model=&amp;quot;xxx&amp;quot;&lt;/li&gt;
&lt;li&gt;特点：数据不仅能从 data 流向页面，还能从页面流向 data&lt;/li&gt;
&lt;li&gt;注意：仅在 表单类元素 中使用，input、text 等&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;15-mvvm-模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#15-mvvm-模型&#34;&gt;#&lt;/a&gt; 1.5. MVVM 模型&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;M：模型 (Model) ：对应 data 中的数据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;V：视图 (View) ：模板&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;VM：视图模型 (ViewModel) ： Vue 实例对象&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
{width=&#34;4.693444881889763in&#34;
&lt;p&gt;height=&amp;quot;2.7649726596675417in&amp;quot;}&lt;/p&gt;
&lt;h2 id=&#34;16-事件处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#16-事件处理&#34;&gt;#&lt;/a&gt; &lt;strong&gt;1.6. 事件处理&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&#34;161-效果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#161-效果&#34;&gt;#&lt;/a&gt; 1.6.1. 效果&lt;/h3&gt;
{width=&#34;4.325388232720909in&#34;
&lt;p&gt;height=&amp;quot;2.9198337707786526in&amp;quot;}&lt;/p&gt;
&lt;h3 id=&#34;162-绑定监听&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#162-绑定监听&#34;&gt;#&lt;/a&gt; 1.6.2. 绑定监听&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;v-on:xxx=&amp;quot;fun&amp;quot;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;@xxx=&amp;quot;fun&amp;quot;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;@xxx=&amp;quot;fun (参数)&amp;quot;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;默认事件形参: event&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;隐含属性对象: $event&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;163-事件修饰符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#163-事件修饰符&#34;&gt;#&lt;/a&gt; 1.6.3. 事件修饰符&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;.prevent : 阻止事件的默认行为 event.preventDefault ()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;.stop : 停止事件冒泡 event.stopPropagation ()&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;164-按键修饰符&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#164-按键修饰符&#34;&gt;#&lt;/a&gt; 1.6.4. 按键修饰符&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;keycode : 操作的是某个 keycode 值的键&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;.keyName : 操作的某个按键名的键 (少部分)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;17-计算属性与监视&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#17-计算属性与监视&#34;&gt;#&lt;/a&gt; 1.7. 计算属性与监视&lt;/h2&gt;
&lt;h3 id=&#34;171-效果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#171-效果&#34;&gt;#&lt;/a&gt; 1.7.1. 效果&lt;/h3&gt;
{width=&#34;2.706639326334208in&#34;
&lt;p&gt;height=&amp;quot;1.7865004374453193in&amp;quot;}&lt;/p&gt;
&lt;h3 id=&#34;172-计算属性-computed&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#172-计算属性-computed&#34;&gt;#&lt;/a&gt; 1.7.2. 计算属性 - computed&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;要显示的数据不存在，要通过计算得来。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 computed 对象中定义计算属性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在页面中使用来显示计算的结果。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;173-监视属性-watch&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#173-监视属性-watch&#34;&gt;#&lt;/a&gt; 1.7.3. 监视属性 - watch&lt;/h3&gt;
{width=&#34;3.508028215223097in&#34;
&lt;p&gt;height=&amp;quot;2.959417104111986in&amp;quot;}&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;通过通过 vm 对象的 $watch () 或 watch 配置来监视指定的属性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当属性变化时，回调函数自动调用，在函数内部进行计算&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;18-class-与-style-绑定&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#18-class-与-style-绑定&#34;&gt;#&lt;/a&gt; 1.8. class 与 style 绑定&lt;/h2&gt;
&lt;h3 id=&#34;181-理解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#181-理解&#34;&gt;#&lt;/a&gt; 1.8.1. 理解&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在应用界面中，某个 (些) 元素的样式是变化的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;class/style 绑定就是专门用来实现动态样式效果的技术&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;182-class-绑定&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#182-class-绑定&#34;&gt;#&lt;/a&gt; 1.8.2. class 绑定&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;:class=&#39;xxx&#39;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;表达式是字符串: &#39;classA&#39;&lt;/p&gt;
&lt;/li&gt;
&lt;li classA:isA,=&#34;&#34; classB:=&#34;&#34; isB=&#34;&#34;&gt;
&lt;p&gt;表达式是对象:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;表达式是数组: [&#39;classA&#39;, &#39;classB&#39;]&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;183-style-绑定&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#183-style-绑定&#34;&gt;#&lt;/a&gt; 1.8.3. style 绑定&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;:style=&amp;quot;{ color: activeColor, fontSize: fontSize + &#39;px&#39; }&amp;quot;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其中 activeColor/fontSize 是 data 属性&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;19-条件渲染&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#19-条件渲染&#34;&gt;#&lt;/a&gt; 1.9. 条件渲染&lt;/h2&gt;
&lt;h3 id=&#34;191-条件渲染指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#191-条件渲染指令&#34;&gt;#&lt;/a&gt; 1.9.1. 条件渲染指令&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;v-if 、v-else-if、 v-else&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;v-show&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;192-比较-v-if-与-v-show&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#192-比较-v-if-与-v-show&#34;&gt;#&lt;/a&gt; 1.9.2. 比较 v-if 与 v-show&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;如果需要频繁切换 v-show 较好&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当条件不成立时，v-if 的所有子节点不会解析 (项目中使用)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;110-列表渲染&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#110-列表渲染&#34;&gt;#&lt;/a&gt; 1.10. 列表渲染&lt;/h2&gt;
&lt;h3 id=&#34;1101-效果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1101-效果&#34;&gt;#&lt;/a&gt; 1.10.1. 效果&lt;/h3&gt;
&lt;blockquote&gt;
{width=&#34;2.405250437445319in&#34;
&lt;p&gt;height=&amp;quot;1.9621948818897639in&amp;quot;}{width=&amp;quot;2.9516666666666667in&amp;quot;&lt;br /&gt;
height=&amp;quot;2.005in&amp;quot;}{width=&amp;quot;3.9413615485564306in&amp;quot;&lt;br /&gt;
height=&amp;quot;1.7976104549431322in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;1102-列表显示指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1102-列表显示指令&#34;&gt;#&lt;/a&gt; 1.10.2. 列表显示指令&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;遍历数组: v-for /index 遍历对象: v-for /key&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;111-收集表单数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#111-收集表单数据&#34;&gt;#&lt;/a&gt; 1.11. 收集表单数据&lt;/h2&gt;
{width=&#34;3.9490004374453194in&#34;
&lt;p&gt;height=&amp;quot;5.004555993000875in&amp;quot;}&lt;/p&gt;
&lt;h2 id=&#34;112-过滤器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#112-过滤器&#34;&gt;#&lt;/a&gt; 1.12. 过滤器&lt;/h2&gt;
&lt;h3 id=&#34;1121-效果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1121-效果&#34;&gt;#&lt;/a&gt; 1.12.1. 效果&lt;/h3&gt;
{width=&#34;2.845528215223097in&#34;
&lt;p&gt;height=&amp;quot;1.7052504374453192in&amp;quot;}&lt;/p&gt;
&lt;h3 id=&#34;理解过滤器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#理解过滤器&#34;&gt;#&lt;/a&gt; 理解过滤器&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;功能：对要显示的数据进行特定格式化后再显示&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注意：并没有改变原本的数据，是产生新的对应的数据&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;113-内置指令与自定义指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#113-内置指令与自定义指令&#34;&gt;#&lt;/a&gt; 1.13. 内置指令与自定义指令&lt;/h2&gt;
&lt;h3 id=&#34;1131-常用内置指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1131-常用内置指令&#34;&gt;#&lt;/a&gt; 1.13.1. 常用内置指令&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;v-text : 更新元素的 textContent&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;v-html : 更新元素的 innerHTML&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;v-if : 如果为 true, 当前标签才会输出到页面&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;v-else: 如果为 false, 当前标签才会输出到页面&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;v-show : 通过控制 display 样式来控制显示 / 隐藏&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;v-for : 遍历数组 / 对象&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;v-on : 绑定事件监听，一般简写为 @&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;v-bind : 绑定解析表达式，可以省略 v-bind&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;v-model : 双向数据绑定&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;v-cloak : 防止闪现，与 css 配合&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;[v-cloak]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token property&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; none &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;v-once：初次渲染之后，就视为静态内容了，以后不在动态渲染&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;自定义指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#自定义指令&#34;&gt;#&lt;/a&gt; 自定义指令&lt;/h3&gt;
&lt;h4 id=&#34;1-注册全局指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-注册全局指令&#34;&gt;#&lt;/a&gt; 1. 注册全局指令&lt;/h4&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Vue&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;directive&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;my-directive&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;el&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; binding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    el&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;innerHTML &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; binding&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toupperCase&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;2-注册局部指令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-注册局部指令&#34;&gt;#&lt;/a&gt; 2. 注册局部指令&lt;/h4&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token literal-property property&#34;&gt;directives&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string-property property&#34;&gt;&#39;my-directive&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;bind&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;el&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; binding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        	el&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;innerHTML &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; binding&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;toupperCase&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;1) 使用指令&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;v-my-directive=&#39;xxx&#39;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;114-vue-实例生命周期&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#114-vue-实例生命周期&#34;&gt;#&lt;/a&gt; 1.14. Vue 实例生命周期&lt;/h2&gt;
&lt;h3 id=&#34;1141-效果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1141-效果&#34;&gt;#&lt;/a&gt; 1.14.1. 效果&lt;/h3&gt;
{width=&#34;2.484417104111986in&#34;
&lt;p&gt;height=&amp;quot;1.1413604549431322in&amp;quot;}&lt;/p&gt;
&lt;h3 id=&#34;生命周期流程图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#生命周期流程图&#34;&gt;#&lt;/a&gt; 生命周期流程图&lt;/h3&gt;
&lt;img data-src=&#34;/Web-anteriore/Vue2-3/Vue/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.png&#34; class=&#34;&#34; title=&#34;生命周期&#34;&gt;
&lt;h4 id=&#34;1143-vue-生命周期分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1143-vue-生命周期分析&#34;&gt;#&lt;/a&gt; 1.14.3. vue 生命周期分析&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;初始化显示&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;beforeCreate()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;created()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;beforeMount()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mounted()&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;更新状态: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3RoaXMueHh4&#34;&gt;this.xxx&lt;/span&gt; = value&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;beforeUpdate()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;updated()&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;销毁 vue 实例: vm.$destory ()&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;beforeDestory()&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;destoryed()&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;1144-常用的生命周期方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1144-常用的生命周期方法&#34;&gt;#&lt;/a&gt; 1.14.4. 常用的生命周期方法&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;mounted (): 发送 ajax 请求，启动定时器等异步任务&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;beforeDestory (): 做收尾工作，如：清除定时器&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第-2-章vue-组件化编程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第-2-章vue-组件化编程&#34;&gt;#&lt;/a&gt; 第 2 章：Vue 组件化编程&lt;/h1&gt;
&lt;h2 id=&#34;21-模块与组件-模块化与组件化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#21-模块与组件-模块化与组件化&#34;&gt;#&lt;/a&gt; 2.1 模块与组件、模块化与组件化&lt;/h2&gt;
&lt;h3 id=&#34;211-模块&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#211-模块&#34;&gt;#&lt;/a&gt; 2.1.1. 模块&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;理解：向外提供特定功能的 js 程序，一般就是一个 js 文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为什么: js 文件很多很复杂&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;作用：复用 js, 简化 js 的编写，提高 js 运行效率&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;212-组件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#212-组件&#34;&gt;#&lt;/a&gt; 2.1.2. 组件&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;理解：用来实现局部 (特定) 功能效果的代码集合 (html/css/js/image.....)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为什么：一个界面的功能很复杂&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;作用：复用编码，简化项目编码，提高运行效率&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;2.1.3. 模块化&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当应用中的 js 都以模块来编写的，那这个应用就是一个模块化的应用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;2.1.4. 组件化&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当应用中的功能都是多组件的方式来编写的，&lt;br /&gt;
 那这个应用就是一个组件化的应用，。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;22-非单文件组件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#22-非单文件组件&#34;&gt;#&lt;/a&gt; 2.2. 非单文件组件&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;模板编写没有提示&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;没有构建过程，无法将 ES6 转换成 ES5&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不支持组件的 CSS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;真正开发中几乎不用&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;23-单文件组件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#23-单文件组件&#34;&gt;#&lt;/a&gt; 2.3. 单文件组件&lt;/h2&gt;
&lt;h3 id=&#34;231-一个vue-文件的组成3-个部分&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#231-一个vue-文件的组成3-个部分&#34;&gt;#&lt;/a&gt; 2.3.1. 一个.vue 文件的组成 (3 个部分)&lt;/h3&gt;
&lt;h4 id=&#34;1-模板页面&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-模板页面&#34;&gt;#&lt;/a&gt; 1. 模板页面&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt; 页面模板

&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;2-js-模块对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-js-模块对象&#34;&gt;#&lt;/a&gt; 2. JS 模块对象&lt;/h4&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token literal-property property&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token literal-property property&#34;&gt;computed&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token literal-property property&#34;&gt;components&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;script&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;3-样式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3-样式&#34;&gt;#&lt;/a&gt; 3. 样式&lt;/h4&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;lt;style&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	样式定义&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;lt;/style&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;232-基本使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#232-基本使用&#34;&gt;#&lt;/a&gt; 2.3.2. 基本使用&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;引入组件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;映射成标签&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用组件标签&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第-3-章使用-vue-脚手架&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第-3-章使用-vue-脚手架&#34;&gt;#&lt;/a&gt; 第 3 章：使用 Vue 脚手架&lt;/h1&gt;
&lt;h2 id=&#34;31-初始化脚手架&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#31-初始化脚手架&#34;&gt;#&lt;/a&gt; 3.1 初始化脚手架&lt;/h2&gt;
&lt;h3 id=&#34;311-说明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#311-说明&#34;&gt;#&lt;/a&gt; 3.1.1 说明&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Vue 脚手架是 Vue 官方提供的标准化开发工具（开发平台）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最新的版本是 4.x。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文档:&lt;br /&gt;
&lt;span&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jbGkudnVlanMub3JnL3poLw==&#34;&gt;https://cli.vuejs.org/zh/&lt;/span&gt;&lt;/span&gt;[&lt;span class=&#34;underline&#34;&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jbGkudnVlanMub3JnL3poLw==&#34;&gt;https://cli.vuejs.org/zh/&lt;/span&gt;&lt;/span&gt;。](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jbGkudnVlanMub3JnL3poLw==&#34;&gt;https://cli.vuejs.org/zh/&lt;/span&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;312-具体步骤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#312-具体步骤&#34;&gt;#&lt;/a&gt; 3.1.2 具体步骤&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 第一步（仅第一次执行）：全局安装 @vue/cli。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-g&lt;/span&gt; @vue/cli&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 第二步：** 切换到你要创建项目的目录 **，然后使用命令创建项目&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;vue create xxxx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#第三步：启动项目&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; run serve&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;备注：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;如出现下载缓慢请配置 npm 淘宝镜像：npm config set registry&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yZWdpc3RyeS5ucG0udGFvYmFvLm9yZw==&#34;&gt;https://registry.npm.taobao.org&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Vue 脚手架隐藏了所有 webpack 相关的配置，若想查看具体的 webpakc&lt;br /&gt;
 配置，请执行：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;figcaption data-lang=&#34;Bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;vue inspect &lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; output.js&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;313-模板项目的结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#313-模板项目的结构&#34;&gt;#&lt;/a&gt; 3.1.3 模板项目的结构&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;├── node_modules
├── public
│ ├── favicon.ico: 页签图标
│ └── index.html: 主页面
├── src
│ ├── assets: 存放静态资源
│ │ └── logo.png
│ │── component: 存放组件│ │ └── HelloWorld.vue
│ │── App.vue: 汇总所有组件	
│ │── main.js: 入口文件
├── .gitignore: git 版本管制忽略的配置
├── babel.config.js: babel 的配置文件
├── package.json: 应用包配置文件
├── README.md: 应用描述文件
├── package-lock.json：包版本控制文件
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;32-ref-与-props&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#32-ref-与-props&#34;&gt;#&lt;/a&gt; 3.2 ref 与 props&lt;/h2&gt;
&lt;h3 id=&#34;ref&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ref&#34;&gt;#&lt;/a&gt; ref&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;** 作用：** 用于给节点打标识&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;** 读取方式：**this.$refs.xxxxxx&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;props&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#props&#34;&gt;#&lt;/a&gt; props&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;** 作用：** 用于父组件给子组件传递数据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;读取方式一：只指定名称&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;props: [&#39;name&#39;, &#39;age&#39;, &#39;setName&#39;]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;读取方式二：指定名称和类型&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;props: {&lt;/p&gt;
&lt;p&gt;​	name: String, age: Number,&lt;/p&gt;
&lt;p&gt;​	setNmae: Function&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;读取方式三：指定名称 / 类型 / 必要性 / 默认值&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;props: {&lt;/p&gt;
&lt;p&gt;​	name: {&lt;/p&gt;
&lt;p&gt;​		type: String,&lt;/p&gt;
&lt;p&gt;​		required: true, default:xxx&lt;/p&gt;
&lt;p&gt;​	},&lt;/p&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;补充&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;子传父的时候，我们可以回归一下 v-bind:&amp;quot;xxx&amp;quot; 我们在传的过程中，只需要在父中定义一个接收的 method，在子组件中将 xxx 方法如上方数据一样接收即可，在我们要传给父内容时操作他（调用它），然后我们父组件通过参数配置即可拿到数据。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;33-css混入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#33-css混入&#34;&gt;#&lt;/a&gt; 3.3 css 混入&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;局部&lt;/p&gt;
&lt;p&gt;我们将混入的配置抽出来为一个 JS，然后在多个组件中分别配置即可。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;抽出来的 &lt;code&gt;mixin.js&lt;/code&gt; ：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 我们要混入的配置均为 vue 的配置对象，一旦混入，所有的引入组件都有该混入的配置，且配置先一步赋值 ————》意为着有可能被覆盖&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; hunhe &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token literal-property property&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token function&#34;&gt;showName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token function&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function&#34;&gt;mounted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;你好啊！&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; hunhe2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token literal-property property&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token literal-property property&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;组件 1：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
	&amp;lt;div&amp;gt;
		&amp;lt;h2 @click=&amp;quot;showName&amp;quot;&amp;gt;学校名称：&amp;#123;&amp;#123;name&amp;#125;&amp;#125;&amp;lt;/h2&amp;gt;
		&amp;lt;h2&amp;gt;学校地址：&amp;#123;&amp;#123;address&amp;#125;&amp;#125;&amp;lt;/h2&amp;gt;
	&amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
	//引入一个hunhe
	import &amp;#123;hunhe,hunhe2&amp;#125; from &#39;../mixin&#39;

	export default &amp;#123;
		name:&#39;School&#39;,
		data() &amp;#123;
			return &amp;#123;
				name:&#39;尚硅谷&#39;,
				address:&#39;北京&#39;,
				x:666
			&amp;#125;
		&amp;#125;,
		mixins:[hunhe,hunhe2],
	&amp;#125;
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;组件 2&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
	&amp;lt;div&amp;gt;
		&amp;lt;h2 @click=&amp;quot;showName&amp;quot;&amp;gt;学生姓名：&amp;#123;&amp;#123;name&amp;#125;&amp;#125;&amp;lt;/h2&amp;gt;
		&amp;lt;h2&amp;gt;学生性别：&amp;#123;&amp;#123;sex&amp;#125;&amp;#125;&amp;lt;/h2&amp;gt;
	&amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
	import &amp;#123;hunhe,hunhe2&amp;#125; from &#39;../mixin&#39;

	export default &amp;#123;
		name:&#39;Student&#39;,
		data() &amp;#123;
			return &amp;#123;
				name:&#39;张三&#39;,
				sex:&#39;男&#39;
			&amp;#125;
		&amp;#125;,
		mixins:[hunhe,hunhe2]
	&amp;#125;
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;全局&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;直接在 &lt;code&gt;main.js&lt;/code&gt;  中配置混入即可&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;hunhe&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;hunhe2&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;./mixin&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Vue&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mixin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;hunhe&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Vue&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mixin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;hunhe2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;34-插件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#34-插件&#34;&gt;#&lt;/a&gt; 3.4 插件&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Vue 插件是一个包含 install 方法的&lt;strong&gt;对象&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;通过 install 方法给 Vue 或 Vue 实例添加方法，定义全局指令等&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;plugins.js&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;Vue&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;y&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;z&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;x&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;y&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;z&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token comment&#34;&gt;// 全局过滤器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		Vue&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;filter&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;mySlice&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; value&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;slice&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token comment&#34;&gt;// 定义全局指令&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		Vue&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;directive&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;fbind&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;// 指令与元素成功绑定时（一上来）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token function&#34;&gt;bind&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;element&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;binding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				element&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; binding&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;// 指令所在元素被插入页面时&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token function&#34;&gt;inserted&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;element&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;binding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				element&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;focus&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token comment&#34;&gt;// 指令所在的模板被重新解析时&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token function&#34;&gt;update&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;element&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;binding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				element&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; binding&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token comment&#34;&gt;// 定义混入&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		Vue&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;mixin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token function&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					&lt;span class=&#34;token literal-property property&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;					&lt;span class=&#34;token literal-property property&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;				&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token comment&#34;&gt;// 给 Vue 原型上添加一个方法（vm 和 vc 就都能用了）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;		&lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;prototype&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function-variable function&#34;&gt;hello&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;你好啊&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;&lt;code&gt;main.js&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 应用（使用）插件，且允许传参&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Vue&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;plugins&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;35-scoped样式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#35-scoped样式&#34;&gt;#&lt;/a&gt; 3.5 scoped 样式&lt;/h2&gt;
&lt;p&gt;在编译的过程中，组件的  &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt;  会合并到一起，这样就回引起一个最经典的问题，也就是 &lt;strong&gt;重复名&lt;/strong&gt; 问题，再不做处理的情况下，我们会根据 App.vue 中的 import 顺序去覆盖同名样式。&lt;/p&gt;
&lt;p&gt;为了解决这类问题，我们可以在每个组件的  &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;  标签中加入  &lt;code&gt;scoped&lt;/code&gt;  即可。我们所有的仅在本组件适用，他在编译的时候会自动为我们加一个标识。&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;lt;style scoped&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;/* 设置你的样式即可 */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;lt;/style&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;35-todo-list-案例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#35-todo-list-案例&#34;&gt;#&lt;/a&gt; 3.5 Todo-list 案例&lt;/h2&gt;
{width=&#34;4.5072080052493435in&#34;
&lt;p&gt;height=&amp;quot;2.1442082239720035in&amp;quot;}&lt;/p&gt;
&lt;h4 id=&#34;组件化编码流程通用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#组件化编码流程通用&#34;&gt;#&lt;/a&gt; 组件化编码流程（通用）&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;实现静态组件：抽取组件，使用组件实现静态页面效果&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;展示动态数据：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据的类型、名称是什么？&lt;/li&gt;
&lt;li&gt;数据保存在哪个组件？&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;交互 ------ 从绑定事件监听开始&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;36-vue-中的自定义事件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#36-vue-中的自定义事件&#34;&gt;#&lt;/a&gt; 3.6 Vue 中的自定义事件&lt;/h2&gt;
&lt;h3 id=&#34;绑定事件监听&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#绑定事件监听&#34;&gt;#&lt;/a&gt; 绑定事件监听&lt;/h3&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;Header&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;@addTodo&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;	addTodo/&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$on(	&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;	, this.addTodo)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;或者&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&amp;lt;Header ref=&#34;header&#34;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;this.$refs.header.&#39;addTodo&#39;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;触发事件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#触发事件&#34;&gt;#&lt;/a&gt; 触发事件&lt;/h3&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;$emit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;addTodo&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; todo&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;37-全局事件总线&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#37-全局事件总线&#34;&gt;#&lt;/a&gt; 3.7 全局事件总线&lt;/h2&gt;
&lt;h3 id=&#34;371-理解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#371-理解&#34;&gt;#&lt;/a&gt; 3.7.1 理解&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Vue 原型对象上包含事件处理的方法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;$on (eventName, listener): 绑定自定义事件监听&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$emit (eventName, data): 分发自定义事件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$off (eventName): 解绑自定义事件监听&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$once (eventName, listener): 绑定事件监听，但只能处理一次&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;所有组件实例对象的原型对象的原型对象就是 Vue 的原型对象&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;所有组件对象都能看到 Vue 原型对象上的属性和方法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Vue.prototype.$bus = new Vue (), 所有的组件对象都能看到 $bus&lt;br /&gt;
 这个属性&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;对象&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;全局事件总线&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;包含事件处理相关方法的对象 (只有一个)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;所有的组件都可以得到&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;372-指定事件总线对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#372-指定事件总线对象&#34;&gt;#&lt;/a&gt; 3.7.2 指定事件总线对象&lt;/h3&gt;
&lt;p&gt;+-----------------------------------------------------------------------+&lt;br /&gt;
| &lt;strong&gt;new&lt;/strong&gt; Vue({                                                         |&lt;br /&gt;
|                                                                       |&lt;br /&gt;
| &amp;gt; beforeCreate () { &lt;em&gt;//&lt;/em&gt; 尽量早的执行挂载全局事件总线对象的操作       |&lt;br /&gt;
| &amp;gt;                                                                     |&lt;br /&gt;
| &amp;gt; Vue.&lt;strong&gt;prototype&lt;/strong&gt;.&lt;strong&gt;$globalEventBus&lt;/strong&gt; = &lt;strong&gt;this&lt;/strong&gt; },                |&lt;br /&gt;
|                                                                       |&lt;br /&gt;
| }).$mount(&lt;strong&gt;&#39;#root&#39;&lt;/strong&gt;)                                             |&lt;br /&gt;
+=======================================================================+&lt;br /&gt;
+-----------------------------------------------------------------------+&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.7.3 绑定事件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;this.$globalEventBus.$&lt;mark&gt;on&lt;/mark&gt;(&#39;deleteTodo&#39;,this.deleteTodo)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.7.4 分发事件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;this.$globalEventBus.$&lt;mark&gt;emit&lt;/mark&gt;(&#39;deleteTodo&#39;,this.index)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.7.5 解绑事件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;this.$globalEventBus.$&lt;mark&gt;off&lt;/mark&gt;(&#39;deleteTodo&#39;)&lt;/p&gt;
&lt;h2 id=&#34;38-消息订阅与发布&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#38-消息订阅与发布&#34;&gt;#&lt;/a&gt; 3.8 消息订阅与发布&lt;/h2&gt;
&lt;h3 id=&#34;381-理解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#381-理解&#34;&gt;#&lt;/a&gt; 3.8.1 理解&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;这种方式的思想与全局事件总线很相似&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;它包含以下操作:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;(1) 订阅消息 -- 对应绑定事件监听 (2) 发布消息 -- 分发事件&lt;/p&gt;
&lt;p&gt;(3) 取消消息订阅 -- 解绑事件监听&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;需要引入一个消息订阅与发布的第三方实现库:&lt;br /&gt;
&lt;a href=&#34;https://github.com/mroderick/PubSubJS&#34;&gt;&lt;strong&gt;PubSubJS&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;382-使用-pubsubjs&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#382-使用-pubsubjs&#34;&gt;#&lt;/a&gt; 3.8.2 使用 PubSubJS&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在线文档:&lt;br /&gt;
&lt;span&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL21yb2Rlcmljay9QdWJTdWJKUw==&#34;&gt;https://github.com/mroderick/PubSubJS&lt;/span&gt;&lt;/span&gt;[&lt;span class=&#34;underline&#34;&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL21yb2Rlcmljay9QdWJTdWJKUw==&#34;&gt;https://github.com/mroderick/PubSubJS&lt;/span&gt;&lt;/span&gt;](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL21yb2Rlcmljay9QdWJTdWJKUw==&#34;&gt;https://github.com/mroderick/PubSubJS&lt;/span&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下载: npm install -S pubsub-js&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;相关语法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;import PubSub from &#39;pubsub-js&#39; // 引入&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PubSub.subscribe(&#39;msgName&#39;, functon(msgName, data){ })&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PubSub.publish (&#39;msgName&#39;, data): 发布消息，&lt;br /&gt;
 触发订阅的回调函数调用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PubSub.unsubscribe (token): 取消消息的订阅&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;39-过度与动画&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#39-过度与动画&#34;&gt;#&lt;/a&gt; 3.9 过度与动画&lt;/h2&gt;
&lt;h3 id=&#34;391-效果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#391-效果&#34;&gt;#&lt;/a&gt; 3.9.1 效果&lt;/h3&gt;
{width=&#34;6.099694881889763in&#34;
&lt;p&gt;height=&amp;quot;2.029555993000875in&amp;quot;}&lt;/p&gt;
&lt;h3 id=&#34;392-vue-动画的理解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#392-vue-动画的理解&#34;&gt;#&lt;/a&gt; 3.9.2 vue 动画的理解&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;操作 css 的 trasition 或 animation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;vue 会给目标元素添加 / 移除特定的 class&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;过渡的相关类名：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;xxx-enter-active: 指定显示的 transition&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;xxx-leave-active: 指定隐藏的 transition&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;xxx-enter/xxx-leave-to: 指定隐藏时的样式&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
{width=&#34;4.885805993000875in&#34;
&lt;p&gt;height=&amp;quot;2.733028215223097in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;393-基本过渡动画的编码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#393-基本过渡动画的编码&#34;&gt;#&lt;/a&gt; 3.9.3 基本过渡动画的编码&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在目标元素外包裹 &amp;lt;transition name=&amp;quot;xxx&amp;quot;&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;定义 class 样式&lt;/p&gt;
&lt;p&gt;a.  指定过渡样式: transition&lt;/p&gt;
&lt;p&gt;b.  指定隐藏时的样式: opacity / 其它&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第-4-章vue-中的-ajax&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第-4-章vue-中的-ajax&#34;&gt;#&lt;/a&gt; 第 4 章：Vue 中的 ajax&lt;/h1&gt;
&lt;h2 id=&#34;41-解决开发环境-ajax-跨域问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#41-解决开发环境-ajax-跨域问题&#34;&gt;#&lt;/a&gt; 4.1 解决开发环境 Ajax 跨域问题&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;使用代理服务器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;42-github-用户搜索案例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#42-github-用户搜索案例&#34;&gt;#&lt;/a&gt; 4.2 github 用户搜索案例&lt;/h2&gt;
&lt;h3 id=&#34;421-效果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#421-效果&#34;&gt;#&lt;/a&gt; 4.2.1 效果&lt;/h3&gt;
{width=&#34;5.260805993000875in&#34;
&lt;p&gt;height=&amp;quot;3.3684448818897637in&amp;quot;}&lt;/p&gt;
&lt;h3 id=&#34;422-接口地址&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#422-接口地址&#34;&gt;#&lt;/a&gt; 4.2.2 接口地址&lt;/h3&gt;
&lt;p&gt;&lt;span&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS9zZWFyY2gvdXNlcnM/cT14eHg=&#34;&gt;https://api.github.com/search/users?q=xxx&lt;/span&gt;&lt;/span&gt;[&lt;span class=&#34;underline&#34;&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS9zZWFyY2gvdXNlcnM/cT14eHg=&#34;&gt;https://api.github.com/search/users?q=xxx&lt;/span&gt;&lt;/span&gt;](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS9zZWFyY2gvdXNlcnM/cT14eHg=&#34;&gt;https://api.github.com/search/users?q=xxx&lt;/span&gt;)&lt;/p&gt;
&lt;h2 id=&#34;43-vue-项目中常用的-2-个-ajax-库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#43-vue-项目中常用的-2-个-ajax-库&#34;&gt;#&lt;/a&gt; 4.3 vue 项目中常用的 2 个 Ajax 库&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;4.3.1 axios&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;通用的 Ajax 请求库，官方推荐，使用广泛&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;4.3.2 vue-resource&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;vue 插件库，vue1.x 使用广泛，&lt;strong&gt;官方已不维护。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;44-slot-插槽&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#44-slot-插槽&#34;&gt;#&lt;/a&gt; 4.4 slot 插槽&lt;/h2&gt;
&lt;h3 id=&#34;441-效果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#441-效果&#34;&gt;#&lt;/a&gt; 4.4.1 效果&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;效果一（不使用插槽）：&lt;/p&gt;
&lt;/blockquote&gt;
{width=&#34;4.112194881889764in&#34;
&lt;p&gt;height=&amp;quot;1.9267782152230972in&amp;quot;}&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;效果二（默认插槽）：&lt;/p&gt;
&lt;/blockquote&gt;
{width=&#34;4.2052504374453195in&#34;
&lt;p&gt;height=&amp;quot;2.10663823272091in&amp;quot;}&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;效果三（具名插槽）：&lt;/p&gt;
&lt;/blockquote&gt;
{width=&#34;4.439278215223097in&#34;
&lt;p&gt;height=&amp;quot;2.25663823272091in&amp;quot;}&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;效果三（作用域插槽）：&lt;/p&gt;
&lt;/blockquote&gt;
{width=&#34;4.59761154855643in&#34;
&lt;p&gt;height=&amp;quot;2.196917104111986in&amp;quot;}&lt;/p&gt;
&lt;h3 id=&#34;441-理解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#441-理解&#34;&gt;#&lt;/a&gt; 4.4.1 理解&lt;/h3&gt;
&lt;p&gt;父组件向子组件传递带数据的标签，当一个组件有不确定的结构时，就需要使用&lt;br /&gt;
 slot 技术，注意：插槽内容是在父组件中编译后，再传递给子组件的。&lt;/p&gt;
&lt;h3 id=&#34;442-分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#442-分类&#34;&gt;#&lt;/a&gt; 4.4.2 分类&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;默认插槽&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;命名插槽&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;作用域插槽&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第-5-章vuex&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第-5-章vuex&#34;&gt;#&lt;/a&gt; 第 5 章：vuex&lt;/h1&gt;
&lt;h2 id=&#34;51-理解-vuex&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#51-理解-vuex&#34;&gt;#&lt;/a&gt; 5.1 理解 vuex&lt;/h2&gt;
&lt;h3 id=&#34;511-vuex-是什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#511-vuex-是什么&#34;&gt;#&lt;/a&gt; 5.1.1 vuex 是什么&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;概念：专门在 Vue 中实现集中式状态（数据）管理的一个 Vue 插件，对 vue&lt;br /&gt;
 应用中多个组件的共享状态进行集中式的管理（读 / 写），也是一种组件间通信的方式，且适用于任意组件间通信。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Github 地址:&lt;br /&gt;
&lt;span&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL3Z1ZXg=&#34;&gt;https://github.com/vuejs/vuex&lt;/span&gt;&lt;/span&gt;[&lt;span class=&#34;underline&#34;&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL3Z1ZXg=&#34;&gt;https://github.com/vuejs/vuex&lt;/span&gt;&lt;/span&gt;](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL3Z1ZXg=&#34;&gt;https://github.com/vuejs/vuex&lt;/span&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;512-什么时候使用-vuex&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#512-什么时候使用-vuex&#34;&gt;#&lt;/a&gt; 5.1.2 什么时候使用 Vuex&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;多个组件依赖于同一状态&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;来自不同组件的行为需要变更同一状态&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;513-案例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#513-案例&#34;&gt;#&lt;/a&gt; 5.1.3 案例&lt;/h3&gt;
&lt;blockquote&gt;
{width=&#34;3.283028215223097in&#34;
&lt;p&gt;height=&amp;quot;1.7955282152230971in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;514-vuex-工作原理图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#514-vuex-工作原理图&#34;&gt;#&lt;/a&gt; 5.1.4 Vuex 工作原理图&lt;/h3&gt;
{width=&#34;3.712889326334208in&#34;
&lt;p&gt;height=&amp;quot;3.0413615485564303in&amp;quot;}&lt;/p&gt;
&lt;h2 id=&#34;52-vuex-核心概念和-api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#52-vuex-核心概念和-api&#34;&gt;#&lt;/a&gt; 5.2 vuex 核心概念和 API&lt;/h2&gt;
&lt;h3 id=&#34;521-state&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#521-state&#34;&gt;#&lt;/a&gt; 5.2.1 state&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;vuex 管理的状态对象&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;它应该是唯一的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;示例代码：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
{width=&#34;1.48in&#34; height=&#34;0.5916666666666667in&#34;}
&lt;/blockquote&gt;
&lt;h3 id=&#34;522-actions&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#522-actions&#34;&gt;#&lt;/a&gt; 5.2.2 actions&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;值为一个对象，包含多个响应用户动作的回调函数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过 commit ( ) 来触发 mutation 中函数的调用，间接更新 state&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何触发 actions 中的回调？&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;$store.dispatch (&#39; 对应的 action 回调名 &#39;)&lt;/p&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;在组件中使用：触发&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;
&lt;p&gt;可以包含异步代码（定时器，ajax 等等）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;示例代码：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
{width=&#34;2.6416666666666666in&#34;
&lt;p&gt;height=&amp;quot;0.9733333333333334in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;523-mutations&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#523-mutations&#34;&gt;#&lt;/a&gt; 5.2.3 mutations&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;值是一个对象，包含多个直接更新 state 的方法&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;谁能调用 mutations 中的方法？如何调用？&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;在 action 中使用：&lt;strong&gt;commit (&#39; 对应的 mutations 方法名 &#39;)&lt;/strong&gt; 触发&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;mutations 中方法的特点：不能写异步代码、只能单纯的操作 state&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;示例代码：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
{width=&#34;2.0in&#34; height=&#34;0.935in&#34;}
&lt;/blockquote&gt;
&lt;h3 id=&#34;524-getters&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#524-getters&#34;&gt;#&lt;/a&gt; 5.2.4 getters&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;值为一个对象，包含多个用于返回数据的函数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何使用？------ &lt;strong&gt;$&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3N0b3JlLmdldHRlcnMueHh4&#34;&gt;store.getters.xxx&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;示例代码：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
{width=&#34;2.1566666666666667in&#34;
&lt;p&gt;height=&amp;quot;0.9633333333333334in&amp;quot;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;525-modules&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#525-modules&#34;&gt;#&lt;/a&gt; 5.2.5 modules&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;包含多个 module&lt;/li&gt;
&lt;li&gt;一个 module 是一个 store 的配置对象&lt;/li&gt;
&lt;li&gt;与一个组件（包含有共享数据）对应&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第-6-章vue-router&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第-6-章vue-router&#34;&gt;#&lt;/a&gt; 第 6 章：vue-router&lt;/h1&gt;
&lt;h2 id=&#34;61-相关理解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#61-相关理解&#34;&gt;#&lt;/a&gt; 6.1 相关理解&lt;/h2&gt;
&lt;h3 id=&#34;611-vue-router-的理解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#611-vue-router-的理解&#34;&gt;#&lt;/a&gt; 6.1.1 vue-router 的理解&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;SPA 应用&lt;/p&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;vue 的一个插件库，专门用来实现&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;612-对-spa-应用的理解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#612-对-spa-应用的理解&#34;&gt;#&lt;/a&gt; 6.1.2 对 SPA 应用的理解&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;单页 Web 应用（single page web application，SPA）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;整个应用只有&lt;strong&gt;一个完整的页面&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击页面中的导航链接&lt;strong&gt;不会刷新&lt;/strong&gt;页面，只会做页面的&lt;strong&gt;局部更新。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据需要通过 ajax 请求获取。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;613-路由的理解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#613-路由的理解&#34;&gt;#&lt;/a&gt; 6.1.3 路由的理解&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;什么是路由？&lt;/li&gt;
&lt;li&gt;一个路由就是一组映射关系（key - value）&lt;/li&gt;
&lt;li&gt;key 为路径，value 可能是 function 或 component&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;2-路由分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2-路由分类&#34;&gt;#&lt;/a&gt; 2. 路由分类&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;后端路由：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;理解：value 是 function, 用于处理客户端提交的请求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;工作过程：服务器接收到一个请求时，&lt;br /&gt;
 根据&lt;strong&gt;请求路径&lt;/strong&gt;找到匹配的&lt;strong&gt;函数&lt;/strong&gt;来处理请求，返回响应数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;前端路由：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;理解：value 是 component，用于展示页面内容。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;工作过程：当浏览器的路径改变时，对应的组件就会显示。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;62-基本路由&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#62-基本路由&#34;&gt;#&lt;/a&gt; 6.2 基本路由&lt;/h2&gt;
&lt;h3 id=&#34;621-效果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#621-效果&#34;&gt;#&lt;/a&gt; 6.2.1 效果&lt;/h3&gt;
{width=&#34;4.755250437445319in&#34;
&lt;p&gt;height=&amp;quot;2.9059448818897637in&amp;quot;}&lt;/p&gt;
&lt;h3 id=&#34;622-总结-编写使用路由的-3-步&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#622-总结-编写使用路由的-3-步&#34;&gt;#&lt;/a&gt; 6.2.2 总结：编写使用路由的 3 步&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;定义路由组件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注册路由&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用路由&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;63-嵌套多级路由&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#63-嵌套多级路由&#34;&gt;#&lt;/a&gt; 6.3 嵌套（多级）路由&lt;/h2&gt;
{width=&#34;4.765667104111986in&#34;
&lt;p&gt;height=&amp;quot;3.032333770778653in&amp;quot;}&lt;/p&gt;
&lt;h2 id=&#34;64-路由传参&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#64-路由传参&#34;&gt;#&lt;/a&gt; 6.4 路由传参&lt;/h2&gt;
{width=&#34;4.525389326334208in&#34;
&lt;p&gt;height=&amp;quot;3.717055993000875in&amp;quot;}&lt;/p&gt;
&lt;h2 id=&#34;65-编程式路由导航&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#65-编程式路由导航&#34;&gt;#&lt;/a&gt; 6.5 编程式路由导航&lt;/h2&gt;
{width=&#34;4.0392782152230975in&#34;
&lt;p&gt;height=&amp;quot;4.137194881889764in&amp;quot;}&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;相关 API：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;this.$router.push (path): 相当于点击路由链接 (可以返回到当前路由界面)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;this.$router.replace(path):&lt;br /&gt;
 用新路由替换当前路由 (不可以返回到当前路由界面)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;this.$router.back (): 请求 (返回) 上一个记录路由&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;this.$router.go (-1): 请求 (返回) 上一个记录路由&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;this.$router.go (1): 请求下一个记录路由&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第-7-章vue-ui-组件库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第-7-章vue-ui-组件库&#34;&gt;#&lt;/a&gt; 第 7 章：Vue UI 组件库&lt;/h1&gt;
&lt;h2 id=&#34;71-移动端常用-ui-组件库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#71-移动端常用-ui-组件库&#34;&gt;#&lt;/a&gt; 7.1 移动端常用 UI 组件库&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Vant&lt;br /&gt;
&lt;span&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly95b3V6YW4uZ2l0aHViLmlvL3ZhbnQ=&#34;&gt;https://youzan.github.io/vant&lt;/span&gt;&lt;/span&gt;[&lt;span class=&#34;underline&#34;&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly95b3V6YW4uZ2l0aHViLmlvL3ZhbnQ=&#34;&gt;https://youzan.github.io/vant&lt;/span&gt;&lt;/span&gt;](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly95b3V6YW4uZ2l0aHViLmlvL3ZhbnQv&#34;&gt;https://youzan.github.io/vant/&lt;/span&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cube UI&lt;br /&gt;
&lt;span&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kaWRpLmdpdGh1Yi5pby9jdWJlLXVp&#34;&gt;https://didi.github.io/cube-ui&lt;/span&gt;&lt;/span&gt;[&lt;span class=&#34;underline&#34;&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kaWRpLmdpdGh1Yi5pby9jdWJlLXVp&#34;&gt;https://didi.github.io/cube-ui&lt;/span&gt;&lt;/span&gt;](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kaWRpLmdpdGh1Yi5pby9jdWJlLXVp&#34;&gt;https://didi.github.io/cube-ui&lt;/span&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mint UI&lt;br /&gt;
&lt;span&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21pbnQtdWkuZ2l0aHViLmlv&#34;&gt;http://mint-ui.github.io&lt;/span&gt;&lt;/span&gt;[&lt;span class=&#34;underline&#34;&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21pbnQtdWkuZ2l0aHViLmlv&#34;&gt;http://mint-ui.github.io&lt;/span&gt;&lt;/span&gt;](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL21pbnQtdWkuZ2l0aHViLmlvLw==&#34;&gt;http://mint-ui.github.io/&lt;/span&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;72-pc-端常用-ui-组件库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#72-pc-端常用-ui-组件库&#34;&gt;#&lt;/a&gt; 7.2 PC 端常用 UI 组件库&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Element UI&lt;br /&gt;
&lt;span&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lbGVtZW50LmVsZW1lLmNu&#34;&gt;https://element.eleme.cn&lt;/span&gt;&lt;/span&gt;[&lt;span class=&#34;underline&#34;&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lbGVtZW50LmVsZW1lLmNu&#34;&gt;https://element.eleme.cn&lt;/span&gt;&lt;/span&gt;](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lbGVtZW50LmVsZW1lLmNuLw==&#34;&gt;https://element.eleme.cn/&lt;/span&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IView UI&lt;br /&gt;
&lt;span&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuaXZpZXd1aS5jb20=&#34;&gt;https://www.iviewui.com&lt;/span&gt;&lt;/span&gt;[&lt;span class=&#34;underline&#34;&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuaXZpZXd1aS5jb20=&#34;&gt;https://www.iviewui.com&lt;/span&gt;&lt;/span&gt;](&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuaXZpZXd1aS5jb20v&#34;&gt;https://www.iviewui.com/&lt;/span&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;div id=&#34;gitalk-container&#34;&gt;&lt;/div&gt;
&lt;script src=&#34;https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js&#34;&gt;&lt;/script&gt;&lt;link rel=&#34;stylesheet&#34; href=&#34;https://unpkg.com/gitalk/dist/gitalk.css&#34;&gt;&lt;script src=&#34;https://unpkg.com/gitalk/dist/gitalk.min.js&#34;&gt;&lt;/script&gt;

		&lt;script&gt;
		var gitalkConfig = {&#34;clientID&#34;:&#34;6db178ba46c8af8f6a6f&#34;,&#34;clientSecret&#34;:&#34;90f730e5956024596558df00975cd8eae28cae3d&#34;,&#34;repo&#34;:&#34;bk-comment01&#34;,&#34;owner&#34;:&#34;onlymarryu&#34;,&#34;admin&#34;:[&#34;onlymarryu&#34;],&#34;distractionFreeMode&#34;:false,&#34;language&#34;:&#34;zh-CN&#34;,&#34;proxy&#34;:&#34;https://gitalk-comments.netlify.app/github_access_token&#34;,&#34;perPage&#34;:15};
	    gitalkConfig.id = md5(location.pathname);
		var gitalk = new Gitalk(gitalkConfig);
	    gitalk.render(&#34;gitalk-container&#34;);
	    &lt;/script&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://eth168.top/Web-anteriore/Vue2-3/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/</guid>
            <title>Vue3</title>
            <link>https://eth168.top/Web-anteriore/Vue2-3/vue3%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/</link>
            <category term="前端" scheme="https://eth168.top/categories/%E5%89%8D%E7%AB%AF/" />
            <category term="框架" scheme="https://eth168.top/categories/%E5%89%8D%E7%AB%AF/%E6%A1%86%E6%9E%B6/" />
            <category term="框架" scheme="https://eth168.top/tags/%E6%A1%86%E6%9E%B6/" />
            <pubDate>Fri, 02 Jun 2023 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;vue3快速上手&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue3快速上手&#34;&gt;#&lt;/a&gt; Vue3 快速上手&lt;/h1&gt;
&lt;img data-src=&#34;https://user-images.githubusercontent.com/499550/93624428-53932780-f9ae-11ea-8d16-af949e16a09f.png&#34; style=&#34;width:200px&#34; /&gt;
&lt;h2 id=&#34;1vue3简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1vue3简介&#34;&gt;#&lt;/a&gt; 1.Vue3 简介&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;2020 年 9 月 18 日，Vue.js 发布 3.0 版本，代号：One Piece（海贼王）&lt;/li&gt;
&lt;li&gt;耗时 2 年多、&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL3Z1ZS1uZXh0L2dyYXBocy9jb21taXQtYWN0aXZpdHk=&#34;&gt;2600 + 次提交&lt;/span&gt;、&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL3JmY3MvdHJlZS9tYXN0ZXIvYWN0aXZlLXJmY3M=&#34;&gt;30 + 个 RFC&lt;/span&gt;、&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL3Z1ZS1uZXh0L3B1bGxzP3E9aXMlM0FwcitpcyUzQW1lcmdlZCstYXV0aG9yJTNBYXBwJTJGZGVwZW5kYWJvdC1wcmV2aWV3Kw==&#34;&gt;600 + 次 PR&lt;/span&gt;、&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL3Z1ZS1uZXh0L2dyYXBocy9jb250cmlidXRvcnM=&#34;&gt;99 位贡献者&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;github 上的 tags 地址：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3Z1ZWpzL3Z1ZS1uZXh0L3JlbGVhc2VzL3RhZy92My4wLjA=&#34;&gt;https://github.com/vuejs/vue-next/releases/tag/v3.0.0&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2vue3带来了什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2vue3带来了什么&#34;&gt;#&lt;/a&gt; 2.Vue3 带来了什么&lt;/h2&gt;
&lt;h3 id=&#34;1性能的提升&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1性能的提升&#34;&gt;#&lt;/a&gt; 1. 性能的提升&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;打包大小减少 41%&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;初次渲染快 55%, 更新渲染快 133%&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;内存减少 54%&lt;/p&gt;
&lt;p&gt;......&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2源码的升级&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2源码的升级&#34;&gt;#&lt;/a&gt; 2. 源码的升级&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用 Proxy 代替 defineProperty 实现响应式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;重写虚拟 DOM 的实现和 Tree-Shaking&lt;/p&gt;
&lt;p&gt;......&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3拥抱typescript&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3拥抱typescript&#34;&gt;#&lt;/a&gt; 3. 拥抱 TypeScript&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Vue3 可以更好的支持 TypeScript&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4新的特性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4新的特性&#34;&gt;#&lt;/a&gt; 4. 新的特性&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Composition API（组合 API）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;setup 配置&lt;/li&gt;
&lt;li&gt;ref 与 reactive&lt;/li&gt;
&lt;li&gt;watch 与 watchEffect&lt;/li&gt;
&lt;li&gt;provide 与 inject&lt;/li&gt;
&lt;li&gt;......&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;新的内置组件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fragment&lt;/li&gt;
&lt;li&gt;Teleport&lt;/li&gt;
&lt;li&gt;Suspense&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;其他改变&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新的生命周期钩子&lt;/li&gt;
&lt;li&gt;data 选项应始终被声明为一个函数&lt;/li&gt;
&lt;li&gt;移除 keyCode 支持作为 v-on 的修饰符&lt;/li&gt;
&lt;li&gt;......&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;一-创建vue30工程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#一-创建vue30工程&#34;&gt;#&lt;/a&gt; 一、创建 Vue3.0 工程&lt;/h1&gt;
&lt;h2 id=&#34;1使用-vue-cli-创建&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1使用-vue-cli-创建&#34;&gt;#&lt;/a&gt; 1. 使用 vue-cli 创建&lt;/h2&gt;
&lt;p&gt;官方文档：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jbGkudnVlanMub3JnL3poL2d1aWRlL2NyZWF0aW5nLWEtcHJvamVjdC5odG1sI3Z1ZS1jcmVhdGU=&#34;&gt;https://cli.vuejs.org/zh/guide/creating-a-project.html#vue-create&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;## 查看 @vue/cli 版本，确保 @vue/cli 版本在 4.5.0 以上&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;vue &lt;span class=&#34;token parameter variable&#34;&gt;--version&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;## 安装或者升级你的 @vue/cli&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-g&lt;/span&gt; @vue/cli&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;## 创建&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;vue create vue_test&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;## 启动&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; vue_test&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; run serve&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&#34;2使用-vite-创建&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2使用-vite-创建&#34;&gt;#&lt;/a&gt; 2. 使用 vite 创建&lt;/h2&gt;
&lt;p&gt;官方文档：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92My5jbi52dWVqcy5vcmcvZ3VpZGUvaW5zdGFsbGF0aW9uLmh0bWwjdml0ZQ==&#34;&gt;https://v3.cn.vuejs.org/guide/installation.html#vite&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;vite 官网：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92aXRlanMuY24=&#34;&gt;https://vitejs.cn&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;什么是 vite？—— 新一代前端构建工具。&lt;/li&gt;
&lt;li&gt;优势如下：
&lt;ul&gt;
&lt;li&gt;开发环境中，无需打包操作，可快速的冷启动。&lt;/li&gt;
&lt;li&gt;轻量快速的热重载（HMR）。&lt;/li&gt;
&lt;li&gt;真正的按需编译，不再等待整个应用编译完成。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;传统构建 与 vite 构建对比图&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://cn.vitejs.dev/assets/bundler.37740380.png&#34; style=&#34;width:500px;height:280px;float:left&#34; /&gt;&lt;img data-src=&#34;https://cn.vitejs.dev/assets/esm.3070012d.png&#34; style=&#34;width:480px;height:280px&#34; /&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;## 创建工程&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; init vite-app &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;project-name&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;## 进入工程目录&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;project-name&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;## 安装依赖&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;## 运行&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; run dev&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;二-常用-composition-api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#二-常用-composition-api&#34;&gt;#&lt;/a&gt; 二、常用 Composition API&lt;/h1&gt;
&lt;p&gt;官方文档: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly92My5jbi52dWVqcy5vcmcvZ3VpZGUvY29tcG9zaXRpb24tYXBpLWludHJvZHVjdGlvbi5odG1s&#34;&gt;https://v3.cn.vuejs.org/guide/composition-api-introduction.html&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;1拉开序幕的setup&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1拉开序幕的setup&#34;&gt;#&lt;/a&gt; 1. 拉开序幕的 setup&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;理解：Vue3.0 中一个新的配置项，值为一个函数。&lt;/li&gt;
&lt;li&gt;setup 是所有&lt;strong style=&#34;color:#DD5145&#34;&gt;Composition API（组合 API）&lt;/strong&gt;&lt;i style=&#34;color:gray;font-weight:bold&#34;&gt;“表演的舞台”&lt;/i&gt;。&lt;/li&gt;
&lt;li&gt;组件中所用到的：数据、方法等等，均要配置在 setup 中。&lt;/li&gt;
&lt;li&gt;setup 函数的两种返回值：
&lt;ol&gt;
&lt;li&gt;若返回一个对象，则对象中的属性、方法，在模板中均可以直接使用。（重点关注！）&lt;/li&gt;
&lt;li&gt;&lt;span style=&#34;color:#aad&#34;&gt;若返回一个渲染函数：则可以自定义渲染内容。（了解）&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;注意点：
&lt;ol&gt;
&lt;li&gt;尽量不要与 Vue2.x 配置混用
&lt;ul&gt;
&lt;li&gt;Vue2.x 配置（data、methos、computed...）中&lt;strong style=&#34;color:#DD5145&#34;&gt;可以访问到&lt;/strong&gt;setup 中的属性、方法。&lt;/li&gt;
&lt;li&gt;但在 setup 中&lt;strong style=&#34;color:#DD5145&#34;&gt;不能访问到&lt;/strong&gt;Vue2.x 配置（data、methos、computed...）。&lt;/li&gt;
&lt;li&gt;如果有重名，setup 优先。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;setup 不能是一个 async 函数，因为返回值不再是 return 的对象，而是 promise, 模板看不到 return 对象中的属性。（后期也可以返回一个 Promise 实例，但需要 Suspense 和异步组件的配合）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;2ref函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2ref函数&#34;&gt;#&lt;/a&gt; 2.ref 函数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;作用：定义一个响应式的数据&lt;/li&gt;
&lt;li&gt;语法:  &lt;code&gt;const xxx = ref(initValue)&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;创建一个包含响应式数据的&lt;strong style=&#34;color:#DD5145&#34;&gt;引用对象（reference 对象，简称 ref 对象）&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;JS 中操作数据：  &lt;code&gt;xxx.value&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;模板中读取数据：不需要.value，直接： &lt;code&gt;&amp;lt;div&amp;gt;&amp;#123;&amp;#123;xxx&amp;#125;&amp;#125;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;备注：
&lt;ul&gt;
&lt;li&gt;接收的数据可以是：基本类型、也可以是对象类型。&lt;/li&gt;
&lt;li&gt;基本类型的数据：响应式依然是靠 &lt;code&gt;Object.defineProperty()&lt;/code&gt;  的 &lt;code&gt;get&lt;/code&gt;  与 &lt;code&gt;set&lt;/code&gt;  完成的。&lt;/li&gt;
&lt;li&gt;对象类型的数据：内部 &lt;i style=&#34;color:gray;font-weight:bold&#34;&gt;“求助”&lt;/i&gt; 了 Vue3.0 中的一个新函数 ——  &lt;code&gt;reactive&lt;/code&gt;  函数。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3reactive函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3reactive函数&#34;&gt;#&lt;/a&gt; 3.reactive 函数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;作用：定义一个&lt;strong style=&#34;color:#DD5145&#34;&gt;对象类型&lt;/strong&gt;的响应式数据（基本类型不要用它，要用 &lt;code&gt;ref&lt;/code&gt;  函数）&lt;/li&gt;
&lt;li&gt;语法： &lt;code&gt;const 代理对象= reactive(源对象)&lt;/code&gt;  接收一个对象（或数组），返回一个&lt;strong style=&#34;color:#DD5145&#34;&gt;代理对象（Proxy 的实例对象，简称 proxy 对象）&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;reactive 定义的响应式数据是 “深层次的”。&lt;/li&gt;
&lt;li&gt;内部基于 ES6 的 Proxy 实现，通过代理对象操作源对象内部数据进行操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;4vue30中的响应式原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4vue30中的响应式原理&#34;&gt;#&lt;/a&gt; 4.Vue3.0 中的响应式原理&lt;/h2&gt;
&lt;h3 id=&#34;vue2x的响应式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue2x的响应式&#34;&gt;#&lt;/a&gt; vue2.x 的响应式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;实现原理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;对象类型：通过 &lt;code&gt;Object.defineProperty()&lt;/code&gt;  对属性的读取、修改进行拦截（数据劫持）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数组类型：通过重写更新数组的一系列方法来实现拦截。（对数组的变更方法进行了包裹）。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Object&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;defineProperty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;count&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;存在问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新增属性、删除属性，界面不会更新。&lt;/li&gt;
&lt;li&gt;直接通过下标修改数组，界面不会自动更新。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;vue30的响应式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue30的响应式&#34;&gt;#&lt;/a&gt; Vue3.0 的响应式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;实现原理:
&lt;ul&gt;
&lt;li&gt;通过 Proxy（代理）:  拦截对象中任意属性的变化，包括：属性值的读写、属性的添加、属性的删除等。&lt;/li&gt;
&lt;li&gt;通过 Reflect（反射）:  对源对象的属性进行操作。&lt;/li&gt;
&lt;li&gt;MDN 文档中描述的 Proxy 与 Reflect：
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Proxy：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvUHJveHk=&#34;&gt;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reflect：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvUmVmbGVjdA==&#34;&gt;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect&lt;/span&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Proxy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;// 拦截读取属性值&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;target&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prop&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    	&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; Reflect&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;target&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prop&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 拦截设置属性值或添加新属性&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;target&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prop&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    	&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; Reflect&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;target&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prop&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 拦截删除属性&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;deleteProperty&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;target&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prop&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    	&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; Reflect&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;deleteProperty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;target&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; prop&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;proxy&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;tom&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;5reactive对比ref&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5reactive对比ref&#34;&gt;#&lt;/a&gt; 5.reactive 对比 ref&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;从定义数据角度对比：
&lt;ul&gt;
&lt;li&gt;ref 用来定义：&lt;strong style=&#34;color:#DD5145&#34;&gt;基本类型数据&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;reactive 用来定义：&lt;strong style=&#34;color:#DD5145&#34;&gt;对象（或数组）类型数据&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;备注：ref 也可以用来定义&lt;strong style=&#34;color:#DD5145&#34;&gt;对象（或数组）类型数据&lt;/strong&gt;, 它内部会自动通过 &lt;code&gt;reactive&lt;/code&gt;  转为&lt;strong style=&#34;color:#DD5145&#34;&gt;代理对象&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;从原理角度对比：
&lt;ul&gt;
&lt;li&gt;ref 通过 &lt;code&gt;Object.defineProperty()&lt;/code&gt;  的 &lt;code&gt;get&lt;/code&gt;  与 &lt;code&gt;set&lt;/code&gt;  来实现响应式（数据劫持）。&lt;/li&gt;
&lt;li&gt;reactive 通过使用&lt;strong style=&#34;color:#DD5145&#34;&gt;Proxy&lt;/strong&gt;来实现响应式（数据劫持）, 并通过&lt;strong style=&#34;color:#DD5145&#34;&gt;Reflect&lt;/strong&gt;操作&lt;strong style=&#34;color:orange&#34;&gt;源对象&lt;/strong&gt;内部的数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;从使用角度对比：
&lt;ul&gt;
&lt;li&gt;ref 定义的数据：操作数据&lt;strong style=&#34;color:#DD5145&#34;&gt;需要&lt;/strong&gt; &lt;code&gt;.value&lt;/code&gt; ，读取数据时模板中直接读取&lt;strong style=&#34;color:#DD5145&#34;&gt;不需要&lt;/strong&gt; &lt;code&gt;.value&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;reactive 定义的数据：操作数据与读取数据：&lt;strong style=&#34;color:#DD5145&#34;&gt;均不需要&lt;/strong&gt; &lt;code&gt;.value&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;6setup的两个注意点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6setup的两个注意点&#34;&gt;#&lt;/a&gt; 6.setup 的两个注意点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;setup 执行的时机&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 beforeCreate 之前执行一次，this 是 undefined。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;setup 的参数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;props：值为对象，包含：组件外部传递过来，且组件内部声明接收了的属性。&lt;/li&gt;
&lt;li&gt;context：上下文对象
&lt;ul&gt;
&lt;li&gt;attrs: 值为对象，包含：组件外部传递过来，但没有在 props 配置中声明的属性，相当于  &lt;code&gt;this.$attrs&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;slots: 收到的插槽内容，相当于  &lt;code&gt;this.$slots&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;emit: 分发自定义事件的函数，相当于  &lt;code&gt;this.$emit&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;7计算属性与监视&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#7计算属性与监视&#34;&gt;#&lt;/a&gt; 7. 计算属性与监视&lt;/h2&gt;
&lt;h3 id=&#34;1computed函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1computed函数&#34;&gt;#&lt;/a&gt; 1.computed 函数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;与 Vue2.x 中 computed 配置功能一致&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;写法&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;computed&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vue&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;setup&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token comment&#34;&gt;// 计算属性 —— 简写&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; fullName &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;computed&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; person&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;firstName &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;-&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; person&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;lastName&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 计算属性 —— 完整&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; fullName &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;computed&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; person&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;firstName &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;-&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; person&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;lastName&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; nameArr &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; value&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;-&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            person&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;firstName &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; nameArr&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            person&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;lastName &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; nameArr&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2watch函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2watch函数&#34;&gt;#&lt;/a&gt; 2.watch 函数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;与 Vue2.x 中 watch 配置功能一致&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;两个小 “坑”：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;监视 reactive 定义的响应式数据时：oldValue 无法正确获取、强制开启了深度监视（deep 配置失效）。&lt;/li&gt;
&lt;li&gt;监视 reactive 定义的响应式数据中某个属性时：deep 配置有效。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 情况一：监视 ref 定义的响应式数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;watch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sum&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;newValue&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;oldValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;sum变化了&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;newValue&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;oldValue&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;immediate&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 情况二：监视多个 ref 定义的响应式数据&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;watch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;sum&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;msg&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;newValue&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;oldValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;sum或msg变化了&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;newValue&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;oldValue&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* 情况三：监视 reactive 定义的响应式数据&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			若 watch 监视的是 reactive 定义的响应式数据，则无法正确获得 oldValue！！&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;			若 watch 监视的是 reactive 定义的响应式数据，则强制开启了深度监视 &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;*/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;watch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;person&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;newValue&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;oldValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;person变化了&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;newValue&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;oldValue&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;immediate&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;deep&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 此处的 deep 配置不再奏效&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 情况四：监视 reactive 定义的响应式数据中的某个属性&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;watch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;person&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;job&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;newValue&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;oldValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;person的job变化了&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;newValue&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;oldValue&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;immediate&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;deep&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 情况五：监视 reactive 定义的响应式数据中的某些属性&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;watch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;person&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;job&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;person&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;newValue&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;oldValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;person的job变化了&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;newValue&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;oldValue&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;immediate&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;deep&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 特殊情况&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;watch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;person&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;job&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;newValue&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;oldValue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;person的job变化了&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;newValue&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;oldValue&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;deep&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 此处由于监视的是 reactive 素定义的对象中的某个属性，所以 deep 配置有效&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3watcheffect函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3watcheffect函数&#34;&gt;#&lt;/a&gt; 3.watchEffect 函数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;watch 的套路是：既要指明监视的属性，也要指明监视的回调。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;watchEffect 的套路是：不用指明监视哪个属性，监视的回调中用到哪个属性，那就监视哪个属性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;watchEffect 有点像 computed：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;但 computed 注重的计算出来的值（回调函数的返回值），所以必须要写返回值。&lt;/li&gt;
&lt;li&gt;而 watchEffect 更注重的是过程（回调函数的函数体），所以不用写返回值。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;//watchEffect 所指定的回调中用到的数据只要发生变化，则直接重新执行回调。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;watchEffect&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; x1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; sum&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; x2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; person&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;age&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;watchEffect配置的回调执行了&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;8生命周期&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#8生命周期&#34;&gt;#&lt;/a&gt; 8. 生命周期&lt;/h2&gt;
&lt;div style=&#34;border:1px solid black;width:380px;float:left;margin-right:20px;&#34;&gt;&lt;strong&gt;vue2.x的生命周期&lt;/strong&gt;&lt;img data-src=&#34;https://cn.vuejs.org/images/lifecycle.png&#34; alt=&#34;lifecycle_2&#34; style=&#34;zoom:33%;width:1200px&#34; /&gt;&lt;/div&gt;&lt;div style=&#34;border:1px solid black;width:510px;height:985px;float:left&#34;&gt;&lt;strong&gt;vue3.0的生命周期&lt;/strong&gt;&lt;img data-src=&#34;https://v3.cn.vuejs.org/images/lifecycle.svg&#34; alt=&#34;lifecycle_2&#34; style=&#34;zoom:33%;width:2500px&#34; /&gt;&lt;/div&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;Vue3.0 中可以继续使用 Vue2.x 中的生命周期钩子，但有有两个被更名：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;beforeDestroy&lt;/code&gt;  改名为  &lt;code&gt;beforeUnmount&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;destroyed&lt;/code&gt;  改名为  &lt;code&gt;unmounted&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Vue3.0 也提供了 Composition API 形式的生命周期钩子，与 Vue2.x 中钩子对应关系如下：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;beforeCreate&lt;/code&gt; ===&amp;gt; &lt;code&gt;setup()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;created&lt;/code&gt; =======&amp;gt; &lt;code&gt;setup()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beforeMount&lt;/code&gt;  ===&amp;gt; &lt;code&gt;onBeforeMount&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mounted&lt;/code&gt; =======&amp;gt; &lt;code&gt;onMounted&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beforeUpdate&lt;/code&gt; ===&amp;gt; &lt;code&gt;onBeforeUpdate&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;updated&lt;/code&gt;  =======&amp;gt; &lt;code&gt;onUpdated&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beforeUnmount&lt;/code&gt;  ==&amp;gt; &lt;code&gt;onBeforeUnmount&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;unmounted&lt;/code&gt;  =====&amp;gt; &lt;code&gt;onUnmounted&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;9自定义hook函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#9自定义hook函数&#34;&gt;#&lt;/a&gt; 9. 自定义 hook 函数&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;什么是 hook？—— 本质是一个函数，把 setup 函数中使用的 Composition API 进行了封装。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;类似于 vue2.x 中的 mixin。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自定义 hook 的优势：复用代码，让 setup 中的逻辑更清楚易懂。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;10toref&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#10toref&#34;&gt;#&lt;/a&gt; 10.toRef&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;作用：创建一个 ref 对象，其 value 值指向另一个对象中的某个属性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;语法： &lt;code&gt;const name = toRef(person,&#39;name&#39;)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;应用：要将响应式对象中的某个属性单独提供给外部使用时。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;扩展： &lt;code&gt;toRefs&lt;/code&gt;  与 &lt;code&gt;toRef&lt;/code&gt;  功能一致，但可以批量创建多个 ref 对象，语法： &lt;code&gt;toRefs(person)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;三-其它-composition-api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三-其它-composition-api&#34;&gt;#&lt;/a&gt; 三、其它 Composition API&lt;/h1&gt;
&lt;h2 id=&#34;1shallowreactive-与-shallowref&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1shallowreactive-与-shallowref&#34;&gt;#&lt;/a&gt; 1.shallowReactive 与 shallowRef&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;shallowReactive：只处理对象最外层属性的响应式（浅响应式）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;shallowRef：只处理基本数据类型的响应式，不进行对象的响应式处理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;什么时候使用？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果有一个对象数据，结构比较深，但变化时只是外层属性变化 ===&amp;gt; shallowReactive。&lt;/li&gt;
&lt;li&gt;如果有一个对象数据，后续功能不会修改该对象中的属性，而是生新的对象来替换 ===&amp;gt; shallowRef。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2readonly-与-shallowreadonly&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2readonly-与-shallowreadonly&#34;&gt;#&lt;/a&gt; 2.readonly 与 shallowReadonly&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;readonly: 让一个响应式数据变为只读的（深只读）。&lt;/li&gt;
&lt;li&gt;shallowReadonly：让一个响应式数据变为只读的（浅只读）。&lt;/li&gt;
&lt;li&gt;应用场景：不希望数据被修改时。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3toraw-与-markraw&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3toraw-与-markraw&#34;&gt;#&lt;/a&gt; 3.toRaw 与 markRaw&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;toRaw：
&lt;ul&gt;
&lt;li&gt;作用：将一个由 &lt;code&gt;reactive&lt;/code&gt;  生成的&lt;strong style=&#34;color:orange&#34;&gt;响应式对象&lt;/strong&gt;转为&lt;strong style=&#34;color:orange&#34;&gt;普通对象&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;使用场景：用于读取响应式对象对应的普通对象，对这个普通对象的所有操作，不会引起页面更新。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;markRaw：
&lt;ul&gt;
&lt;li&gt;作用：标记一个对象，使其永远不会再成为响应式对象。&lt;/li&gt;
&lt;li&gt;应用场景:
&lt;ol&gt;
&lt;li&gt;有些值不应被设置为响应式的，例如复杂的第三方类库等。&lt;/li&gt;
&lt;li&gt;当渲染具有不可变数据源的大列表时，跳过响应式转换可以提高性能。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;4customref&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4customref&#34;&gt;#&lt;/a&gt; 4.customRef&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;作用：创建一个自定义的 ref，并对其依赖项跟踪和更新触发进行显式控制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实现防抖效果：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
	&amp;lt;input type=&amp;quot;text&amp;quot; v-model=&amp;quot;keyword&amp;quot;&amp;gt;
	&amp;lt;h3&amp;gt;&amp;#123;&amp;#123;keyword&amp;#125;&amp;#125;&amp;lt;/h3&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;script&amp;gt;
	import &amp;#123;ref,customRef&amp;#125; from &#39;vue&#39;
	export default &amp;#123;
		name:&#39;Demo&#39;,
		setup()&amp;#123;
			// let keyword = ref(&#39;hello&#39;) //使用Vue准备好的内置ref
			//自定义一个myRef
			function myRef(value,delay)&amp;#123;
				let timer
				//通过customRef去实现自定义
				return customRef((track,trigger)=&amp;gt;&amp;#123;
					return&amp;#123;
						get()&amp;#123;
							track() //告诉Vue这个value值是需要被“追踪”的
							return value
						&amp;#125;,
						set(newValue)&amp;#123;
							clearTimeout(timer)
							timer = setTimeout(()=&amp;gt;&amp;#123;
								value = newValue
								trigger() //告诉Vue去更新界面
							&amp;#125;,delay)
						&amp;#125;
					&amp;#125;
				&amp;#125;)
			&amp;#125;
			let keyword = myRef(&#39;hello&#39;,500) //使用程序员自定义的ref
			return &amp;#123;
				keyword
			&amp;#125;
		&amp;#125;
	&amp;#125;
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;5provide-与-inject&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5provide-与-inject&#34;&gt;#&lt;/a&gt; 5.provide 与 inject&lt;/h2&gt;
&lt;img data-src=&#34;https://v3.cn.vuejs.org/images/components_provide.png&#34; style=&#34;width:300px&#34; /&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;作用：实现&lt;strong style=&#34;color:#DD5145&#34;&gt;祖与后代组件间&lt;/strong&gt;通信&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;套路：父组件有一个  &lt;code&gt;provide&lt;/code&gt;  选项来提供数据，后代组件有一个  &lt;code&gt;inject&lt;/code&gt;  选项来开始使用这些数据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;具体写法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;祖组件中：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;setup&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;let&lt;/span&gt; car &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;reactive&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;奔驰&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token literal-property property&#34;&gt;price&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;40万&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;provide&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;car&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;car&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;后代组件中：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;setup&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;props&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;context&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; car &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;inject&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;car&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;car&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;6响应式数据的判断&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6响应式数据的判断&#34;&gt;#&lt;/a&gt; 6. 响应式数据的判断&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;isRef: 检查一个值是否为一个 ref 对象&lt;/li&gt;
&lt;li&gt;isReactive: 检查一个对象是否是由  &lt;code&gt;reactive&lt;/code&gt;  创建的响应式代理&lt;/li&gt;
&lt;li&gt;isReadonly: 检查一个对象是否是由  &lt;code&gt;readonly&lt;/code&gt;  创建的只读代理&lt;/li&gt;
&lt;li&gt;isProxy: 检查一个对象是否是由  &lt;code&gt;reactive&lt;/code&gt;  或者  &lt;code&gt;readonly&lt;/code&gt;  方法创建的代理&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;四-composition-api-的优势&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#四-composition-api-的优势&#34;&gt;#&lt;/a&gt; 四、Composition API 的优势&lt;/h1&gt;
&lt;h2 id=&#34;1options-api-存在的问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1options-api-存在的问题&#34;&gt;#&lt;/a&gt; 1.Options API 存在的问题&lt;/h2&gt;
&lt;p&gt;使用传统 OptionsAPI 中，新增或者修改一个需求，就需要分别在 data，methods，computed 里修改 。&lt;/p&gt;
&lt;div style=&#34;width:600px;height:370px;overflow:hidden;float:left&#34;&gt;
    &lt;img data-src=&#34;https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f84e4e2c02424d9a99862ade0a2e4114~tplv-k3u1fbpfcp-watermark.image&#34; style=&#34;width:600px;float:left&#34; /&gt;
&lt;/div&gt;
&lt;div style=&#34;width:300px;height:370px;overflow:hidden;float:left&#34;&gt;
    &lt;img data-src=&#34;https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e5ac7e20d1784887a826f6360768a368~tplv-k3u1fbpfcp-watermark.image&#34; style=&#34;zoom:50%;width:560px;left&#34; /&gt; 
&lt;/div&gt;
&lt;h2 id=&#34;2composition-api-的优势&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2composition-api-的优势&#34;&gt;#&lt;/a&gt; 2.Composition API 的优势&lt;/h2&gt;
&lt;p&gt;我们可以更加优雅的组织我们的代码，函数。让相关功能的代码更加有序的组织在一起。&lt;/p&gt;
&lt;div style=&#34;width:500px;height:340px;overflow:hidden;float:left&#34;&gt;
    &lt;img data-src=&#34;https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bc0be8211fc54b6c941c036791ba4efe~tplv-k3u1fbpfcp-watermark.image&#34;style=&#34;height:360px&#34;/&gt;
&lt;/div&gt;
&lt;div style=&#34;width:430px;height:340px;overflow:hidden;float:left&#34;&gt;
    &lt;img data-src=&#34;https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6cc55165c0e34069a75fe36f8712eb80~tplv-k3u1fbpfcp-watermark.image&#34;style=&#34;height:360px&#34;/&gt;
&lt;/div&gt;
&lt;h1 id=&#34;五-新的组件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#五-新的组件&#34;&gt;#&lt;/a&gt; 五、新的组件&lt;/h1&gt;
&lt;h2 id=&#34;1fragment&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1fragment&#34;&gt;#&lt;/a&gt; 1.Fragment&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;在 Vue2 中：组件必须有一个根标签&lt;/li&gt;
&lt;li&gt;在 Vue3 中：组件可以没有根标签，内部会将多个标签包含在一个 Fragment 虚拟元素中&lt;/li&gt;
&lt;li&gt;好处：减少标签层级，减小内存占用&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2teleport&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2teleport&#34;&gt;#&lt;/a&gt; 2.Teleport&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;什么是 Teleport？——  &lt;code&gt;Teleport&lt;/code&gt;  是一种能够将我们的&lt;strong style=&#34;color:#DD5145&#34;&gt;组件 html 结构&lt;/strong&gt;移动到指定位置的技术。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;teleport to=&amp;quot;移动位置&amp;quot;&amp;gt;
	&amp;lt;div v-if=&amp;quot;isShow&amp;quot; class=&amp;quot;mask&amp;quot;&amp;gt;
		&amp;lt;div class=&amp;quot;dialog&amp;quot;&amp;gt;
			&amp;lt;h3&amp;gt;我是一个弹窗&amp;lt;/h3&amp;gt;
			&amp;lt;button @click=&amp;quot;isShow = false&amp;quot;&amp;gt;关闭弹窗&amp;lt;/button&amp;gt;
		&amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;
&amp;lt;/teleport&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3suspense&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3suspense&#34;&gt;#&lt;/a&gt; 3.Suspense&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;等待异步组件时渲染一些额外内容，让应用有更好的用户体验&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;异步引入组件&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;defineAsyncComponent&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vue&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; Child &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;defineAsyncComponent&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;./components/Child.vue&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 &lt;code&gt;Suspense&lt;/code&gt;  包裹组件，并配置好 &lt;code&gt;default&lt;/code&gt;  与  &lt;code&gt;fallback&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;template&amp;gt;
	&amp;lt;div class=&amp;quot;app&amp;quot;&amp;gt;
		&amp;lt;h3&amp;gt;我是App组件&amp;lt;/h3&amp;gt;
		&amp;lt;Suspense&amp;gt;
			&amp;lt;template v-slot:default&amp;gt;
				&amp;lt;Child/&amp;gt;
			&amp;lt;/template&amp;gt;
			&amp;lt;template v-slot:fallback&amp;gt;
				&amp;lt;h3&amp;gt;加载中.....&amp;lt;/h3&amp;gt;
			&amp;lt;/template&amp;gt;
		&amp;lt;/Suspense&amp;gt;
	&amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;六-其他&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#六-其他&#34;&gt;#&lt;/a&gt; 六、其他&lt;/h1&gt;
&lt;h2 id=&#34;1全局api的转移&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1全局api的转移&#34;&gt;#&lt;/a&gt; 1. 全局 API 的转移&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Vue 2.x 有许多全局 API 和配置。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;例如：注册全局组件、注册全局指令等。&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 注册全局组件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Vue&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;component&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;MyButton&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function-variable function&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token literal-property property&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token literal-property property&#34;&gt;template&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&amp;lt;button @click=&#34;count++&#34;&gt;Clicked  times.&amp;lt;/button&gt;&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 注册全局指令&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Vue&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;directive&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;focus&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function-variable function&#34;&gt;inserted&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;el&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; el&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;focus&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Vue3.0 中对这些 API 做出了调整：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;将全局的 API，即： &lt;code&gt;Vue.xxx&lt;/code&gt;  调整到应用实例（ &lt;code&gt;app&lt;/code&gt; ）上&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;2.x 全局 API（ &lt;code&gt;Vue&lt;/code&gt; ）&lt;/th&gt;
&lt;th&gt;3.x 实例 API ( &lt;code&gt;app&lt;/code&gt; )&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Vue.config.xxxx&lt;/td&gt;
&lt;td&gt;app.config.xxxx&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Vue.config.productionTip&lt;/td&gt;
&lt;td&gt;&lt;strong style=&#34;color:#DD5145&#34;&gt;移除&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Vue.component&lt;/td&gt;
&lt;td&gt;app.component&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Vue.directive&lt;/td&gt;
&lt;td&gt;app.directive&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Vue.mixin&lt;/td&gt;
&lt;td&gt;app.mixin&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Vue.use&lt;/td&gt;
&lt;td&gt;app.use&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Vue.prototype&lt;/td&gt;
&lt;td&gt;app.config.globalProperties&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2其他改变&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2其他改变&#34;&gt;#&lt;/a&gt; 2. 其他改变&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;data 选项应始终被声明为一个函数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;过度类名的更改：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Vue2.x 写法&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.v-enter,&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;.v-leave-to&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;opacity&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.v-leave,&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;.v-enter-to&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;opacity&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Vue3.x 写法&lt;/p&gt;
&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.v-enter-from,&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;.v-leave-to&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;opacity&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;.v-leave-from,&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;.v-enter-to&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;opacity&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 1&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong style=&#34;color:#DD5145&#34;&gt;移除&lt;/strong&gt;keyCode 作为 v-on 的修饰符，同时也不再支持 &lt;code&gt;config.keyCodes&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong style=&#34;color:#DD5145&#34;&gt;移除&lt;/strong&gt; &lt;code&gt;v-on.native&lt;/code&gt;  修饰符&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;父组件中绑定事件&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;my-component
  v-on:close=&amp;quot;handleComponentEvent&amp;quot;
  v-on:click=&amp;quot;handleNativeClickEvent&amp;quot;
/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;子组件中声明自定义事件&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vue&#34;&gt;&amp;lt;script&amp;gt;
  export default &amp;#123;
    emits: [&#39;close&#39;]
  &amp;#125;
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong style=&#34;color:#DD5145&#34;&gt;移除&lt;/strong&gt;过滤器（filter）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;过滤器虽然这看起来很方便，但它需要一个自定义语法，打破大括号内表达式是 “只是 JavaScript” 的假设，这不仅有学习成本，而且有实现成本！建议用方法调用或计算属性去替换过滤器。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;......&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&#34;gitalk-container&#34;&gt;&lt;/div&gt;
&lt;script src=&#34;https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js&#34;&gt;&lt;/script&gt;&lt;link rel=&#34;stylesheet&#34; href=&#34;https://unpkg.com/gitalk/dist/gitalk.css&#34;&gt;&lt;script src=&#34;https://unpkg.com/gitalk/dist/gitalk.min.js&#34;&gt;&lt;/script&gt;

		&lt;script&gt;
		var gitalkConfig = {&#34;clientID&#34;:&#34;6db178ba46c8af8f6a6f&#34;,&#34;clientSecret&#34;:&#34;90f730e5956024596558df00975cd8eae28cae3d&#34;,&#34;repo&#34;:&#34;bk-comment01&#34;,&#34;owner&#34;:&#34;onlymarryu&#34;,&#34;admin&#34;:[&#34;onlymarryu&#34;],&#34;distractionFreeMode&#34;:false,&#34;language&#34;:&#34;zh-CN&#34;,&#34;proxy&#34;:&#34;https://gitalk-comments.netlify.app/github_access_token&#34;,&#34;perPage&#34;:15};
	    gitalkConfig.id = md5(location.pathname);
		var gitalk = new Gitalk(gitalkConfig);
	    gitalk.render(&#34;gitalk-container&#34;);
	    &lt;/script&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://eth168.top/study/develop/domain/</guid>
            <title>domain</title>
            <link>https://eth168.top/study/develop/domain/</link>
            <category term="小实验" scheme="https://eth168.top/categories/%E5%B0%8F%E5%AE%9E%E9%AA%8C/" />
            <category term="小实验" scheme="https://eth168.top/tags/%E5%B0%8F%E5%AE%9E%E9%AA%8C/" />
            <pubDate>Tue, 28 Feb 2023 19:09:36 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介&#34;&gt;#&lt;/a&gt; 简介&lt;/h1&gt;
&lt;p&gt;为了避免交易域名因滥用、争议等导致 serverhold，因历史行为导致不能备案或在中国大陆境内的域名解析请求被运营商拦截，购买前请提前&lt;strong&gt;查看域名 whois 信息&lt;/strong&gt;，&lt;strong&gt;检查域名能否解析、备案&lt;/strong&gt;等，避免影响购买后的正常使用。域名购买后，可能发生无法备案或在中国大陆境内域名解析请求被运营商拦截的情形，阿里云不因此承担责任。&lt;/p&gt;
&lt;h1 id=&#34;推荐三个自查-whois-网站&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#推荐三个自查-whois-网站&#34;&gt;#&lt;/a&gt; 推荐三个自查 whois 网站&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;中国互联网信息中心 whois 查询&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25uaWMubmV0LmNuLw==&#34;&gt;https://www.cnnic.net.cn/&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;站长之家 whois 查询&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93aG9pcy5jaGluYXouY29tLw==&#34;&gt;https://whois.chinaz.com/&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;爱站网 whois 查询&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93aG9pcy5haXpoYW4uY29tLw==&#34;&gt;https://whois.aizhan.com/&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;div id=&#34;gitalk-container&#34;&gt;&lt;/div&gt;
&lt;script src=&#34;https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js&#34;&gt;&lt;/script&gt;&lt;link rel=&#34;stylesheet&#34; href=&#34;https://unpkg.com/gitalk/dist/gitalk.css&#34;&gt;&lt;script src=&#34;https://unpkg.com/gitalk/dist/gitalk.min.js&#34;&gt;&lt;/script&gt;

		&lt;script&gt;
		var gitalkConfig = {&#34;clientID&#34;:&#34;6db178ba46c8af8f6a6f&#34;,&#34;clientSecret&#34;:&#34;90f730e5956024596558df00975cd8eae28cae3d&#34;,&#34;repo&#34;:&#34;bk-comment01&#34;,&#34;owner&#34;:&#34;onlymarryu&#34;,&#34;admin&#34;:[&#34;onlymarryu&#34;],&#34;distractionFreeMode&#34;:false,&#34;language&#34;:&#34;zh-CN&#34;,&#34;proxy&#34;:&#34;https://gitalk-comments.netlify.app/github_access_token&#34;,&#34;perPage&#34;:15};
	    gitalkConfig.id = md5(location.pathname);
		var gitalk = new Gitalk(gitalkConfig);
	    gitalk.render(&#34;gitalk-container&#34;);
	    &lt;/script&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://eth168.top/study/develop/hexo-shoka/</guid>
            <title>hexo_shoka</title>
            <link>https://eth168.top/study/develop/hexo-shoka/</link>
            <category term="小实验" scheme="https://eth168.top/categories/%E5%B0%8F%E5%AE%9E%E9%AA%8C/" />
            <category term="小实验" scheme="https://eth168.top/tags/%E5%B0%8F%E5%AE%9E%E9%AA%8C/" />
            <pubDate>Mon, 27 Feb 2023 14:27:41 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简介&#34;&gt;#&lt;/a&gt; 简介&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;想要快速搭建起来，下载完主题，安装核心依赖，然后修改 hexo 全局配置中的  &lt;code&gt;theme&lt;/code&gt;  为  &lt;code&gt;shoka&lt;/code&gt;  即可&lt;/li&gt;
&lt;li&gt;完全参考我的，无脑跟着操作即可，其他配置可以参考文档来添加&lt;br /&gt;
官方参考文档：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy8=&#34;&gt;https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;主题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#主题&#34;&gt;#&lt;/a&gt; 主题&lt;/h1&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;figcaption data-lang=&#34;sh&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://github.com/amehime/hexo-theme-shoka.git ./themes/shoka&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;核心插件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#核心插件&#34;&gt;#&lt;/a&gt; 核心插件 *&lt;/h1&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;figcaption data-lang=&#34;sh&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; i  hexo-autoprefixer   &lt;span class=&#34;token parameter variable&#34;&gt;--save&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# algolia 搜索&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; i  hexo-algoliasearch   &lt;span class=&#34;token parameter variable&#34;&gt;--save&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 图片地址自动转化为 hexo 要求&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; i  hexo-image-link   &lt;span class=&#34;token parameter variable&#34;&gt;--save&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 要下载 主题专属的 Markdown 解析插件必须设置这个&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token builtin class-name&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token assign-left variable&#34;&gt;PUPPETEER_SKIP_DOWNLOAD&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;true&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; i  hexo-renderer-multi-markdown-it   &lt;span class=&#34;token parameter variable&#34;&gt;--save&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; i  hexo-feed   &lt;span class=&#34;token parameter variable&#34;&gt;--save&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; i  hexo-symbols-count-time   &lt;span class=&#34;token parameter variable&#34;&gt;--save&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;卸载自带的一些依赖&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#卸载自带的一些依赖&#34;&gt;#&lt;/a&gt; 卸载自带的一些依赖&lt;/h1&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;figcaption data-lang=&#34;sh&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 因为 shoka 主题自己有特定的解析器，自带的一律卸载&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; un hexo-renderer-marked&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 这是默认主题，直接卸载&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; un hexo-theme-landscape&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;可选插件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#可选插件&#34;&gt;#&lt;/a&gt; 可选插件&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;评论&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;figcaption data-lang=&#34;sh&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; i  hexo-plugin-gitalk   &lt;span class=&#34;token parameter variable&#34;&gt;--save&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;git 上传。这只是上传我们编译好的文件 public&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;figcaption data-lang=&#34;sh&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; i  hexo-deployer-git   &lt;span class=&#34;token parameter variable&#34;&gt;--save&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;文件加密&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;figcaption data-lang=&#34;sh&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;npm&lt;/span&gt; i  hexo-blog-encrypt   &lt;span class=&#34;token parameter variable&#34;&gt;--save&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;shoka-主题配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#shoka-主题配置&#34;&gt;#&lt;/a&gt; shoka 主题配置&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;在博客根目录建立一个  &lt;code&gt;_config.shoka.yml&lt;/code&gt;  做为主题的专项配置，就不用去 theme 中专门去改，他会覆盖掉 theme 中的配置项&lt;br /&gt;
我的配置：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;figcaption data-lang=&#34;YAML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;alternate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 雾都博客&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Assets&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;statics&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; / &lt;span class=&#34;token comment&#34;&gt;#//cdn.jsdelivr.net/gh/amehime/shoka@latest/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;open_graph&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;#twitter_id:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;#google_plus:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;#fb_admins:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;#fb_app_id:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 自动定位，返回你之前看到的地方&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;auto_scroll&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 侧边栏&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;sidebar&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;# Sidebar Position.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;position&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; left&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;# position: right&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;# Replace the default avatar image and set the url here.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;avatar&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; avatar.jpg&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;menu&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;home&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; / &lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt; home&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;archives&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; /archives/ &lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt; list&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;alt&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;posts&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; / &lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt; feather&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;categories&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; /categories/ &lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt; th&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;tags&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; /tags/ &lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt; tags&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;toolsPage&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; /toolPage/ &lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt; feather&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;projectBuild&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; /projectBuild/ &lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt; th&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;mianshi&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; /mianshi/ &lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt; calendar&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;study&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; /study/ &lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt; sakura&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;friends&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; /friends/ &lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt; heart&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;about&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; /about/ &lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt; calendar&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Social Links&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Usage: `Key: permalink || icon || color`&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Key is the link label showing to end users.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Value before `||` delimiter is the target permalink,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# secend value is the name of Font icon.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# project of https://www.iconfont.cn/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# //at.alicdn.com/t/font_1832207_c8i9n1ulxlt.css =&gt; 1832207_c8i9n1ulxlt&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;iconfont&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;1832207_igi8uaupcus&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# iconfont: &#34;3731160_8pmmsyz1p7k&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;social&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;#这里有问题要换成你自己的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;github&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; https&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;//github.com/onlymarryu &lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt; github &lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt; &#34;&lt;span class=&#34;token comment&#34;&gt;#191717&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;# github: https://github.com/onlymarryu || github1 || &#34;#191717&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;# CSDN: https://blog.csdn.net/Bkhole?spm=1000.2115.3001.5343 || csdn || &#34;#ea716e&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;# fengye: https://cloud.fynote.com/edit?nid=113796&amp;amp;id=1567528016345563136&amp;amp;t=1665816345587 || icon9 || &#34;#55acd5&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;# yuque: https://www.yuque.com/dashboard/recent || tubiaozhizuomoban || &#34;#20FB25&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;# google: https://plus.google.com/ || google&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;# twitter: https://twitter.com/amehime || twitter || &#34;#00aff0&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;zhihu&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; https&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;//www.zhihu.com/people/rurismzk &lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt; zhihu &lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt; &#34;&lt;span class=&#34;token comment&#34;&gt;#1e88e5&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;music&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; https&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;//music.163.com/&lt;span class=&#34;token comment&#34;&gt;#/my/m/music/playlist?id=3166060790 || cloud-music || &#34;#e60026&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;weibo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; https&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;//weibo.com/amehime &lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt; weibo &lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;|&lt;/span&gt; &#34;&lt;span class=&#34;token comment&#34;&gt;#ea716e&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;# about: https://about.me/amehime || address-card || &#34;#3b5998&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;# email: mailto:yourname@mail.com || envelope || &#34;#55acd5&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;#facebook: https://www.facebook.com/yourname || facebook&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;#stackoverflow: https://stackoverflow.com/yourname || stack-overflow&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;#youtube: https://youtube.com/yourname || youtube&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;#instagram: https://instagram.com/yourname || instagram&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;#skype: skype:yourname?call|chat || skype&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;#douban: https://www.douban.com/people/yourname/ || douban&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;footer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;# Specify the date when the site was setup. If not defined, current year will be used.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;since&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2010&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# ---------------------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Third Party Plugins &amp;amp; Services Settings&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# ---------------------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Comments&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Valine&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;82&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# For more information: https://valine.js.org, https://github.com/xCss/Valine&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;83&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# valine:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;84&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#   enable: false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;85&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#   appId: CcRFYrQF2jeLivqZJ02IX02H-gzGzoHsz  #Your_appId&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;86&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#   appKey: xDkO9dJRzIJK7n0GofHoyP0y  #Your_appkey&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;87&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#   placeholder: ヽ (○´∀`)ﾉ♪  # Comment box placeholder&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;88&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#   avatar: wavatar  # Gravatar style : mp, identicon, monsterid, wavatar, robohash, retro&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;89&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#   pageSize: 10  # Pagination size&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;90&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#   lang: zh-CN&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;91&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#   visitor: true # 文章访问量统计&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;92&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#   NoRecordIP: false # 不记录 IP&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;93&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#   serverURLs: # When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;94&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#   powerMode: true # 默认打开评论框输入特效&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;95&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#   tagMember:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;96&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#     master:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;97&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#       # - hash of master@email.com&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;98&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#       # - hash of master2@email.com&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;99&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#     friend:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;100&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#       # - hash of friend@email.com&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;101&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#       # - hash of friend2@email.com&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;102&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#     investor:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;103&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#       # - hash of investor1@email.com&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;104&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# valine:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;105&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#   appId: #这里不要忘了改&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;106&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#   appKey: #这里不要忘了改&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;107&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#   placeholder: ヽ (○´∀`)ﾉ♪ # Comment box placeholder&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;108&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#   pageSize: 10 # Pagination size&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;109&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#   lang: zh-CN&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;110&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#   tagMember:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;111&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#     master:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;112&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#       # - deea5a8d259d17182a53be1772e4c182&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;113&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#     friend:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;114&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#       - deea5a8d259d17182a53be1772e4c182&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;115&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;116&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 随机图床 Api 百度&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;117&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# image_server: &#34;https://api.ixiaowai.cn/api/api.php&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;118&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# image_server: &#34;https://api.yimian.xyz/img&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;119&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;120&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# bgm&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;121&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;audio&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;122&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token key atrule&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 网易音乐&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;123&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;124&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;# 这里有问题，要换成你自己的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;125&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; https&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;//music.163.com/&lt;span class=&#34;token comment&#34;&gt;#/my/m/music/playlist?id=xxxx&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;126&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token key atrule&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; QQ音乐&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;127&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;# QQ 音乐要自带.html&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;128&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;129&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;# 这里有问题，要换成你自己的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;130&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; https&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;//y.qq.com/n/ryqq/playlist/xxxx.html&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;131&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;132&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Dependencies: https://github.com/amehime/hexo-renderer-multi-markdown-it&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;133&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;pangu&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;134&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;135&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# ---------------------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;136&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# analytics &amp;amp; SEO Settings&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;137&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# ---------------------------------------------------------------&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;138&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;139&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Disable Baidu transformation on mobile devices.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;140&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;disable_baidu_transformation&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;141&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;142&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Automatically add external URL with Base64 encrypt &amp;amp; decrypt.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;143&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;exturl&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;144&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;145&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;#Algolia Search&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;146&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;algolia_search&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;147&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;enable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;148&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;hits&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;149&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;per_page&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;150&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;151&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;input_placeholder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; Search for Posts &lt;span class=&#34;token tag&#34;&gt;!&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;152&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;hits_empty&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;我们没有找到任何搜索结果：$&amp;#123;query&amp;#125;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;153&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;hits_stats&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;找到约$&amp;#123;hits&amp;#125;条结果 (用时$&amp;#123;time&amp;#125;ms)&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;154&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;155&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# local searach&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;156&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;local_sreach&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;157&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;enable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;158&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;159&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 是否显示页面加载动画 loading-cat&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;160&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;loader&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;161&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 当初次打开页面时，显示加载动画&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;162&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;switch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;false&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# tab 切换到其他页面时，显示加载动画&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;hexo-全局配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hexo-全局配置&#34;&gt;#&lt;/a&gt; hexo 全局配置&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;就是修改  &lt;code&gt;_config.yml&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;figcaption data-lang=&#34;YAML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Hexo Configuration&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;## Docs: https://hexo.io/docs/configuration.html&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;## Source: https://github.com/hexojs/hexo/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Site&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#你自己的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;subtitle&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# description: &#39; 记录 “美食” 每刻&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#你自己的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;keywords&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;author&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#你自己的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;language&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; zh&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;CN&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;timezone&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Asia/Shanghai&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# URL&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;## If your site is put in a subdirectory, set url as &#39;http://yoursite.com/child&#39; and root as &#39;/child/&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#你自己的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; /&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;permalink&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;title/ &lt;span class=&#34;token comment&#34;&gt;# edit for Theme.shoka&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;permalink_defaults&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Directory&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;source_dir&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; source&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;public_dir&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; public&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;tag_dir&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; tags&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;archive_dir&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; archives&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;category_dir&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; categories&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;code_dir&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; downloads/code&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;i18n_dir&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;lang&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;skip_render&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Writing&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;new_post_name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;title.md &lt;span class=&#34;token comment&#34;&gt;# File name of new posts&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;default_layout&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; post&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;titlecase&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;false&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# Transform title into titlecase&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;external_link&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;enable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# Open external links in new tab&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;field&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; site &lt;span class=&#34;token comment&#34;&gt;# Apply to the whole site&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;exclude&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;filename_case&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;render_drafts&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;post_asset_folder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;relative_link&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;future&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;highlight&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;enable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;false&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# edit for Theme.shoka&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;line_number&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;auto_detect&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;tab_replace&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;prismjs&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;enable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;false&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# edit for Theme.shoka&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Category &amp;amp; Tag&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;default_category&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; uncategorized&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;category_map&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# edit for Theme.shoka&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;tag_map&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Date / Time format&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;## Hexo uses Moment.js to parse and display date&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;## You can customize the date format as defined in&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;## http://momentjs.com/docs/#/displaying/format/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;date_format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; YYYY&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;MM&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;DD&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;time_format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; HH&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;mm&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;ss&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Pagination&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;## Set per_page to 0 to disable pagination&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;per_page&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;pagination_dir&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; page&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Extensions&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;## Plugins: http://hexo.io/plugins/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;## Themes: http://hexo.io/themes/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; shoka &lt;span class=&#34;token comment&#34;&gt;# edit for Theme.shoka&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Deployment&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;## Docs: http://hexo.io/docs/deployment.html&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;git&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#你自己的 #https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;branch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#你自己的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;token&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#你自己的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;82&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;83&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# edit for Theme.shoka&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;84&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;autoprefixer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;85&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;exclude&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;86&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;*.min.css&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;87&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;88&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;markdown&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;89&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;render&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 渲染器设置&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;90&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 过滤 HTML 标签&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;91&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;xhtmlOut&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 使用 &#39;/&#39; 来闭合单标签 （比如 &amp;lt;br /&gt;）。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;92&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;breaks&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 转换段落里的 &#39;\n&#39; 到 &amp;lt;br&gt;。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;93&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;linkify&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 将类似 URL 的文本自动转换为链接。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;94&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;typographer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;95&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;quotes&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;“”‘’&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;96&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;plugins&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# markdown-it 插件设置&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;97&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token key atrule&#34;&gt;plugin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;98&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token key atrule&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; markdown&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;it&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;toc&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;and&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;anchor&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;99&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token key atrule&#34;&gt;enable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;100&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token key atrule&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 文章目录以及锚点应用的 class 名称，shoka 主题必须设置成这样&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;101&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token key atrule&#34;&gt;tocClassName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;toc&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;102&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token key atrule&#34;&gt;anchorClassName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;anchor&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;103&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token key atrule&#34;&gt;plugin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;104&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token key atrule&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; markdown&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;it&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;multimd&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;table&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;105&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token key atrule&#34;&gt;enable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;106&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token key atrule&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;107&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token key atrule&#34;&gt;multiline&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;108&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token key atrule&#34;&gt;rowspan&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;109&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token key atrule&#34;&gt;headerless&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;110&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token key atrule&#34;&gt;plugin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;111&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token key atrule&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; ./markdown&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;it&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;furigana&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;112&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token key atrule&#34;&gt;enable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;113&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token key atrule&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;114&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token key atrule&#34;&gt;fallbackParens&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;()&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;115&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token key atrule&#34;&gt;plugin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;116&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token key atrule&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; ./markdown&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;it&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;spoiler&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;117&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token key atrule&#34;&gt;enable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;118&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token key atrule&#34;&gt;options&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;119&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token key atrule&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;你知道得太多了&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;120&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token key atrule&#34;&gt;plugin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;121&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token key atrule&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; markdown&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;it&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;emoji&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;122&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token key atrule&#34;&gt;enable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;123&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;124&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# hexo-plugin-gitalk&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;125&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;plugins&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;126&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;gitalk&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;127&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;clientID&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#你自己的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;128&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;clientSecret&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#你自己的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;129&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#你自己的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;130&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;owner&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#你自己的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;131&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;admin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;132&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;#你自己的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;133&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;distractionFreeMode&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;134&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;language&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; zh&lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt;CN&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;135&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;proxy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#你自己的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;136&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;perPage&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;15&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;137&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;138&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;minify&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;139&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;html&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;140&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;enable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;141&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;stamp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;142&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;exclude&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;143&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;**/json.ejs&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;144&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;**/atom.ejs&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;145&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;**/rss.ejs&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;146&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;css&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;147&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;enable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;148&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;stamp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;149&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;exclude&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;150&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;**/*.min.css&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;151&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;js&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;152&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;enable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;153&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;stamp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;154&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;mangle&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;155&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token key atrule&#34;&gt;toplevel&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;156&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;157&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;compress&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;158&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;exclude&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;159&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;**/*.min.js&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;160&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;161&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;feed&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;162&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;limit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;163&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;order_by&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;-date&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;164&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;tag_dir&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;165&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;category_dir&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;false&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;166&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;rss&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;167&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;enable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;168&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;template&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;themes/shoka/layout/_alternate/rss.ejs&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;169&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;rss.xml&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;170&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;atom&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;171&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;enable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;172&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;template&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;themes/shoka/layout/_alternate/atom.ejs&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;173&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;atom.xml&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;174&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;jsonFeed&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;175&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;enable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;176&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;template&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;themes/shoka/layout/_alternate/json.ejs&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;177&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token key atrule&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;feed.json&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;178&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;179&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;algolia&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;180&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;appId&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#你自己的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;181&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;apiKey&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#你自己的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;182&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;adminApiKey&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#你自己的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;183&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;chunkSize&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;184&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;indexName&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;#你自己的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;185&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;fields&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;186&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; title &lt;span class=&#34;token comment&#34;&gt;#必须配置&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;187&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; path &lt;span class=&#34;token comment&#34;&gt;#必须配置&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;188&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; categories &lt;span class=&#34;token comment&#34;&gt;#推荐配置&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;189&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; content&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;strip&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;truncate&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4000&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;190&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; tags&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;191&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; mianshi&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;192&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; toolPage&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;193&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 文章加密  hexo-blog-encrypt&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;194&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;encrypt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;195&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;enable&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;196&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;abstract&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 这是一篇加密文章，内容可能是个人情感宣泄或者收费技术。如果你非常好奇，请与我联系。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;197&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 这是一篇加密文章，请输入密码，查看文章。&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;198&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;# 可以直接指定 tag 加密&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;199&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;tags&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;200&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token key atrule&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; tagName&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token key atrule&#34;&gt;password&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 密码A &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;201&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;wrong_pass_message&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 抱歉&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 这个密码看着不太对&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 请再试试.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;202&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;wrong_hash_message&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 抱歉&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 这个文章不能被校验&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 不过您还是能看看解密后的内容.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;div id=&#34;gitalk-container&#34;&gt;&lt;/div&gt;
&lt;script src=&#34;https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js&#34;&gt;&lt;/script&gt;&lt;link rel=&#34;stylesheet&#34; href=&#34;https://unpkg.com/gitalk/dist/gitalk.css&#34;&gt;&lt;script src=&#34;https://unpkg.com/gitalk/dist/gitalk.min.js&#34;&gt;&lt;/script&gt;

		&lt;script&gt;
		var gitalkConfig = {&#34;clientID&#34;:&#34;6db178ba46c8af8f6a6f&#34;,&#34;clientSecret&#34;:&#34;90f730e5956024596558df00975cd8eae28cae3d&#34;,&#34;repo&#34;:&#34;bk-comment01&#34;,&#34;owner&#34;:&#34;onlymarryu&#34;,&#34;admin&#34;:[&#34;onlymarryu&#34;],&#34;distractionFreeMode&#34;:false,&#34;language&#34;:&#34;zh-CN&#34;,&#34;proxy&#34;:&#34;https://gitalk-comments.netlify.app/github_access_token&#34;,&#34;perPage&#34;:15};
	    gitalkConfig.id = md5(location.pathname);
		var gitalk = new Gitalk(gitalkConfig);
	    gitalk.render(&#34;gitalk-container&#34;);
	    &lt;/script&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://eth168.top/interview/MySQL/</guid>
            <title>MySQL复习题</title>
            <link>https://eth168.top/interview/MySQL/</link>
            <category term=".面试题" scheme="https://eth168.top/categories/%E9%9D%A2%E8%AF%95%E9%A2%98/" />
            <category term="突击版 复习版" scheme="https://eth168.top/tags/%E7%AA%81%E5%87%BB%E7%89%88-%E5%A4%8D%E4%B9%A0%E7%89%88/" />
            <pubDate>Mon, 27 Feb 2023 14:14:24 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;数据库存储引擎有哪些&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库存储引擎有哪些&#34;&gt;#&lt;/a&gt; 数据库存储引擎有哪些&lt;/h1&gt;
&lt;p&gt;Myisam、Innodb&lt;/p&gt;
&lt;h1 id=&#34;myisam和innodb有什么区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#myisam和innodb有什么区别&#34;&gt;#&lt;/a&gt; Myisam 和 Innodb 有什么区别&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;区别&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;MyISAM&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;InnoDB&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;数据结构&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;.frm 存储表定义 &lt;br/&gt;.MYD  存储数据文件&lt;br/&gt;.MYI  存储索引文件&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;.frm 存储表定义&lt;br/&gt;.ibd 存储数据和索引&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;存储空间&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;MyISAM&lt;strong&gt; 可被压缩，存储空间较小&lt;/strong&gt;&lt;br/&gt;支持三种存储：静态表 [默认]、动态表、压缩表&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;InnoDB&lt;strong&gt; 需要更多的内存和存储，它会在主内存中建立其专用的缓冲池用于高速缓冲数据和索引&lt;/strong&gt;。InnoDB 所在的表都保存在同一个数据文件中（也可能是多个文件，或者是独立的表空间）&lt;br/&gt;InnoDB 表的大小只受限于操作系统文件的大小，一般为 2GB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;事务的支持&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;MyISAM 强调的是性能，每次查询具有原子性，其执行速度比 Innodb 类型更快，&lt;br/&gt;但是&lt;strong&gt;不提供事务支持&lt;/strong&gt;。&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;InnoDB 除了&lt;em&gt;&lt;strong&gt;提供事务支持&lt;/strong&gt;&lt;/em&gt;和外部键等高级数据库功能。还具有事务提交（commit）、回滚（rollback）和崩溃修复能力（crach recovery capabilities）等这些事务安全（transaction-safe ACID compliant）型表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;锁的支持&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;如果只是执行大量的查询，MyISAM 是更好的选择。MyISAM 在&lt;strong&gt;增删&lt;/strong&gt;的时候需要&lt;strong&gt;锁定整个表格&lt;/strong&gt;，效率会低一些&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;innoDB 支持行级锁，&lt;em&gt;&lt;strong&gt;删除插入&lt;/strong&gt;&lt;/em&gt;的时候只需要&lt;em&gt;&lt;strong&gt;锁定操作行&lt;/strong&gt;&lt;/em&gt;就行。如果有大量的插入、修改删除操作，使用 InnoDB 性能能会更高&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;查询效率&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;高&lt;/strong&gt;&lt;br&gt;支持全文索引&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;低&lt;/strong&gt;&lt;br/&gt;不支持全文索引&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;外键的支持&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;MyISAM&lt;strong&gt; 不支持外键&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;支持外键&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;如何选择数据库引擎&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#如何选择数据库引擎&#34;&gt;#&lt;/a&gt; 如何选择数据库引擎？&lt;/h1&gt;
&lt;p&gt;1、如果需要支持事务，选择 InnoDB，不需要事务则选择 MyISAM。&lt;/p&gt;
&lt;p&gt;2、如果大部分表操作都是查询，选择 MyISAM，有写又有读选 InnoDB。&lt;/p&gt;
&lt;p&gt;3、如果系统崩溃导致数据难以恢复，且成本高，不要选择 MyISAM。&lt;/p&gt;
&lt;h1 id=&#34;三范式是什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三范式是什么&#34;&gt;#&lt;/a&gt; 三范式是什么&lt;/h1&gt;
&lt;p&gt;第一范式：列不可再分&lt;/p&gt;
&lt;p&gt;第二范式：行可以唯一区分，主键约束&lt;/p&gt;
&lt;p&gt;第三范式：表的非主属性不能依赖与其他表的非主属性  外键约束&lt;/p&gt;
&lt;p&gt;简单来说，第一范式就是让属性原子化，不可再分；第二范式就是让数据具有主属性从而产生唯一标识（特别是为了标识有联合主键的情况）；第三范式就是表的非主属性不能依赖与其他表的非主属性，也可以说是表中的属性不能有依赖关系&lt;/p&gt;
&lt;img data-src=&#34;/interview/MySQL/image-20220714214608165.png&#34; class=&#34;&#34; title=&#34;image-20220714214608165&#34;&gt;
&lt;h1 id=&#34;什么是事务有哪些特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是事务有哪些特点&#34;&gt;#&lt;/a&gt; 什么是事务，有哪些特点&lt;/h1&gt;
&lt;p&gt;事务是用来维护数据库完整性的，具体体现就是多条 sql 语句，要么全部成功，要么全部失败。&lt;/p&gt;
&lt;p&gt;特点：&lt;mark&gt;ACID&lt;/mark&gt;&lt;/p&gt;
&lt;p&gt;A:（原子性 Atomicity）、C: 一致性（Consistency）、I：隔离性（Isolation）、D：持久性（Durability）&lt;/p&gt;
&lt;p&gt;1) 原子性&lt;br /&gt;
原子是自然界最小的颗粒，具有不可再分的特性&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;一致性&lt;br /&gt;
一致性是指事务执行的结果必须使数据库从一个一致性状态，变到另一个一致性状态。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;隔离性&lt;br /&gt;
隔离性是指各个事务的执行互不干扰&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;4) 持久性&lt;br /&gt;
持久性指事务一旦提交，对数据所做的任何改变，都要记录到永久存储器中&lt;/p&gt;
&lt;h1 id=&#34;事务的隔离级别有哪些&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#事务的隔离级别有哪些&#34;&gt;#&lt;/a&gt; 事务的隔离级别有哪些&lt;/h1&gt;
&lt;p&gt;由低到高：&lt;/p&gt;
&lt;img data-src=&#34;/interview/MySQL/image-20220714221905692.png&#34; class=&#34;&#34; title=&#34;image-20220714221905692&#34;&gt;
&lt;p&gt;&lt;strong&gt;READ UNCOMMITTED（读未提交）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	在这个隔离级别，所有事务都可以看到未提交事务的执行结果。在这种隔离级别上，可能会产生很多问题。所以这种隔离级别很少用于实际应用，而且它的性能也没有比其他性能好很多，而别的级别还有其他的优点。读取未提交数据，也被称为 “脏读”。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;READ COMMITTED（读已提交）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	读已提交这种隔离级别是大多数数据库系统默认的隔离级别（但 mysql 默认的隔离级别却不是这种），满足了隔离的最早简单定义：一个事务开始时，只能看见已经提交事务所做的改变，一个事务从开始到提交前，所做的任何数据改变都是不可见的，除非已经提交。这种隔离级别也支持所谓的不可重复读。这意味着用户运行同一个语句两次，看到的结果是不同的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;REPEATABLE READ（可重复读）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	mysql 数据库默认的隔离级别。该级别解决了 READ UNCOMMITTED 导致的问题。它保证了同一事务的多个实例在并发读取事务时，会看到同样的数据行。不过这会导致另外一个问题 “幻读”。InnoDB 和 Falcon 存储引擎通过多版本并发控制解决了幻读问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SERIALIZABLE（可串行化）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	该隔离级别是最高的隔离级别。它通过强制事务排序，使之不可能相互冲突，从而解决幻读问题。简而言之：SERIALIZABLE 是在每个读的数据行加锁，在这个级别上可能导致大量的超时和锁竞争现象，实际应用中很少使用这个级别，但如果用户的应用为了数据的稳定性，需要强制减少并发，也可以选择这种隔离级别。&lt;/p&gt;
&lt;h1 id=&#34;并发事务带来哪些问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#并发事务带来哪些问题&#34;&gt;#&lt;/a&gt; 并发事务带来哪些问题？&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;脏读（Dirty read）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	当一个事务正在访问数据并且对数据进行了修改，而这种修改还没有提交到数据库中，这时另外一个事务也访问了这个数据，然后使用了这个数据。因为这个数据是还没有提交的数据，那么另外一个事务读到的这个数据是 “脏数据”，依据 “脏数据” 所做的操作可能是不正确的。&lt;/p&gt;
 &lt;img data-src=&#34;/interview/MySQL/image-20220714222508260.png&#34; class=&#34;&#34; title=&#34;image-20220714222508260&#34;&gt;
&lt;p&gt;&lt;strong&gt;不可重复读（Unrepeatableread）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	指在一个事务内多次读同一数据。在这个事务还没有结束时，另一个事务也访问该数据。那么，在第一个事务中的两次读数据之间，由于第二个事务的修改导致第一个事务两次读取的数据可能不太一样。这就发生了在一个事务内两次读到的数据是不一样的情况，因此称为不可重复读。&lt;/p&gt;
 &lt;img data-src=&#34;/interview/MySQL/image-20220714222512979.png&#34; class=&#34;&#34; title=&#34;image-20220714222512979&#34;&gt;
&lt;p&gt;&lt;strong&gt;幻读 （Phantom read）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;幻读与不可重复读类似。它发生在一个事务（T1）读取了几行数据，接着另一个并发事务（T2）插入了一些数据时。在随后的查询中，第一个事务（T1）就会发现多了一些原本不存在的记录，就好像发生了幻觉一样，所以称为幻读。&lt;/p&gt;
 &lt;img data-src=&#34;/interview/MySQL/image-20220714222518876.png&#34; class=&#34;&#34; title=&#34;image-20220714222518876&#34;&gt;
&lt;h1 id=&#34;不可重复度和幻读区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#不可重复度和幻读区别&#34;&gt;#&lt;/a&gt; 不可重复度和幻读区别？&lt;/h1&gt;
&lt;p&gt;不可重复读的重点是修改，幻读的重点在于新增或者删除。&lt;/p&gt;
&lt;p&gt;解决不可重复读的问题只需锁住满足条件的行，解决幻读需要锁表&lt;/p&gt;
&lt;h1 id=&#34;sql优化手段有哪些&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sql优化手段有哪些&#34;&gt;#&lt;/a&gt; SQL 优化手段有哪些？&lt;/h1&gt;
&lt;p&gt;1、查询语句中不要使用 select *&lt;/p&gt;
&lt;p&gt;2、尽量减少子查询，使用关联查询（left join,right join,inner join）替代&lt;/p&gt;
&lt;p&gt;3、减少使用 IN 或者 NOT IN , 使用 exists，not exists 或者关联查询语句替代&lt;/p&gt;
&lt;p&gt;4、or 的查询尽量用 union 或者 union all 代替 (在确认没有重复数据或者不用剔除重复数据时，union all 会更好)&lt;/p&gt;
&lt;p&gt;5、应尽量避免在 where 子句中使用！= 或 &amp;lt;&amp;gt; 操作符，否则将引擎放弃使用索引而进行全表扫描。&lt;/p&gt;
&lt;p&gt;6、应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃使用索引而进行全表扫描，如： select id from t where num is null 可以在 num 上设置默认值 0，确保表中 num 列没有 null 值，然后这样查询： select id from t where num=0&lt;/p&gt;
&lt;h1 id=&#34;undo-log日志详解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#undo-log日志详解&#34;&gt;#&lt;/a&gt; undo log 日志详解&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;什么是 undo log？&lt;br /&gt;
撤销日志，在数据库事务开始之前，MYSQL 会去记录更新前的数据到 undo log 文件中。如果事务回滚或者数据库崩溃时，可以利用 undo log 日志中记录的日志信息进行回退。同时也可以提供多版本并发控制下的读 (MVCC)。（具体的 MVCC 实现机制详解看这篇博客）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;undo log 生命周期&lt;br /&gt;
 undo log 产生： 在事务开始之前生成&lt;br /&gt;
 undo log 销毁： &lt;strong&gt;当事务提交之后，undo log 并不能立马被删除&lt;/strong&gt;，而是放入待清理的链表，由 purge 线程判断是否由其他事务在使用 undo 段中表的上一个事务之前的版本信息，决定是否可以清理 undo log 的日志空间。&lt;br /&gt;
&lt;strong&gt;注意： undo log 也会生产 redo log，undo log 也要实现持久性保护。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;uodo log 日志的作用&lt;/strong&gt;&lt;br /&gt;
首先简单说一下&lt;strong&gt; undolog 和 redo log 的区别&lt;/strong&gt;&lt;br /&gt;
 &lt;code&gt;undo log&lt;/code&gt;  是逻辑日志，实现事务的原子性&lt;br /&gt;
  undo log 记录的是事务 [ &lt;code&gt;开始前&lt;/code&gt; ] 的数据状态，记录的是更新之前的值&lt;br /&gt;
  undo log 实现事务的 &lt;code&gt;原子性&lt;/code&gt;  (&lt;strong&gt;提供回滚&lt;/strong&gt;)&lt;br /&gt;
 &lt;code&gt;redo log&lt;/code&gt;  是物理日志，实现事务的持久性&lt;br /&gt;
  redo log 记录的是事务 [ &lt;code&gt;完成后&lt;/code&gt; ] 的数据状态，记录的是更新之后的值&lt;br /&gt;
  redo log 实现事务的 &lt;code&gt;持久性&lt;/code&gt;  (&lt;strong&gt;保证数据的完整性&lt;/strong&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/interview/MySQL/bbd9b47cd66648cd99c3ce54090ba69e.png&#34; class=&#34;&#34; title=&#34;在这里插入图片描述&#34;&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;
&lt;p&gt;undo log 版本链是什么？&lt;br /&gt;
在 undo log 日志里，每条数据除了自有的那些字段 (表 id、日志类型、数据页号等等)，其实还会有两个隐藏字段，一个是 trx_id，另一个是 roll_pointer。这个 trx_id 就是最近一次更新的事务 id，roll_pointer 是指向你更新这个事务之前生成的 undo log 数据。&lt;/p&gt;
&lt;p&gt;这里给大家举个例子：&lt;br /&gt;
假设有一个事务 A，插入了一个数据 A，此时的 undo log 数据结构如下：&lt;/p&gt;
 &lt;img data-src=&#34;/interview/MySQL/719f98466ea94f278dd2a4315368c622.png&#34; class=&#34;&#34; title=&#34;在这里插入图片描述&#34;&gt;
&lt;p&gt;因为事务 id 是 10，所以这条数据的 trx_id=10。因为是插入数据，所以没有下一个 undo log 数据，roll_pointer 是空的。接着，此时有一个事务 B 需要执行，事务 B 的 id=20，那么执行完之后就会新生成一条 undo log 日志数据，trx_id=20，roll_pointer 就会指向实际的回滚日志，也就是值 A 那条数据。结构如下图所示：&lt;/p&gt;
 &lt;img data-src=&#34;/interview/MySQL/bdbb19325c504296bb8dc40d9ee4bbe9.png&#34; class=&#34;&#34; title=&#34;在这里插入图片描述&#34;&gt;
&lt;p&gt;以此类推，在这个多个事务中，每个事务新生成的 undo log 日志数据的 roll_pointer 都会指向前一个 undo log 日志数据，一次行程 undo log 版本链。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;mvcc详解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mvcc详解&#34;&gt;#&lt;/a&gt; MVCC 详解&lt;/h1&gt;
&lt;h2 id=&#34;1mvcc是什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1mvcc是什么&#34;&gt;#&lt;/a&gt; 1.MVCC 是什么？&lt;/h2&gt;
&lt;p&gt;MVCC，全称 Multi-Version Concurrency Control，即&lt;strong&gt;多版本并发控制&lt;/strong&gt;。MVCC 是一种并发控制的方法，一般在数据库管理系统中，&lt;strong&gt;实现对数据库的并发访问，在编程语言中实现事务内存&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;它主要是用来处理 mysql 在多线程操作缓存数据时出现的一系列并发问题。&lt;/p&gt;
&lt;h2 id=&#34;2前置知识点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#2前置知识点&#34;&gt;#&lt;/a&gt; 2. 前置知识点&lt;/h2&gt;
&lt;p&gt;1）什么是脏写、脏读、不可重复读、幻读？&lt;/p&gt;
&lt;p&gt;2）四种隔离级别&lt;/p&gt;
&lt;p&gt;3）undo log 版本链&lt;/p&gt;
&lt;h2 id=&#34;3基于undo-log多版本链实现的readview机制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#3基于undo-log多版本链实现的readview机制&#34;&gt;#&lt;/a&gt; 3. 基于 undo log 多版本链实现的 ReadView 机制&lt;/h2&gt;
&lt;p&gt;**ReadView (读视图)** 是 “ &lt;code&gt;快照读&lt;/code&gt; ”SQL 执行时 MVCC 提取数据的快&lt;/p&gt;
&lt;p&gt;&lt;code&gt;照读&lt;/code&gt; 就是最普通的 &lt;code&gt;Select&lt;/code&gt;  查询 SQL 语句&lt;/p&gt;
&lt;p&gt;&lt;code&gt;当前读&lt;/code&gt; 指代执行下列语句时进行数据读取的方式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;insert、Updata、Delete、SELECT ... for update 、Select ... lock in share mode&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;数据结构：&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 四个字段&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;m_ids&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; 当前活跃的事务编号集合&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;min_trx_id&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; 最小活跃事务编号&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;max_trx_id&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; 预分配事务编号，当前最大事务编号 &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;creator_trx_id&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; ReadView创建者的事务编号&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;假设 mysql 里有个数据，很早之前就有事务插入了，事务 id 是 20，如下图所示：&lt;/p&gt;
&lt;img data-src=&#34;/interview/MySQL/4b547c37ce38459d9820df53a4498280.png&#34; class=&#34;&#34; title=&#34;在这里插入图片描述&#34;&gt;
&lt;p&gt;此时，有两个事务并发过来执行，分别是事务 A — id=30，要读取这行数据。事务 B — id=35，要修改这行数据。此时事务 A 会做个判断，判断当前行的 trx_id 是否小于 ReadView 中的 min_trx_id。此时发现 30&amp;gt;20, 所以可以得知在事务 A 开启之前，当前行的事务就已经提交了，因此 shiwuA 可以查到这条数据。如下图：&lt;/p&gt;
&lt;img data-src=&#34;/interview/MySQL/309c8791d98f4006983cf2b28ce46fe7.png&#34; class=&#34;&#34; title=&#34;在这里插入图片描述&#34;&gt;
&lt;p&gt;接着事务 B 开始操作，他把初始值修改成了值 B，trx_id 设置为自己的事务 id，也就是 35，同事 roll_pointer 指向了之前生成的 undo log，然后事务 B 提交了。如下图：&lt;/p&gt;
&lt;img data-src=&#34;/interview/MySQL/154a65588ce143bfadccc19d1c6b6bb5.png&#34; class=&#34;&#34; title=&#34;在这里插入图片描述&#34;&gt;
&lt;p&gt;这个时候，事务 A 再查询，就会发现一个问题，事务 A 就会发现 trx_id 变成了 35，那么 trx_id 大于 min_trx_id，同时小于 ReadView 里的 max_trx_id=36。说明这个事务可能是和自己差不多时间开始的，然后就会看下这个 trx_id 是否在 m_ids 中，在 m_ids 中发现了 35 的 id，那么就证明当前的数据是和自己同一时间并发启动的事务然后提交的，所以按道理这条数据不能让他看到，就把这条数据屏蔽掉，然后顺着 roll_pointer 找之前的 undo log 数据，然后就会找到 trx_id=20 的那条数据，小于 min_trx_id，说明这条数据是在事务 A 提交之前就完成的，符合查询条件，就把这条数据给暴露出去。&lt;/p&gt;
&lt;img data-src=&#34;/interview/MySQL/7ceac4c1b97f4390b50f156d709186c3.png&#34; class=&#34;&#34; title=&#34;在这里插入图片描述&#34;&gt;
&lt;p&gt;通过 undo log 多版本链，加上 ReadView 进行判断的机制，就可以让你读取你应该读取哪个版本的值。&lt;/p&gt;
&lt;h2 id=&#34;4readview机制是如何实现读已提交隔离级别rc隔离级别的&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#4readview机制是如何实现读已提交隔离级别rc隔离级别的&#34;&gt;#&lt;/a&gt; 4.ReadView 机制是如何实现读已提交隔离级别（RC 隔离级别）的？&lt;/h2&gt;
&lt;p&gt;首先了解下 RC 隔离级别：是指你事务在运行期间，只要别的事务修改数据并且提交了，你就可以读取到修改之后的数据。（这种情况还是会发生不可重复读和幻读）&lt;/p&gt;
&lt;p&gt;下面我就用画图的形式，来和大家一步一步的讲解实现过程：&lt;br /&gt;
首先假设有个数据，是事务 id=50 之前就插入进去的，现在活跃着两个事务，事务 A — id=60，事务 B  — id=70。如下图：&lt;/p&gt;
&lt;img data-src=&#34;/interview/MySQL/6d4c34e71d1348dbba3ebc8e6a65d619.png&#34; class=&#34;&#34; title=&#34;在这里插入图片描述&#34;&gt;
&lt;p&gt;现在事务 B 将初始值修改成了值 B，此时 trx_id=70，同时会生成一个 undo log 数据。如下图：&lt;/p&gt;
&lt;img data-src=&#34;/interview/MySQL/66075a6b707e4b96b041df56290b1168.png&#34; class=&#34;&#34; title=&#34;在这里插入图片描述&#34;&gt;
&lt;p&gt;此时事务 A 发起查询操作，然后生成一个 ReadView，m_ids=60、70，min_trx_id=60，max_trx_id=71，creator_trx_id=60。如下图：&lt;/p&gt;
&lt;img data-src=&#34;/interview/MySQL/12cba3301e11446594396a6b906c14b9.png&#34; class=&#34;&#34; title=&#34;在这里插入图片描述&#34;&gt;
&lt;p&gt;此时事务 A 发现 trx_id=70，大于 min_trx_id，并且小于 max_trx_id，说明当前事务是和事务 A 同时提交的，但是又因为 trx_id=70，在 m_ids 里，说明当前事务还没有提交。那么根据读已提交隔离级别要求，事务未提交之前是不能查看修改值的，所以这里事务 A 看不到事务 B 的值 B，只能根据 roll_pointer 指向找到上一条 undo log 数据，在做判断，发现 trx_id=50，小于事务 A，说明已经提交完成，所以事务 A 查到的数据是初始值。&lt;br /&gt;
接着，这里我们再将事务 B 提交，那么提交之后，事务 A 再进行查询，此时会发现 m_ids 已经变成了 m_ids=60，那么说明事务 B 已经不再活跃 m_ids 数据中了，说明事务 B 已经提交了，因此事务 A 可以查看到事务 B 的值 B。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;这里需要注意一点，读已提交隔离级别中，事务每次执行，都会重新生成一个 ReadView，因为只有这样才能获取到最新的事务 id 数据。&lt;/strong&gt;&lt;/em&gt;&lt;br /&gt;
以上就是基于 ReadView 实现的 RC 隔离级别的原理。&lt;/p&gt;
&lt;h2 id=&#34;5-readview机制是如何实现可重复读隔离级别rr隔离级别的&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#5-readview机制是如何实现可重复读隔离级别rr隔离级别的&#34;&gt;#&lt;/a&gt; 5. ReadView 机制是如何实现可重复读隔离级别（RR 隔离级别）的？&lt;/h2&gt;
&lt;p&gt;我们已经了解了基于 ReadView 机制实现 RC 隔离级别的实现原理了，那么应该对 RR 隔离级别的实现原理也有一个大概猜想了，下面我们还是通过画图方式，来了解实现 RR 隔离级别的原理。&lt;/p&gt;
&lt;p&gt;这里注意：RR 隔离级别里，你这个事务 读取一条数据，无论读取多少次，都是一个值，ReadView 也一样，别的事务哪怕事务提交了，也不能看到修改后的值，这样就避免了不可重复读的问题。&lt;/p&gt;
&lt;p&gt;首先假设有个数据，是事务 id=50 之前就插入进去的，现在活跃着两个事务，事务 A — id=60，事务 B — id=70。如下图：&lt;/p&gt;
&lt;img data-src=&#34;/interview/MySQL/6d4c34e71d1348dbba3ebc8e6a65d619.png&#34; class=&#34;&#34; title=&#34;在这里插入图片描述&#34;&gt;
&lt;p&gt;这个时候，事务 A 发起查询操作，这时候会生成一个 ReadView，这是 creator_trx_id=60，m_ids=60、71，min_trx_id=60，max_trx_id=71。如下图：&lt;/p&gt;
&lt;img data-src=&#34;/interview/MySQL/7fdcbd3c3fd74b2a8b5f419a925b262b.png&#34; class=&#34;&#34; title=&#34;在这里插入图片描述&#34;&gt;
&lt;p&gt;这个时候当前数据的 trx_id=50，小于事务 A 的 60，证明当前事务早在事务 A 之前提交了，所以事务 A 可以看到初始值。&lt;br /&gt;
接着就是事务 B 开始执行修改操作，此时 trx_id=70，初始值改为值 B，同时生成一个 undo log，并且事务 B 提交了，也就是说此时事务 B 已经结束了。如下图：&lt;/p&gt;
&lt;img data-src=&#34;/interview/MySQL/991752fc4da34cf08d9d430509a6e3cb.png&#34; class=&#34;&#34; title=&#34;在这里插入图片描述&#34;&gt;
&lt;p&gt;那么此时事务 A 再次进行查询操作，大家说 m_ids 的值是多少呢？答案是 m_ids=60,70。因为在 RR 隔离级别中，ReadView 一旦生成，就不会改变，这个时候，虽然事务 B 已经提交了，但是事务 A 中的 ReadView 里，还是会有 60、70 两个活跃事务 id。那么此时，事务 A 会判断 trx_id 是否大于 60，很明显 70&amp;gt;60，然后再看 m_ids 中是否有 trx_id=70，是有的，所以这时候事务 A 还是认为事务 B 此时还是处于未提交状态，因此不会被允许查看事务 B 的值，他会根据 roll_pointer 找到上一条 undo log 数据，再次判断，50&amp;lt;60, 满足条件，因此事务 A 查到的数据还是初始值。&lt;/p&gt;
&lt;p&gt;大家看到这里是不是就感觉到了一下子就避免了不可重复读的问题呢。&lt;br /&gt;
同理，当有个事务 C 插入一条数据，事务 id=80，然后提交，在事务 A 中查看到的 max_trx_id 还是 71，这里会判读 80&amp;gt;71, 因此事务 A 会知道，当前事务 C 是在事务 A 发起之后才执行的，明显是不能查看他的数据的，因此这里也不会出现幻读的情况。这些都是依托 ReadView 机制实现的。&lt;/p&gt;
&lt;p&gt;到此，如何基于 ReadView 机制实现隔离级别，避免脏读、不可重复读和幻读的情况，这里就全部解释完毕了。&lt;/p&gt;
&lt;h2 id=&#34;6总结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#6总结&#34;&gt;#&lt;/a&gt; 6. 总结&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Mysql 实现 MVCC 机制，就是基于 &lt;code&gt;undo log多版本链表&lt;/code&gt;  + &lt;code&gt;ReadView机制&lt;/code&gt; 来实现的。默认的 RR 隔离级别，也是基于这套机制来实现的，处理避免脏读、不可重复读的问题，还能解决幻读的问题，因此我们一般都默认为 RR 隔离级别就好了。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考&#34;&gt;#&lt;/a&gt; 参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xUMTFoa2EvYXJ0aWNsZS9kZXRhaWxzLzEyMjI2MDAzND9zcG09MTAwMS4yMDE0LjMwMDEuNTUwMg==&#34;&gt;https://blog.csdn.net/LT11hka/article/details/122260034?spm=1001.2014.3001.5502&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMWhMNDExNDc5VC8/c3BtX2lkX2Zyb209MzMzLjMzNy5zZWFyY2gtY2FyZC5hbGwuY2xpY2smYW1wO3ZkX3NvdXJjZT1mMTYyZDVjMjU3NTVlMGQ2YjljYzM1OGI0ZjNlOGU0Zg==&#34;&gt;https://www.bilibili.com/video/BV1hL411479T/?spm_id_from=333.337.search-card.all.click&amp;amp;vd_source=f162d5c25755e0d6b9cc358b4f3e8e4f&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;mysql常见的日志有哪些分别起到了什么作用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mysql常见的日志有哪些分别起到了什么作用&#34;&gt;#&lt;/a&gt; MySQL 常见的日志有哪些，分别起到了什么作用&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;bin log ：数据恢复、主从复制&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;MySQL Server 层也有一个日志文件叫做 Binlog ，它可以被所有的存储引擎使用。&lt;/p&gt;
&lt;p&gt;bin log 以事件的形式记录了所有的 DDL 和 DML 语句（因为他记录的是操作而不是数据值），可以用做主从复制和数据恢复&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;relay log ：中介日志&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;redo log&lt;/p&gt;
&lt;p&gt;记录修改后的值，属于物理日志&lt;/p&gt;
&lt;p&gt;redo log 的大小事固定的，前面的内容会被覆盖，所以不能用于数据回滚 / 数据恢复&lt;/p&gt;
&lt;p&gt;redo log 是 InnoDB 存储引擎实现的，并不是所有引擎都有&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;undo log&lt;/p&gt;
&lt;p&gt;撤销日志，在数据库事务开始之前，MYSQL 会去记录更新前的数据到 undo log 文件中。如果事务回滚或者数据库崩溃时，可以利用 undo log 日志中记录的日志信息进行回退。同时也可以提供多版本并发控制下的读 (MVCC)&lt;/p&gt;
&lt;p&gt;具体查看：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xUMTFoa2EvYXJ0aWNsZS9kZXRhaWxzLzEyNTg3MDk4MSVFNCVCQiU4MCVFNCVCOSU4OCVFNiU5OCVBRkJ1ZmZlcg==&#34;&gt;https://blog.csdn.net/LT11hka/article/details/125870981 什么是 Buffer&lt;/span&gt; Pool&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;/interview/MySQL/image-20220909103813728.png&#34; class=&#34;&#34; title=&#34;image-20220909103813728&#34;&gt;
&lt;h1 id=&#34;buffer-pool-内存淘汰策略&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#buffer-pool-内存淘汰策略&#34;&gt;#&lt;/a&gt; Buffer pool 内存淘汰策略&lt;/h1&gt;
&lt;p&gt;冷热分区的 LRU 策略&lt;/p&gt;
&lt;p&gt;冷热分区比：5:3&lt;/p&gt;
&lt;p&gt;数据一进来先进入到冷区的头部，默认在 1000ms 之后如果再次访问，就会将他放入到热区&lt;/p&gt;
&lt;h1 id=&#34;什么是hash索引&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是hash索引&#34;&gt;#&lt;/a&gt; 什么是 hash 索引&lt;/h1&gt;
&lt;img data-src=&#34;/interview/MySQL/image-20220909104250912.png&#34; class=&#34;&#34; title=&#34;image-20220909104250912&#34;&gt;
&lt;p&gt;不适合做范围查找，innodb 不支持 hash 索引&lt;/p&gt;
&lt;h1 id=&#34;mysql为什么要用b数做索引&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mysql为什么要用b数做索引&#34;&gt;#&lt;/a&gt; MySQL 为什么要用 B + 数做索引&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;B + 树能显著的减少 IO 次数，提高效率&lt;/li&gt;
&lt;li&gt;B + 树的查询效率更加稳定，因为所有的数据都放在了叶子上&lt;/li&gt;
&lt;li&gt;B + 树能提高范围查询的效率，因为叶子结点指向下一个叶子结点&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;数据库优化什么是数据库索引有哪些类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库优化什么是数据库索引有哪些类型&#34;&gt;#&lt;/a&gt; 数据库优化，什么是数据库索引，有哪些类型&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;1、按表列属性分类&lt;/strong&gt;&lt;br /&gt;
单列索引 (主键索引，唯一索引，普通索引) 和多列索引（组合索引），全文索引&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主键索引&lt;/li&gt;
&lt;li&gt;唯一索引：唯一索引是在一个或多个字段上创建的，但它强制保证每行记录的字段值唯一。&lt;/li&gt;
&lt;li&gt;普通索引：普通索引是最常用的索引，它是在一个或多个字段上创建的，可以加快数据库查询的速度。&lt;/li&gt;
&lt;li&gt;多列索引：组合索引是在多个字段上创建的，可以提高查询的效率。&lt;/li&gt;
&lt;li&gt;全文索引：全文索引是用于文本搜索的特殊索引，它可以提高文本搜索的效率。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2、按数据结构分类&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1） B+tree 索引&lt;br /&gt;
 b+tree 基于平衡二叉树的一种多路平衡查找树，所有记录都按照顺序存放在叶子节点中，各个叶子节点直接通过链表相连。与 b 树不同的是：非叶子节点只存储键值信息。所有叶子节点之间都有一个链指针。数据记录都存放在叶子节点中。&lt;/li&gt;
&lt;li&gt;2）hash 索引&lt;br /&gt;
基于 hash 表结构实现的索引，mysql 中只有 MEMORY/HEAP 和 NDB 存储引擎支持；InnoDB 引擎支持自适应 hash 索引，但是是数据库自身创建使用的，而不能进行人为定义。当二级索引被频繁的访问时，便会自动创建自适应哈希索引；通过 命令 SHOW ENGINE INNODB STATUS 可查看自适应 hash 索引的使用情况；通过 命令 SHOW VARIABLES LIKE ‘% ap% hash_index’ 查看是否打开自适应 hash 索引对比：&lt;br /&gt;
由于 hash 索引是比较其 hash 值，hash 索引只能进行等值查找而不能进行范围查找 hash 索引无法进行排序：原因同上不支持最左匹配原则，复合索引时合并一起计算 hash 值 hash 索引的检索效率很高可以一次定位，但是当发生大量 hash 碰撞的时候，链表变长，hash 索引效率上是不如 b+tree 的由于存在 hash 碰撞的问题，当需要获得总数时候，hash 索引在任何时候都不能避免表扫描&lt;/li&gt;
&lt;li&gt;3）T-tree 索引&lt;/li&gt;
&lt;li&gt;4）R-tree 索引&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;3、按存储结构分类&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;1）聚簇索引 (聚集索引)&lt;/strong&gt;&lt;br /&gt;
 InnoDB 的聚簇索引实际上是在同一个 BTree 结构中同时存储了&lt;strong&gt;索引和整行数据&lt;/strong&gt;，通过该索引查询&lt;strong&gt;可以直接获取查询数据行&lt;/strong&gt;。&lt;br /&gt;
聚簇索引不是一种单独的索引类型，而是一种数据的存储方式，聚簇索引的顺序，就是数据在硬盘上的物理顺序。&lt;br /&gt;
在&lt;strong&gt; mysql&lt;/strong&gt; 通常聚簇索引是主键的同义词，&lt;strong&gt;每张表只包含一个聚簇索引&lt;/strong&gt; (其他数据库不一定)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2）非聚集索引 (辅助索引，次级索引，二级索引)&lt;/strong&gt;&lt;br /&gt;
 非聚集索引在 BTree 的叶子节点中保存了&lt;strong&gt;索引列和主键&lt;/strong&gt;。如果查询列不在该索引内，只能查到其主键值，还&lt;strong&gt;需要回表操作查询聚簇索引进行查询&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;聚簇索引的优点：&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;可以把相关数据保存在一起&lt;/strong&gt;，如：实现电子邮箱时，可以根据用户 ID 来聚集数据，这样只需要从磁盘读取少量的数据页就能获取某个用户全部邮件，如果没有使用聚集索引，则每封邮件都可能导致一次磁盘 IO。&lt;br /&gt;
&lt;strong&gt;数据访问更快，聚集索引将索引和数据保存在同一个 btree 中&lt;/strong&gt;，因此从聚集索引中获取数据通常比在非聚集索引中查找要快。&lt;br /&gt;
使用覆盖索引扫描的查询可以直接使用页节点中的主键值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;聚簇索引的缺点：&lt;/strong&gt;&lt;br /&gt;
聚簇数据最大限度地提高了 IO 密集型应用的性能，但如果数据全部放在内存中，则访问的顺序就没有那么重要了，聚集索引也没有什么优势了&lt;br /&gt;
插入速度严重依赖于插入顺序，按照主键的顺序插入是加载数据到 innodb 表中速度最快的方式，但如果不是按照主键顺序加载数据，那么在加载完成后最好使用 optimize table 命令重新组织一下表&lt;br /&gt;
更新聚集索引列的代价很高，因为会强制 innodb 将每个被更新的行移动到新的位置。&lt;br /&gt;
基于聚集索引的表在插入新行，或者主键被更新导致需要移动行的时候，可能面临页分裂的问题，当行的主键值要求必须将这一行插入到某个已满的页中时，存储引擎会将该页分裂成两个页面来容纳该行，这就是一次页分裂操作，页分裂会导致表占用更多的磁盘空间。&lt;br /&gt;
聚集索引可能导致全表扫描变慢，尤其是行比较稀疏，或者由于页分裂导致数据存储不连续的时候。&lt;br /&gt;
二级索引可能比想象的更大，因为在二级索引的叶子节点包含了引用行的主键列。&lt;br /&gt;
二级索引访问需要两次索引查找，而不是一次。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;索引的优缺点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#索引的优缺点&#34;&gt;#&lt;/a&gt; 索引的优缺点&lt;/h1&gt;
&lt;p&gt;1、优点：创建索引可以大大提高系统的性能。&lt;br /&gt;
第一、通过创建唯一性索引，可以保证数据库表中每一行数据的唯一性。&lt;br /&gt;
第二、可以大大加快 数据的检索速度，这也是创建索引的最主要的原因。&lt;br /&gt;
第三、可以加速表和表之间的连接，特别是在实现数据的参考完整性方面特别有意义。&lt;br /&gt;
第四、在使用分组和排序子句进行数据检索时，同样可以显著减少查询中分组和排序的时间。&lt;br /&gt;
第五、通过使用索引，可以在查询的过程中，使用优化隐藏器，提高系统的性能。&lt;br /&gt;
也许会有人要问：增加索引有如此多的优点，为什么不对表中的每一个列创建一个索引呢？这种想法固然有其合理性，然而也有其片面性。虽然，索引有许多优点， 但是，为表中的每一个列都增加索引，是非常不明智的。&lt;/p&gt;
&lt;p&gt;2、缺点&lt;br /&gt;
第一、创建索引和维护索引要耗费时间，这种时间随着数据量的增加而增加。&lt;br /&gt;
第二、索引需要占物理空间，除了数据表占数据空间之外，每一个索引还要占一定的物理空间。如果要建立聚簇索引，那么需要的空间就会更大。&lt;br /&gt;
第三、当对表中的数据进行增加、删除和修改的时候，索引也要动态的维护，这样就降低了数据的维护速度。&lt;/p&gt;
&lt;h1 id=&#34;谈一下你对数据库btree的理解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#谈一下你对数据库btree的理解&#34;&gt;#&lt;/a&gt; 谈一下你对数据库 b+tree 的理解&lt;/h1&gt;
&lt;p&gt;Mysql 索引使用的是 B + 树，因为索引是用来加快查询的，而 B + 树通过对数据进行排序所以是可以提高查询速度的，然后通过一个节点中可以存储多个元素，从而可以使得 B + 树的高度不会太高&lt;/p&gt;
&lt;p&gt;在 Mysql 中一个 Innodb 页就是一个 B + 树节点，一个 Innodb 页默认 16kb，所以一般情况下一颗两层的 B + 树可以存 2000 万行左右的数据，然后通过利用 B + 树叶子节点存储了所有数据并且进行了排序，并且叶子节点之间有指针，可以很好的支持全表扫描，范围查找等 SQL 语句&lt;/p&gt;
&lt;p&gt;我们建议不要让 B + 树的层数超过三层，所以当数据了超过 2000W 行的时候就要进行分库分表。&lt;/p&gt;
&lt;h1 id=&#34;聚集索引和非聚集索引的区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#聚集索引和非聚集索引的区别&#34;&gt;#&lt;/a&gt; 聚集索引和非聚集索引的区别&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;聚集索引：聚集索引是指将索引键值作为表中数据物理存储的顺序，并且只能有一个聚集索引。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;非聚集索引：非聚集索引不影响表中数据的物理存储顺序，可以有多个非聚集索引，每个索引都包含一个指向表中行的指针。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;在日常工作中是如何进行数据库优化的&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#在日常工作中是如何进行数据库优化的&#34;&gt;#&lt;/a&gt; 在日常工作中是如何进行数据库优化的&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用正确的索引：为数据库表添加正确的索引可以加快查询速度，提高性能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;合理分配内存：为数据库分配合理的内存可以减少磁盘 I/O 操作，提高系统性能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分析查询语句：分析 SQL 查询语句，改写查询语句，可以减少查询时间，提高数据库性能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;合理分区：合理分区数据库表可以提高查询性能，减少 I/O 操作，提高系统性能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据库优化：使用数据库优化工具，如 MySQL 优化器，可以改善数据库性能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;合理使用存储过程：使用存储过程可以减少查询次数，提高数据库性能。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;请列举几个索引失效的场景&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#请列举几个索引失效的场景&#34;&gt;#&lt;/a&gt; 请列举几个索引失效的场景&lt;/h1&gt;
&lt;p&gt;(1) like 以 % 开头，索引无效；当 like 前缀没有 %，后缀有 % 时，索引有效。&lt;/p&gt;
&lt;p&gt;(2) or 语句前后没有同时使用索引。当 or 左右查询字段只有一个是索引，该索引失效，只有当 or 左右查询字段均为索引时，才会生效&lt;/p&gt;
&lt;p&gt;(3) 组合索引，不是使用第一列索引，索引失效。&lt;/p&gt;
&lt;p&gt;(4) 数据类型出现隐式转化。如 varchar 不加单引号的话可能会自动转换为 int 型 (用 select 查询时)，使索引无效，产生全表扫描。&lt;/p&gt;
&lt;p&gt;(5) 在索引列上使用 IS NULL 或 IS NOT NULL 操作 (在 where 子句中对字段进行 null 值判断)&lt;/p&gt;
&lt;p&gt;(6) 在索引字段上使用 not，&amp;lt;&amp;gt;，!=。不等于操作符是永远不会用到索引的，因此对它的处理只会产生全表扫描。 优化方法： key&amp;lt;&amp;gt;0 改为 key&amp;gt;0 or key&amp;lt;0。&lt;/p&gt;
&lt;p&gt;(7) 对索引字段进行计算操作、字段上使用函数。&lt;/p&gt;
&lt;p&gt;(8) 当全表扫描速度比索引速度快时，mysql 会使用全表扫描，此时索引失效。&lt;/p&gt;
&lt;p&gt;索引失效分析工具：&lt;/p&gt;
&lt;p&gt;可以使用 explain 命令加在要分析的 sql 语句前面，在执行结果中查看 key 这一列的值，如果为 NULL，说明没有使用索引。&lt;/p&gt;
&lt;h1 id=&#34;数据库锁的机制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库锁的机制&#34;&gt;#&lt;/a&gt; 数据库锁的机制&lt;/h1&gt;
&lt;p&gt;**InnoDB 支持行级锁 (row-level locking) 和表级锁，默认为行级锁（偏向于写）** 在 Mysql 中，行级锁并不是直接锁记录，而是锁索引。InnoDB 行锁是通过给索引项加锁实现的，而索引分为主键索引和非主键索引两种&lt;/p&gt;
&lt;p&gt;（1）命中索引才锁行，未命中索引默认锁整个索引，即锁表&lt;br /&gt;
（2）命中主键索引，直接锁主键索引对应的整行&lt;br /&gt;
（3）命中辅助索引，先锁命中的辅助索引，在锁该辅助索引所对应的主键索引&lt;/p&gt;
&lt;p&gt;在实际应用中，要特别注意 InnoDB 行锁的这一特性，不然的话，可能导致大量的锁冲突，从而影响并发性能。&lt;br /&gt;
1、在不通过索引条件查询的时候，InnoDB 的效果就相当于表锁&lt;br /&gt;
 2、当表有多个索引的时候，不同的事务可以使用不同的索引锁定不同的行，另外，不论 是使用主键索引、唯一索引或普通索引，InnoDB 都会使用行锁来对数据加锁。&lt;br /&gt;
3、由于 MySQL 的行锁是针对索引加的锁，不是针对记录加的锁，所以即便你的 sql 语句访问的是不同的记录行，但如果命中的是相同的被锁住的索引键，也还是会出现锁冲突的。&lt;br /&gt;
4、即便在条件中使用了索引字段，但是否使用索引来检索数据是由 MySQL 通过判断不同 执行计划的代价来决定的，如果 MySQL 认为全表扫描效率更高，比如对一些很小的表，它 就不会使用索引，这种情况下 InnoDB 将锁住所有行，相当于表锁。因此，在分析锁冲突时，别忘了检查 SQL 的执行计划，以确认是否真正使用了索引&lt;/p&gt;
&lt;p&gt;innodb 的三种行锁算法，三种都是排他锁：&lt;br /&gt;
1、record lock：单个行记录上的锁&lt;br /&gt;
 2、gap lock：间隙锁，锁定一个范围，但不包括记录本身。GAP 锁的目的，是为了防止同一事务的两次当前读，出现幻读的情况。&lt;br /&gt;
3、Next-key lock：等于 Record Lock 结合 Gap Lock，也就说 Next-Key Lock 既锁定记录本身也锁定一个范围，特别需要注意的是，InnoDB 存储引擎还会对辅助索引下一个键值加上 gap lock。对于行查询，innodb 采用的都是 Next-Key Lock，主要目的是解决幻读的问题，以满足相关隔离级别以及恢复和复制的需要。&lt;/p&gt;
&lt;p&gt;Innodb 自动使用间隙锁的条件：&lt;br /&gt;
（1）&lt;strong&gt;必须在 RR 级别下&lt;/strong&gt;&lt;br /&gt;
（2）&lt;strong&gt;检索条件必须有索引&lt;/strong&gt;（没有索引的话，mysql 会全表扫描，那样会锁定整张表所有的记录，包括不存在的记录，此时其他事务不能修改不能删除不能添加）&lt;/p&gt;
&lt;p&gt;死锁现象：&lt;br /&gt;
死锁就是两个或多个事务在未结束的情况下，用排他锁互相锁死的一种特殊情况，下面有两种死锁情况（仅供参考）&lt;/p&gt;
&lt;img data-src=&#34;/interview/MySQL/20210226170241867.png&#34; class=&#34;&#34; title=&#34;在这里插入图片描述&#34;&gt;
&lt;img data-src=&#34;/interview/MySQL/20210226170250512.png&#34; class=&#34;&#34; title=&#34;在这里插入图片描述&#34;&gt;
&lt;p&gt;2、死锁产生的本质原理&lt;br /&gt;
死锁的发生与否，并不在于事务中有多少条 SQL 语句，死锁的关键在于：两个 (或以上) 的 Session 加锁的顺序不一致。而使用本文上面提到的，分析 MySQL 每条 SQL 语句的加锁规则，分析出每条语句的加锁顺序，然后检查多个并发 SQL 间是否存在以相反的顺序加锁的情况，就可以分析出各种潜在的死锁情况，也可以分析出线上死锁发生的原因。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;行锁优化建议：&lt;/strong&gt;&lt;br /&gt;
通过检查 InnoDB_row_lock 状态变量来分析系统上的行锁的争夺情况，在着手根据状态量来分析改善；&lt;br /&gt;
show status like ‘innodb_row_lock%’;// 查看行锁的状态&lt;br /&gt;
尽可能让所有数据检索都通过索引来完成， 从而避免无索引行锁升级为表锁&lt;br /&gt;
合理设计索引，尽量缩小锁的范围&lt;br /&gt;
尽可能减少检索条件，避免间隙锁&lt;br /&gt;
尽量控制事务大小，减少锁定资源量和时间长度&lt;br /&gt;
尽可能低级别事务隔离&lt;/p&gt;
&lt;p&gt;悲观锁&lt;br /&gt;
 ** 在关系数据库管理系统里，悲观并发控制（又名 “悲观锁”，Pessimistic Concurrency Control，缩写 “PCC”）是一种并发控制的方法。它可以阻止一个事务以影响其他用户的方式来修改数据。** 如果一个事务执行的操作都某行数据应用了锁，那只有当这个事务把锁释放，其他事务才能够执行与该锁冲突的操作。&lt;br /&gt;
悲观并发控制主要用于数据争用激烈的环境，以及发生并发冲突时使用锁保护数据的成本要低于回滚事务的成本的环境中。&lt;br /&gt;
优点：&lt;br /&gt;
悲观并发控制实际上是 “先取锁再访问” 的保守策略，为数据处理的安全提供了保证。&lt;/p&gt;
&lt;p&gt;缺点：&lt;br /&gt;
（a）在效率方面，处理加锁的机制会让数据库产生额外的开销，还有增加产生死锁的机会；&lt;br /&gt;
（b） 在只读型事务处理中由于不会产生冲突，也没必要使用锁，这样做只能增加系统负载；还有会降低了并行性，一个事务如果锁定了某行数据，其他事务就必须等待该事务处理完才可以处理那行数&lt;/p&gt;
&lt;p&gt;乐观锁&lt;br /&gt;
在关系数据库管理系统里，乐观并发控制（又名 “乐观锁”，Optimistic Concurrency Control，缩写 “OCC”）是一种并发控制的方法。它假设多用户并发的事务在处理时不会彼此互相影响，各事务能够在不产生锁的情况下处理各自影响的那部分数据。 相对于悲观锁，在对数据库进行处理的时候，乐观锁并不会使用数据库提供的锁机制。一般的实现乐观锁的方式就是记录数据版本。&lt;/p&gt;
&lt;p&gt;在数据库中，乐观锁的实现有两种方式&lt;br /&gt;
 1、使用版本号实现&lt;br /&gt;
每一行数据多一个字段 version，每次更新数据对应版本号 + 1，&lt;br /&gt;
原理：读出数据，将版本号一同读出，之后更新，版本号 + 1，提交数据版本号大于数据库当前版本号，则予以更新，否则认为是过期数据，重新读取数据&lt;/p&gt;
&lt;p&gt;2、使用时间戳实现&lt;br /&gt;
每一行数据多一个字段 time&lt;br /&gt;
 原理：读出数据，将时间戳一同读出，之后更新，提交数据时间戳等于数据库当前时间戳，则予以更新，否则认为是过期数据，重新读取数据&lt;/p&gt;
&lt;p&gt;优点与不足&lt;br /&gt;
乐观并发控制相信事务之间的数据竞争 (data race) 的概率是比较小的，因此尽可能直接做下去，直到提交的时候才去锁定，所以不会产生任何锁和死锁。&lt;/p&gt;
&lt;p&gt;如何选择&lt;br /&gt;
在乐观锁与悲观锁的选择上面，主要看下两者的区别以及适用场景就可以了：&lt;br /&gt;
1、乐观锁并未真正加锁，效率高。一旦锁的粒度掌握不好，更新失败的概率就会比较高，容易发生业务失败。&lt;br /&gt;
2、悲观锁依赖数据库锁，效率低。更新失败的概率比较低。随着互联网三高架构（高并发、高性能、高可用）的提出，悲观锁已经越来越少的被使用到生产环境中了，尤其是并发量比较大的业务场景。&lt;/p&gt;
&lt;h1 id=&#34;在遇到死锁情况如何处理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#在遇到死锁情况如何处理&#34;&gt;#&lt;/a&gt; 在遇到死锁情况如何处理&lt;/h1&gt;
&lt;p&gt;死锁的发生与否，并不在于事务中有多少条 SQL 语句，死锁的关键在于：两个 (或以上) 的 Session 加锁的顺序不一致。分析 MySQL 每条 SQL 语句的加锁规则，分析出每条语句的加锁顺序，然后检查多个并发 SQL 间是否存在以相反的顺序加锁的情况，就可以分析出各种潜在的死锁情况，也可以分析出线上死锁发生的原因。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用数据库调试工具检查死锁，查看死锁发生的原因。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;尝试重新调整数据库的索引结构，减少数据库的查询和更新操作，以减少死锁的发生。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将数据库的事务隔离级别调整为更低的级别，以减少死锁的发生。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将数据库的事务超时时间设置得更短，以便及时中断发生死锁的事务。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将死锁发生的数据表拆分成多个表，以减少数据表上的竞争。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;mysql和oracle的区别&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mysql和oracle的区别&#34;&gt;#&lt;/a&gt; mysql 和 oracle 的区别&lt;/h1&gt;
&lt;h1 id=&#34;数据库的根本特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库的根本特点&#34;&gt;#&lt;/a&gt; 数据库的根本特点&lt;/h1&gt;
&lt;p&gt;1、数据结构化 数据库系统实现了整体数据的结构化，这是数据库的最主要的特征之一&lt;/p&gt;
&lt;p&gt;2、数据的共享性高，冗余度低，易扩充 因为数据是面向整体的，所以数据可以被多个用户、多个应用程序共享使用&lt;/p&gt;
&lt;p&gt;3、数据独立性高 数据独立性包括数据的物理独立性和逻辑独立性。&lt;/p&gt;
&lt;p&gt;4、数据由 DBMS 统一管理和控制 数据库的共享是并发的 (concurrency) 共享，即多个用户可以同时存取数据库中的数据，甚至可以同时存取数据库中的同一个数据；&lt;/p&gt;
&lt;h1 id=&#34;数据库中数据共享是指&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库中数据共享是指&#34;&gt;#&lt;/a&gt; 数据库中数据共享是指&lt;/h1&gt;
&lt;p&gt;多个应用、多种语言、多个用户共享数据&lt;/p&gt;
&lt;h1 id=&#34;数据库中产生数据不一致&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据库中产生数据不一致&#34;&gt;#&lt;/a&gt; 数据库中产生数据不一致&lt;/h1&gt;
&lt;p&gt;1. 并发控制不当&lt;/p&gt;
&lt;p&gt;2. 数据冗余&lt;/p&gt;
&lt;p&gt;3. 各种故障，错误&lt;/p&gt;
&lt;p&gt;第一种往往是由于重复存放的数据未能进行一致性更新造成的&lt;/p&gt;
&lt;p&gt;第二种情况是由于多用户共享数据库，而更新操作未能保持同步进行引起的&lt;/p&gt;
&lt;p&gt;第三种是由于某种原因（硬件故障或软件故障等）而造成数据丢失或数据损坏等&lt;/p&gt;
&lt;h1 id=&#34;运算&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#运算&#34;&gt;#&lt;/a&gt; 运算&lt;/h1&gt;
&lt;img data-src=&#34;/interview/MySQL/c484ce59eba713b93d75a1381901dabe.png&#34; class=&#34;&#34; title=&#34;img&#34;&gt;
&lt;img data-src=&#34;/interview/MySQL/9606dddddf13fb7dafa3119aa768e7a4.png&#34; class=&#34;&#34; title=&#34;数据库之运算符详解_数据库_18&#34;&gt;
&lt;h2 id=&#34;运算优先级&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#运算优先级&#34;&gt;#&lt;/a&gt; 运算优先级&lt;/h2&gt;
&lt;img data-src=&#34;/interview/MySQL/2b23723e1f54716522beeb85047554c2.png&#34; class=&#34;&#34; title=&#34;数据库之运算符详解_mysql_23&#34;&gt;
&lt;h1 id=&#34;问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#问题&#34;&gt;#&lt;/a&gt; 问题&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;MySQL 索引使用有哪些注意事项呢？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MysQL 遇到过死锁问题吗，你是如何解决的？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;日常工作中你是怎么优化 SQL 的？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;说说分库与分表的设计&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;InnoDB 与 MylSAM 的区别&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据库索引的原理，为什么要用 B + 树，为什么不用二叉树？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;聚集索引与非聚集索引的区别&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;limit 1000000 加载很慢的话，你是怎么解决的呢？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方案一&lt;/strong&gt;：如果 id 是连续的，可以这样，返回上次查询的最大记录 (偏移量)，再往下 limit&lt;/p&gt;
&lt;p&gt;select id，name from employee where id&amp;gt;1000000 limit 10.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方案二&lt;/strong&gt;：在业务允许的情况下限制页数：&lt;/p&gt;
&lt;p&gt;建议跟业务讨论，有没有必要查这么后的分页啦。因为绝大多数用户都不会往后翻太多页。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方案三&lt;/strong&gt;：order by + 索引（id 为索引）&lt;/p&gt;
&lt;p&gt;select id，name from employee order by id limit 1000000，10&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;方案四&lt;/strong&gt;：利用延迟关联或者子查询优化超多分页场景。（先快速定位需要获取的 id 段，然后再关联）&lt;/p&gt;
&lt;p&gt;SELECT a.* FROM employee a, (select id from employee where 条件 LIMIT 1000000,10) b where &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2EuaWQ9Yi5pZA==&#34;&gt;a.id=b.id&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何选择合适的分布式主键方案呢？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;事务的隔离级别有哪些？MySQL 的默认隔离级别是什么？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;什么是幻读，脏读，不可重复读呢？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在高并发情况下，如何做到安全的修改同一行数据？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据库的乐观锁和悲观锁。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;select for update 有什么含义，会锁表还是锁行还是其他。&lt;/p&gt;
&lt;p&gt;select 查询语句是不会加锁的，但是 select …for update&lt;strong&gt; 除了有查询的作用外，还会加锁呢，而且它是悲观锁，排他锁。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;那么它加的是行锁还是表锁，这就要看是不是用了索引 / 主键。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;没用索引 / 主键的话就是表锁，否则就是是行锁&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL 事务得四大特性以及实现原理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果某个表有近千万数据，CRUD 比较慢，如何优化&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如何写 sql 能够有效的使用到复合索引。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mysql 中 in 和 exists 的区别。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;子查询使用 exists，会先进行主查询，将查询到的每行数据循环带入子查询校验是否存在，过滤出整体的返回数据；子查询使用 in，会先进行子查询获取结果集，然后主查询匹配子查询的结果集，返回数据&lt;/li&gt;
&lt;li&gt;外表内表相对大小情况不一样时，查询效率不一样：两表大小相当，in 和 exists 差别不大；内表大，用 exists 效率较高；内表小，用 in 效率较高。&lt;/li&gt;
&lt;li&gt;不管外表与内表的大小，not exists 的效率一般要高于 not in，跟子查询的索引访问类型有关。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;IN 和 EXISTS 都可以用来检测一个值是否存在于一个子查询中，但它们之间有一些重要的区别：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IN 操作符比较的是值，而 EXISTS 操作符比较的是整个子查询的结果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IN 操作符只能比较一列值，而 EXISTS 操作符可以比较多列值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IN 操作符不能使用带有 “NOT” 的条件，而 EXISTS 操作符可以使用带有 “NOT” 的条件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;IN 操作符的效率比 EXISTS 操作符要低，因为它必须比较每一行，而 EXISTS 操作符只检查是否存在至少一行满足条件。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据库自增主键可能遇到什么问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MVCC 熟悉吗，它的底层原理？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据库中间件了解过吗，sharding jdbc，mycat?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MYSQL 的主从延迟，你怎么解决？&lt;/p&gt;
&lt;p&gt;配合 semi-sync 半同步复制；&lt;br /&gt;
一主多从，分摊从库压力；&lt;br /&gt;
强制走主库方案（强一致性）；&lt;br /&gt;
sleep 方案：主库更新后，读从库之前先 sleep 一下；&lt;br /&gt;
判断主备无延迟方案（例如判断 seconds_behind_master 参数是否已经等于 0、对比位点）；&lt;br /&gt;
并行复制 — 解决从库复制延迟的问题；&lt;br /&gt;
这里主要介绍我在项目中使用的几种方案，分别是半同步复制、实时性操作强制走主库、并行复制。&lt;/p&gt;
&lt;p&gt;参考资料：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81NTQ5NjcxOC9hcnRpY2xlL2RldGFpbHMvMTI2NzM5MTEx&#34;&gt;https://blog.csdn.net/weixin_55496718/article/details/126739111&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NodWlnZTIwMTMvYXJ0aWNsZS9kZXRhaWxzLzEyODU1NzMyMA==&#34;&gt;https://blog.csdn.net/chuige2013/article/details/128557320&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;说一下大表查询的优化方案&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;什么是数据库连接池？为什么需要数据库连接池呢？&lt;/p&gt;
&lt;p&gt;数据库连接池（Database Connection Pooling）在程序初始化时创建一定数量的数据库连接对象并将其保存在一块内存区中，它允许应用程序重复使用一个现有的数据库连接，而不是重新建立一个；释放空闲时间超过最大空闲时间的数据库连接以避免因为没有释放数据库连接而引起的数据库连接遗漏。&lt;/p&gt;
&lt;p&gt;​     即在程序初始化的时候创建一定数量的数据库连接，用完可以放回去，下一个在接着用，通过配置连接池的参数来控制连接池中的初始连接数、最小连接、最大连接、最大空闲时间这些参数保证访问数据库的数量在一定可控制的范围类，防止系统崩溃，使用户的体验好&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为什么使用数据库连接池？（形象的说就是用了可以放回去给别人用，大家共享）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数据库连接是一种关键、有限且昂贵的资源，创建和释放数据库连接是一个很耗时的操作，频繁地进行这样的操作将占用大量的性能开销，进而导致网站的响应速度下降，严重的时候可能导致服务器崩溃；数据库连接池可以节省系统许多开销。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一条 SQL 语句在 MySQL 中如何执行的？&lt;/p&gt;
&lt;p&gt;from、where、select、group by having 、order by 、limit&lt;/p&gt;
&lt;p&gt;可以将 SQL 语句执行分为两种种情况&lt;br /&gt;
&lt;strong&gt; 1、查询语句&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;select * from student where ssex=&#39; 男 &#39; and classid=1;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;先去检查语句是否有权限，如果没有权限，就会返回错误信息，如果有权限，就会西安查缓存查询，如果这条 sql 语句为 key 在缓存中查询有结果，则返回。&lt;/li&gt;
&lt;li&gt;通过分析器进行词法分析，提取 sql 语句的关键元素。比如上面的语句是 select，提取关键字，表名 student，条件 ssex = 男，classid=1.&lt;/li&gt;
&lt;li&gt;然后去判断 sql 语句是否有语法错误，提取的关键字是否有错误。没有就执行下一步&lt;/li&gt;
&lt;li&gt;优化器确定优化方案：查询是男的学生；查询班级编号为 1 的学生&lt;/li&gt;
&lt;li&gt;优化器会根据自己的判断去选择一个自己认为最好的方案去执行&lt;/li&gt;
&lt;li&gt;进行权限验证&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2、增删改&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;update student set ssex=&#39; 女 &#39; where classid=1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;先去查询一般这个数据，如果有缓存的话也是会用到缓存&lt;/li&gt;
&lt;li&gt;然后拿到查询的语句，把性别改为女，然后去调用引擎 api 接口，写入修改的数据，存储引擎 innodb 把数据保存在内存中，写入日志中，告诉执行器执行&lt;/li&gt;
&lt;li&gt;执行器执行，提交事务&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;innodb 引擎中的索引策略了解过吗&lt;/p&gt;
&lt;p&gt;InnoDB 引擎中的索引策略是一种索引优化技术，它通过分析表中的数据和索引结构，来调整索引结构，以最大程度地提高查询效率。它可以帮助数据库管理员改善查询性能，提高查询速度，减少索引大小，从而节省空间。InnoDB 引擎中的索引策略主要有以下几种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;选择最佳索引：这种索引策略会选择最佳的索引来满足查询的要求，以便最大限度地提高查询性能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;索引合并：这种索引策略会将多个索引合并成一个索引，以减少索引大小，提高查询性能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;索引重建：这种索引策略会定期重建表中的索引，以避免索引碎片，提高查询性能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;索引优化：这种索引策略会根据查询的频率和数据的变化情况，调整索引的结构，以提高查询性能。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一条 SQL 执行时间过长如何优化&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MYSQL 数据库服务器性能分析的方法命令有哪些？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Blob 和 text 有什么区别？&lt;/p&gt;
&lt;p&gt;Blob 和 text 是两种不同的对象类型，用于表示二进制数据。&lt;/p&gt;
&lt;p&gt;Blob 是一种&lt;strong&gt;不可变的原始数据类型&lt;/strong&gt;，可以表示任意大小的二进制数据，但是不能直接操作。它可以用于存储图像，视频，文档等文件类型。&lt;/p&gt;
&lt;p&gt;Text 是一种&lt;strong&gt;可变的原始数据类型&lt;/strong&gt;，可以表示字符串，可以直接操作。它可以用于存储文本，网页，JSON 等文件类型。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mysql 里记录货币用什么字段类型比较好？&lt;/p&gt;
&lt;p&gt;MySQL 中最常用的字段类型来记录货币是 DECIMAL（精度）或 NUMERIC（精度）类型。DECIMAL（精度）和 NUMERIC（精度）类型允许您指定小数点后的位数，以便更准确地表示货币值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mysql 中有哪几种锁，列举一下？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hash 索引和 B + 树区别是什么？你在设计索引是怎么抉择的？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mysql 的内连接、左连接、右连接有什么区别？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;说说 MySQL 的基础架构图&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;什么是内连接、外连接、交叉连接、笛卡尔积呢？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;说一下数据库的三大范式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mysql 的 binlog 有几种录入格式？分别有什么区别？&lt;/p&gt;
&lt;p&gt;1、Row-based 格式：这种格式下，MySQL 会记录每一行的变更，比如更新前后的值，插入前后的值，删除前后的值等，可以详细描述每一次变更。&lt;/p&gt;
&lt;p&gt;2、Statement-based 格式：这种格式下，MySQL 只会记录 SQL 语句本身，不会记录每一行的变更，只能描述变更的范围，比如更新了几行，插入了几行，删除了几行等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;区别&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;Row-based 格式比 Statement-based 格式更加详细，但是会占用更多的空间，Statement-based 格式比 Row-based 格式占用的空间少，但是不能描述每一行的变更。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;InnoDB 引擎的 4 大特性，了解过吗&lt;/p&gt;
&lt;p&gt;1. 事务安全：InnoDB 引擎支持 ACID 事务，保证了事务的原子性、一致性、隔离性和持久性。&lt;/p&gt;
&lt;p&gt;2. 行级锁：InnoDB 引擎支持行级锁，可以实现多用户并发访问，提高系统的性能。&lt;/p&gt;
&lt;p&gt;3. 外键约束：InnoDB 引擎支持外键约束，可以防止数据的一致性和完整性。&lt;/p&gt;
&lt;p&gt;4. 崩溃恢复能力：InnoDB 引擎支持崩溃恢复能力，可以恢复在数据库崩溃时发生的数据损失。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;索引有哪些优缺点？索引有哪几种类型？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建索引有什么原则呢？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建索引的三种方式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;百万级别或以上的数据，你是如何删除的？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;什么是最左前缀原则？什么是最左匹配原则？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;B 树和 B + 树的区别，数据库为什么使用 B + 树而不是 B 树？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;覆盖索引、回表等这些，了解过吗？&lt;/p&gt;
&lt;p&gt;1、 覆盖索引： 查询列要被所建的索引覆盖，不必从数据表中读取，换句话说查询列要被所使用的索引覆盖。&lt;/p&gt;
&lt;p&gt;2、 回表：二级索引无法直接查询所有列的数据，所以通过二级索引查询到聚簇索引后，再查询到想要的数据，这种通过二级索引查询出来的过程，就叫做回表。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;非聚簇索引一定会回表查询吗？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;联合索引是什么？为什么需要注意联合索引中的顺序？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据库隔离级别与锁的关系&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;聊聊 InnoDb 的锁，什么是死锁？怎么解决？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;count (1)、count (*) 与 count (列名) 的区别？&lt;/p&gt;
&lt;p&gt;1、count (*) 包含了所有的列，相当于行数，在统计结果的时候，不会忽略列值为空的情况；&lt;br /&gt;
2、count (1) 在统计结果的时候也不会忽略列值为空的情况（即某个列为空时，仍进行统计）；&lt;br /&gt;
3、count (列名) 在统计的时候会忽略列名为空（null）的情况（即某个列为空时，不统计）；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;列名要是为主键的话，count (列名) 会比 count (1) 快，反之 count (1) 快；&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;什么是存储过程？有哪些优缺点？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SQL 约束有哪几种呢？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;主键约束 (唯一约束 + 非空约束)&lt;/li&gt;
&lt;li&gt;外键约束&lt;/li&gt;
&lt;li&gt;唯一约束 (允许一行数据为空)&lt;/li&gt;
&lt;li&gt;默认值约束&lt;/li&gt;
&lt;li&gt;检查约束&lt;/li&gt;
&lt;li&gt;非空约束&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;char 和 varchar 的区别&lt;/p&gt;
&lt;p&gt;|            | char                                    | varchar                                   |&lt;br /&gt;
| ---------- | --------------------------------------- | ----------------------------------------- |&lt;br /&gt;
| 长度       | 定长，长度固定                          | 不定长，长度可变                          |&lt;br /&gt;
| 填充       | &amp;lt; 定长 ，用 &lt;code&gt;空格&lt;/code&gt; 填充                   | 不填充                                    |&lt;br /&gt;
| 存储       | 长度固定，速度快，空间大&lt;br/&gt;空间换时间 | 长度不固定，速度慢，空间小&lt;br/&gt;时间换空间 |&lt;br /&gt;
| 最大字符量 | 255                                     | 65532                                     |&lt;/p&gt;
&lt;p&gt;总之，结合&lt;strong&gt;性能角度（char 更快）&lt;strong&gt;和&lt;/strong&gt;节省磁盘空间角度（varchar 更小）&lt;/strong&gt;，具体情况还需具体来设计数据库才是妥当的做法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mysql 中 int (20)、char (20)、varchar (20) 的区别&lt;/p&gt;
&lt;p&gt;int (20) 表示字段是 int 类型，显示长度是 20&lt;/p&gt;
&lt;p&gt;char (20) 表示字段是固定长度字符串，长度为 20&lt;/p&gt;
&lt;p&gt;varchar (20) 表示字段是可变长度字符串，长度为 20&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;drop、delete 与 truncate 的区别&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;UNION 与 UNION ALL 的区别？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SQL 的生命周期？&lt;/p&gt;
&lt;p&gt;// 一条 SQL 由客户端发出后，经过连接和验证，发送到服务器，由服务器派发给线程处理&lt;br /&gt;
 1. 应用服务器与数据库服务器建立一个连接（tcp/ip 连接，GLP 协议）&lt;br /&gt;
2. 数据库进程拿到请求 sql&lt;br /&gt;
3. 解析并生成执行计划，执行（解析优化过程）&lt;br /&gt;
4. 读取数据到内存并进行逻辑处理&lt;br /&gt;
 5. 通过步骤一的连接，发送结果到客户端&lt;br /&gt;
 6. 关掉连接，释放资源&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一条 Sql 的执行顺序？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关心过业务系统里面的 sql 耗时吗？统计过慢查询吗？对慢查询都怎么优化过？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主键使用自增 ID 还是 UUID，为什么？mysql 自增主键用完了怎么办？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最好是用&lt;strong&gt;自增主键&lt;/strong&gt;，主要是以下两个原因：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;如果表使用自增主键，那么每次插入新的记录，记录就会顺序添加到当前索引节点的后续位置，当一页写满，就会自动开辟一个新的页。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果使用非自增主键 (如 uuid)，由于每次插入主键的值近似于随机，因此每次新记录都要被插到索引页的随机某个位置，此时 MySQL 为了将新记录插到合适位置而移动数据，甚至目标页面可能已经被回写到磁盘上而从缓存中清掉，此时又要从磁盘上读回来，这增加了很多开销，同时频繁的移动、分页操作造成索引碎片，得到了不够紧凑的索引结构，后续不得不通过 OPTIMIZE TABLE 来重建表并优化填充页面。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;不过，也不是所有的场景下都得使用自增主键，可能场景下，主键必须自己生成，不在乎那些性能的开销。那也没有问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果自增主键用完了，如何解决？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;MySQL 的主键策略：id 自增值达到上限以后，再申请下一个 id 时，仍然是最大值。&lt;/p&gt;
 &lt;img data-src=&#34;/interview/MySQL/ff995972a76484c6d2094a4e110f47db.png&#34; class=&#34;&#34; title=&#34;ff995972a76484c6d2094a4e110f47db.png&#34;&gt;
&lt;p&gt;将 Int 类型改为 BigInt 类型，BigInt 的范围如下：&lt;/p&gt;
 &lt;img data-src=&#34;/interview/MySQL/f950e082bed6fc1679122061fe989682.png&#34; class=&#34;&#34; title=&#34;f950e082bed6fc1679122061fe989682.png&#34;&gt;
&lt;p&gt;bigint 也不满足我的需要怎么办呢？&lt;/p&gt;
&lt;p&gt;可以使用雪花算法生成的 id 做主键，由于其也是大致递增的，对性能也不会产生影响，只需要由 bigint 改成更大范围的 decimal 就行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL 数据库 cpu 飙升的话，要怎么处理呢？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;读写分离常见方案？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL 的复制原理以及流程&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Innodb 的事务实现原理？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;谈谈 MySQL 的 Explain&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Innodb 的事务与日志的实现方式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;你们数据库是否支持 emoji 表情存储，如果不支持，如何操作？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一个 6 亿的表 a，一个 3 亿的表 b，通过外间 tid 关联，你如何最快的查询出满足条件的第 50000 到第 50200 中的这 200 条数据记录。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mysql 一条 SOL 加锁分析&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;回表问题和覆盖索引&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MySQL 索引&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;回表问题和覆盖索引&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;双写一致性&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;undo 、redo、binlog&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hash 索引和 B + 树的区别是什么？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;B + 树可以进行范围查询，Hash 索引不能。&lt;/li&gt;
&lt;li&gt;B + 树支持联合索引的最左侧原则，Hash 索引不支持。B + 树支持 order by 排序，Hash 索引不支持。&lt;/li&gt;
&lt;li&gt;Hash 索引在等值查询上比 B + 树效率更高。&lt;/li&gt;
&lt;li&gt;B + 树使用 like 进行模糊查询的时候，like 后面（比如 % 开头) 的话可以起到优化的作用，Hash 索引根本无法进行模糊查询&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;MySQL/image-20230124130116883.png&#34; alt=&#34;image-20230124130116883&#34; style=&#34;zoom:150%;&#34; /&gt;
&lt;p&gt;Mysql 逻辑架构图主要分三层:&lt;/p&gt;
&lt;p&gt;第一层负责连接处理，授权认证，安全等等&lt;/p&gt;
&lt;p&gt;第二层负责编译并优化 SQL&lt;/p&gt;
&lt;p&gt;第三层是存储引擎。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;img data-src=&#34;MySQL/image-20230124125910848.png&#34; alt=&#34;image-20230124125910848&#34; style=&#34;zoom:150%;&#34; /&gt;
&lt;p&gt;主从复制分了五个步骤进行&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;主库的更新事件 (update、insert、 delete) 被写到 binlog&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从库发起连接，连接到主库。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;此时主库创建一个 binlog dump thread，把 binlog 的内容发送到从库。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;从库启动之后，创建一个 I/O 线程，读取主库传过来的 binlog 内容并写入到 relay log&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;还会创建一个 SQL 线程，从 relay log 里面读取内容，从 Exec_Master_Log_Pos 位置开始执行读取到的更新事件，将更新内容写入到 slave 的 db&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;未完成&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#未完成&#34;&gt;#&lt;/a&gt; 未完成&lt;/h2&gt;
&lt;h1 id=&#34;未完成-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#未完成-2&#34;&gt;#&lt;/a&gt; —————————— 未完成&lt;/h1&gt;

&lt;div id=&#34;gitalk-container&#34;&gt;&lt;/div&gt;
&lt;script src=&#34;https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js&#34;&gt;&lt;/script&gt;&lt;link rel=&#34;stylesheet&#34; href=&#34;https://unpkg.com/gitalk/dist/gitalk.css&#34;&gt;&lt;script src=&#34;https://unpkg.com/gitalk/dist/gitalk.min.js&#34;&gt;&lt;/script&gt;

		&lt;script&gt;
		var gitalkConfig = {&#34;clientID&#34;:&#34;6db178ba46c8af8f6a6f&#34;,&#34;clientSecret&#34;:&#34;90f730e5956024596558df00975cd8eae28cae3d&#34;,&#34;repo&#34;:&#34;bk-comment01&#34;,&#34;owner&#34;:&#34;onlymarryu&#34;,&#34;admin&#34;:[&#34;onlymarryu&#34;],&#34;distractionFreeMode&#34;:false,&#34;language&#34;:&#34;zh-CN&#34;,&#34;proxy&#34;:&#34;https://gitalk-comments.netlify.app/github_access_token&#34;,&#34;perPage&#34;:15};
	    gitalkConfig.id = md5(location.pathname);
		var gitalk = new Gitalk(gitalkConfig);
	    gitalk.render(&#34;gitalk-container&#34;);
	    &lt;/script&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://eth168.top/tools/XShell-tool/</guid>
            <title>XShell</title>
            <link>https://eth168.top/tools/XShell-tool/</link>
            <category term="工具软件安装" scheme="https://eth168.top/categories/%E5%B7%A5%E5%85%B7%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/" />
            <category term="工具软件安装 - Terminal" scheme="https://eth168.top/tags/%E5%B7%A5%E5%85%B7%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85-Terminal/" />
            <pubDate>Mon, 27 Feb 2023 14:12:51 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装&#34;&gt;#&lt;/a&gt; 安装&lt;/h2&gt;
&lt;h2 id=&#34;配色&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配色&#34;&gt;#&lt;/a&gt; 配色&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;所有资源都在网盘和仓库里面&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;zk1&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#zk1&#34;&gt;#&lt;/a&gt; zk1&lt;/h4&gt;
&lt;img data-src=&#34;/tools/XShell-tool/image-20220801173236598.png&#34; class=&#34;&#34;&gt;
&lt;h4 id=&#34;solarized-dark&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#solarized-dark&#34;&gt;#&lt;/a&gt; Solarized Dark&lt;/h4&gt;
&lt;img data-src=&#34;/tools/XShell-tool/image-20220801173040826.png&#34; class=&#34;&#34;&gt;
&lt;h4 id=&#34;solarizeddarkmodify&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#solarizeddarkmodify&#34;&gt;#&lt;/a&gt; SolarizedDarkModify&lt;/h4&gt;
&lt;img data-src=&#34;/tools/XShell-tool/image-20220801173129171.png&#34; class=&#34;&#34;&gt;
&lt;h4 id=&#34;isayme&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#isayme&#34;&gt;#&lt;/a&gt; isayme&lt;/h4&gt;
&lt;img data-src=&#34;/tools/XShell-tool/image-20220801172922893.png&#34; class=&#34;&#34;&gt;
&lt;h4 id=&#34;ubuntu&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ubuntu&#34;&gt;#&lt;/a&gt; ubuntu&lt;/h4&gt;
&lt;img data-src=&#34;/tools/XShell-tool/image-20220801173207482.png&#34; class=&#34;&#34;&gt;

&lt;div id=&#34;gitalk-container&#34;&gt;&lt;/div&gt;
&lt;script src=&#34;https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js&#34;&gt;&lt;/script&gt;&lt;link rel=&#34;stylesheet&#34; href=&#34;https://unpkg.com/gitalk/dist/gitalk.css&#34;&gt;&lt;script src=&#34;https://unpkg.com/gitalk/dist/gitalk.min.js&#34;&gt;&lt;/script&gt;

		&lt;script&gt;
		var gitalkConfig = {&#34;clientID&#34;:&#34;6db178ba46c8af8f6a6f&#34;,&#34;clientSecret&#34;:&#34;90f730e5956024596558df00975cd8eae28cae3d&#34;,&#34;repo&#34;:&#34;bk-comment01&#34;,&#34;owner&#34;:&#34;onlymarryu&#34;,&#34;admin&#34;:[&#34;onlymarryu&#34;],&#34;distractionFreeMode&#34;:false,&#34;language&#34;:&#34;zh-CN&#34;,&#34;proxy&#34;:&#34;https://gitalk-comments.netlify.app/github_access_token&#34;,&#34;perPage&#34;:15};
	    gitalkConfig.id = md5(location.pathname);
		var gitalk = new Gitalk(gitalkConfig);
	    gitalk.render(&#34;gitalk-container&#34;);
	    &lt;/script&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://eth168.top/tools/Zookeeper-tool/</guid>
            <title>Zookeeper</title>
            <link>https://eth168.top/tools/Zookeeper-tool/</link>
            <category term="工具软件安装" scheme="https://eth168.top/categories/%E5%B7%A5%E5%85%B7%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/" />
            <category term="工具软件安装" scheme="https://eth168.top/tags/%E5%B7%A5%E5%85%B7%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/" />
            <pubDate>Mon, 27 Feb 2023 14:12:51 +0800</pubDate>
            <description><![CDATA[ &lt;div class=&#34;hbe hbe-container&#34; id=&#34;hexo-blog-encrypt&#34; data-wpm=&#34;抱歉, 这个密码看着不太对, 请再试试.&#34; data-whm=&#34;抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.&#34;&gt;
  &lt;script id=&#34;hbeData&#34; type=&#34;hbeData&#34; data-hmacdigest=&#34;232261e8e73aeeafd9e33b6bfe8fd5f9c0f7d9c1579c0168fceae6b0f1b4b647&#34;&gt;&lt;/script&gt;
  &lt;div class=&#34;hbe hbe-content&#34;&gt;
    &lt;div class=&#34;hbe hbe-input hbe-input-default&#34;&gt;
      &lt;input class=&#34;hbe hbe-input-field hbe-input-field-default&#34; type=&#34;password&#34; id=&#34;hbePass&#34;&gt;
      &lt;label class=&#34;hbe hbe-input-label hbe-input-label-default&#34; for=&#34;hbePass&#34;&gt;
        &lt;span class=&#34;hbe hbe-input-label-content hbe-input-label-content-default&#34;&gt;这是一篇加密文章，请输入密码，查看文章。&lt;/span&gt;
      &lt;/label&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script data-pjax src=&#34;/lib/hbe.js&#34;&gt;&lt;/script&gt;&lt;link href=&#34;/css/hbe.style.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://eth168.top/tools/Tomcat-tool/</guid>
            <title>Tomcat</title>
            <link>https://eth168.top/tools/Tomcat-tool/</link>
            <category term="工具软件安装" scheme="https://eth168.top/categories/%E5%B7%A5%E5%85%B7%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/" />
            <category term="工具软件安装" scheme="https://eth168.top/tags/%E5%B7%A5%E5%85%B7%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/" />
            <pubDate>Mon, 27 Feb 2023 14:12:51 +0800</pubDate>
            <description><![CDATA[ &lt;div class=&#34;hbe hbe-container&#34; id=&#34;hexo-blog-encrypt&#34; data-wpm=&#34;抱歉, 这个密码看着不太对, 请再试试.&#34; data-whm=&#34;抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.&#34;&gt;
  &lt;script id=&#34;hbeData&#34; type=&#34;hbeData&#34; data-hmacdigest=&#34;e58a6d176c995cf26fd72c72f661e204758584333e5f11cc89169f8b950e939b&#34;&gt;&lt;/script&gt;
  &lt;div class=&#34;hbe hbe-content&#34;&gt;
    &lt;div class=&#34;hbe hbe-input hbe-input-default&#34;&gt;
      &lt;input class=&#34;hbe hbe-input-field hbe-input-field-default&#34; type=&#34;password&#34; id=&#34;hbePass&#34;&gt;
      &lt;label class=&#34;hbe hbe-input-label hbe-input-label-default&#34; for=&#34;hbePass&#34;&gt;
        &lt;span class=&#34;hbe hbe-input-label-content hbe-input-label-content-default&#34;&gt;这是一篇加密文章，请输入密码，查看文章。&lt;/span&gt;
      &lt;/label&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script data-pjax src=&#34;/lib/hbe.js&#34;&gt;&lt;/script&gt;&lt;link href=&#34;/css/hbe.style.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://eth168.top/tools/Solr-tool/</guid>
            <title>Solr</title>
            <link>https://eth168.top/tools/Solr-tool/</link>
            <category term="工具软件安装" scheme="https://eth168.top/categories/%E5%B7%A5%E5%85%B7%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/" />
            <category term="工具软件安装" scheme="https://eth168.top/tags/%E5%B7%A5%E5%85%B7%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/" />
            <pubDate>Mon, 27 Feb 2023 14:12:51 +0800</pubDate>
            <description><![CDATA[ &lt;div class=&#34;hbe hbe-container&#34; id=&#34;hexo-blog-encrypt&#34; data-wpm=&#34;抱歉, 这个密码看着不太对, 请再试试.&#34; data-whm=&#34;抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.&#34;&gt;
  &lt;script id=&#34;hbeData&#34; type=&#34;hbeData&#34; data-hmacdigest=&#34;719ea8caaf11958b0a35a79ca041e6fd266467181df513eda0a3e9f1ffdcd19d&#34;&gt;&lt;/script&gt;
  &lt;div class=&#34;hbe hbe-content&#34;&gt;
    &lt;div class=&#34;hbe hbe-input hbe-input-default&#34;&gt;
      &lt;input class=&#34;hbe hbe-input-field hbe-input-field-default&#34; type=&#34;password&#34; id=&#34;hbePass&#34;&gt;
      &lt;label class=&#34;hbe hbe-input-label hbe-input-label-default&#34; for=&#34;hbePass&#34;&gt;
        &lt;span class=&#34;hbe hbe-input-label-content hbe-input-label-content-default&#34;&gt;这是一篇加密文章，请输入密码，查看文章。&lt;/span&gt;
      &lt;/label&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script data-pjax src=&#34;/lib/hbe.js&#34;&gt;&lt;/script&gt;&lt;link href=&#34;/css/hbe.style.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://eth168.top/tools/redis-tool/</guid>
            <title>redis</title>
            <link>https://eth168.top/tools/redis-tool/</link>
            <category term="工具软件安装" scheme="https://eth168.top/categories/%E5%B7%A5%E5%85%B7%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/" />
            <category term="工具软件安装" scheme="https://eth168.top/tags/%E5%B7%A5%E5%85%B7%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/" />
            <pubDate>Mon, 27 Feb 2023 14:12:51 +0800</pubDate>
            <description><![CDATA[ &lt;div class=&#34;hbe hbe-container&#34; id=&#34;hexo-blog-encrypt&#34; data-wpm=&#34;抱歉, 这个密码看着不太对, 请再试试.&#34; data-whm=&#34;抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.&#34;&gt;
  &lt;script id=&#34;hbeData&#34; type=&#34;hbeData&#34; data-hmacdigest=&#34;8cafc487c8b3d53d6c63e297145ca92d117c7462f9837e3ba203abe05ef54ee8&#34;&gt;&lt;/script&gt;
  &lt;div class=&#34;hbe hbe-content&#34;&gt;
    &lt;div class=&#34;hbe hbe-input hbe-input-default&#34;&gt;
      &lt;input class=&#34;hbe hbe-input-field hbe-input-field-default&#34; type=&#34;password&#34; id=&#34;hbePass&#34;&gt;
      &lt;label class=&#34;hbe hbe-input-label hbe-input-label-default&#34; for=&#34;hbePass&#34;&gt;
        &lt;span class=&#34;hbe hbe-input-label-content hbe-input-label-content-default&#34;&gt;这是一篇加密文章，请输入密码，查看文章。&lt;/span&gt;
      &lt;/label&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script data-pjax src=&#34;/lib/hbe.js&#34;&gt;&lt;/script&gt;&lt;link href=&#34;/css/hbe.style.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt; ]]></description>
        </item>
    </channel>
</rss>
