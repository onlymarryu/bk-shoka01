{
    "version": "https://jsonfeed.org/version/1",
    "title": "记录“美食”每刻 • All posts by \"数据库基础\" tag",
    "description": "记录“美食”每刻",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2022/10/14/MySQL_Create/",
            "url": "http://example.com/2022/10/14/MySQL_Create/",
            "title": "MySQL基础",
            "date_published": "2022-10-14T09:50:50.743Z",
            "content_html": "<h1 id=\"MySQL安装\"><a href=\"#MySQL安装\" class=\"headerlink\" title=\"MySQL安装\"></a>MySQL安装</h1><h2 id=\"1、卸载原来的版本\"><a href=\"#1、卸载原来的版本\" class=\"headerlink\" title=\"1、卸载原来的版本\"></a>1、卸载原来的版本</h2><h3 id=\"1、查看mysql的安装情况\"><a href=\"#1、查看mysql的安装情况\" class=\"headerlink\" title=\"1、查看mysql的安装情况\"></a>1、查看mysql的安装情况</h3><pre><code class=\"sh\">rpm -qa | grep -i mysql\n</code></pre>\n<img data-src=\"/2022/10/14/MySQL_Create/1570605325400.png\" class=\"\" width=\"1570605325400\">\n\n<h3 id=\"2、删除上图安装的软件\"><a href=\"#2、删除上图安装的软件\" class=\"headerlink\" title=\"2、删除上图安装的软件\"></a>2、删除上图安装的软件</h3><pre><code class=\"sh\">rpm -ev --nodeps mysql57-community-release-el5-7.noarch\nrpm -ev --nodeps mysql-community-server-5.7.18-1.el5.x86_64\nrpm -ev --nodeps mysql-community-client-5.7.18-1.el5.x86_64\nrpm -ev --nodeps mysql-community-libs-5.7.18-1.el5.x86_64\nrpm -ev --nodeps mysql-community-common-5.7.18-1.el5.x86_64\nrpm -ev --nodeps mysql-5.7.18-1.el5.x86_64\nrpm -ev --nodeps mysql-community-libs-compat-5.7.18-1.el5.x86_64\n</code></pre>\n<h3 id=\"3、都删除成功之后，查找相关的mysql的文件\"><a href=\"#3、都删除成功之后，查找相关的mysql的文件\" class=\"headerlink\" title=\"3、都删除成功之后，查找相关的mysql的文件\"></a>3、都删除成功之后，查找相关的mysql的文件</h3><pre><code class=\"sh\">find / -name mysql\n</code></pre>\n<img data-src=\"/2022/10/14/MySQL_Create/1570605553095.png\" class=\"\" width=\"1570605553095\">\n\n<h3 id=\"4、删除全部文件\"><a href=\"#4、删除全部文件\" class=\"headerlink\" title=\"4、删除全部文件\"></a>4、删除全部文件</h3><pre><code class=\"sh\">rm -rf /etc/selinux/targeted/active/modules/100/mysql\nrm -rf /root/mysql\nrm -rf /root/mysql/data/mysql\nrm -rf /var/lib/mysql\nrm -rf /var/lib/mysql/mysql\nrm -rf /usr/share/mysql\n</code></pre>\n<h3 id=\"5、再次执行命令\"><a href=\"#5、再次执行命令\" class=\"headerlink\" title=\"5、再次执行命令\"></a>5、再次执行命令</h3><pre><code class=\"shell\">rpm -qa | grep -i mysql\n#如果没有显式则表示卸载完成\n</code></pre>\n<h2 id=\"2、删除mariadb-libs-不可省略\"><a href=\"#2、删除mariadb-libs-不可省略\" class=\"headerlink\" title=\"2、删除mariadb-libs(不可省略)\"></a>2、删除mariadb-libs(不可省略)</h2><pre><code class=\"sh\"># 检查mariadb-libs\nrpm -qa|grep mariadb\n# 卸载mariadb-libs\nyum remove -y mariadb-libs\n</code></pre>\n<h2 id=\"3、安装MySQL\"><a href=\"#3、安装MySQL\" class=\"headerlink\" title=\"3、安装MySQL\"></a>3、安装MySQL</h2><h3 id=\"1，输入\"><a href=\"#1，输入\" class=\"headerlink\" title=\"1，输入\"></a>1，输入</h3><p>wegt <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXYubXlzcWwuY29tL2dldC9teXNxbCVFNyU4OSU4OCVFNiU5QyVBQyVFNSU4RiVCNy1jb21tdW5pdHktcmVsZWFzZS1lbCVFNSVBNCVBNyVFNyU4OSU4OCVFNiU5QyVBQy0lRTUlQjAlOEYlRTclODklODglRTYlOUMlQUMubm9hcmNoLnJwbQ==\">https://dev.mysql.com/get/mysql版本号-community-release-el大版本-小版本.noarch.rpm</span></p>\n<pre><code class=\"sh\">wget https://dev.mysql.com/get/mysql57-community-release-el5-7.noarch.rpm\n</code></pre>\n<h3 id=\"2、安装数据源\"><a href=\"#2、安装数据源\" class=\"headerlink\" title=\"2、安装数据源\"></a>2、安装数据源</h3><pre><code class=\"sh\">yum install -y mysql57-community-release-el5-7.noarch.rpm\n</code></pre>\n<h3 id=\"3、查看mysql源是否安装成功\"><a href=\"#3、查看mysql源是否安装成功\" class=\"headerlink\" title=\"3、查看mysql源是否安装成功\"></a>3、查看mysql源是否安装成功</h3><pre><code class=\"sh\">yum repolist enabled | grep &quot;mysql.*-community.*&quot;\n</code></pre>\n<h3 id=\"4、安装数据库\"><a href=\"#4、安装数据库\" class=\"headerlink\" title=\"4、安装数据库\"></a>4、安装数据库</h3><pre><code class=\"sh\">yum install -y  mysql-community-server\n\n\n\n# 如果过期可以在运行安装程序之前导入密钥\nrpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022\n</code></pre>\n<h3 id=\"5、启动mysql\"><a href=\"#5、启动mysql\" class=\"headerlink\" title=\"5、启动mysql\"></a>5、启动mysql</h3><pre><code class=\"sh\"># centos7\nsystemctl restart mysqld\nsystemctl status mysqld\n\n\n# centos6\nservice mysqld start\nservice mysqld status\n</code></pre>\n<h3 id=\"6、显示mysql的随机密码\"><a href=\"#6、显示mysql的随机密码\" class=\"headerlink\" title=\"6、显示mysql的随机密码\"></a>6、显示mysql的随机密码</h3><pre><code class=\"sh\">grep &#39;temporary password&#39; /var/log/mysqld.log\n</code></pre>\n<img data-src=\"/2022/10/14/MySQL_Create/image-20220827193405451.png\" class=\"\" title=\"image-20220827193405451\">\n\n<h3 id=\"7、登录并修改mysql密码\"><a href=\"#7、登录并修改mysql密码\" class=\"headerlink\" title=\"7、登录并修改mysql密码\"></a>7、登录并修改mysql密码</h3><p>登录：mysql -u root -p     然后输入上面生成的密码</p>\n<p><strong><em>修改自定义密码，设置自己想要的密码</em></strong></p>\n<pre><code class=\"sql\">-- ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;密码&#39;;\n\nALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;root&#39;;\n</code></pre>\n<p><strong><em>失败了的话就修改策略，将策略降低一下就可以了</em></strong></p>\n<p>查看密码策略：</p>\n<pre><code class=\"sql\">SHOW VARIABLES LIKE &#39;%validate_password%&#39;;\n</code></pre>\n<p>修改密码策略</p>\n<pre><code class=\"sql\">-- 修改密码长度：（长度）\nset global validate_password.length=1;\nset global validate_password_length=1;\n-- 修改密码等级：（等级）\nset global validate_password.policy=0;\nset global validate_password_policy=0;\n</code></pre>\n<h2 id=\"4、其他配置\"><a href=\"#4、其他配置\" class=\"headerlink\" title=\"4、其他配置\"></a>4、其他配置</h2><h3 id=\"1-开机自启\"><a href=\"#1-开机自启\" class=\"headerlink\" title=\"1.开机自启\"></a>1.开机自启</h3><pre><code class=\"sh\"># 开机启动\nsystemctl enable mysql\n# 关闭自动启动\nsystemctl disable mysqld\n</code></pre>\n<h3 id=\"2-远程连接\"><a href=\"#2-远程连接\" class=\"headerlink\" title=\"2.远程连接\"></a>2.远程连接</h3><h4 id=\"方法一、创建一个用户-支持远程连接\"><a href=\"#方法一、创建一个用户-支持远程连接\" class=\"headerlink\" title=\"方法一、创建一个用户 支持远程连接\"></a>方法一、创建一个用户 支持远程连接</h4><p>①登录 ：mysql -u root -p</p>\n<p>②创建用户： create user ‘aaa‘@’%’ identified by ‘123456’;</p>\n<p>③授权所有权限给user这个新用户 ：grant all on <em>.</em> to ‘aaa‘@’%’;</p>\n<p>④退出mysql：quit;</p>\n<h4 id=\"方法二、设置root用户支持远程连接\"><a href=\"#方法二、设置root用户支持远程连接\" class=\"headerlink\" title=\"方法二、设置root用户支持远程连接\"></a>方法二、设置root用户支持远程连接</h4><p>①登录：mysql -u root -p （ 注：系统提示输入数据库root用户的密码，输入完成后即进入mysql控制台，这个命令的第一个mysql是执行命令，第二个mysql是系统数据名称，不一样的。）</p>\n<p>②设置权限：</p>\n<p>赋予权限格式： grant 权限 on 数据库对象 to 用户@IP(或者相应正则)</p>\n<pre><code class=\"sql\">-- 新建用户规则或者直接修改root用户的规则 ，2 选一\nuse mysql;\n\n-- 这里表示赋予该用户所有数据库所有表（*.*表示所有表），%表示所有IP地址。\nGRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;123456&#39; WITH GRANT OPTION;\n-- 使root能再任何host访问\nupdate user set host = &#39;%&#39; where user = &#39;root&#39;;      \n\n-- 刷新\nFLUSH PRIVILEGES;\n</code></pre>\n<p>③查看：</p>\n<pre><code class=\"sql\">use mysql;\nSELECT HOST,USER FROM USER;\n</code></pre>\n<img data-src=\"/2022/10/14/MySQL_Create/920952e9041b4af1a8a49eb64e0f4430.jpeg\" class=\"\" title=\"img\">\n\n<p> ④退出mysql：quit;</p>\n<h2 id=\"其他安装方式\"><a href=\"#其他安装方式\" class=\"headerlink\" title=\"其他安装方式\"></a>其他安装方式</h2><h3 id=\"docker\"><a href=\"#docker\" class=\"headerlink\" title=\"docker\"></a>docker</h3><h4 id=\"1、查询镜像\"><a href=\"#1、查询镜像\" class=\"headerlink\" title=\"1、查询镜像\"></a>1、查询镜像</h4><pre><code class=\"shell\">docker search mysql\n</code></pre>\n<h4 id=\"2、拉取镜像\"><a href=\"#2、拉取镜像\" class=\"headerlink\" title=\"2、拉取镜像\"></a>2、拉取镜像</h4><pre><code class=\"shell\">docker pull mysql:5.7\n</code></pre>\n<h4 id=\"3、构建容器\"><a href=\"#3、构建容器\" class=\"headerlink\" title=\"3、构建容器\"></a>3、构建容器</h4><p>先自己创建配置文件基础模板（<strong>要是后期要修改配置文件必须加入 模板中的两个元素，不然容器启动会出错</strong>）</p>\n<pre><code class=\"shell\">mkdir -p /root/mysql/conf\nvim  /root/mysql/conf/my.cnf\n</code></pre>\n<p><strong>模板内容：</strong></p>\n<pre><code class=\"shell\">!includedir /etc/mysql/conf.d/\n!includedir /etc/mysql/mysql.conf.d/\n\n[mysql]\ndefault-character-set=utf8mb4\n[mysqld]\ncharacter_set_server=utf8mb4\ninit_connect=&#39;SET NAMES utf8&#39;\nlower_case_table_names = 1\n</code></pre>\n<p><strong>构建容器</strong></p>\n<pre><code class=\"shell\">docker run \\\n-p 3306:3306 \\\n-v /root/mysql/data:/var/lib/mysql \\\n-v /root/mysql/logs:/logs \\\n-v /root/mysql/conf/my.cnf:/etc/mysql/my.cnf \\\n-e MYSQL_ROOT_PASSWORD=root \\\n--name mysql \\\n--hostname node1 \\\n--restart=always \\\n-d mysql:5.7\n</code></pre>\n<p><strong>注</strong>：出错时将本地映射文件检查一下，要是不需要配置，只需映射直接删掉就可，以后再改配置文件</p>\n<h4 id=\"4、进入容器\"><a href=\"#4、进入容器\" class=\"headerlink\" title=\"4、进入容器\"></a>4、进入容器</h4><pre><code class=\"shell\">docker exec -it mysql /bin/bash\n或者\ndocker exec -it mysql mysql -uroot -p\n</code></pre>\n<h3 id=\"docker-compose\"><a href=\"#docker-compose\" class=\"headerlink\" title=\"docker-compose\"></a>docker-compose</h3><blockquote>\n<p>前提安装了 docker-compose</p>\n</blockquote>\n<h4 id=\"配置-docker-comose-yml-文件\"><a href=\"#配置-docker-comose-yml-文件\" class=\"headerlink\" title=\"配置  docker-comose.yml 文件\"></a>配置  docker-comose.yml 文件</h4><p>5.7：</p>\n<pre><code class=\"yml\">version: &quot;3.0&quot;\nservices:\n  mysql8:\n    image: mysql:5.7.32\n    container_name: my_db57\n    restart: always\n    volumes:\n      - ./db:/var/lib/mysql\n      - ./conf/my.cnf:/etc/my.cnf\n      # 数据库初始化脚本，当Mysql容器首次启动时，会在 /docker-entrypoint-initdb.d目录下扫描 .sh，.sql，.sql.gz类型的文件。如果这些类型的文件存在，将执行它们来初始化一个数据库；\n      - ./init/:/docker-entrypoint-initdb.d/\n    environment:\n      - MYSQL_ROOT_PASSWORD=123456\n      # 指定初始化sql文件的数据库，简单来书就是新建一个数据库\n      - MYSQL_DATABASE=my_db\n      - TZ=Asia/Shanghai\n    ports:\n      - 3311:3306\n</code></pre>\n<p>8.0</p>\n<pre><code class=\"yml\">version: &quot;3.0&quot;\nservices:\n  mysql8:\n    image: mysql:8.0.25\n    container_name: my_db8\n    restart: always\n    volumes:\n      - ./db:/var/lib/mysql\n      - ./conf/my.cnf:/etc/my.cnf\n      # 数据库初始化脚本，当Mysql容器首次启动时，会在 /docker-entrypoint-initdb.d目录下扫描 .sh，.sql，.sql.gz类型的文件。如果这些类型的文件存在，将执行它们来初始化一个数据库；\n      - ./init/:/docker-entrypoint-initdb.d/\n    environment:\n      - MYSQL_ROOT_PASSWORD=123456\n      # 指定初始化sql文件的数据库，简单来书就是新建一个数据库\n      - MYSQL_DATABASE=my_db\n      - TZ=Asia/Shanghai\n    ports:\n      - 3301:3306\n</code></pre>\n<h4 id=\"配置文件-my-cnf\"><a href=\"#配置文件-my-cnf\" class=\"headerlink\" title=\"配置文件 my.cnf\"></a>配置文件 my.cnf</h4><p>5.7：</p>\n<pre><code class=\"shell\">[mysql]\n# 设置mysql客户端默认字符集\ndefault-character-set=utf8mb4\n\n[mysqld]\ndatadir=/var/lib/mysql\nsocket=/var/lib/mysql/mysql.sock\n\nsymbolic-links=0\n\nlog-error=/var/log/mysqld.log\npid-file=/var/run/mysqld/mysqld.pid\n# 服务端使用的字符集默认为8比特编码的latin1字符集\ncharacter-set-server=utf8mb4\n\n# 创建新表时将使用的默认存储引擎\ndefault-storage-engine=INNODB\n</code></pre>\n<p>8.0：</p>\n<pre><code class=\"shell\">[mysql]\n# 设置mysql客户端默认字符集\ndefault-character-set=utf8mb4\n[mysqld]\n# 允许最大连接数\nmax_connections=200\n\n# 服务端使用的字符集默认为8比特编码的latin1字符集\ncharacter-set-server=utf8mb4\n\n# 创建新表时将使用的默认存储引擎\ndefault-storage-engine=INNODB\n</code></pre>\n<h4 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h4><p>1、Can’t create&#x2F;write to file ‘&#x2F;var&#x2F;run&#x2F;mysqld&#x2F;mysqld.pid</p>\n<p>去配置文件中找到 errorlog的地址，查看错误日志</p>\n<img data-src=\"/2022/10/14/MySQL_Create/20190602012200812.png\" class=\"\" title=\"img\">\n\n<p>错误原因为：&#x2F;var&#x2F;run&#x2F;mysqld&#x2F;目录的拥有者为root，mysql不能在其中创建文件</p>\n<p>使用如下命令修改目录使用者</p>\n<pre><code class=\"shell\"># 先查看目录是否存在\nls -ld /var/run/mysqld/\n# 权限\nchown mysql.mysql /var/run/mysqld/\n# 修改后重启mysql服务\n/etc/init.d/mysqld start\n</code></pre>\n",
            "tags": [
                "MySQL",
                "数据库基础",
                "数据库基本知识"
            ]
        }
    ]
}