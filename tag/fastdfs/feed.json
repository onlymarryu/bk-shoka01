{
    "version": "https://jsonfeed.org/version/1",
    "title": "记录“美食”每刻 • All posts by \"fastdfs\" tag",
    "description": "记录“美食”每刻",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2022/10/07/Distribution/FastDFS/",
            "url": "http://example.com/2022/10/07/Distribution/FastDFS/",
            "title": "FastDFS",
            "date_published": "2022-10-06T16:00:00.000Z",
            "content_html": "<h1 id=\"分布式文件存储系统fastdfs\"><a class=\"anchor\" href=\"#分布式文件存储系统fastdfs\">#</a> 分布式文件存储系统 FastDFS</h1>\n<h1 id=\"一-分布式文件存储\"><a class=\"anchor\" href=\"#一-分布式文件存储\">#</a> 一、分布式文件存储</h1>\n<h2 id=\"1分布式文件存储的由来\"><a class=\"anchor\" href=\"#1分布式文件存储的由来\">#</a> 1. 分布式文件存储的由来</h2>\n<p>  在我们的项目中有很多需要存储的内容出现，比如图片，视频，文件等等，在早期的时候用户量不大，产生的文件也不是很多，这时我们可以把文件和服务程序放在一个服务器中。</p>\n<p><img data-src=\"/2022/10/07/Distribution/FastDFS/66d2beee9a4e47c08aa9552530a9c996.png\" class=\"\"></p>\n<p>  后面随着文件越来越多，服务器的资源会被文件资源大量占据，从而影响到服务器的稳定，这时我们可以单独的把文件服务器拆出来。</p>\n<p><img data-src=\"/2022/10/07/Distribution/FastDFS/8097b0f16465452b9f9b460e2149aa0d.png\" class=\"\"></p>\n<p>  拆解出来后，文件服务的使用不会影响到我们的系统服务的稳定，但是当用户量越来越大，存储的文件就会越来越多，这时如果还是单台的文件服务，比如 100T 的文件，这时是存储不下去的，这时就产生了我们将的分布式文件存储，</p>\n<p><img data-src=\"/2022/10/07/Distribution/FastDFS/fff16a09675d40ac926d42be9385d461.png\" class=\"\"></p>\n<p>  也就是我们解决如何将这 100T 的文件分散的存储到各个节点上，然后当我们需要读取文件的时候又能非常快的帮我们把文件找到。这个就是分布式文件系统帮我们解决的问题了。</p>\n<h2 id=\"2常见的分布式存储框架\"><a class=\"anchor\" href=\"#2常见的分布式存储框架\">#</a> 2. 常见的分布式存储框架</h2>\n<p>  接下来我们看看在国内常用的分布式存储的框架选择有哪些</p>\n<table>\n<thead>\n<tr>\n<th>分布式框架</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>FastDFS</td>\n<td>我们介绍的主角，国产</td>\n</tr>\n<tr>\n<td>HDFS</td>\n<td>Hadoop 组件中分布式存储框架</td>\n</tr>\n<tr>\n<td>MinIO</td>\n<td>MinIO 是在 Apache 下的产品，最适合存储非结构化的数据，&lt;br /&gt; 比如照片，视频，日志文件，备份和容器等。</td>\n</tr>\n<tr>\n<td>阿里云对象存储</td>\n<td>当然我们还可以花费一点费用来使用其他厂商提供的对象存储服务</td>\n</tr>\n</tbody>\n</table>\n<p>  好了就介绍这么几个，其他的我们也用不到了。</p>\n<h1 id=\"二-fastdfs介绍\"><a class=\"anchor\" href=\"#二-fastdfs介绍\">#</a> 二、FastDFS 介绍</h1>\n<p>  FastDFS 是余庆国人开发的一个开源的轻量级分布式文件系统，它对文件进行管理，功能包括：文件存储、文件同步、文件访问（文件上传、文件下载）等，解决了大容量存储和负载均衡的问题。特别适合以文件为载体的在线服务，如相册网站、视频网站等等。</p>\n<p>  FastDFS 为互联网量身定制，充分考虑了冗余备份、负载均衡、线性扩容等机制，并注重高可用、高性能等指标，使用 FastDFS 很容易搭建一套高性能的文件服务器集群提供文件上传、下载等服务。</p>\n<p>FastDFS 的特点：</p>\n<ul>\n<li>FastDFS 是一个轻量级的开源分布式文件系统</li>\n<li>FastDFS 主要解决了大容量的文件存储和高并发访问的问题，文件存取时实现了负载均衡</li>\n<li>FastDFS 实现了软件方式的 RAID，可以使用廉价的 IDE 硬盘进行存储</li>\n<li>支持存储服务器在线扩容</li>\n<li>支持相同内容的文件只保存一份，节约磁盘空间</li>\n<li>FastDFS 只能通过 Client API 访问，不支持 POSIX 访问方式</li>\n<li>FastDFS 特别适合大中型网站使用，用来存储资源文件（如：图片、文档、音频、视频等等）</li>\n</ul>\n<p>架构图：</p>\n<p><img data-src=\"/2022/10/07/Distribution/FastDFS/92362218a5024b7c9e9141b754756b79.png\" class=\"\"></p>\n<p>相关术语讲解：</p>\n<table>\n<thead>\n<tr>\n<th>名词</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Tracker Server</td>\n<td>跟踪服务器，主要做调度工作，在访问上起负载均衡的作用。&lt;br /&gt; 记录 storage server 的状态，是连接 Client 和 Storage server 的枢纽</td>\n</tr>\n<tr>\n<td>Storage Server</td>\n<td>存储服务器，文件和 meta data 都保存到存储服务器上</td>\n</tr>\n<tr>\n<td>group</td>\n<td>组，也可称为卷。同组内服务器上的文件是完全相同的</td>\n</tr>\n<tr>\n<td>文件标识</td>\n<td>包括两部分：组名和文件名（包含路径）</td>\n</tr>\n<tr>\n<td>meta-data</td>\n<td>文件相关属性，键值对（Key Value Pair）方式，如：width=1024,heigth=768</td>\n</tr>\n</tbody>\n</table>\n<p>架构解读：</p>\n<ul>\n<li>只有两个角色，tracker server 和 storage server，不需要存储文件索引信息。</li>\n<li>所有服务器都是对等的，不存在 Master-Slave 关系。</li>\n<li>存储服务器采用分组方式，同组内存储服务器上的文件完全相同（RAID 1）。</li>\n<li>不同组的 storage server 之间不会相互通信。</li>\n<li>由 storage server 主动向 tracker server 报告状态信息，tracker server 之间不会相互通信。</li>\n</ul>\n<h1 id=\"三-fastdfs安装\"><a class=\"anchor\" href=\"#三-fastdfs安装\">#</a> 三、FastDFS 安装</h1>\n<p><img data-src=\"/2022/10/07/Distribution/FastDFS/b60ca697c06d4425b7cd228b98dc3d19.png\" class=\"\"></p>\n<p>  FastDFS 的安装我们还是通过 Docker 来安装实现吧，直接在 Linux 上还装还是比较繁琐的，但就学习而言 Docker 安装还是非常高效的。Docker 环境请自行安装哦，不清楚的可以看看我的 Docker 专题的内容。<a href=\"Docker%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99\" title=\"Docker学习资料\">https://blog.csdn.net/qq_38526573/category_9619681.html</a></p>\n<h2 id=\"1拉取镜像文件\"><a class=\"anchor\" href=\"#1拉取镜像文件\">#</a> 1. 拉取镜像文件</h2>\n<p>  首先我们可以通过  <code>docker search fastdfs</code>  来查询下有哪些镜像文件。</p>\n<p><img data-src=\"/2022/10/07/Distribution/FastDFS/5a06a59eb24d4f9e847a4badeef871ac.png\" class=\"\"></p>\n<p>  我们看到搜索到的镜像还是蛮多的，这里我们使用  <code>delron/fastdfs</code>  你也可以尝试使用其他的镜像来安装，你也可以制作自己的镜像来给别人使用哦，只是不同的镜像在使用的时候配置会有一些不一样，有些镜像没有提供 Nginx 的相关配置，使用的时候会繁琐一点。接下来通过  <code>docker pull delron/fastdfs</code>  命令把镜像拉取下来。</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> pull delron/fastdfs</pre></td></tr></table></figure><p><img data-src=\"/2022/10/07/Distribution/FastDFS/5e5b85b3dc9a432abf615b27868fc7bf.png\" class=\"\"></p>\n<h2 id=\"2构建tracker服务\"><a class=\"anchor\" href=\"#2构建tracker服务\">#</a> 2. 构建 Tracker 服务</h2>\n<p>  首先我们需要通过 Docker 命令来创建 Tracker 服务。命令为</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--name</span> tracker <span class=\"token parameter variable\">--network</span><span class=\"token operator\">=</span>host <span class=\"token parameter variable\">-v</span> /mydata/fastdfs/tracker:/var/fdfs delron/fastdfs tracker</pre></td></tr></table></figure><p>  tracker 服务默认的端口为 22122，-v 实现了容器和本地目录的挂载操作。</p>\n<p><img data-src=\"/2022/10/07/Distribution/FastDFS/694d42632bf6410a806df9aa43e836c0.png\" class=\"\"></p>\n<h2 id=\"3构建storage服务\"><a class=\"anchor\" href=\"#3构建storage服务\">#</a> 3. 构建 Storage 服务</h2>\n<p>  接下来创建 Storage 服务，具体的执行命令如下</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--name</span> storage <span class=\"token parameter variable\">--network</span><span class=\"token operator\">=</span>host  <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">TRACKER_SERVER</span><span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.1.195:22122 <span class=\"token parameter variable\">-v</span> /mydata/fastdfs/storage:/var/fdfs <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">GROUP_NAME</span><span class=\"token operator\">=</span>group1 delron/fastdfs storage</pre></td></tr></table></figure><p>  在执行上面命令的时候要注意对应的修改下，其中 TRACKER_SERVER 中的 ip 要修改为你的 Tracker 服务所在的服务 IP 地址。</p>\n<p><img data-src=\"/2022/10/07/Distribution/FastDFS/dc2bdf85d0f24fe18a32efbe4caa2d27.png\" class=\"\"></p>\n<p>  默认情况下在 Storage 服务中是帮我们安装了 Nginx 服务的，相关的端口为</p>\n<table>\n<thead>\n<tr>\n<th>服务</th>\n<th>默认端口</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>tracker</td>\n<td>22122</td>\n</tr>\n<tr>\n<td>storage</td>\n<td>23000</td>\n</tr>\n<tr>\n<td>Nginx</td>\n<td>8888</td>\n</tr>\n</tbody>\n</table>\n<p>  当然如果你发现这些相关的端口被占用了，或者想要对应的修改端口信息也可以的。要修改你可以先进入容器中查看下相关的配置文件信息。</p>\n<p><img data-src=\"/2022/10/07/Distribution/FastDFS/da5cc21445e840baa85580ba420db94d.png\" class=\"\"></p>\n<p>  然后查看 storage.conf 文件</p>\n<p><img data-src=\"/2022/10/07/Distribution/FastDFS/63862499980b408195291de047048566.png\" class=\"\"></p>\n<p>  这个是 storage 监听的 Nginx 的端口 8888，如果要修改那么我们还需要修改 Nginx 中的服务配置，这块的配置在  <code>/usr/local/nginx/conf</code>  目录下</p>\n<p><img data-src=\"/2022/10/07/Distribution/FastDFS/f866c08177be4fd48bfd9a582ec78779.png\" class=\"\"></p>\n<p>  查看下文件</p>\n<p><img data-src=\"/2022/10/07/Distribution/FastDFS/dc7c5888363a400b9308f3ba64cca9ac.png\" class=\"\"></p>\n<p>所以要修改端口号的话，这两个位置都得修改了。当然本文我们就使用默认的端口号来使用了。</p>\n<h2 id=\"4测试图片上传\"><a class=\"anchor\" href=\"#4测试图片上传\">#</a> 4. 测试图片上传</h2>\n<p>  好了，安装我们已经完成了，那么到底是否可以使用呢？我们来测试下。首先在虚拟机的 /mydata/fastdfs/storage 下保存一张图片。</p>\n<p><img data-src=\"/2022/10/07/Distribution/FastDFS/ff2ea2626bb34acd810fbb8d9438129a.png\" class=\"\"></p>\n<p>  然后我们再进入到 storage 容器中。并且进入到  <code>/var/fdfs</code>  目录下，可以看到我们挂载的文件了</p>\n<p><img data-src=\"/2022/10/07/Distribution/FastDFS/cb8a96fb9bb644328880ca70378a7fc2.png\" class=\"\"></p>\n<p>  然后执行如下命令即可完成图片的上传操作</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>/usr/bin/fdfs_upload_file /etc/fdfs/client.conf <span class=\"token number\">1</span>.jpg</pre></td></tr></table></figure><p><img data-src=\"/2022/10/07/Distribution/FastDFS/0fd0e82898bb45178eca4eef9a412745.png\" class=\"\"></p>\n<p>  通过上面的提示我们看到文件上传成功了，而且返回了文件在 storage 中存储的信息。这时我们就可以通过这个信息来拼接访问的地址在浏览器中访问了：<span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguNTYuMTAwOjg4ODgvZ3JvdXAxL00wMC8wMC8wMC93S2c0WkdIY0tMU0FYaWJhQUFlek11VXJsUzgyMzUuanBn\">http://192.168.56.100:8888/group1/M00/00/00/wKg4ZGHcKLSAXibaAAezMuUrlS8235.jpg</span></p>\n<p><img data-src=\"/2022/10/07/Distribution/FastDFS/b34e823e956f410297bfd1218ebc0231.png\" class=\"\"></p>\n<p>  好了到这儿 FastDFS 的服务安装成功了。</p>\n<h1 id=\"四-客户端操作\"><a class=\"anchor\" href=\"#四-客户端操作\">#</a> 四、客户端操作</h1>\n<h2 id=\"1fastdfs-java-client\"><a class=\"anchor\" href=\"#1fastdfs-java-client\">#</a> 1.Fastdfs-java-client</h2>\n<p>  首先我们来看下如何实现 FastDFS 中提供的 JavaAPI 来直接实现对应的文件上传和下载操作。</p>\n<h3 id=\"11-文件上传\"><a class=\"anchor\" href=\"#11-文件上传\">#</a> 1.1 文件上传</h3>\n<p>  先来看下文件上传的流程</p>\n<p><img data-src=\"/2022/10/07/Distribution/FastDFS/c1da19dbbe994f55b20371ba0806d694.png\" class=\"\"></p>\n<p>  上传流程的文字梳理为：</p>\n<ol>\n<li>客户端访问 Tracker</li>\n<li>Tracker 返回 Storage 的 ip 和端口</li>\n<li>客户端直接访问 Storage，把文件内容和元数据发送过去。</li>\n<li>Storage 返回文件存储 id。包含了组名和文件名</li>\n</ol>\n<p>  首先创建一个普通的 maven 项目，然后引入对应的依赖</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>cn.bestwu<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>fastdfs-client-java<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.27<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.commons<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>commons-lang3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>  然后编写 FastDFS 的配置文件，内容如下：注意 ip 修改为你自己对应的 ip 即可</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>connect_timeout = 10</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>network_timeout = 30</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>charset = UTF-8</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>http.tracker_http_port = 8080</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>tracker_server = 192.168.56.100:22122</pre></td></tr></table></figure><p><img data-src=\"/2022/10/07/Distribution/FastDFS/3c54c7b41f2a4ac2b420b65beafd10d2.png\" class=\"\"></p>\n<p>  然后导入对应的工具类，在工具类中完成了 StorageClient 的实例化，并提供了相关的上传和下载的方法。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>bobo<span class=\"token punctuation\">.</span>fastdfs<span class=\"token punctuation\">.</span>config</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>commons<span class=\"token punctuation\">.</span>lang3<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StringUtils</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>csource<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">NameValuePair</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>csource<span class=\"token punctuation\">.</span>fastdfs<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FastDFSClient</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">CONF_FILENAME</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getContextClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getResource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"fdfs_client.conf\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">StorageClient</span> storageClient <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>     * 只加载一次.</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token class-name\">ClientGlobal</span><span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token constant\">CONF_FILENAME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token class-name\">TrackerClient</span> trackerClient <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TrackerClient</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ClientGlobal</span><span class=\"token punctuation\">.</span>g_tracker_group<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token class-name\">TrackerServer</span> trackerServer <span class=\"token operator\">=</span> trackerClient<span class=\"token punctuation\">.</span><span class=\"token function\">getConnection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token class-name\">StorageServer</span> storageServer <span class=\"token operator\">=</span> trackerClient<span class=\"token punctuation\">.</span><span class=\"token function\">getStoreStorage</span><span class=\"token punctuation\">(</span>trackerServer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            storageClient <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StorageClient</span><span class=\"token punctuation\">(</span>trackerServer<span class=\"token punctuation\">,</span> storageServer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>     * @param inputStream</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>     *    上传的文件输入流</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>     * @param fileName</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>     *    上传的文件原始名</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">uploadFile</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InputStream</span> inputStream<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> fileName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token comment\">// 文件的元数据</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token class-name\">NameValuePair</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> meta_list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NameValuePair</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token comment\">// 第一组元数据，文件的原始名称</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            meta_list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NameValuePair</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file name\"</span><span class=\"token punctuation\">,</span> fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token comment\">// 第二组元数据</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            meta_list<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NameValuePair</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file length\"</span><span class=\"token punctuation\">,</span> inputStream<span class=\"token punctuation\">.</span><span class=\"token function\">available</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token comment\">// 准备字节数组</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> file_buff <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>inputStream <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                <span class=\"token comment\">// 查看文件的长度</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                <span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span> inputStream<span class=\"token punctuation\">.</span><span class=\"token function\">available</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                <span class=\"token comment\">// 创建对应长度的字节数组</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                file_buff <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span>len<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                <span class=\"token comment\">// 将输入流中的字节内容，读到字节数组中。</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                inputStream<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>file_buff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token comment\">// 上传文件。参数含义：要上传的文件的内容（使用字节数组传递），上传的文件的类型（扩展名），元数据</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> fileids <span class=\"token operator\">=</span> storageClient<span class=\"token punctuation\">.</span><span class=\"token function\">upload_file</span><span class=\"token punctuation\">(</span>file_buff<span class=\"token punctuation\">,</span> <span class=\"token function\">getFileExt</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> meta_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token keyword\">return</span> fileids<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            ex<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>     * @param file</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>     *            文件</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>     * @param fileName</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>     *            文件名</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>     * @return 返回 Null 则为失败</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">uploadFile</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">File</span> file<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> fileName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token class-name\">FileInputStream</span> fis <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            <span class=\"token class-name\">NameValuePair</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> meta_list <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// new NameValuePair[0];</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            fis <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> file_buff <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fis <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                <span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span> fis<span class=\"token punctuation\">.</span><span class=\"token function\">available</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                file_buff <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span>len<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                fis<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>file_buff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>            <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> fileids <span class=\"token operator\">=</span> storageClient<span class=\"token punctuation\">.</span><span class=\"token function\">upload_file</span><span class=\"token punctuation\">(</span>file_buff<span class=\"token punctuation\">,</span> <span class=\"token function\">getFileExt</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> meta_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>            <span class=\"token keyword\">return</span> fileids<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">finally</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fis <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>                    fis<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>                    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"100\"></td><td><pre>     * 根据组名和远程文件名来删除一个文件</pre></td></tr><tr><td data-num=\"101\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"102\"></td><td><pre>     * @param groupName</pre></td></tr><tr><td data-num=\"103\"></td><td><pre>     *            例如 \"group1\" 如果不指定该值，默认为 group1</pre></td></tr><tr><td data-num=\"104\"></td><td><pre>     * @param remoteFileName</pre></td></tr><tr><td data-num=\"105\"></td><td><pre>     *            例如 \"M00/00/00/wKgxgk5HbLvfP86RAAAAChd9X1Y736.jpg\"</pre></td></tr><tr><td data-num=\"106\"></td><td><pre>     * @return 0 为成功，非 0 为失败，具体为错误代码</pre></td></tr><tr><td data-num=\"107\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">deleteFile</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> groupName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> remoteFileName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>            <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> storageClient<span class=\"token punctuation\">.</span><span class=\"token function\">delete_file</span><span class=\"token punctuation\">(</span>groupName <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"group1\"</span> <span class=\"token operator\">:</span> groupName<span class=\"token punctuation\">,</span> remoteFileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>            <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"118\"></td><td><pre>     * 修改一个已经存在的文件</pre></td></tr><tr><td data-num=\"119\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"120\"></td><td><pre>     * @param oldGroupName</pre></td></tr><tr><td data-num=\"121\"></td><td><pre>     *            旧的组名</pre></td></tr><tr><td data-num=\"122\"></td><td><pre>     * @param oldFileName</pre></td></tr><tr><td data-num=\"123\"></td><td><pre>     *            旧的文件名</pre></td></tr><tr><td data-num=\"124\"></td><td><pre>     * @param file</pre></td></tr><tr><td data-num=\"125\"></td><td><pre>     *            新文件</pre></td></tr><tr><td data-num=\"126\"></td><td><pre>     * @param fileName</pre></td></tr><tr><td data-num=\"127\"></td><td><pre>     *            新文件名</pre></td></tr><tr><td data-num=\"128\"></td><td><pre>     * @return 返回空则为失败</pre></td></tr><tr><td data-num=\"129\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">modifyFile</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> oldGroupName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> oldFileName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">File</span> file<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> fileName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>        <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> fileids <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>            <span class=\"token comment\">// 先上传</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>            fileids <span class=\"token operator\">=</span> <span class=\"token function\">uploadFile</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">,</span> fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fileids <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>            <span class=\"token comment\">// 再删除</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>            <span class=\"token keyword\">int</span> delResult <span class=\"token operator\">=</span> <span class=\"token function\">deleteFile</span><span class=\"token punctuation\">(</span>oldGroupName<span class=\"token punctuation\">,</span> oldFileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>delResult <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>        <span class=\"token keyword\">return</span> fileids<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"150\"></td><td><pre>     * 文件下载</pre></td></tr><tr><td data-num=\"151\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"152\"></td><td><pre>     * @param groupName 卷名</pre></td></tr><tr><td data-num=\"153\"></td><td><pre>     * @param remoteFileName 文件名</pre></td></tr><tr><td data-num=\"154\"></td><td><pre>     * @return 返回一个流</pre></td></tr><tr><td data-num=\"155\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">InputStream</span> <span class=\"token function\">downloadFile</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> groupName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> remoteFileName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>            <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> bytes <span class=\"token operator\">=</span> storageClient<span class=\"token punctuation\">.</span><span class=\"token function\">download_file</span><span class=\"token punctuation\">(</span>groupName<span class=\"token punctuation\">,</span> remoteFileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>            <span class=\"token class-name\">InputStream</span> inputStream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ByteArrayInputStream</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>            <span class=\"token keyword\">return</span> inputStream<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">NameValuePair</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">getMetaDate</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> groupName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> remoteFileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>            <span class=\"token class-name\">NameValuePair</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> nvp <span class=\"token operator\">=</span> storageClient<span class=\"token punctuation\">.</span><span class=\"token function\">get_metadata</span><span class=\"token punctuation\">(</span>groupName<span class=\"token punctuation\">,</span> remoteFileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>            <span class=\"token keyword\">return</span> nvp<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>            ex<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"177\"></td><td><pre>     * 获取文件后缀名（不带点）.</pre></td></tr><tr><td data-num=\"178\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"179\"></td><td><pre>     * @return 如：\"jpg\" or \"\".</pre></td></tr><tr><td data-num=\"180\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getFileExt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> fileName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isBlank</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>fileName<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>            <span class=\"token keyword\">return</span> fileName<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">.</span><span class=\"token function\">lastIndexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 不带最后的点</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre></pre></td></tr><tr><td data-num=\"189\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>  然后我们就可以来测试上传的操作了。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token class-name\">File</span> file <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"D:/2.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token class-name\">InputStream</span> is <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token class-name\">String</span> fileName <span class=\"token operator\">=</span> <span class=\"token constant\">UUID</span><span class=\"token punctuation\">.</span><span class=\"token function\">randomUUID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\".jpg\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> result <span class=\"token operator\">=</span> <span class=\"token class-name\">FastDFSClient</span><span class=\"token punctuation\">.</span><span class=\"token function\">uploadFile</span><span class=\"token punctuation\">(</span>is<span class=\"token punctuation\">,</span> fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"/2022/10/07/Distribution/FastDFS/6d7d9ff0b42e4e1daae06e47dab3793f.png\" class=\"\"></p>\n<p>访问即可：<span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguNTYuMTAwOjg4ODgvZ3JvdXAxL00wMC8wMC8wMC93S2c0WkdIY1VFNkFaQTJVQUFXOGRJWDVwNTAzNzQuanBn\">http://192.168.56.100:8888/group1/M00/00/00/wKg4ZGHcUE6AZA2UAAW8dIX5p50374.jpg</span></p>\n<p>  返回后的字符串的结构说明</p>\n<p><img data-src=\"/2022/10/07/Distribution/FastDFS/5cec7e1344324b8dbd8050715d40b32f.png\" class=\"\"></p>\n<h3 id=\"12-文件下载\"><a class=\"anchor\" href=\"#12-文件下载\">#</a> 1.2 文件下载</h3>\n<p>  文件下载的流程，如下</p>\n<p><img data-src=\"/2022/10/07/Distribution/FastDFS/04cba11544044479996f178ed8e41768.png\" class=\"\"></p>\n<p>  文件下载的流程为：</p>\n<ol>\n<li>client 询问 tracker 需要下载的文件的 storage，参数为文件的标识 (group 加文件名)。</li>\n<li>tracker 根据客户端的参数返回一台可用的 storage。</li>\n<li>client 根据返回的 storage 直接完成对应的文件的下载。</li>\n</ol>\n<p>  有了上面的基础，文件下载就非常简单了，我们只需要根据前面上传的文件的 group 和文件的存储路径就可以通过 StorageClient 中提供的 downloadFile 方法把对应的文件下载下来了，具体的代码如下</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     * 文件下载</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">downloadFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token class-name\">InputStream</span> is <span class=\"token operator\">=</span> <span class=\"token class-name\">FastDFSClient</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                    <span class=\"token punctuation\">.</span><span class=\"token function\">downloadFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"group1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"M00/00/00/wKg4ZGHcUE6AZA2UAAW8dIX5p50374.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token class-name\">OutputStream</span> os <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"D:/12.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>index <span class=\"token operator\">=</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                os<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            os<span class=\"token punctuation\">.</span><span class=\"token function\">flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            os<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            is<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>注意：StorageClient 是线程不安全的。那么我们的解决方案</p>\n<ol>\n<li>对文件的操作的每个方法我们做同步处理</li>\n<li>每次操作文件的时候我们都获取一个新的 StorageClient 对象</li>\n</ol>\n<p>第一种方式效率肯定是最低的，第二种方式每次都要建立新的连接效率同样的会受到影响，这时最好的方式其实是把 StorageClient 交给我们自定义的连接池来管理</p>\n<h2 id=\"2springboot整合\"><a class=\"anchor\" href=\"#2springboot整合\">#</a> 2.SpringBoot 整合</h2>\n<p>  我们在实际工作中基本都是和 SpringBoot 整合在一起来使用的，那么我们就来看看 FastDFS 是如何在 SpringBoot 项目中来使用的。首先创建一个普通的 SpringBoot 项目，然后导入 fastdfs-spring-boot-starter 这个依赖。</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-web<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.luhuiguo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>fastdfs-spring-boot-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>0.2.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>  既然是一个 starter，那么必然会在 spring.factories 文件中提供对应的自动配置类。</p>\n<p><img data-src=\"/2022/10/07/Distribution/FastDFS/807e18ab743d4dcea0128bfc9f967a22.png\" class=\"\"></p>\n<p>  可以看到给我们提供的配置类为 FdfsAutoConfiguration 进入后可以看到帮我们注入了很多的核心对象。</p>\n<p><img data-src=\"/2022/10/07/Distribution/FastDFS/74a13becccb94ff8841c542cf0b9ce98.png\" class=\"\"></p>\n<p>  然后可以看到系统提供的配置信息，前缀为  <code>fdfs</code></p>\n<p><img data-src=\"/2022/10/07/Distribution/FastDFS/ef9e211d1145444c8b8348d2e73a6a76.png\" class=\"\"></p>\n<p>  然后我们就可以在 application.properties 中配置 FastDFS 的配置信息了。</p>\n<p><img data-src=\"/2022/10/07/Distribution/FastDFS/aa2dde964afc4909a7214239a269b65b.png\" class=\"\"></p>\n<p>  配置完成后我们就可以测试文件的上传下载操作了</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootTest</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">FastDfsSpringBootApplicationTests</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">FastFileStorageClient</span> storageClient<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">contextLoads</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">File</span> file <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d:\\\\2.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">StorePath</span> path <span class=\"token operator\">=</span> storageClient<span class=\"token punctuation\">.</span><span class=\"token function\">uploadFile</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">getFullPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>文件操作成功</p>\n<p><img data-src=\"/2022/10/07/Distribution/FastDFS/781603ff01b4486c8775ee45639420f4.png\" class=\"\"></p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"clientID\":\"eda74f740080fa01d0b5\",\"clientSecret\":\"c994dd2162a1dadaefbf078fcab49361438a7aca\",\"repo\":\"comments001\",\"owner\":\"onlymarryu\",\"admin\":[\"onlymarryu\"],\"distractionFreeMode\":false};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>",
            "tags": [
                "分布式",
                "FastDFS"
            ]
        }
    ]
}