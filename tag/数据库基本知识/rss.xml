<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>记录“美食”每刻 • Posts by &#34;数据库基本知识&#34; tag</title>
        <link>http://example.com</link>
        <description>记录“美食”每刻</description>
        <language>zh-CN</language>
        <pubDate>Fri, 14 Oct 2022 17:50:50 +0800</pubDate>
        <lastBuildDate>Fri, 14 Oct 2022 17:50:50 +0800</lastBuildDate>
        <category>博客</category>
        <category>环境搭建</category>
        <category>分布式</category>
        <category>Dubbo</category>
        <category>FastDFS</category>
        <category>MySQL</category>
        <category>数据库基础</category>
        <category>数据库基本知识</category>
        <category>数据库</category>
        <category>框架</category>
        <category>ORM</category>
        <category>RPC</category>
        <category>中间件</category>
        <category>RabbitMQ</category>
        <category>Solr</category>
        <category>快速搜索</category>
        <category>Redis基础</category>
        <category>NoSQL数据库</category>
        <category>Spring</category>
        <category>SpringBoot</category>
        <category>SpringMVC</category>
        <category>SpringSecurity</category>
        <category>JavaSE</category>
        <category>-JavaSE</category>
        <item>
            <guid isPermalink="true">http://example.com/2022/10/14/MySQL_Create/</guid>
            <title>MySQL基础</title>
            <link>http://example.com/2022/10/14/MySQL_Create/</link>
            <category>MySQL</category>
            <category>数据库基础</category>
            <category>数据库基本知识</category>
            <pubDate>Fri, 14 Oct 2022 17:50:50 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;MySQL安装&#34;&gt;&lt;a href=&#34;#MySQL安装&#34; class=&#34;headerlink&#34; title=&#34;MySQL安装&#34;&gt;&lt;/a&gt;MySQL安装&lt;/h1&gt;&lt;h2 id=&#34;1、卸载原来的版本&#34;&gt;&lt;a href=&#34;#1、卸载原来的版本&#34; class=&#34;headerlink&#34; title=&#34;1、卸载原来的版本&#34;&gt;&lt;/a&gt;1、卸载原来的版本&lt;/h2&gt;&lt;h3 id=&#34;1、查看mysql的安装情况&#34;&gt;&lt;a href=&#34;#1、查看mysql的安装情况&#34; class=&#34;headerlink&#34; title=&#34;1、查看mysql的安装情况&#34;&gt;&lt;/a&gt;1、查看mysql的安装情况&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;sh&#34;&gt;rpm -qa | grep -i mysql
&lt;/code&gt;&lt;/pre&gt;
&lt;img data-src=&#34;/2022/10/14/MySQL_Create/1570605325400.png&#34; class=&#34;&#34; width=&#34;1570605325400&#34;&gt;

&lt;h3 id=&#34;2、删除上图安装的软件&#34;&gt;&lt;a href=&#34;#2、删除上图安装的软件&#34; class=&#34;headerlink&#34; title=&#34;2、删除上图安装的软件&#34;&gt;&lt;/a&gt;2、删除上图安装的软件&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;sh&#34;&gt;rpm -ev --nodeps mysql57-community-release-el5-7.noarch
rpm -ev --nodeps mysql-community-server-5.7.18-1.el5.x86_64
rpm -ev --nodeps mysql-community-client-5.7.18-1.el5.x86_64
rpm -ev --nodeps mysql-community-libs-5.7.18-1.el5.x86_64
rpm -ev --nodeps mysql-community-common-5.7.18-1.el5.x86_64
rpm -ev --nodeps mysql-5.7.18-1.el5.x86_64
rpm -ev --nodeps mysql-community-libs-compat-5.7.18-1.el5.x86_64
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;3、都删除成功之后，查找相关的mysql的文件&#34;&gt;&lt;a href=&#34;#3、都删除成功之后，查找相关的mysql的文件&#34; class=&#34;headerlink&#34; title=&#34;3、都删除成功之后，查找相关的mysql的文件&#34;&gt;&lt;/a&gt;3、都删除成功之后，查找相关的mysql的文件&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;sh&#34;&gt;find / -name mysql
&lt;/code&gt;&lt;/pre&gt;
&lt;img data-src=&#34;/2022/10/14/MySQL_Create/1570605553095.png&#34; class=&#34;&#34; width=&#34;1570605553095&#34;&gt;

&lt;h3 id=&#34;4、删除全部文件&#34;&gt;&lt;a href=&#34;#4、删除全部文件&#34; class=&#34;headerlink&#34; title=&#34;4、删除全部文件&#34;&gt;&lt;/a&gt;4、删除全部文件&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;sh&#34;&gt;rm -rf /etc/selinux/targeted/active/modules/100/mysql
rm -rf /root/mysql
rm -rf /root/mysql/data/mysql
rm -rf /var/lib/mysql
rm -rf /var/lib/mysql/mysql
rm -rf /usr/share/mysql
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;5、再次执行命令&#34;&gt;&lt;a href=&#34;#5、再次执行命令&#34; class=&#34;headerlink&#34; title=&#34;5、再次执行命令&#34;&gt;&lt;/a&gt;5、再次执行命令&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;shell&#34;&gt;rpm -qa | grep -i mysql
#如果没有显式则表示卸载完成
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;2、删除mariadb-libs-不可省略&#34;&gt;&lt;a href=&#34;#2、删除mariadb-libs-不可省略&#34; class=&#34;headerlink&#34; title=&#34;2、删除mariadb-libs(不可省略)&#34;&gt;&lt;/a&gt;2、删除mariadb-libs(不可省略)&lt;/h2&gt;&lt;pre&gt;&lt;code class=&#34;sh&#34;&gt;# 检查mariadb-libs
rpm -qa|grep mariadb
# 卸载mariadb-libs
yum remove -y mariadb-libs
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;3、安装MySQL&#34;&gt;&lt;a href=&#34;#3、安装MySQL&#34; class=&#34;headerlink&#34; title=&#34;3、安装MySQL&#34;&gt;&lt;/a&gt;3、安装MySQL&lt;/h2&gt;&lt;h3 id=&#34;1，输入&#34;&gt;&lt;a href=&#34;#1，输入&#34; class=&#34;headerlink&#34; title=&#34;1，输入&#34;&gt;&lt;/a&gt;1，输入&lt;/h3&gt;&lt;p&gt;wegt &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXYubXlzcWwuY29tL2dldC9teXNxbCVFNyU4OSU4OCVFNiU5QyVBQyVFNSU4RiVCNy1jb21tdW5pdHktcmVsZWFzZS1lbCVFNSVBNCVBNyVFNyU4OSU4OCVFNiU5QyVBQy0lRTUlQjAlOEYlRTclODklODglRTYlOUMlQUMubm9hcmNoLnJwbQ==&#34;&gt;https://dev.mysql.com/get/mysql版本号-community-release-el大版本-小版本.noarch.rpm&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;sh&#34;&gt;wget https://dev.mysql.com/get/mysql57-community-release-el5-7.noarch.rpm
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;2、安装数据源&#34;&gt;&lt;a href=&#34;#2、安装数据源&#34; class=&#34;headerlink&#34; title=&#34;2、安装数据源&#34;&gt;&lt;/a&gt;2、安装数据源&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;sh&#34;&gt;yum install -y mysql57-community-release-el5-7.noarch.rpm
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;3、查看mysql源是否安装成功&#34;&gt;&lt;a href=&#34;#3、查看mysql源是否安装成功&#34; class=&#34;headerlink&#34; title=&#34;3、查看mysql源是否安装成功&#34;&gt;&lt;/a&gt;3、查看mysql源是否安装成功&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;sh&#34;&gt;yum repolist enabled | grep &amp;quot;mysql.*-community.*&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;4、安装数据库&#34;&gt;&lt;a href=&#34;#4、安装数据库&#34; class=&#34;headerlink&#34; title=&#34;4、安装数据库&#34;&gt;&lt;/a&gt;4、安装数据库&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;sh&#34;&gt;yum install -y  mysql-community-server



# 如果过期可以在运行安装程序之前导入密钥
rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;5、启动mysql&#34;&gt;&lt;a href=&#34;#5、启动mysql&#34; class=&#34;headerlink&#34; title=&#34;5、启动mysql&#34;&gt;&lt;/a&gt;5、启动mysql&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;sh&#34;&gt;# centos7
systemctl restart mysqld
systemctl status mysqld


# centos6
service mysqld start
service mysqld status
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;6、显示mysql的随机密码&#34;&gt;&lt;a href=&#34;#6、显示mysql的随机密码&#34; class=&#34;headerlink&#34; title=&#34;6、显示mysql的随机密码&#34;&gt;&lt;/a&gt;6、显示mysql的随机密码&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;sh&#34;&gt;grep &amp;#39;temporary password&amp;#39; /var/log/mysqld.log
&lt;/code&gt;&lt;/pre&gt;
&lt;img data-src=&#34;/2022/10/14/MySQL_Create/image-20220827193405451.png&#34; class=&#34;&#34; title=&#34;image-20220827193405451&#34;&gt;

&lt;h3 id=&#34;7、登录并修改mysql密码&#34;&gt;&lt;a href=&#34;#7、登录并修改mysql密码&#34; class=&#34;headerlink&#34; title=&#34;7、登录并修改mysql密码&#34;&gt;&lt;/a&gt;7、登录并修改mysql密码&lt;/h3&gt;&lt;p&gt;登录：mysql -u root -p     然后输入上面生成的密码&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;修改自定义密码，设置自己想要的密码&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;sql&#34;&gt;-- ALTER USER &amp;#39;root&amp;#39;@&amp;#39;localhost&amp;#39; IDENTIFIED BY &amp;#39;密码&amp;#39;;

ALTER USER &amp;#39;root&amp;#39;@&amp;#39;localhost&amp;#39; IDENTIFIED BY &amp;#39;root&amp;#39;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;失败了的话就修改策略，将策略降低一下就可以了&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;查看密码策略：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;sql&#34;&gt;SHOW VARIABLES LIKE &amp;#39;%validate_password%&amp;#39;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;修改密码策略&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;sql&#34;&gt;-- 修改密码长度：（长度）
set global validate_password.length=1;
set global validate_password_length=1;
-- 修改密码等级：（等级）
set global validate_password.policy=0;
set global validate_password_policy=0;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;4、其他配置&#34;&gt;&lt;a href=&#34;#4、其他配置&#34; class=&#34;headerlink&#34; title=&#34;4、其他配置&#34;&gt;&lt;/a&gt;4、其他配置&lt;/h2&gt;&lt;h3 id=&#34;1-开机自启&#34;&gt;&lt;a href=&#34;#1-开机自启&#34; class=&#34;headerlink&#34; title=&#34;1.开机自启&#34;&gt;&lt;/a&gt;1.开机自启&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;sh&#34;&gt;# 开机启动
systemctl enable mysql
# 关闭自动启动
systemctl disable mysqld
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;2-远程连接&#34;&gt;&lt;a href=&#34;#2-远程连接&#34; class=&#34;headerlink&#34; title=&#34;2.远程连接&#34;&gt;&lt;/a&gt;2.远程连接&lt;/h3&gt;&lt;h4 id=&#34;方法一、创建一个用户-支持远程连接&#34;&gt;&lt;a href=&#34;#方法一、创建一个用户-支持远程连接&#34; class=&#34;headerlink&#34; title=&#34;方法一、创建一个用户 支持远程连接&#34;&gt;&lt;/a&gt;方法一、创建一个用户 支持远程连接&lt;/h4&gt;&lt;p&gt;①登录 ：mysql -u root -p&lt;/p&gt;
&lt;p&gt;②创建用户： create user ‘aaa‘@’%’ identified by ‘123456’;&lt;/p&gt;
&lt;p&gt;③授权所有权限给user这个新用户 ：grant all on &lt;em&gt;.&lt;/em&gt; to ‘aaa‘@’%’;&lt;/p&gt;
&lt;p&gt;④退出mysql：quit;&lt;/p&gt;
&lt;h4 id=&#34;方法二、设置root用户支持远程连接&#34;&gt;&lt;a href=&#34;#方法二、设置root用户支持远程连接&#34; class=&#34;headerlink&#34; title=&#34;方法二、设置root用户支持远程连接&#34;&gt;&lt;/a&gt;方法二、设置root用户支持远程连接&lt;/h4&gt;&lt;p&gt;①登录：mysql -u root -p （ 注：系统提示输入数据库root用户的密码，输入完成后即进入mysql控制台，这个命令的第一个mysql是执行命令，第二个mysql是系统数据名称，不一样的。）&lt;/p&gt;
&lt;p&gt;②设置权限：&lt;/p&gt;
&lt;p&gt;赋予权限格式： grant 权限 on 数据库对象 to 用户@IP(或者相应正则)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;sql&#34;&gt;-- 新建用户规则或者直接修改root用户的规则 ，2 选一
use mysql;

-- 这里表示赋予该用户所有数据库所有表（*.*表示所有表），%表示所有IP地址。
GRANT ALL PRIVILEGES ON *.* TO &amp;#39;root&amp;#39;@&amp;#39;%&amp;#39; IDENTIFIED BY &amp;#39;123456&amp;#39; WITH GRANT OPTION;
-- 使root能再任何host访问
update user set host = &amp;#39;%&amp;#39; where user = &amp;#39;root&amp;#39;;      

-- 刷新
FLUSH PRIVILEGES;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;③查看：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;sql&#34;&gt;use mysql;
SELECT HOST,USER FROM USER;
&lt;/code&gt;&lt;/pre&gt;
&lt;img data-src=&#34;/2022/10/14/MySQL_Create/920952e9041b4af1a8a49eb64e0f4430.jpeg&#34; class=&#34;&#34; title=&#34;img&#34;&gt;

&lt;p&gt; ④退出mysql：quit;&lt;/p&gt;
&lt;h2 id=&#34;其他安装方式&#34;&gt;&lt;a href=&#34;#其他安装方式&#34; class=&#34;headerlink&#34; title=&#34;其他安装方式&#34;&gt;&lt;/a&gt;其他安装方式&lt;/h2&gt;&lt;h3 id=&#34;docker&#34;&gt;&lt;a href=&#34;#docker&#34; class=&#34;headerlink&#34; title=&#34;docker&#34;&gt;&lt;/a&gt;docker&lt;/h3&gt;&lt;h4 id=&#34;1、查询镜像&#34;&gt;&lt;a href=&#34;#1、查询镜像&#34; class=&#34;headerlink&#34; title=&#34;1、查询镜像&#34;&gt;&lt;/a&gt;1、查询镜像&lt;/h4&gt;&lt;pre&gt;&lt;code class=&#34;shell&#34;&gt;docker search mysql
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;2、拉取镜像&#34;&gt;&lt;a href=&#34;#2、拉取镜像&#34; class=&#34;headerlink&#34; title=&#34;2、拉取镜像&#34;&gt;&lt;/a&gt;2、拉取镜像&lt;/h4&gt;&lt;pre&gt;&lt;code class=&#34;shell&#34;&gt;docker pull mysql:5.7
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;3、构建容器&#34;&gt;&lt;a href=&#34;#3、构建容器&#34; class=&#34;headerlink&#34; title=&#34;3、构建容器&#34;&gt;&lt;/a&gt;3、构建容器&lt;/h4&gt;&lt;p&gt;先自己创建配置文件基础模板（&lt;strong&gt;要是后期要修改配置文件必须加入 模板中的两个元素，不然容器启动会出错&lt;/strong&gt;）&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;shell&#34;&gt;mkdir -p /root/mysql/conf
vim  /root/mysql/conf/my.cnf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;模板内容：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;shell&#34;&gt;!includedir /etc/mysql/conf.d/
!includedir /etc/mysql/mysql.conf.d/

[mysql]
default-character-set=utf8mb4
[mysqld]
character_set_server=utf8mb4
init_connect=&amp;#39;SET NAMES utf8&amp;#39;
lower_case_table_names = 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;构建容器&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;shell&#34;&gt;docker run \
-p 3306:3306 \
-v /root/mysql/data:/var/lib/mysql \
-v /root/mysql/logs:/logs \
-v /root/mysql/conf/my.cnf:/etc/mysql/my.cnf \
-e MYSQL_ROOT_PASSWORD=root \
--name mysql \
--hostname node1 \
--restart=always \
-d mysql:5.7
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;：出错时将本地映射文件检查一下，要是不需要配置，只需映射直接删掉就可，以后再改配置文件&lt;/p&gt;
&lt;h4 id=&#34;4、进入容器&#34;&gt;&lt;a href=&#34;#4、进入容器&#34; class=&#34;headerlink&#34; title=&#34;4、进入容器&#34;&gt;&lt;/a&gt;4、进入容器&lt;/h4&gt;&lt;pre&gt;&lt;code class=&#34;shell&#34;&gt;docker exec -it mysql /bin/bash
或者
docker exec -it mysql mysql -uroot -p
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;docker-compose&#34;&gt;&lt;a href=&#34;#docker-compose&#34; class=&#34;headerlink&#34; title=&#34;docker-compose&#34;&gt;&lt;/a&gt;docker-compose&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;前提安装了 docker-compose&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;配置-docker-comose-yml-文件&#34;&gt;&lt;a href=&#34;#配置-docker-comose-yml-文件&#34; class=&#34;headerlink&#34; title=&#34;配置  docker-comose.yml 文件&#34;&gt;&lt;/a&gt;配置  docker-comose.yml 文件&lt;/h4&gt;&lt;p&gt;5.7：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;yml&#34;&gt;version: &amp;quot;3.0&amp;quot;
services:
  mysql8:
    image: mysql:5.7.32
    container_name: my_db57
    restart: always
    volumes:
      - ./db:/var/lib/mysql
      - ./conf/my.cnf:/etc/my.cnf
      # 数据库初始化脚本，当Mysql容器首次启动时，会在 /docker-entrypoint-initdb.d目录下扫描 .sh，.sql，.sql.gz类型的文件。如果这些类型的文件存在，将执行它们来初始化一个数据库；
      - ./init/:/docker-entrypoint-initdb.d/
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      # 指定初始化sql文件的数据库，简单来书就是新建一个数据库
      - MYSQL_DATABASE=my_db
      - TZ=Asia/Shanghai
    ports:
      - 3311:3306
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;8.0&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;yml&#34;&gt;version: &amp;quot;3.0&amp;quot;
services:
  mysql8:
    image: mysql:8.0.25
    container_name: my_db8
    restart: always
    volumes:
      - ./db:/var/lib/mysql
      - ./conf/my.cnf:/etc/my.cnf
      # 数据库初始化脚本，当Mysql容器首次启动时，会在 /docker-entrypoint-initdb.d目录下扫描 .sh，.sql，.sql.gz类型的文件。如果这些类型的文件存在，将执行它们来初始化一个数据库；
      - ./init/:/docker-entrypoint-initdb.d/
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      # 指定初始化sql文件的数据库，简单来书就是新建一个数据库
      - MYSQL_DATABASE=my_db
      - TZ=Asia/Shanghai
    ports:
      - 3301:3306
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;配置文件-my-cnf&#34;&gt;&lt;a href=&#34;#配置文件-my-cnf&#34; class=&#34;headerlink&#34; title=&#34;配置文件 my.cnf&#34;&gt;&lt;/a&gt;配置文件 my.cnf&lt;/h4&gt;&lt;p&gt;5.7：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;shell&#34;&gt;[mysql]
# 设置mysql客户端默认字符集
default-character-set=utf8mb4

[mysqld]
datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock

symbolic-links=0

log-error=/var/log/mysqld.log
pid-file=/var/run/mysqld/mysqld.pid
# 服务端使用的字符集默认为8比特编码的latin1字符集
character-set-server=utf8mb4

# 创建新表时将使用的默认存储引擎
default-storage-engine=INNODB
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;8.0：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;shell&#34;&gt;[mysql]
# 设置mysql客户端默认字符集
default-character-set=utf8mb4
[mysqld]
# 允许最大连接数
max_connections=200

# 服务端使用的字符集默认为8比特编码的latin1字符集
character-set-server=utf8mb4

# 创建新表时将使用的默认存储引擎
default-storage-engine=INNODB
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;问题&#34;&gt;&lt;a href=&#34;#问题&#34; class=&#34;headerlink&#34; title=&#34;问题&#34;&gt;&lt;/a&gt;问题&lt;/h4&gt;&lt;p&gt;1、Can’t create&amp;#x2F;write to file ‘&amp;#x2F;var&amp;#x2F;run&amp;#x2F;mysqld&amp;#x2F;mysqld.pid&lt;/p&gt;
&lt;p&gt;去配置文件中找到 errorlog的地址，查看错误日志&lt;/p&gt;
&lt;img data-src=&#34;/2022/10/14/MySQL_Create/20190602012200812.png&#34; class=&#34;&#34; title=&#34;img&#34;&gt;

&lt;p&gt;错误原因为：&amp;#x2F;var&amp;#x2F;run&amp;#x2F;mysqld&amp;#x2F;目录的拥有者为root，mysql不能在其中创建文件&lt;/p&gt;
&lt;p&gt;使用如下命令修改目录使用者&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;shell&#34;&gt;# 先查看目录是否存在
ls -ld /var/run/mysqld/
# 权限
chown mysql.mysql /var/run/mysqld/
# 修改后重启mysql服务
/etc/init.d/mysqld start
&lt;/code&gt;&lt;/pre&gt;
 ]]></description>
        </item>
    </channel>
</rss>
