{
    "version": "https://jsonfeed.org/version/1",
    "title": "雾都博客",
    "description": "记录美食每刻",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2022/10/06/hexo/",
            "url": "http://example.com/2022/10/06/hexo/",
            "title": "hexo",
            "date_published": "2022-10-06T06:50:57.000Z",
            "content_html": "<hr />\n<p>title: hexo<br />\ndate: 2022-10-06 14:53:52<br />\ncategories:<br />\n- 基础使用<br />\n tags:<br />\n- 环境搭建<br />\n - 博客</p>\n<hr />\n<h1 id=\"介绍\"><a class=\"anchor\" href=\"#介绍\">#</a> 介绍</h1>\n<p><code>hexo</code>  是一个基于 nodejs 的静态博客网站生成器，作者是来自台湾的 <code>Tommy Chen</code> ，为许多技术博客的博主所青睐，主要有如下的一些优点：</p>\n<ul>\n<li>\n<p>支持 Markdown 语法，编辑简单，排版优美；</p>\n</li>\n<li>\n<p>能够快速生成静态 html 文件；</p>\n</li>\n<li>\n<p>部署容易，接口简单； 兼容于各大主流操作系统；</p>\n</li>\n<li>\n<p>社区主题、插件很多，遇到问题的时候能查到的参考材料也很多。</p>\n</li>\n</ul>\n<p>Hexo 官方文档：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3Mv\">https://hexo.io/zh-cn/docs/</span></p>\n<p>Gitee Pages：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vaGVscC9hcnRpY2xlcy80MTM2I2FydGljbGUtaGVhZGVyMA==\">https://gitee.com/help/articles/4136#article-header0</span></p>\n<h1 id=\"环境配置\"><a class=\"anchor\" href=\"#环境配置\">#</a> 环境配置</h1>\n<p>搭建 hexo 首先需要有 nodejs 的环境，可以从官网直接下载。</p>\n<p><img data-src=\"/2022/10/06/hexo/2xKvaPTDoyZcFbp.png\" class=\"\" title=\"nodejs\"></p>\n<h1 id=\"生成博客\"><a class=\"anchor\" href=\"#生成博客\">#</a> 生成博客</h1>\n<h2 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h2>\n<p>有了 npm 包管理软件，安装 hexo 就很方便了，只需要一行命令：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token function\">node</span> <span class=\"token comment\"># homebrew 安装 nodejs</span></pre></td></tr></table></figure><p>其中 - g 参数表示全局安装，没有这个参数就只在当前目录下安装，建议全局安装。</p>\n<h2 id=\"初始化\"><a class=\"anchor\" href=\"#初始化\">#</a> 初始化</h2>\n<p>运行命令：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo init</pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>INFO  Cloning hexo-starter https://github.com/hexojs/hexo-starter.git</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>INFO  Install dependencies</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 一些可能的中间信息</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>INFO  Start blogging with Hexo<span class=\"token operator\">!</span></pre></td></tr></table></figure><p>然后进入博客目录：</p>\n<blockquote>\n<p>cd &quot;博客目录&quot;</p>\n</blockquote>\n<p>安装博客需要的其他支持：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token comment\"># 安装的依赖项在 package.json 文件的 dependencies 字段中可以看到</span></pre></td></tr></table></figure><h2 id=\"博客项目目录结构介绍\"><a class=\"anchor\" href=\"#博客项目目录结构介绍\">#</a> 博客项目目录结构介绍</h2>\n<p>查看目录结构：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>tree <span class=\"token parameter variable\">-L</span> <span class=\"token number\">1</span></pre></td></tr></table></figure><p>结果如下：</p>\n<blockquote>\n<p>.<br />\n├── _config.landscape.yml<br />\n├── _config.yml<br />\n├── node_modules<br />\n├── package-lock.json<br />\n├── package.json<br />\n├── scaffolds<br />\n├── source<br />\n└── themes</p>\n</blockquote>\n<p>各部分的含义：</p>\n<ul>\n<li>`_config.yml `\n<ul>\n<li>为全局配置文件，网站的很多信息都在这里配置，比如说网站名称，副标题，描述，作者，语言，主题等等。具体可以参考官方文档：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvY29uZmlndXJhdGlvbi5odG1sJUUzJTgwJTgy\">https://hexo.io/zh-cn/docs/configuration.html。</span></li>\n</ul>\n</li>\n<li><code>_scaffolds</code>\n<ul>\n<li>骨架文件，是生成新页面或者新博客的模版。可以根据需求编辑，当 <code>hexo</code>  生成新博客的时候，会用这里面的模版进行初始化。</li>\n</ul>\n</li>\n<li><code>_source</code>\n<ul>\n<li>这个文件夹下面存放的是网站的 <code>markdown</code>  源文件，里面有一个 <code>_post</code>  文件夹，所有的 <code>.md</code>  博客文件都会存放在这个文件夹下。现在，你应该能看到里面有一个 <code>hello-world.md</code>  文件。_</li>\n</ul>\n</li>\n<li><code>_themes</code>\n<ul>\n<li>网站主题目录， <code>hexo</code>  有非常丰富的主题支持，主题目录会存放在这个目录下面。</li>\n<li>我们后续会以默认主题来演示，更多的主题参见：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3RoZW1lcy8=\">https://hexo.io/themes/</span></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"生成新文章\"><a class=\"anchor\" href=\"#生成新文章\">#</a> 生成新文章</h2>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo new post <span class=\"token string\">\"test\"</span> <span class=\"token comment\"># 会在 source/_posts/ 目录下生成文件 ‘test.md’，打开编辑</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hexo generate        <span class=\"token comment\"># 生成静态 HTML 文件到 /public 文件夹中</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>hexo server          <span class=\"token comment\"># 本地运行 server 服务预览，打开 http://localhost:4000 即可预览你的博客</span></pre></td></tr></table></figure><p><strong>本地预览效果：</strong></p>\n<p><img data-src=\"/2022/10/06/hexo/image-20221006120456734.png\" class=\"\" title=\"image-20221006120456734\"></p>\n<p>这是 hexo 的默认主题，更多的主题可以从官网下载。</p>\n<p>更详细的 hexo 命令可以查看文档：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvY29tbWFuZHM=\">https://hexo.io/zh-cn/docs/commands</span></p>\n<h1 id=\"hexo配置并部署\"><a class=\"anchor\" href=\"#hexo配置并部署\">#</a> Hexo 配置并部署</h1>\n<blockquote>\n<p>提前对要提交的仓库配置 ssh</p>\n</blockquote>\n<h2 id=\"1安装部署工具\"><a class=\"anchor\" href=\"#1安装部署工具\">#</a> 1. 安装部署工具</h2>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-deployer-git <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><h2 id=\"2配置部署信息\"><a class=\"anchor\" href=\"#2配置部署信息\">#</a> 2. 配置部署信息</h2>\n<p>站点配置文件_config.yml</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">repo</span><span class=\"token punctuation\">:</span> &lt;repository url<span class=\"token punctuation\">></span> <span class=\"token comment\"># 输入你的仓库地址</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>branch<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 输入分支</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">token</span><span class=\"token punctuation\">:</span>   <span class=\"token comment\">#token</span></pre></td></tr></table></figure><blockquote>\n<p>deploy:</p>\n<p>type: git</p>\n<p>repo: <span class=\"exturl\" data-url=\"bWFpbHRvOmdpdEBnaXRlZS5jb20=\">git@gitee.com</span>:cysheng/cysheng.git # 输入你的仓库地址</p>\n<p>branch: master # 输入分支</p>\n</blockquote>\n<h2 id=\"3部署\"><a class=\"anchor\" href=\"#3部署\">#</a> 3. 部署</h2>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo clean  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre> hexo g  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre> hexo d</pre></td></tr></table></figure><ul>\n<li>\n<p>hexo clean</p>\n<p>清除缓存文件 (db.json) 和已生成的静态文件 (public)。</p>\n</li>\n<li>\n<p>hexo g</p>\n<p>hexo 解析站点文件夹，生成一个 public 文件夹（只包含浏览器可以解析的 html、css、js），也就是我们需要部署的文件夹。</p>\n</li>\n<li>\n<p>hexo d</p>\n<p>部署，即将我们的 public 文件夹推送到我们配置的仓库</p>\n</li>\n</ul>\n<h2 id=\"4开启gitee-pages服务\"><a class=\"anchor\" href=\"#4开启gitee-pages服务\">#</a> 4. 开启 Gitee Pages 服务</h2>\n<p>找到新创建的仓库 -&gt;【服务】-&gt;【Gitee Pages】  <img data-src=\"/2022/10/06/hexo/image-20221006120734926.png\" class=\"\" title=\"hexo&#x2F;image-20221006120734926\"></p>\n<p>如图，选择部署分支，部署目录</p>\n<ul>\n<li>\n<p>部署分支，与本地 hexo 配置一致</p>\n</li>\n<li>\n<p>部署目录，不填即整个仓库</p>\n</li>\n<li>\n<p>强制使用 https</p>\n<p>一个是进行加密，还有一个是我在用 next 主题时使用 http 访问会有跨域问题导致图标显示不出来</p>\n</li>\n<li>\n<p>点击启动</p>\n</li>\n<li>\n<p>访问给出的网站地址（以我的为例：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jeXNoZW5nLmdpdGVlLmlv\">https://cysheng.gitee.io</span>）</p>\n</li>\n</ul>\n<h1 id=\"hexo-框架常用的指令\"><a class=\"anchor\" href=\"#hexo-框架常用的指令\">#</a> hexo 框架常用的指令：</h1>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">指令</th>\n<th style=\"text-align:left\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>hexo clean &amp;&amp; hexo g</code></td>\n<td style=\"text-align:left\">清除本地项目并重新生成 （重新部署时使用）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>hexo g</code></td>\n<td style=\"text-align:left\">重新生成</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>Hexo s</code></td>\n<td style=\"text-align:left\">开启本地预览</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>Hexo d</code></td>\n<td style=\"text-align:left\">推送到 github</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"功能设置\"><a class=\"anchor\" href=\"#功能设置\">#</a> 功能设置</h1>\n<h2 id=\"标题和分类\"><a class=\"anchor\" href=\"#标题和分类\">#</a> 标题和分类</h2>\n<p>在文章开头我们可以设置 FontMatter，例如</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> jQuery对表单的操作及更多应用 <span class=\"token comment\"># 标题</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token datetime number\">2022-01-07 22:53:43</span> <span class=\"token comment\"># 创建时间</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">categories</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 分类，级别递减</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">-</span> web前端 <span class=\"token comment\"># 一级分类</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">-</span> web前端2 <span class=\"token comment\"># 二级分类</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 标签，没有级别</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">-</span> a1</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">-</span> a2</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr></table></figure><p>​\t为了简化我们的操作，所以我们可以以设置模板，在  <code>/scaffolds</code>  下的  <code>draft.md</code>  、 <code>page.md</code>  、  <code>post.md</code>   我们用来设置模板，例如我们最常使用的 <code>post</code>  目录下的文件，所以我们配置一下 <code>post.md</code></p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> &lt;<span class=\"token tag\">!--swig</span>￼3<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> &lt;<span class=\"token tag\">!--swig</span>￼4<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">comments</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr></table></figure><p><strong>问题</strong></p>\n<p>如果我们在没有找到 tags 、categories 、link 、about 文件时，我们手动创建</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo new page tags</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hexo new page categories </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>hexo new page <span class=\"token function\">link</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>hexo new page about</pre></td></tr></table></figure><p>成功后，提示</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>INFO  Created: ~/Documents/blog/source/xxx/index.md</pre></td></tr></table></figure><p>根据上面的路径，找到 <code>index.md</code>  这个文件，打开后默认内容是这样的：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> 文章分类</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token datetime number\">2022-01-07 22:53:43</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"categories\"</span> <span class=\"token comment\"># 哪个文件就是那个类型</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token key atrule\">layout</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"categories\"</span> <span class=\"token comment\"># 哪个文件就是那个类型</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">---</span></pre></td></tr></table></figure><p>最后清除缓存，重新启动就行了</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo cl <span class=\"token operator\">&amp;&amp;</span> hexo g <span class=\"token operator\">&amp;&amp;</span> hexo s</pre></td></tr></table></figure><h2 id=\"搜索\"><a class=\"anchor\" href=\"#搜索\">#</a> 搜索</h2>\n<h3 id=\"1-注册账号\"><a class=\"anchor\" href=\"#1-注册账号\">#</a> 1、注册账号</h3>\n<p>官网：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWxnb2xpYS5jb20vdXNlcnMvc2lnbl9pbg==\">https://www.algolia.com/users/sign_in</span></p>\n<h3 id=\"2-之后在左侧导航栏中找到search\"><a class=\"anchor\" href=\"#2-之后在左侧导航栏中找到search\">#</a> 2、之后在左侧导航栏中找到 Search</h3>\n<p><img data-src=\"/2022/10/06/hexo/image-20221007104401652.png\" class=\"\" title=\"image-20221007104401652\"></p>\n<h3 id=\"3-创建index\"><a class=\"anchor\" href=\"#3-创建index\">#</a> 3、创建 Index</h3>\n<p><img data-src=\"/2022/10/06/hexo/image-20221007104429043.png\" class=\"\" title=\"image-20221007104429043\"></p>\n<p><img data-src=\"/2022/10/06/hexo/image-20221007104449209.png\" class=\"\" title=\"image-20221007104449209\"></p>\n<p><strong>随便写</strong></p>\n<h3 id=\"4-创建appid\"><a class=\"anchor\" href=\"#4-创建appid\">#</a> 4、创建 APPID</h3>\n<p><img data-src=\"/2022/10/06/hexo/image-20221007105625601.png\" class=\"\" title=\"image-20221007105625601\"></p>\n<p><img data-src=\"/2022/10/06/hexo/image-20221007105704120.png\" class=\"\" title=\"image-20221007105704120\"></p>\n<p>这两个后面有用</p>\n<p><img data-src=\"/2022/10/06/hexo/image-20221007105750168.png\" class=\"\" title=\"image-20221007105750168\"></p>\n<blockquote>\n<p>Indices 是我们上面创建 index</p>\n</blockquote>\n<p><img data-src=\"/2022/10/06/hexo/20210516112405506.png\" class=\"\" title=\"在这里插入图片描述\"></p>\n<h3 id=\"5-到博客根目录下安装hexo-algolia\"><a class=\"anchor\" href=\"#5-到博客根目录下安装hexo-algolia\">#</a> 5、到博客根目录下安装 hexo-algolia</h3>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-algolia <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><h3 id=\"6-前往站点根目录打开_configyml添加以下代码\"><a class=\"anchor\" href=\"#6-前往站点根目录打开_configyml添加以下代码\">#</a> 6、前往站点根目录打开_config.yml 添加以下代码</h3>\n<blockquote>\n<p>** 注意：** 这是对全局的配置，所以是根目录的配置</p>\n</blockquote>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>algolia:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  appId:  <span class=\"token string\">\"***\"</span>  <span class=\"token comment\">#上面的 application ID</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  apiKey:  <span class=\"token string\">\"****\"</span>  <span class=\"token comment\"># 上面的 Search-Only API Key</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  adminApiKey:  <span class=\"token string\">\"***\"</span>  <span class=\"token comment\">#上面的 Admin API Keys</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  chunkSize:  <span class=\"token number\">5000</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  indexName:  <span class=\"token string\">\"test001\"</span> <span class=\"token comment\"># Indices 的 index</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  fields: <span class=\"token comment\"># 要搜索的词条范围</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    - title <span class=\"token comment\">#必须配置</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    - path <span class=\"token comment\">#必须配置</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    - categories <span class=\"token comment\">#推荐配置</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    - content:strip:truncate,0,2000</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    - tags</pre></td></tr></table></figure><p>例如：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">algolia</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">appId</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Z7A3XW4R2I\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">apiKey</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"12db1ad54372045549ef465881c17e743\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">adminApiKey</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"40321c7c207e7f73b63a19aa24c4761b\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">chunkSize</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5000</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">indexName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"my-hexo-blog\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">fields</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">-</span> content<span class=\"token punctuation\">:</span>strip<span class=\"token punctuation\">:</span>truncate<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">500</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">-</span> excerpt<span class=\"token punctuation\">:</span>strip</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">-</span> gallery</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">-</span> permalink</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">-</span> photos</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">-</span> slug</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">-</span> tags</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">-</span> title</pre></td></tr></table></figure><h3 id=\"7-设置hexo_algolia_indexing_key\"><a class=\"anchor\" href=\"#7-设置hexo_algolia_indexing_key\">#</a> 7、设置 HEXO_ALGOLIA_INDEXING_KEY</h3>\n<p>在博客根目录右击 git bash</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># export HEXO_ALGOLIA_INDEXING_KEY=\"你刚才新创建的 APPKEY、appId、adminApiKey\" 一个试一下 </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">HEXO_ALGOLIA_INDEXING_KEY</span><span class=\"token operator\">=</span><span class=\"token string\">\"******\"</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 将我们的信息上川岛 algolia</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>hexo algolia</pre></td></tr></table></figure><h3 id=\"8-修改主题内的_configyml\"><a class=\"anchor\" href=\"#8-修改主题内的_configyml\">#</a> 8、修改主题内的_config.yml</h3>\n<blockquote>\n<p><strong>注意：</strong> 这是是对主题的配置</p>\n</blockquote>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#Algolia Search</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">algolia_search</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">hits</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">per_page</span><span class=\"token punctuation\">:</span> <span class=\"token number\">6</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">input_placeholder</span><span class=\"token punctuation\">:</span> Search for Posts <span class=\"token tag\">!</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">hits_empty</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'我们没有找到任何搜索结果：$&#123;query&#125;'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">hits_stats</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'找到约$&#123;hits&#125;条结果 (用时$&#123;time&#125;ms)'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># local searach</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token key atrule\">local_sreach</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token key atrule\">enable</span> <span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr></table></figure><h3 id=\"9-启动即可\"><a class=\"anchor\" href=\"#9-启动即可\">#</a> 9、启动即可</h3>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo s</pre></td></tr></table></figure><h3 id=\"10-测试\"><a class=\"anchor\" href=\"#10-测试\">#</a> 10、测试</h3>\n<p><img data-src=\"/2022/10/06/hexo/image-20221007123724497.png\" class=\"\" title=\"image-20221007123724497\"></p>\n<p>参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1MTczNDA0L2FydGljbGUvZGV0YWlscy8xMjI4NjEzMjE=\">https://blog.csdn.net/qq_45173404/article/details/122861321</span></p>\n<h2 id=\"目录\"><a class=\"anchor\" href=\"#目录\">#</a> 目录</h2>\n<p><mark>toc 插件是：添加生成文章目录的一个插件</mark></p>\n<p>一、安装 (这里是 hexo 的路径下，也就是博客根目录下)</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-toc <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><p>二、配置博客根目录下的_config.yml 文件：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">toc</span><span class=\"token punctuation\">:</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">maxdepth</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span></pre></td></tr></table></figure><p>在最后的空白处添加</p>\n<p>三、在 markdown 里使用</p>\n<p>在 Markdown 中需要显示文章目录的地方添加</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>-- toc --<span class=\"token operator\">></span></pre></td></tr></table></figure><p>然后就会将他<mark>后面</mark>的内容按照标题级别分层</p>\n<h2 id=\"图片显示\"><a class=\"anchor\" href=\"#图片显示\">#</a> 图片显示</h2>\n<h3 id=\"方法一\"><a class=\"anchor\" href=\"#方法一\">#</a> 方法一：</h3>\n<p><strong>typroa 设置</strong></p>\n<p>打开 typora，选择：偏好设置 - 图像 - 插入图片时，做如下更改：</p>\n<blockquote filename=\"\">\n<p>复制到指定路径</p>\n<p>./$</p>\n</blockquote>\n<p>当插入图片时，会生成一个和文件名相同的文件夹，并将图片存入这个文件夹内。</p>\n<p><strong>Hexo 设置</strong></p>\n<ol>\n<li>安装  <code>hexo-renderer-marked</code></li>\n</ol>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-renderer-marked <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>之后更改 _config.yml 配置</li>\n</ol>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">post_asset_folder</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr></table></figure><p>安装插件 <code>hexo-image-link </code></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-image-link <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><p>此时，在 typora 文件中正常显示的图片，在 hexo 发布后依旧能正常显示。</p>\n<p><strong>NOTE：</strong></p>\n<ol>\n<li>如果想用插件  <code>Hexo-renderer-markdown-it </code> （推荐）代替  <code>Hexo-renderer-marked </code></li>\n</ol>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> uninstall hexo-renderer-marker <span class=\"token parameter variable\">--save</span>  <span class=\"token comment\">#卸载 marked </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-renderer-markdown-it <span class=\"token parameter variable\">--save</span>  <span class=\"token comment\">#安装 markdown-it</span></pre></td></tr></table></figure><ol start=\"2\">\n<li>路径转换的解释</li>\n</ol>\n<p>假设：<br />\n文件名: ./test.md</p>\n<p>图片路径: ./test/image.jpg</p>\n<pre><code>当插入图片 image.jpg 到 test.md 中时，typora 的引用路径为\n &#123;% asset_img image.jpg  %&#125; \n\nHexo 发布后的引用路径为\n![](image.jpg) \n</code></pre>\n<p>因此，typora 的 md 文件引入 hexo 时，应转换路径。即删掉图片路径中的 &quot;test/&quot; 部分；（此时 md 文件已不能正常显示图片，而 hexo server 可正常显示）</p>\n<p>插件 hexo-image-link 帮助实现了这种路径转换。</p>\n<p>安装后，typora 文件中正常显示的图片，在 hexo 发布后依旧能正常显示。</p>\n<h3 id=\"方法2\"><a class=\"anchor\" href=\"#方法2\">#</a> 方法 2：</h3>\n<blockquote>\n<p>同样的思路，相对路径，</p>\n</blockquote>\n<p>下载插件</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> hexo-asset-img <span class=\"token parameter variable\">--save</span></pre></td></tr></table></figure><blockquote>\n<p>文件要求：</p>\n<p>​\t图片必须在 <span class=\"exturl\" data-url=\"aHR0cDovL3h4Lm1k\">xx.md</span> 同一级目录下的同名文件中存储，也就是在 xx 文件夹下，所以 md 文档的图片路径就是\t<mark>![图片注释](xx / 图片名)</mark></p>\n</blockquote>\n<h2 id=\"每篇文章的log设置\"><a class=\"anchor\" href=\"#每篇文章的log设置\">#</a> 每篇文章的 log 设置</h2>\n<pre><code>---\n***\ncover: 图床链接/图片路径\n---\n</code></pre>\n<h1 id=\"主题\"><a class=\"anchor\" href=\"#主题\">#</a> 主题</h1>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hdXJvcmEudHJpZGlhbW9uZC50ZWNoL3poL2d1aWRlL2dldHRpbmctc3RhcnRlZC5odG1sIyVFNCVCRSU5RCVFOCVCNSU5NiVFNyU4RSVBRiVFNSVBMiU4Mw==\">aurora</span>    \t（最推荐）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy8=\">shoka</span>        （好看，但是少东西，好多要自己配）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25leHQtdGhlbWUvaGV4by10aGVtZS1uZXh0\">next</span>           （中等，但是好多人用，配东西好查的一批）</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2plcnJ5YzEyNy9oZXhvLXRoZW1lLWJ1dHRlcmZseQ==\">butterfly  </span>（中等，要自己配一些）</li>\n</ul>\n<blockquote>\n<p>shoka</p>\n</blockquote>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> i  hexo-renderer-multi-markdown-it <span class=\"token parameter variable\">--save</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">npm</span> i  hexo-autoprefixer <span class=\"token parameter variable\">--save</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">npm</span> i  hexo-algoliasearch <span class=\"token parameter variable\">--save</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">npm</span> i  hexo-symbols-count-time <span class=\"token parameter variable\">--save</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">npm</span> i  hexo-feed <span class=\"token parameter variable\">--save</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">npm</span> un hexo-renderer-marked <span class=\"token parameter variable\">--save</span>      <span class=\"token comment\">#删除多余的库</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">git</span> clone https://github.com/amehime/hexo-theme-shoka.git ./themes/shoka</pre></td></tr></table></figure><p>_config.yml</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># markdown 渲染</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">markdown</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">render</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 渲染器设置</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">html</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 过滤 HTML 标签</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">xhtmlOut</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 使用 '/' 来闭合单标签 （比如 &lt;br />）。</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">breaks</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 转换段落里的 '\\n' 到 &lt;br>。</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">linkify</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 将类似 URL 的文本自动转换为链接。</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">typographer</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">quotes</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'“”‘’'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token key atrule\">plugins</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># markdown-it 插件设置</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>toc<span class=\"token punctuation\">-</span>and<span class=\"token punctuation\">-</span>anchor</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 文章目录以及锚点应用的 class 名称，shoka 主题必须设置成这样</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>          <span class=\"token key atrule\">tocClassName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'toc'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>          <span class=\"token key atrule\">anchorClassName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'anchor'</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>multimd<span class=\"token punctuation\">-</span>table</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          <span class=\"token key atrule\">multiline</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>          <span class=\"token key atrule\">rowspan</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>          <span class=\"token key atrule\">headerless</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ./markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>furigana</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>          <span class=\"token key atrule\">fallbackParens</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"()\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ./markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>spoiler</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>          <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"你知道得太多了\"</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\"># 压缩 CSS/hTML</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token key atrule\">minify</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token key atrule\">html</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 排除 hexo-feed 用到的模板文件</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/json.ejs'</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/atom.ejs'</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/rss.ejs'</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token key atrule\">css</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/*.min.css'</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  <span class=\"token key atrule\">js</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token key atrule\">mangle</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      <span class=\"token key atrule\">toplevel</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token key atrule\">compress</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/*.min.js'</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\">#css 文件后缀</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token key atrule\">autoprefixer</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>  <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token string\">'*.min.css'</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token comment\"># 全文搜索</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token key atrule\">algolia</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>  <span class=\"token key atrule\">appId</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your appId</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>  <span class=\"token key atrule\">apiKey</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your apiKey</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>  <span class=\"token key atrule\">adminApiKey</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#Your adminApiKey</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>  <span class=\"token key atrule\">chunkSize</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5000</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>  <span class=\"token key atrule\">indexName</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#\"shoka\"</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>  <span class=\"token key atrule\">fields</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">-</span> title <span class=\"token comment\">#必须配置</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token punctuation\">-</span> path <span class=\"token comment\">#必须配置</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token punctuation\">-</span> categories <span class=\"token comment\">#推荐配置</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token punctuation\">-</span> content<span class=\"token punctuation\">:</span>strip<span class=\"token punctuation\">:</span>truncate<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2000</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token punctuation\">-</span> gallery</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token punctuation\">-</span> photos</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token punctuation\">-</span> tags</pre></td></tr></table></figure><h2 id=\"未完成\"><a class=\"anchor\" href=\"#未完成\">#</a> 未完成</h2>\n<h1 id=\"netlify部署\"><a class=\"anchor\" href=\"#netlify部署\">#</a> Netlify 部署</h1>\n<blockquote>\n<p><strong>前提</strong>：</p>\n<ol>\n<li>在 github 上建立一个仓库，权限无所谓</li>\n<li>要注意一定是编译后的<strong>全部文件上传</strong></li>\n</ol>\n</blockquote>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmV0bGlmeS5jb20v\">Netlify</span> 账号注册</p>\n</li>\n<li>\n<p>添加新的站点</p>\n<p><img data-src=\"/2022/10/06/hexo/image-20221013222215469.png\" class=\"\" title=\"image-20221013222215469\"></p>\n<p><img data-src=\"/2022/10/06/hexo/oSa6BOtIQ8WkZX1.png\" class=\"\" title=\"connect-github\"></p>\n</li>\n<li>\n<p>选取一个仓库，作为我们的资源地址</p>\n<p><img data-src=\"/2022/10/06/hexo/image-20221013222447157.png\" class=\"\" title=\"image-20221013222447157\"></p>\n</li>\n<li>\n<p>一切默认，除了构建命令改成我们之前设置的 <code>npm run netlify</code>  ，当然也可以不设置</p>\n<p>前提要在 <code>package.json</code>  里面添加一个  <code>netlify</code>  命令 ，例如我们的：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    \t<span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"hexo generate\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    \t<span class=\"token property\">\"clean\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"hexo clean\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    \t<span class=\"token property\">\"deploy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"hexo deploy\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    \t<span class=\"token property\">\"server\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"hexo server\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    \t<span class=\"token comment\">// 每次提交会清除内容，然后重新建立项目</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    \t<span class=\"token property\">\"netlify\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npm run clean &amp;&amp; npm run build\"</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p><img data-src=\"/2022/10/06/hexo/p3P2NJaQzuIZnYs.png\" class=\"\" title=\"site-config\"></p>\n</li>\n</ul>\n<blockquote>\n<p>这里 BaseDirectory 为空表示项目目录是仓库目录的根目录。</p>\n</blockquote>\n<ul>\n<li>构建完成后我们就能够看到一个 URL，打开网址就是我们的个人博客了</li>\n</ul>\n<p><img data-src=\"/2022/10/06/hexo/image-20221013223348730.png\" class=\"\" title=\"image-20221013223348730\"></p>\n<ul>\n<li>\n<p>修改地址前缀（<strong>因为后缀不能改</strong>）</p>\n<p>网站设置 —》常规 —》更改站点名，完成后缀是固定的  <code> *.netlify.app</code>  ，要想改变就要买域名，然后配置域名的映射。</p>\n</li>\n<li>\n<p>配置域名映射</p>\n<p><img data-src=\"/2022/10/06/hexo/image-20221013223414819.png\" class=\"\" title=\"image-20221013223414819\"></p>\n<ul>\n<li>配置域名的前提自然是要购买域名了，从任意域名服务商处购买一个域名。</li>\n</ul>\n<p><img data-src=\"/2022/10/06/hexo/DFHYzywifpJTxqj.png\" class=\"\" title=\"domian-purchase\"></p>\n<ul>\n<li>然后设置域名解析，类型为 CNAME（DNS 知识点参见计算机网络相关教程），内容为 xxxxx.netlify.app，其中 xxxxx 为你自己设置的个性二级域名。</li>\n</ul>\n<p><img data-src=\"/2022/10/06/hexo/5OVcw9ypvRKQePJ.png\" class=\"\" title=\"domain-resolve\"></p>\n<ul>\n<li>\n<p>设置完毕之后需要等待一段时间，因为 DNS 服务器需要一段时间来进行同步。</p>\n<p>然后，我们还需要回到 netlify 中配置一下自己的用户域名，这样的话可以在国外获得 netlify 本身的 CDN 支持。</p>\n<ul>\n<li>\n<p>在 netlify 设置用户域名。</p>\n<p><img data-src=\"/2022/10/06/hexo/MDjxbIcWBEoLURA.png\" class=\"\" title=\"set-custom-domain\"></p>\n<ul>\n<li>\n<p>进行相关的配置，由于我们的域名本身已经配置了解析，这里会显示出来，不用再额外添加记录，只需要一路默认即可。</p>\n<p><img data-src=\"/2022/10/06/hexo/cqwL9xF8Eov6yVa.png\" class=\"\" title=\"add-record\"></p>\n<p><img data-src=\"/2022/10/06/hexo/RTLcjynQYXbW9vI.png\" class=\"\" title=\"activate-dns\"></p>\n</li>\n<li>\n<p>设置一下 netlify 本身的对于国外 CDN 的支持。</p>\n<p><img data-src=\"/2022/10/06/hexo/8v3ROjQc2WY9q7T.png\" class=\"\" title=\"netlify-cdn\"></p>\n<p>之后，我们就可以通过自己配置的域名访问自己的个人博客。</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>这里 <code>https</code>  访问需要在 <code>netlify</code>  中配置，否则应该只能 <code>http</code>  访问。<br />\n<a href=\"https://s2.loli.net/2022/09/05/f3q8hPbG5vsImeY.png\"><img data-src=\"/2022/10/06/hexo/f3q8hPbG5vsImeY.png\" class=\"\" title=\"https-config\"></a><br />\n 需要注意一下的是，此刻的 https 配置过程中的 dns 验证已经可以通过，但是证书检查会失败，等到后面 clouldflare 加速配置完成之后，这个问题 就可以解决了。所以暂时应该只能 http 访问。</p>\n</blockquote>\n<p><strong>但是，此刻我们的博客访问依然需要科学上网，因为我们还没有国内的 CDN 的支持，下面，我们来解决这个问题。</strong></p>\n</li>\n</ul>\n<h1 id=\"clouldflare加速\"><a class=\"anchor\" href=\"#clouldflare加速\">#</a> ClouldFlare 加速</h1>\n<h2 id=\"介绍-2\"><a class=\"anchor\" href=\"#介绍-2\">#</a> 介绍</h2>\n<p>Netlify 虽然已经提供了 CDN 加速，但在使用过程中发现国内访问还是比较慢，Cloudflare 相对于国内的七牛云、阿里云等云服务商的 CDN 速度会慢一些，但是它有免费版本，而且最重要的是域名不用备案。</p>\n<h2 id=\"加速步骤\"><a class=\"anchor\" href=\"#加速步骤\">#</a> 加速步骤</h2>\n<ol>\n<li>\n<p>注册<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY2xvdWRmbGFyZS5jb20vemgtY24v\"> Clouldflare</span> 并登陆</p>\n</li>\n<li>\n<p>添加站点</p>\n<ul>\n<li><a href=\"https://s2.loli.net/2022/09/05/rqNObP5dzE6GY83.png\"><img data-src=\"/2022/10/06/hexo/rqNObP5dzE6GY83.png\" class=\"\" title=\"add-site\"></a></li>\n<li><a href=\"https://s2.loli.net/2022/09/05/Dk3Y4BrltQeCOHI.png\"><img data-src=\"/2022/10/06/hexo/Dk3Y4BrltQeCOHI.png\" class=\"\" title=\"config-site\"></a></li>\n</ul>\n</li>\n<li>\n<p>选择免费套餐</p>\n<ul>\n<li><a href=\"https://s2.loli.net/2022/09/05/SrhEAvmGZeqn8Co.png\"><img data-src=\"/2022/10/06/hexo/SrhEAvmGZeqn8Co.png\" class=\"\" title=\"choose-project\"></a></li>\n</ul>\n</li>\n<li>\n<p>添加 DNS 记录</p>\n<ul>\n<li>一般情况下 Cloudflare 会检测出来几条 DNS 记录，类型大多数是 A，或者 AAAA，由于我们是转发，所以应该是 CNAME 类型才对。有必要的话可能得手动配置一下。</li>\n<li>\n<ul>\n<li><a href=\"https://s2.loli.net/2022/09/05/fSsAGV5JCeZuF1w.png\"><br />\n<img data-src=\"/2022/10/06/hexo/fSsAGV5JCeZuF1w.png\" class=\"\" title=\"update-record\"></a></li>\n</ul>\n</li>\n<li>更改名称服务器\n<ul>\n<li>这个步骤 Cloudflare 会提供一个在线的教程，主要步骤是在你的域名服务商那里修改 dns 解析服务器为 cloudflare 提供的地址，修改完成后点击完成。</li>\n<li><a href=\"https://s2.loli.net/2022/09/05/vd2WxXGbJHmgAey.png\"><img data-src=\"/2022/10/06/hexo/vd2WxXGbJHmgAey.png\" class=\"\" title=\"modify-server\"></a></li>\n<li>以阿里云为例，设置的步骤如下:\n<ol>\n<li>进入域名的配置界面\n<ul>\n<li><a href=\"https://s2.loli.net/2022/09/05/ZfLiNUejRsCyhG3.png\"><img data-src=\"/2022/10/06/hexo/ZfLiNUejRsCyhG3.png\" class=\"\" title=\"dns-manage\"></a></li>\n</ul>\n</li>\n<li>将域名服务器从阿里云的默认服务器改成 clouldflare 的服务器\n<ul>\n<li><a href=\"https://s2.loli.net/2022/09/05/juxWl7i9QaeLTGK.png\"><img data-src=\"/2022/10/06/hexo/juxWl7i9QaeLTGK.png\" class=\"\" title=\"change-server\"></a></li>\n</ul>\n</li>\n</ol>\n</li>\n<li>配置完成后，clouldflare 会有邮件通知 (一般不会等太久)<br />\n<a href=\"https://s2.loli.net/2022/09/05/JbBvp18Trne37kC.png\"><img data-src=\"/2022/10/06/hexo/JbBvp18Trne37kC.png\" class=\"\" title=\"mail-notice\"></a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"配置https\"><a class=\"anchor\" href=\"#配置https\">#</a> 配置 https</h2>\n<p>在 clouldflare 配置完成之后，我们可以回到 netlify 去配置一下 https 访问。</p>\n<ol>\n<li>先确认一下 dns 解析</li>\n<li>:\n<ul>\n<li><a href=\"https://s2.loli.net/2022/09/05/r6iHKWLktnRap1j.png\"><img data-src=\"/2022/10/06/hexo/r6iHKWLktnRap1j.png\" class=\"\" title=\"verify-dns\"></a></li>\n</ul>\n</li>\n<li>然后自动安装证书:\n<ul>\n<li><a href=\"https://s2.loli.net/2022/09/05/KvDupBFh8b9CScN.png\"><img data-src=\"/2022/10/06/hexo/KvDupBFh8b9CScN.png\" class=\"\" title=\"certify\"></a></li>\n</ul>\n</li>\n<li>最后看到如下的界面，就说明 https 配置完成了:\n<ul>\n<li><a href=\"https://s2.loli.net/2022/09/05/f3q8hPbG5vsImeY.png\"><img data-src=\"/2022/10/06/hexo/f3q8hPbG5vsImeY.png\" class=\"\" title=\"https-config\"></a></li>\n</ul>\n</li>\n</ol>\n<h1 id=\"测试站点\"><a class=\"anchor\" href=\"#测试站点\">#</a> 测试站点</h1>\n<p>等待一段时间之后，我们可以试着用自己的浏览器去访问自己配置的域名地址，如果在不科学上网的情况下能够正常看到如下的默认页面，则我们的个人博客就配置成功了。</p>\n<p><a href=\"https://s2.loli.net/2022/09/05/HESMpeXbUFT3rsR.png\"><img data-src=\"/2022/10/06/hexo/HESMpeXbUFT3rsR.png\" class=\"\" title=\"default-page\"></a></p>\n<p>本机能够正常访问之后，我们可以用<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYm9jZS5jb20v\">拨测</span>来检测一下域名解析与访问的速度。</p>\n<p><a href=\"https://s2.loli.net/2022/09/05/7C496Ruof1rBknM.png\"><img data-src=\"/2022/10/06/hexo/7C496Ruof1rBknM.png\" class=\"\" title=\"speed\"></a></p>\n<p>到此为止，我们的个人博客就彻底搭建完成啦。后续我们只需要修改博客的配置文件和博客本身的 markdown 源文件，然后 push 到 github 上，netlify 会自动帮我们运行当初配置的建站脚本，然后将生成在 public 文件夹中的静态网页部署出去。</p>\n<p>关于 hexo 博客的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3Mvd3JpdGluZw==\">写作方法</span>与各种好看的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3RoZW1lcy8=\">主题的配置</span>可以查看官方的文档，多尝试多摸索，配置自己的个性页面吧。</p>\n</li>\n</ol>\n<h1 id=\"上传时遇到的问题\"><a class=\"anchor\" href=\"#上传时遇到的问题\">#</a> 上传时遇到的问题</h1>\n<h2 id=\"文件过大\"><a class=\"anchor\" href=\"#文件过大\">#</a> 文件过大</h2>\n<p>下载一个 git-lfs 插件</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtbGZzLmdpdGh1Yi5jb20v\">https://git-lfs.github.com/</span></p>\n<p>安装路径一定要注意：你的本地 Git 目录下的 bin，以我为例：</p>\n<p>D:_Porgram_IT\\Git\\bin\\Git LFS</p>\n<p><img data-src=\"/2022/10/06/hexo/image-20221014122758398.png\" class=\"\" title=\"image-20221014122758398\"></p>\n<p>完事之后我们在要上传大文件的本地仓库位置时，先做一下插件的初始化</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> init <span class=\"token comment\">#初始化仓库</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> lfs <span class=\"token function\">install</span> <span class=\"token comment\"># 初始化插件</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">git</span> lfs track * <span class=\"token comment\">#监视整个文件，其他写法自己查</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">git</span> <span class=\"token function\">add</span> .gitattributes</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">git</span> commit <span class=\"token parameter variable\">-m</span> <span class=\"token string\">\"第一次提交 .gitattributes\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">git</span> remote <span class=\"token parameter variable\">-v</span> <span class=\"token comment\"># 查看是否创建了连接</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin git@github.com:onlymarryu/bk3-net.git</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">git</span> push origin master <span class=\"token comment\">#地址和分支自己选</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 上面的操作一定是只上传 .gitattributes，而且每个仓库仅一次即可</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 将你的大文件上传到你的本地仓库</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">git</span> <span class=\"token function\">add</span> * <span class=\"token comment\">#全部文件</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">git</span> commit <span class=\"token parameter variable\">-m</span> <span class=\"token string\">\"信息\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">git</span> push origin master</pre></td></tr></table></figure>",
            "tags": [
                "博客",
                "框架"
            ]
        }
    ]
}