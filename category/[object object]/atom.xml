<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>记录“美食”每刻 • Posts by &#34;[object object]&#34; category</title>
    <link href="http://example.com" />
    <updated>2022-10-15T04:52:38.136Z</updated>
    <category term="分布式" />
    <category term="Dubbo" />
    <category term="FastDFS" />
    <category term="RPC" />
    <category term="中间件" />
    <category term="RabbitMQ" />
    <category term="Solr" />
    <category term="快速搜索" />
    <category term="JavaSE" />
    <category term="-JavaSE" />
    <category term="框架" />
    <category term="ORM" />
    <category term="博客" />
    <category term="环境搭建" />
    <category term="Spring" />
    <category term="SpringBoot" />
    <category term="SpringMVC" />
    <category term="SpringSecurity" />
    <category term="Redis基础" />
    <category term="NoSQL数据库" />
    <entry>
        <id>http://example.com/2022/10/15/tools/IDEA-tool/</id>
        <title>IDEA-tool</title>
        <link rel="alternate" href="http://example.com/2022/10/15/tools/IDEA-tool/"/>
        <content type="html">&lt;h2 id=&#34;常用插件&#34;&gt;&lt;a href=&#34;#常用插件&#34; class=&#34;headerlink&#34; title=&#34;常用插件&#34;&gt;&lt;/a&gt;常用插件&lt;/h2&gt;&lt;h4 id=&#34;皮肤&#34;&gt;&lt;a href=&#34;#皮肤&#34; class=&#34;headerlink&#34; title=&#34;皮肤&#34;&gt;&lt;/a&gt;皮肤&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;所有Jetbrains全家桶都适用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;Cyan-Light-Theme&#34;&gt;&lt;a href=&#34;#Cyan-Light-Theme&#34; class=&#34;headerlink&#34; title=&#34;Cyan Light Theme&#34;&gt;&lt;/a&gt;Cyan Light Theme&lt;/h5&gt;&lt;img data-src=&#34;/2022/10/15/tools/IDEA-tool/image-20220721202846958-1665745616515.png&#34; class=&#34;&#34;&gt;


&lt;h5 id=&#34;Vuesion-Theme&#34;&gt;&lt;a href=&#34;#Vuesion-Theme&#34; class=&#34;headerlink&#34; title=&#34;Vuesion Theme&#34;&gt;&lt;/a&gt;Vuesion Theme&lt;/h5&gt;&lt;img data-src=&#34;/2022/10/15/tools/IDEA-tool/image-20220721203729737-1665745616515.png&#34; class=&#34;&#34;&gt;


&lt;h5 id=&#34;One-Dark-Theme&#34;&gt;&lt;a href=&#34;#One-Dark-Theme&#34; class=&#34;headerlink&#34; title=&#34;One Dark Theme&#34;&gt;&lt;/a&gt;One Dark Theme&lt;/h5&gt;&lt;img data-src=&#34;/2022/10/15/tools/IDEA-tool/img-1665745616515.png&#34; class=&#34;&#34;&gt;


&lt;h4 id=&#34;Atom-Material-ICons&#34;&gt;&lt;a href=&#34;#Atom-Material-ICons&#34; class=&#34;headerlink&#34; title=&#34;Atom Material ICons&#34;&gt;&lt;/a&gt;Atom Material ICons&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;文件夹图标修改&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/2022/10/15/tools/IDEA-tool/image-20220721202830248-1665745616515.png&#34; class=&#34;&#34;&gt;




&lt;h4 id=&#34;Maven-Helper&#34;&gt;&lt;a href=&#34;#Maven-Helper&#34; class=&#34;headerlink&#34; title=&#34;Maven Helper ******&#34;&gt;&lt;/a&gt;Maven Helper ******&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;查看Maven依赖，如果存在依赖冲突会直接爆红，很方便。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/2022/10/15/tools/IDEA-tool/image-20220721203551163-1665745616515.png&#34; class=&#34;&#34;&gt;


&lt;h4 id=&#34;MybatisX&#34;&gt;&lt;a href=&#34;#MybatisX&#34; class=&#34;headerlink&#34; title=&#34;MybatisX&#34;&gt;&lt;/a&gt;MybatisX&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;这个不用多说懂的都懂&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;Lombok&#34;&gt;&lt;a href=&#34;#Lombok&#34; class=&#34;headerlink&#34; title=&#34;Lombok&#34;&gt;&lt;/a&gt;Lombok&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;这个不用多说懂的都懂&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;JRebel-and-XRebel&#34;&gt;&lt;a href=&#34;#JRebel-and-XRebel&#34; class=&#34;headerlink&#34; title=&#34;JRebel and XRebel&#34;&gt;&lt;/a&gt;JRebel and XRebel&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;热部署工具&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;RestfulToolkits&#34;&gt;&lt;a href=&#34;#RestfulToolkits&#34; class=&#34;headerlink&#34; title=&#34;RestfulToolkits&#34;&gt;&lt;/a&gt;RestfulToolkits&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;可以直接根据URL查看本地的对应Controller，也可以当做Postman用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img data-src=&#34;/2022/10/15/tools/IDEA-tool/image-20220721203331392-1665745616515.png&#34; class=&#34;&#34;&gt;


&lt;h4 id=&#34;GsonFormat&#34;&gt;&lt;a href=&#34;#GsonFormat&#34; class=&#34;headerlink&#34; title=&#34;GsonFormat&#34;&gt;&lt;/a&gt;GsonFormat&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;可以帮助我们快速的将JSON对象转换为Bean&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;Rainbow-Brakets&#34;&gt;&lt;a href=&#34;#Rainbow-Brakets&#34; class=&#34;headerlink&#34; title=&#34;Rainbow Brakets&#34;&gt;&lt;/a&gt;Rainbow Brakets&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;彩虹括号&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;arthas-idea&#34;&gt;&lt;a href=&#34;#arthas-idea&#34; class=&#34;headerlink&#34; title=&#34;arthas idea&#34;&gt;&lt;/a&gt;arthas idea&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;Arthas阿里开源的一款强大的JAVA在线诊断工具&lt;/p&gt;
&lt;p&gt;缺点：需要输入一段很长的命令，如果有遗忘的话就去查看文档&lt;br&gt;这款插件就直接解决了这些问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;VisualGC&#34;&gt;&lt;a href=&#34;#VisualGC&#34; class=&#34;headerlink&#34; title=&#34;VisualGC&#34;&gt;&lt;/a&gt;VisualGC&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;诊断JVM堆栈工具&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;Zoolytic&#34;&gt;&lt;a href=&#34;#Zoolytic&#34; class=&#34;headerlink&#34; title=&#34;Zoolytic&#34;&gt;&lt;/a&gt;Zoolytic&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;一款Zookeeper结点查看分析插件。其实第三方也有一些工具。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;SequenceDiagram&#34;&gt;&lt;a href=&#34;#SequenceDiagram&#34; class=&#34;headerlink&#34; title=&#34;SequenceDiagram&#34;&gt;&lt;/a&gt;SequenceDiagram&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;作用：快速查看某个方法的时序图，作用就是在我们查看项目源码时，查看方法的流程&lt;/p&gt;
&lt;p&gt;注：只能查看我们自己写的源码，不能查看JDK的源码运行流程&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;具体步骤&#34;&gt;&lt;a href=&#34;#具体步骤&#34; class=&#34;headerlink&#34; title=&#34;具体步骤&#34;&gt;&lt;/a&gt;具体步骤&lt;/h5&gt;&lt;p&gt;1、点击&lt;strong&gt;方法名&lt;/strong&gt; ，然后右键点击 &lt;code&gt;SequenceDiagram&lt;/code&gt;&lt;/p&gt;
&lt;img data-src=&#34;/2022/10/15/tools/IDEA-tool/image-20220727211446055-1665745616515.png&#34; class=&#34;&#34;&gt;


&lt;p&gt;2、配置我们的生成策略&lt;/p&gt;
&lt;img data-src=&#34;/2022/10/15/tools/IDEA-tool/image-20220727212313180-1665745616515.png&#34; class=&#34;&#34;&gt;


&lt;img data-src=&#34;/2022/10/15/tools/IDEA-tool/image-20220727211659767-1665745616515.png&#34; class=&#34;&#34;&gt;


&lt;p&gt;除了策略配置我们最常用的就还是最后一个保存为 .plantUML 文件，配合 &lt;code&gt;PlantUML Integration&lt;/code&gt; 删除或者添加一下注解 更加完善我们的流程图&lt;/p&gt;
&lt;h4 id=&#34;PlantUML-Integration&#34;&gt;&lt;a href=&#34;#PlantUML-Integration&#34; class=&#34;headerlink&#34; title=&#34;PlantUML Integration&#34;&gt;&lt;/a&gt;PlantUML Integration&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;作用：通过代码形式来写时序图，主要还是配合 SquenceDiagram&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;插件下载成功之后我们可以右键直接new出来 .PlantUML文件，自己直接写时序图，但是效率低不推荐还是配合Sequence吧&lt;/p&gt;
&lt;img data-src=&#34;/2022/10/15/tools/IDEA-tool/image-20220727212819103-1665745616515.png&#34; class=&#34;&#34;&gt;


&lt;p&gt;推荐一个 Sequence 和 PlantUML 二合一的应用：Sourcetrail ，有点难用，关键是英文，但是真的好用，等我死磕！！！&lt;/p&gt;
&lt;p&gt;具体操作百度一下就行了&lt;/p&gt;
&lt;h4 id=&#34;Easy-Code&#34;&gt;&lt;a href=&#34;#Easy-Code&#34; class=&#34;headerlink&#34; title=&#34;Easy Code&#34;&gt;&lt;/a&gt;Easy Code&lt;/h4&gt;&lt;p&gt; 自动生成作为为我自己常用的架构层次以及命名规则，在快速生产中没有他人硬性标准的情况下，不用额外配置，由于MybatisPlus的逆向工程(这老哥还要写那一套重复代码麻烦，我就鼠标点点！！！)&lt;/p&gt;
&lt;p&gt;&amp;#x3D;&amp;#x3D;下载完成之后，修改一下原来的配置模板文档(无脑粘贴没毛病)&amp;#x3D;&amp;#x3D;&lt;/p&gt;
&lt;img data-src=&#34;/2022/10/15/tools/IDEA-tool/image-20220821181239253-1665745616515.png&#34; class=&#34;&#34;&gt;


&lt;h5 id=&#34;controller&#34;&gt;&lt;a href=&#34;#controller&#34; class=&#34;headerlink&#34; title=&#34;controller&#34;&gt;&lt;/a&gt;controller&lt;/h5&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;####导入宏定义
$!&amp;#123;define.vm&amp;#125;

####设置表后缀（宏定义）
####setTableSuffix(&amp;quot;Controller&amp;quot;)

####保存文件（宏定义）
####save(&amp;quot;/controller&amp;quot;, &amp;quot;Controller.java&amp;quot;)

####包路径（宏定义）
####setPackageSuffix(&amp;quot;controller&amp;quot;)

####定义服务名
####set($serviceName = $!tool.append($!tool.firstLowerCase($!tableInfo.name), &amp;quot;Service&amp;quot;))

####定义实体对象名
####set($entityName = $!tool.firstLowerCase($!tableInfo.name))

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.api.ApiController;
import com.baomidou.mybatisplus.extension.api.R;
import org.springframework.beans.factory.annotation.Autowired;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import $!&amp;#123;tableInfo.savePackageName&amp;#125;.pojo.$!tableInfo.name;
import $!&amp;#123;tableInfo.savePackageName&amp;#125;.service.$!&amp;#123;tableInfo.name&amp;#125;Service;
import org.springframework.web.bind.annotation.*;

import java.io.Serializable;
import java.util.List;

####表注释（宏定义）
####tableComment(&amp;quot;表控制层&amp;quot;)
@RestController
@RequestMapping(&amp;quot;/$!tool.firstLowerCase($!tableInfo.name)&amp;quot;)
public class $!&amp;#123;tableName&amp;#125; &amp;#123;
    /**
     * 服务对象
     */
    @Autowired
    private $!&amp;#123;tableInfo.name&amp;#125;Service $!&amp;#123;serviceName&amp;#125;;

    
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;entity&#34;&gt;&lt;a href=&#34;#entity&#34; class=&#34;headerlink&#34; title=&#34;entity&#34;&gt;&lt;/a&gt;entity&lt;/h5&gt;&lt;p&gt;我的实体类一般都叫pojo， 其中要整合MybatisPlus因为我在模板里面加了一个他的注解@TableName&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;xml&#34;&gt;   &amp;lt;!--MybatisPlus--&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;com.baomidou&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;mybatis-plus-boot-starter&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;3.4.2&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;####导入宏定义
$!&amp;#123;define.vm&amp;#125;

####保存文件（宏定义）
####save(&amp;quot;/pojo&amp;quot;, &amp;quot;.java&amp;quot;)

####包路径（宏定义）
####setPackageSuffix(&amp;quot;pojo&amp;quot;)

####自动导入包（全局变量）
$!&amp;#123;autoImport.vm&amp;#125;
import com.baomidou.mybatisplus.extension.activerecord.Model;
import java.io.Serializable;
import lombok.*;
import com.baomidou.mybatisplus.annotation.TableName;
import com.baomidou.mybatisplus.annotation.TableField;

####表注释（宏定义）
####tableComment(&amp;quot;表实体类&amp;quot;)

@AllArgsConstructor
@NoArgsConstructor
@Date
@ToString
@TableName(value = &amp;quot;$!&amp;#123;tableInfo.name&amp;#125;&amp;quot;)
public class $!&amp;#123;tableInfo.name&amp;#125; implements Serializable &amp;#123;
####foreach($column in $tableInfo.fullColumn)
    /**
    * ##if($&amp;#123;column.comment&amp;#125;)$&amp;#123;column.comment&amp;#125;##end
    
    */ 
    @TableField($tool.hump2Underline($!&amp;#123;column.name&amp;#125;))
    private $!&amp;#123;tool.getClsNameByFullName($column.type)&amp;#125; $!&amp;#123;column.name&amp;#125;;
    
####end

&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;Service&#34;&gt;&lt;a href=&#34;#Service&#34; class=&#34;headerlink&#34; title=&#34;Service&#34;&gt;&lt;/a&gt;Service&lt;/h5&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;####导入宏定义
$!&amp;#123;define.vm&amp;#125;

####设置表后缀（宏定义）
####setTableSuffix(&amp;quot;Service&amp;quot;)

####保存文件（宏定义）
####save(&amp;quot;/service&amp;quot;, &amp;quot;Service.java&amp;quot;)

####包路径（宏定义）
####setPackageSuffix(&amp;quot;service&amp;quot;)

import com.baomidou.mybatisplus.extension.service.IService;
import $!&amp;#123;tableInfo.savePackageName&amp;#125;.pojo.$!tableInfo.name;

####表注释（宏定义）
####tableComment(&amp;quot;表服务接口&amp;quot;)
public interface $!&amp;#123;tableName&amp;#125; extends IService&amp;lt;$!tableInfo.name&amp;gt; &amp;#123;

&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;ServiceImpl&#34;&gt;&lt;a href=&#34;#ServiceImpl&#34; class=&#34;headerlink&#34; title=&#34;ServiceImpl&#34;&gt;&lt;/a&gt;ServiceImpl&lt;/h5&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;####导入宏定义
$!&amp;#123;define.vm&amp;#125;

####设置表后缀（宏定义）
####setTableSuffix(&amp;quot;ServiceImpl&amp;quot;)

####保存文件（宏定义）
####save(&amp;quot;/service/impl&amp;quot;, &amp;quot;ServiceImpl.java&amp;quot;)

####包路径（宏定义）
####setPackageSuffix(&amp;quot;service.impl&amp;quot;)

import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import $!&amp;#123;tableInfo.savePackageName&amp;#125;.mapper.$!&amp;#123;tableInfo.name&amp;#125;Mapper;
import $!&amp;#123;tableInfo.savePackageName&amp;#125;.pojo.$!&amp;#123;tableInfo.name&amp;#125;;
import $!&amp;#123;tableInfo.savePackageName&amp;#125;.service.$!&amp;#123;tableInfo.name&amp;#125;Service;
import org.springframework.stereotype.Service;

####表注释（宏定义）
####tableComment(&amp;quot;表服务实现类&amp;quot;)
@Service(&amp;quot;$!tool.firstLowerCase($tableInfo.name)Service&amp;quot;)
public class $!&amp;#123;tableName&amp;#125; extends ServiceImpl&amp;lt;$!&amp;#123;tableInfo.name&amp;#125;Mapper, $!&amp;#123;tableInfo.name&amp;#125;&amp;gt; implements $!&amp;#123;tableInfo.name&amp;#125;Service &amp;#123;
    @Autowired
    private $!&amp;#123;tableInfo.name&amp;#125;Mapper $tool.firstLowerCase($!&amp;#123;tableInfo.name&amp;#125;)Mapper;
    
    
    
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;Dao-x2F-Mapper-java&#34;&gt;&lt;a href=&#34;#Dao-x2F-Mapper-java&#34; class=&#34;headerlink&#34; title=&#34;Dao  &amp;#x2F;  Mapper.java&#34;&gt;&lt;/a&gt;Dao  &amp;#x2F;  Mapper.java&lt;/h5&gt;&lt;p&gt;我习惯叫mapper层，文件也是以 *Mapper 结尾&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;####导入宏定义
$!&amp;#123;define.vm&amp;#125;

####设置表后缀（宏定义）
####setTableSuffix(&amp;quot;Mapper&amp;quot;)

####保存文件（宏定义）
####save(&amp;quot;/mapper&amp;quot;, &amp;quot;Mapper.java&amp;quot;)

####包路径（宏定义）
####setPackageSuffix(&amp;quot;mapper&amp;quot;)

import com.baomidou.mybatisplus.core.mapper.BaseMapper;
import $!&amp;#123;tableInfo.savePackageName&amp;#125;.pojo.$!tableInfo.name;
import org.apache.ibatis.annotations.Mapper;

####表注释（宏定义）
####tableComment(&amp;quot;表数据库访问层&amp;quot;)

@Mapper
public interface $!&amp;#123;tableName&amp;#125; extends BaseMapper&amp;lt;$!tableInfo.name&amp;gt; &amp;#123;

&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;Mapper-xml-映射文件，自己创建一下&#34;&gt;&lt;a href=&#34;#Mapper-xml-映射文件，自己创建一下&#34; class=&#34;headerlink&#34; title=&#34;Mapper.xml(映射文件，自己创建一下)&#34;&gt;&lt;/a&gt;Mapper.xml(映射文件，自己创建一下)&lt;/h5&gt;&lt;pre&gt;&lt;code class=&#34;xml&#34;&gt;####引入mybatis支持
$!&amp;#123;mybatisSupport.vm&amp;#125;

####设置保存名称与保存位置
$!callback.setFileName($tool.append($!&amp;#123;tableInfo.name&amp;#125;, &amp;quot;Mapper.xml&amp;quot;))
$!callback.setSavePath($tool.append($modulePath, &amp;quot;/src/main/resources/mapper&amp;quot;))

####拿到主键
####if(!$tableInfo.pkColumn.isEmpty())
#    ##set($pk = $tableInfo.pkColumn.get(0))
####end
#### 拿到全索引列，用‘，’间隔
##set($sqlCloumn=&amp;quot;##foreach($column in $tableInfo.fullColumn)$!column.name##if($!foreach.hasNext) ,##end ##end&amp;quot;)

&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;!DOCTYPE mapper PUBLIC &amp;quot;-//mybatis.org//DTD Mapper 3.0//EN&amp;quot; &amp;quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&amp;quot;&amp;gt;
&amp;lt;mapper namespace=&amp;quot;$&amp;#123;tableInfo.savePackageName&amp;#125;.mapper.$!&amp;#123;tableInfo.name&amp;#125;Mapper&amp;quot;&amp;gt;

    &amp;lt;sql id=&amp;quot;All$!&amp;#123;tableInfo.name&amp;#125;Column&amp;quot;&amp;gt;$sqlCloumn&amp;lt;/sql&amp;gt;   
    &amp;lt;resultMap type=&amp;quot;$&amp;#123;tableInfo.savePackageName&amp;#125;.pojo.$!&amp;#123;tableInfo.name&amp;#125;&amp;quot; id=&amp;quot;$!&amp;#123;tableInfo.name&amp;#125;Map&amp;quot;&amp;gt;
####foreach($column in $tableInfo.fullColumn)
        &amp;lt;result property=&amp;quot;$!column.name&amp;quot; column=&amp;quot;$!column.obj.name&amp;quot; /&amp;gt;
####end
    &amp;lt;/resultMap&amp;gt;
    
    

&amp;lt;/mapper&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;设置快捷操作&#34;&gt;&lt;a href=&#34;#设置快捷操作&#34; class=&#34;headerlink&#34; title=&#34;设置快捷操作***&#34;&gt;&lt;/a&gt;设置快捷操作***&lt;/h5&gt;&lt;p&gt;直接导入我的JSON文件即可，将以下内容保存为.json文件并进行导入&lt;/p&gt;
&lt;img data-src=&#34;/2022/10/15/tools/IDEA-tool/image-20220823220304489-1665745616515.png&#34; class=&#34;&#34;&gt;


&lt;pre&gt;&lt;code class=&#34;json&#34;&gt;&amp;#123;
  &amp;quot;author&amp;quot; : &amp;quot;makejava&amp;quot;,
  &amp;quot;version&amp;quot; : &amp;quot;1.2.6&amp;quot;,
  &amp;quot;userSecure&amp;quot; : &amp;quot;&amp;quot;,
  &amp;quot;currTypeMapperGroupName&amp;quot; : &amp;quot;Default&amp;quot;,
  &amp;quot;currTemplateGroupName&amp;quot; : &amp;quot;MybatisPlus&amp;quot;,
  &amp;quot;currColumnConfigGroupName&amp;quot; : &amp;quot;Default&amp;quot;,
  &amp;quot;currGlobalConfigGroupName&amp;quot; : &amp;quot;Default&amp;quot;,
  &amp;quot;typeMapper&amp;quot; : &amp;#123; &amp;#125;,
  &amp;quot;template&amp;quot; : &amp;#123;
    &amp;quot;MybatisPlus&amp;quot; : &amp;#123;
      &amp;quot;name&amp;quot; : &amp;quot;MybatisPlus&amp;quot;,
      &amp;quot;elementList&amp;quot; : [ &amp;#123;
        &amp;quot;name&amp;quot; : &amp;quot;controller.java.vm&amp;quot;,
        &amp;quot;code&amp;quot; : &amp;quot;##导入宏定义\n$!&amp;#123;define.vm&amp;#125;\n\n##设置表后缀（宏定义）\n##setTableSuffix(\&amp;quot;Controller\&amp;quot;)\n\n##保存文件（宏定义）\n##save(\&amp;quot;/controller\&amp;quot;, \&amp;quot;Controller.java\&amp;quot;)\n\n##包路径（宏定义）\n##setPackageSuffix(\&amp;quot;controller\&amp;quot;)\n\n##定义服务名\n##set($serviceName = $!tool.append($!tool.firstLowerCase($!tableInfo.name), \&amp;quot;Service\&amp;quot;))\n\n##定义实体对象名\n##set($entityName = $!tool.firstLowerCase($!tableInfo.name))\n\nimport com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;\nimport com.baomidou.mybatisplus.extension.api.ApiController;\nimport com.baomidou.mybatisplus.extension.api.R;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport $!&amp;#123;tableInfo.savePackageName&amp;#125;.pojo.$!tableInfo.name;\nimport $!&amp;#123;tableInfo.savePackageName&amp;#125;.service.$!&amp;#123;tableInfo.name&amp;#125;Service;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.io.Serializable;\nimport java.util.List;\n\n##表注释（宏定义）\n##tableComment(\&amp;quot;表控制层\&amp;quot;)\n@RestController\n@RequestMapping(\&amp;quot;/$!tool.firstLowerCase($!tableInfo.name)\&amp;quot;)\npublic class $!&amp;#123;tableName&amp;#125; &amp;#123;\n    /**\n     * 服务对象\n     */\n    @Autowired\n    private $!&amp;#123;tableInfo.name&amp;#125;Service $!&amp;#123;serviceName&amp;#125;;\n\n    \n&amp;#125;\n&amp;quot;
      &amp;#125;, &amp;#123;
        &amp;quot;name&amp;quot; : &amp;quot;entity.java.vm&amp;quot;,
        &amp;quot;code&amp;quot; : &amp;quot;##导入宏定义\n$!&amp;#123;define.vm&amp;#125;\n\n##保存文件（宏定义）\n##save(\&amp;quot;/pojo\&amp;quot;, \&amp;quot;.java\&amp;quot;)\n\n##包路径（宏定义）\n##setPackageSuffix(\&amp;quot;pojo\&amp;quot;)\n\n##自动导入包（全局变量）\n$!&amp;#123;autoImport.vm&amp;#125;\nimport com.baomidou.mybatisplus.extension.activerecord.Model;\nimport java.io.Serializable;\nimport lombok.*;\nimport com.baomidou.mybatisplus.annotation.TableName;\nimport com.baomidou.mybatisplus.annotation.TableField;\n\n##表注释（宏定义）\n##tableComment(\&amp;quot;表实体类\&amp;quot;)\n\n@AllArgsConstructor\n@NoArgsConstructor\n@Data\n@ToString\n@TableName(value = \&amp;quot;$tool.hump2Underline($!&amp;#123;tableInfo.name&amp;#125;)\&amp;quot;)\npublic class $!&amp;#123;tableInfo.name&amp;#125; implements Serializable &amp;#123;\n##foreach($column in $tableInfo.fullColumn)\n    /**\n    * ##if($&amp;#123;column.comment&amp;#125;)$&amp;#123;column.comment&amp;#125;##end\n    \n    */ \n    @TableField(\&amp;quot;$tool.hump2Underline($!&amp;#123;column.name&amp;#125;)\&amp;quot;)\n    private $!&amp;#123;tool.getClsNameByFullName($column.type)&amp;#125; $!&amp;#123;column.name&amp;#125;;\n    \n##end\n\n&amp;#125;\n&amp;quot;
      &amp;#125;, &amp;#123;
        &amp;quot;name&amp;quot; : &amp;quot;service.java.vm&amp;quot;,
        &amp;quot;code&amp;quot; : &amp;quot;##导入宏定义\n$!&amp;#123;define.vm&amp;#125;\n\n##设置表后缀（宏定义）\n##setTableSuffix(\&amp;quot;Service\&amp;quot;)\n\n##保存文件（宏定义）\n##save(\&amp;quot;/service\&amp;quot;, \&amp;quot;Service.java\&amp;quot;)\n\n##包路径（宏定义）\n##setPackageSuffix(\&amp;quot;service\&amp;quot;)\n\nimport com.baomidou.mybatisplus.extension.service.IService;\nimport $!&amp;#123;tableInfo.savePackageName&amp;#125;.pojo.$!tableInfo.name;\n\n##表注释（宏定义）\n##tableComment(\&amp;quot;表服务接口\&amp;quot;)\npublic interface $!&amp;#123;tableName&amp;#125; extends IService&amp;lt;$!tableInfo.name&amp;gt; &amp;#123;\n\n&amp;#125;\n&amp;quot;
      &amp;#125;, &amp;#123;
        &amp;quot;name&amp;quot; : &amp;quot;serviceImpl.java.vm&amp;quot;,
        &amp;quot;code&amp;quot; : &amp;quot;##导入宏定义\n$!&amp;#123;define.vm&amp;#125;\n\n##设置表后缀（宏定义）\n##setTableSuffix(\&amp;quot;ServiceImpl\&amp;quot;)\n\n##保存文件（宏定义）\n##save(\&amp;quot;/service/impl\&amp;quot;, \&amp;quot;ServiceImpl.java\&amp;quot;)\n\n##包路径（宏定义）\n##setPackageSuffix(\&amp;quot;service.impl\&amp;quot;)\n\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\nimport $!&amp;#123;tableInfo.savePackageName&amp;#125;.mapper.$!&amp;#123;tableInfo.name&amp;#125;Mapper;\nimport $!&amp;#123;tableInfo.savePackageName&amp;#125;.pojo.$!&amp;#123;tableInfo.name&amp;#125;;\nimport $!&amp;#123;tableInfo.savePackageName&amp;#125;.service.$!&amp;#123;tableInfo.name&amp;#125;Service;\nimport org.springframework.stereotype.Service;\n\n##表注释（宏定义）\n##tableComment(\&amp;quot;表服务实现类\&amp;quot;)\n@Service(\&amp;quot;$!tool.firstLowerCase($tableInfo.name)Service\&amp;quot;)\npublic class $!&amp;#123;tableName&amp;#125; extends ServiceImpl&amp;lt;$!&amp;#123;tableInfo.name&amp;#125;Mapper, $!&amp;#123;tableInfo.name&amp;#125;&amp;gt; implements $!&amp;#123;tableInfo.name&amp;#125;Service &amp;#123;\n    @Autowired\n    private $!&amp;#123;tableInfo.name&amp;#125;Mapper $tool.firstLowerCase($!&amp;#123;tableInfo.name&amp;#125;)Mapper;\n    \n    \n    \n&amp;#125;\n&amp;quot;
      &amp;#125;, &amp;#123;
        &amp;quot;name&amp;quot; : &amp;quot;mapper.java.vm&amp;quot;,
        &amp;quot;code&amp;quot; : &amp;quot;##导入宏定义\n$!&amp;#123;define.vm&amp;#125;\n\n##设置表后缀（宏定义）\n##setTableSuffix(\&amp;quot;Mapper\&amp;quot;)\n\n##保存文件（宏定义）\n##save(\&amp;quot;/mapper\&amp;quot;, \&amp;quot;Mapper.java\&amp;quot;)\n\n##包路径（宏定义）\n##setPackageSuffix(\&amp;quot;mapper\&amp;quot;)\n\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport $!&amp;#123;tableInfo.savePackageName&amp;#125;.pojo.$!tableInfo.name;\nimport org.apache.ibatis.annotations.Mapper;\n\n##表注释（宏定义）\n##tableComment(\&amp;quot;表数据库访问层\&amp;quot;)\n\n@Mapper\npublic interface $!&amp;#123;tableName&amp;#125; extends BaseMapper&amp;lt;$!tableInfo.name&amp;gt; &amp;#123;\n\n&amp;#125;\n&amp;quot;
      &amp;#125;, &amp;#123;
        &amp;quot;name&amp;quot; : &amp;quot;mapper.xml.vm&amp;quot;,
        &amp;quot;code&amp;quot; : &amp;quot;##引入mybatis支持\n$!&amp;#123;mybatisSupport.vm&amp;#125;\n\n##设置保存名称与保存位置\n$!callback.setFileName($tool.append($!&amp;#123;tableInfo.name&amp;#125;, \&amp;quot;Mapper.xml\&amp;quot;))\n$!callback.setSavePath($tool.append($modulePath, \&amp;quot;/src/main/resources/mapper\&amp;quot;))\n\n##拿到主键\n##if(!$tableInfo.pkColumn.isEmpty())\n    ##set($pk = $tableInfo.pkColumn.get(0))\n##end\n## 拿到全索引列，用‘，’间隔\n##set($sqlCloumn=\&amp;quot;##foreach($column in $tableInfo.fullColumn)$tool.hump2Underline($!column.name)##if($!foreach.hasNext) ,##end ##end\&amp;quot;)\n\n&amp;lt;?xml version=\&amp;quot;1.0\&amp;quot; encoding=\&amp;quot;UTF-8\&amp;quot;?&amp;gt;\n&amp;lt;!DOCTYPE mapper PUBLIC \&amp;quot;-//mybatis.org//DTD Mapper 3.0//EN\&amp;quot; \&amp;quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd\&amp;quot;&amp;gt;\n&amp;lt;mapper namespace=\&amp;quot;$&amp;#123;tableInfo.savePackageName&amp;#125;.mapper.$!&amp;#123;tableInfo.name&amp;#125;Mapper\&amp;quot;&amp;gt;\n\n    &amp;lt;sql id=\&amp;quot;All$!&amp;#123;tableInfo.name&amp;#125;Column\&amp;quot;&amp;gt;$sqlCloumn&amp;lt;/sql&amp;gt;   \n    &amp;lt;resultMap type=\&amp;quot;$&amp;#123;tableInfo.savePackageName&amp;#125;.pojo.$!&amp;#123;tableInfo.name&amp;#125;\&amp;quot; id=\&amp;quot;$!&amp;#123;tableInfo.name&amp;#125;Map\&amp;quot;&amp;gt;\n##foreach($column in $tableInfo.fullColumn)\n        &amp;lt;result property=\&amp;quot;$!column.name\&amp;quot; column=\&amp;quot;$!column.obj.name\&amp;quot; /&amp;gt;\n##end\n    &amp;lt;/resultMap&amp;gt;\n    \n    \n\n&amp;lt;/mapper&amp;gt;\n&amp;quot;
      &amp;#125; ]
    &amp;#125;
  &amp;#125;,
  &amp;quot;columnConfig&amp;quot; : &amp;#123; &amp;#125;,
  &amp;quot;globalConfig&amp;quot; : &amp;#123; &amp;#125;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;注意&#34;&gt;&lt;a href=&#34;#注意&#34; class=&#34;headerlink&#34; title=&#34;注意&#34;&gt;&lt;/a&gt;注意&lt;/h5&gt;&lt;p&gt;一定要选择你的Module、包路径、Path，因为它们分别对应的是你模板中的三个参数modulePath、tableInfo.savePackageName、我们所有的Save都是以Path的路径为根路径&lt;/p&gt;
&lt;img data-src=&#34;/2022/10/15/tools/IDEA-tool/image-20220823215323871-1665745616515.png&#34; class=&#34;&#34;&gt;


&lt;h4 id=&#34;未完成&#34;&gt;&lt;a href=&#34;#未完成&#34; class=&#34;headerlink&#34; title=&#34;未完成&#34;&gt;&lt;/a&gt;未完成&lt;/h4&gt;&lt;h2 id=&#34;设置&#34;&gt;&lt;a href=&#34;#设置&#34; class=&#34;headerlink&#34; title=&#34;设置&#34;&gt;&lt;/a&gt;设置&lt;/h2&gt;&lt;h4 id=&#34;Service窗口&#34;&gt;&lt;a href=&#34;#Service窗口&#34; class=&#34;headerlink&#34; title=&#34;Service窗口&#34;&gt;&lt;/a&gt;Service窗口&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;在微服务项目中，我们在创建多个模块后，想要启动特定的几个寻找起来非常麻烦我们这个时候就可以通过Service窗口快速找到我们的启动类&lt;/p&gt;
&lt;img data-src=&#34;/2022/10/15/tools/IDEA-tool/image-20220724161332641.png&#34; class=&#34;&#34; title=&#34;image-20220724161332641&#34;&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;具体步骤-1&#34;&gt;&lt;a href=&#34;#具体步骤-1&#34; class=&#34;headerlink&#34; title=&#34;具体步骤&#34;&gt;&lt;/a&gt;具体步骤&lt;/h5&gt;&lt;p&gt;1：开启idea，右下角会显示下图&lt;/p&gt;
&lt;img data-src=&#34;/2022/10/15/tools/IDEA-tool/726e3c50b51442839ca357fa23bef649.png&#34; class=&#34;&#34;&gt;


&lt;p&gt;2、点击Show run configurations in Services&lt;/p&gt;
&lt;img data-src=&#34;/2022/10/15/tools/IDEA-tool/f90f6ac3965943209d1761bc12e3bd03.png&#34; class=&#34;&#34;&gt;


&lt;p&gt;最终效果图如下：&lt;/p&gt;
&lt;img data-src=&#34;/2022/10/15/tools/IDEA-tool/5649373054b74c3da30cc18febb3a01c.png&#34; class=&#34;&#34;&gt;


&lt;h4 id=&#34;未完成-1&#34;&gt;&lt;a href=&#34;#未完成-1&#34; class=&#34;headerlink&#34; title=&#34;未完成&#34;&gt;&lt;/a&gt;未完成&lt;/h4&gt;</content>
        <updated>2022-10-15T04:52:38.136Z</updated>
    </entry>
</feed>
