{
    "version": "https://jsonfeed.org/version/1",
    "title": "记录“美食”每刻 • All posts by \"junit注解_枚举\" category",
    "description": "记录“美食”每刻",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/",
            "url": "http://example.com/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/",
            "title": "第15章Junit注解_枚举",
            "date_published": "2022-10-06T16:00:00.000Z",
            "content_html": "<h1 id=\"第15章_junit_注解_枚举\"><a class=\"anchor\" href=\"#第15章_junit_注解_枚举\">#</a> 第 15 章_Junit_注解_枚举</h1>\n<h1 id=\"junit单元测试\"><a class=\"anchor\" href=\"#junit单元测试\">#</a> Junit 单元测试</h1>\n<h2 id=\"引入\"><a class=\"anchor\" href=\"#引入\">#</a> 引入</h2>\n<p>【1】软件测试的目的：</p>\n<p>软件测试的目的是在规定的条件下对程序进行操作，以发现程序错误，衡量软件质量，并对其是否能满足设计要求进行评估的过程。</p>\n<p>【2】测试分类：</p>\n<p>（1）黑盒测试：</p>\n<p>软件的黑盒测试意味着测试要在软件的接口处进行。这种方法是把测试对象看做一个黑盒子，测试人员完全不考虑程序内部的逻辑结构和内部特性，只依据程序的需求规格说明书，检查程序的功能是否符合它的功能说明。因此黑盒测试又叫功能测试。</p>\n<p>（2）白盒测试：---》Junit 属于白盒测试。</p>\n<p>软件的白盒测试是对软件的过程性细节做细致的检查。这种方法是把测试对象看做一个打开的盒子，它允许测试人员利用程序内部的逻辑结构及有关信息，设计或选择测试用例，对程序的所有逻辑路径进行测试，通过在不同点检查程序状态，确定实际状态是否与预期的状态一致。因此白盒测试又称为结构测试。</p>\n<p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/42a7ac6afb1bc65c1526524fb22c0cf6.png\" class=\"\"></p>\n<h2 id=\"没有junit的情况下如何测试\"><a class=\"anchor\" href=\"#没有junit的情况下如何测试\">#</a> 没有 Junit 的情况下如何测试</h2>\n<p>在没有使用 Junit 的时候，缺点：</p>\n<p>（1）测试一定走 main 方法，是程序的入口，main 方法的格式必须不能写错。</p>\n<p>（2）要是在同一个 main 方法中测试的话，那么不需要测试的东西必须注释掉。</p>\n<p>（3）测试逻辑如果分开的话，需要定义多个测试类，麻烦。</p>\n<p>（4）业务逻辑和测试代码，都混淆了。</p>\n<p>代码：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Calculator</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 加法：</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">return</span> a<span class=\"token operator\">+</span>b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// 减法：</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span> a<span class=\"token operator\">-</span>b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">// 这是一个 main 方法，是程序的入口：</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">// 测试加法：</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\">Calculator</span> cal <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Calculator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> cal<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">// 测试减法：</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span> <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> cal<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\<span class=\"token operator\">*</span><span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test02</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\">// 这是一个 main 方法，是程序的入口：</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token class-name\">Calculator</span> cal <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Calculator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">// 测试减法：</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> cal<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"junit的使用\"><a class=\"anchor\" href=\"#junit的使用\">#</a> Junit 的使用</h2>\n<p>【1】一般测试和业务做一个分离，分离为不同的包：</p>\n<p>建议起名：公司域名倒着写 + test</p>\n<p>以后测试类就单独放在这个包下</p>\n<p>【2】测试类的名字：****Test ---&gt; 见名知意</p>\n<p>【3】测试方法的定义 --》这个方法可以独立运行，不依托于 main 方法</p>\n<p>建议：</p>\n<p>名字：testAdd () testSub () 见名知意</p>\n<p>参数：无参</p>\n<p>返回值：void</p>\n<p>【4】测试方法定义完以后，不能直接就独立运行了，必须要在方法前加入一个注解： @Test</p>\n<p>【5】导入 Junit 的依赖的环境：</p>\n<p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/46fb99bb996eae46795d2c8db94485f6.png\" class=\"\"></p>\n<p>【6】代码：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CalculatorTest</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 测试 add 方法</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testAdd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"测试add方法\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">Calculator</span> cal <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Calculator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> cal<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">// 测试 sub 方法</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSub</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"测试sub方法\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">Calculator</span> cal <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Calculator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> cal<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>【7】判定结果：</p>\n<p>绿色：正常结果</p>\n<p>红色：出现异常</p>\n<p>【8】即使出现绿色效果，也不意味着你的测试就通过了，因为代码中逻辑也可能出现问题，这种情况怎么解决呢？</p>\n<p>加入断言</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CalculatorTest</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 测试 add 方法</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testAdd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"测试add方法\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">Calculator</span> cal <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Calculator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> cal<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">//System.out.println (result);--》程序的运行结果可以不关注</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 加入断言：预测一下结果，判断一下我预测的结果和 实际的结果是否一致：</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">Assert</span><span class=\"token punctuation\">.</span><span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 第一个参数：预测结果 第二个参数：实际结果</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">// 测试 sub 方法</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSub</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"测试sub方法\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\">Calculator</span> cal <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Calculator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> cal<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/f28545eda706a96a1dc81a62bd94b0b6.png\" class=\"\"></p>\n<h2 id=\"before_after\"><a class=\"anchor\" href=\"#before_after\">#</a> @Before_@After</h2>\n<p>@Before:</p>\n<p>某一个方法中，加入了 @Before 注解以后，那么这个方法中的功能会在测试方法执行前先执行</p>\n<p>一般会在 @Beforer 修饰的那个方法中加入：加入一些申请资源的代码：申请数据库资源，申请 IO 资源，申请网络资源。。。</p>\n<p>@After:</p>\n<p>某一个方法中，加入了 @After 注解以后，那么这个方法中的功能会在测试方法执行后先执行</p>\n<p>一般会在 @After 修饰的那个方法中加入：加入释放资源的代码：释放数据库资源，释放 IO 资源，释放网络资源。。。</p>\n<p>代码：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CalculatorTest</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token annotation punctuation\">@Before</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"方法执行开始了。。。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token annotation punctuation\">@After</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"方法执行结束了。。。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">// 测试 add 方法</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testAdd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"测试add方法\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">Calculator</span> cal <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Calculator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> cal<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">//System.out.println (result);--》程序的运行结果可以不关注</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">// 加入断言：预测一下结果，判断一下我预测的结果和 实际的结果是否一致：</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">Assert</span><span class=\"token punctuation\">.</span><span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 第一个参数：预测结果 第二个参数：实际结果</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">// 测试 sub 方法</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testSub</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"测试sub方法\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token class-name\">Calculator</span> cal <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Calculator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> cal<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"注解\"><a class=\"anchor\" href=\"#注解\">#</a> 注解</h1>\n<h2 id=\"引入-2\"><a class=\"anchor\" href=\"#引入-2\">#</a> 引入</h2>\n<p>【1】历史：</p>\n<p>JDK5.0 新增 --- 注解（Annotation）, 也叫元数据</p>\n<p>【2】什么是注解？</p>\n<p>注解其实就是代码里的特殊标记，这些标记可以在编译，类加载，运行时被读取，并执行相应的处理。通过使用注解，程序员可以在不改变原有逻辑的情况下，在源文件中嵌入一些补充信息。代码分析工具、开发工具和部署工具可以通过这些补充信息进行验证或者进行部署。</p>\n<p>使用注解时要在其前面增加 @符号，并把该注解当成一个修饰符使用。用于修饰它支持的程序元素。</p>\n<p>【3】注解的重要性：</p>\n<p>Annotation 可以像修饰符一样被使用，可用于修饰包，类，构造器，方法，成员变量，参数，局部变量的声明，这些信息被保存在 Annotation 的 &quot;name=value&quot; 对中。在 JavaSE 中，注解的使用目的比较简单，例如标记过时的功能，忽略警告等。在 JavaEE/ArIdroid 中注解占据了更重要的角色，例如用来配置应用程序的任何切面，代替 JavaEE 旧版中所遗留的繁冗代码和 XML 配置等。未来的开发模式都是基于注解的，JPA (java 的持久化 API) 是基于注解的，Spring2.5 以. E 都是基于注解的，Hibernate3.x 以后也是基于注解的，现在的 Struts2 有一部分也是基于注解的了，注解是一种趋势，一定程度上可以说 ：框架 = 注解 + 反射 + 设计模式。</p>\n<h2 id=\"注解的使用实例\"><a class=\"anchor\" href=\"#注解的使用实例\">#</a> 注解的使用实例</h2>\n<h3 id=\"junit的注解\"><a class=\"anchor\" href=\"#junit的注解\">#</a> Junit 的注解</h3>\n<p>@Test</p>\n<p>@Before</p>\n<p>@After</p>\n<p>代码：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CalculatorTest</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token annotation punctuation\">@Before</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"方法执行开始了。。。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> <span class=\"token annotation punctuation\">@After</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"方法执行结束了。。。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testAdd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"测试add方法\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> <span class=\"token class-name\">Calculator</span> cal <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Calculator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> cal<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre> <span class=\"token class-name\">Assert</span><span class=\"token punctuation\">.</span><span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 第一个参数：预测结果 第二个参数：实际结果</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"文档相关的注解\"><a class=\"anchor\" href=\"#文档相关的注解\">#</a> 文档相关的注解</h3>\n<p>说明注释允许你在程序中嵌入关于程序的信息。你可以使用 javadoc 工具软件来生成信息，并输出到 HTML 文件中。</p>\n<p>说明注释，使你更加方便的记录你的程序信息。</p>\n<p>文档注解我们一般使用在文档注释中，配合 javadoc 工具</p>\n<p>javadoc 工具软件识别以下标签：</p>\n<p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/23874004c970e81a5f5e4f59177c0a6f.png\" class=\"\"></p>\n<p>其中注意：</p>\n<p>Ø @param @return 和 @exception 这三个标记都是只用于方法的。</p>\n<p>Ø @param 的格式要求: @param 形参名 形参类型 形参说明</p>\n<p>Ø @return 的格式要求: @return 返回值类型返回值说明，如果方法的返回值类型是 void 就不能写</p>\n<p>Ø @exception 的格式要求: @exception 异常类型异常说明</p>\n<p>Ø @param 和 @exception 可以并列多个</p>\n<p>代码：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * 下面是 eat 方法，实现了 XXX 功能。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * @param num1 就餐人数</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> * @param num2 点了几个菜</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num1<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span>\\<span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        \\<span class=\"token operator\">*</span> <span class=\"token annotation punctuation\">@param</span> age 年龄</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        \\<span class=\"token operator\">*</span> <span class=\"token annotation punctuation\">@return</span> <span class=\"token keyword\">int</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        \\<span class=\"token operator\">*</span> <span class=\"token annotation punctuation\">@exception</span> <span class=\"token class-name\">RuntimeException</span> 当年龄过大的时候</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        \\<span class=\"token operator\">*</span> <span class=\"token annotation punctuation\">@exception</span> <span class=\"token class-name\">IndexOutOfBoundsException</span> 当年龄过小的时候</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        \\<span class=\"token operator\">*</span> <span class=\"token annotation punctuation\">@see</span> <span class=\"token class-name\">Student</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        \\<span class=\"token operator\">*</span><span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>age\\<span class=\"token operator\">></span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>age\\<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IndexOutOfBoundsException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>IDEA 中的 javadoc 使用：</p>\n<p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/1887cd6739c2f89c5a4ef2d33ec03b55.png\" class=\"\"></p>\n<p>防止乱码：</p>\n<p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/7fe5daf476aadfa53d22106b5979d514.png\" class=\"\"></p>\n<p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/010eb501804b4f0f6a550a3a3c8617a2.png\" class=\"\"></p>\n<h3 id=\"jdk内置的3个注解\"><a class=\"anchor\" href=\"#jdk内置的3个注解\">#</a> JDK 内置的 3 个注解</h3>\n<p>@Override: 限定重写父类方法，该注解只能用于方法</p>\n<pre><code class=\"language-java\">\n</code></pre>\n<p>| ------------------------------------------------------------ |</p>\n<pre><code class=\"language-java\">\n</code></pre>\n<p>@Deprecated: 用于表示所修饰的元素 (类，方法，构造器，属性等) 已过时。通常是因为所修饰的结构危险或存在更好的选择</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span>的作用：限定重写的方法，只要重写方法有问题，就有错误提示。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        \\<span class=\"token operator\">*</span><span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"子类eat..\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        在方法前加入<span class=\"token annotation punctuation\">@Deprecated</span>，这个方法就会变成一个废弃方法<span class=\"token operator\">/</span>过期方法<span class=\"token operator\">/</span>过时方法</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        \\<span class=\"token operator\">*</span><span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token annotation punctuation\">@Deprecated</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">study</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"学习。。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/e87bd738286630379a4436ddeb991a7f.png\" class=\"\"></p>\n<p>@SuppressWarnings: 抑制编译器警告</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test02</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 这是一个 main 方法，是程序的入口：</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token annotation punctuation\">@SuppressWarnings</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unused\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">int</span> age <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token annotation punctuation\">@SuppressWarnings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"unused\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"rwatypes\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">ArrayList</span> al <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"实现替代配置文件功能的注解\"><a class=\"anchor\" href=\"#实现替代配置文件功能的注解\">#</a> 实现替代配置文件功能的注解</h3>\n<p>在 servlet3.0 之前的配置：</p>\n<table>\n<thead>\n<tr>\n<th>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;  &lt;web-app xmlns=&quot;<span class=\"exturl\" data-url=\"aHR0cDovL3htbG5zLmpjcC5vcmcveG1sL25zL2phdmFlZQ==\">http://xmlns.jcp.org/xml/ns/javaee</span>&quot;   xmlns:xsi=&quot;<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2U=\">http://www.w3.org/2001/XMLSchema-instance</span>&quot;   xsi:schemaLocation=&quot;<span class=\"exturl\" data-url=\"aHR0cDovL3htbG5zLmpjcC5vcmcveG1sL25zL2phdmFlZQ==\">http://xmlns.jcp.org/xml/ns/javaee</span> <span class=\"exturl\" data-url=\"aHR0cDovL3htbG5zLmpjcC5vcmcveG1sL25zL2phdmFlZS93ZWItYXBwXzRfMC54c2Q=\">http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd</span>&quot;version=&quot;4.0&quot;&gt;   &lt;!-- 配置 Servlet--&gt;   &lt;!-- 配置 Servlet 的信息 --&gt;   &lt;servlet&gt;   &lt;servlet-name&gt;HelloServlet&lt;/servlet-name&gt;   &lt;servlet-class&gt;com.bjsxt.servlet.HelloServlet&lt;/servlet-class&gt;   &lt;/servlet&gt;   &lt;!-- 配置 Servlet 的映射路径 --&gt;   &lt;servlet-mapping&gt;   &lt;servlet-name&gt;HelloServlet&lt;/servlet-name&gt;   &lt;!--<span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo4MDgwLzAxLWhlbGxvLXNlcnZsZXQvaGVsbG8tLQ==\">http://localhost:8080/01-hello-servlet/hello--</span>&gt;   &lt;url-pattern&gt;/hello&lt;/url-pattern&gt;   &lt;/servlet-mapping&gt;  &lt;/web-app&gt;</th>\n</tr>\n</thead>\n</table>\n<p>在 servlet3.0 之后使用注解：替代配置文件。</p>\n<pre><code class=\"language-java\">\n</code></pre>\n<p>||</p>\n<h2 id=\"自定义注解\"><a class=\"anchor\" href=\"#自定义注解\">#</a> 自定义注解</h2>\n<p>【1】自定义注解使用很少，一般情况下都是用现成的注解。</p>\n<p>【2】如何自定义注解：</p>\n<p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/4b5d48a592cbac3d289f687d5e9ec1e7.png\" class=\"\"></p>\n<p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/1f30647690be446463b91286618f3176.png\" class=\"\"></p>\n<p>发现定义的注解的声明使用的关键字：[@interface](file:///D:\\ 下载 @interface)，跟接口没有一点关系。</p>\n<p>【3】注解的内部：</p>\n<p>以 [@SuppressWarnings](file:///D:\\ 下载 @SuppressWarnings) 为例，发现内部：</p>\n<p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/258a1b996f98d74fa67f5511b0957b01.png\" class=\"\"></p>\n<p>这 value 是属性还是方法？</p>\n<p>答案：看上去是无参数方法，实际上理解为一个成员变量，一个属性</p>\n<p>无参数方法名字 --》成员变量的名字</p>\n<p>无参数方法的返回值 --》成员变量的类型</p>\n<p>这个参数叫 配置参数</p>\n<p>无参数方法的类型：基本数据类型（八种），String，枚举，注解类型，还可以是以上类型对应的数组。</p>\n<p>PS：注意：如果只有一个成员变量的话，名字尽量叫 value。</p>\n<p>【4】使用注解：</p>\n<p>（1）使用注解的话，如果你定义了配置参数，就必须给配置参数进行赋值操作：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@MyAnnotation</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"def\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"hij\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>（2）如果只有一个参数，并且这个参数的名字为 value 的话，那么 value = 可以省略不写。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@MyAnnotation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"def\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"hij\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>（3）如果你给配置参数设置默认的值了，那么使用的时候可以无需传值：</p>\n<ol>\n<li>public @interface MyAnnotation2 {</li>\n<li>String value() default &quot;abc&quot;;</li>\n<li>}</li>\n</ol>\n<p>使用：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@MyAnnotation2</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@MyAnnotation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"def\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"hij\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>（4）一个注解的内部是可以不定义配置参数的：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token annotation punctuation\">@interface</span> <span class=\"token class-name\">MyAnnotation3</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>内部没有定义配置参数的注解 --》可以叫做标记</p>\n<p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/5a3c24803c3f8ed92d3272ac78b52ce7.png\" class=\"\"></p>\n<p>内部定义配置参数的注解 --》元数据</p>\n<p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/0f6376fb4928988abc36de912ae6e857.png\" class=\"\"></p>\n<p>【5】注解的使用：</p>\n<p>现在只学习注解的大致技能点，具体怎么应用 后面慢慢学习。</p>\n<h2 id=\"元注解\"><a class=\"anchor\" href=\"#元注解\">#</a> 元注解</h2>\n<p>元注解是用于修饰其它注解的注解。</p>\n<p>举例：</p>\n<p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/34f66e3c7b9665d0d116172ef2d023e3.png\" class=\"\"></p>\n<p>JDK5.0 提供了四种元注解：Retention, Target, Documented, Inherited</p>\n<h3 id=\"retention\"><a class=\"anchor\" href=\"#retention\">#</a> Retention</h3>\n<p>@Retention: 用于修饰注解，用于指定修饰的那个注解的生命周期，@Rentention 包含一个 RetentionPolicy 枚举类型的成员变量，使用 @Rentention 时必须为该 value 成员变量指定值:</p>\n<p>➢RetentionPolicy.SOURCE: 在源文件中有效 (即源文件保留), 编译器直接丢弃这种策略的注释，在.class 文件中不会保留注解信息</p>\n<p>案例：</p>\n<p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/d3e2e82ebd228e73e7c31cc574e94c62.png\" class=\"\"></p>\n<p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/4d2c3bc743b41c72b97faabb8603e63d.png\" class=\"\"></p>\n<p>反编译查看字节码文件：发现字节码文件中没有 MyAnnotation 这个注解：</p>\n<p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/ef82a6553de8c7049479945ca1d4435e.png\" class=\"\"></p>\n<p>➢RetentionPolicy.CLASS: 在 class 文件中有效 (即 class 保留)，保留在.class 文件中，但是当运行 Java 程序时，他就不会继续加载了，不会保留在内存中，JVM 不会保留注解。如果注解没有加 Retention 元注解，那么相当于默认的注解就是这种状态。</p>\n<p>案例：</p>\n<p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/f23af522879c92eb18b5b6a6de68eb92.png\" class=\"\"></p>\n<p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/b6d188929cf9db1376241c79683d1e86.png\" class=\"\"></p>\n<p>反编译看字节码文件，字节码文件中带有 MyAnnotation 注解：</p>\n<p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/ce86fb17bc2a2f453556cdbac9a35524.png\" class=\"\"></p>\n<p>➢RetentionPolicy.RUNTIME: 在运行时有效 (即运行时保留), 当运行 Java 程序时，JVM 会保留注释，加载在内存中了，那么程序可以通过反射获取该注释。</p>\n<h3 id=\"target\"><a class=\"anchor\" href=\"#target\">#</a> Target</h3>\n<p>用于修饰注解的注解，用于指定被修饰的注解能用于修饰哪些程序元素。@Target 也包含一个名为 value 的成员变量。</p>\n<p>案例：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Target</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token constant\">TYPE</span><span class=\"token punctuation\">,</span><span class=\"token constant\">CONSTRUCTOR</span><span class=\"token punctuation\">,</span><span class=\"token constant\">METHOD</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token annotation punctuation\">@interface</span> <span class=\"token class-name\">MyAnnotation4</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>使用：</p>\n<p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/f7fc8775a65c517683db05e1714142d4.png\" class=\"\"></p>\n<h3 id=\"documented很少\"><a class=\"anchor\" href=\"#documented很少\">#</a> Documented（很少）</h3>\n<p>用于指定被该元注解修饰的注解类将被 javadoc 工具提取成文档。默认情况下，javadoc 是 不包括注解的，但是加上了这个注解生成的文档中就会带着注解了</p>\n<p>案例：</p>\n<p>如果：Documented 注解修饰了 Deprecated 注解，</p>\n<p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/2c2e47e5817fc9dce848588c74c99fca.png\" class=\"\"></p>\n<p>那么 Deprecated 注解就会在 javadoc 提取的时候，提取到 API 中：</p>\n<p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/eaffd4880e967c3b2924741f4ce2213c.png\" class=\"\"></p>\n<h3 id=\"inherited极少\"><a class=\"anchor\" href=\"#inherited极少\">#</a> Inherited（极少）</h3>\n<p>被它修饰的 Annotation 将具有继承性。如果某个类使用了被</p>\n<p>@Inherited 修饰的 Annotation, 则其子类将自动具有该注解。</p>\n<p>案例：</p>\n<p>注解：如果 MyAnno 注解使用了 @Inherited 之后，就具备了继承性，那么相当于子类 Student 也使用了这个 MyAnno</p>\n<p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/30e71681fd1e8664b949a536691dc82f.png\" class=\"\"></p>\n<p>父类：<br />\n<img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/2a385f34e462174022fc8abb73112b4f.png\" class=\"\"></p>\n<p>子类：</p>\n<p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/0f863775e4fc46e421d2a5189572c538.png\" class=\"\"></p>\n<h1 id=\"枚举\"><a class=\"anchor\" href=\"#枚举\">#</a> 枚举</h1>\n<h2 id=\"引入-3\"><a class=\"anchor\" href=\"#引入-3\">#</a> 引入</h2>\n<p>【1】数学：枚举法：</p>\n<p>1&lt;x&lt;4</p>\n<p>2&lt;y&lt;5</p>\n<p>求 x+y=6</p>\n<p>枚举法：一枚一枚的列举出来。前提：有限，确定</p>\n<p>【2】在 java 中，类的对象是有限个，确定的。这个类我们可以定义为枚举类。</p>\n<p>举例：</p>\n<p>星期：一二三四五六日</p>\n<p>性别：男女</p>\n<p>季节：春夏秋冬</p>\n<p>【3】自定义枚举类：（JDK1.5 之前自定义枚举类）</p>\n<ol start=\"2\">\n<li></li>\n<li>/**</li>\n<li>* @author : msb-zhaoss</li>\n<li>* 定义枚举类：季节</li>\n<li>*/</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Season</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 属性：</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> seasonName <span class=\"token punctuation\">;</span><span class=\"token comment\">// 季节名字</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> seasonDesc <span class=\"token punctuation\">;</span><span class=\"token comment\">// 季节描述</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">// 利用构造器对属性进行赋值操作：</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 构造器私有化，外界不能调用这个构造器，只能 Season 内部自己调用</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Season</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> seasonName<span class=\"token punctuation\">,</span><span class=\"token class-name\">String</span> seasonDesc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>seasonName <span class=\"token operator\">=</span> seasonName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>seasonDesc <span class=\"token operator\">=</span> seasonDesc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// 提供枚举类的有限的 确定的对象：</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Season</span> <span class=\"token constant\">SPRING</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Season</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"春天\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"春暖花开\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Season</span> <span class=\"token constant\">SUMMER</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Season</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"夏天\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"烈日炎炎\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Season</span> <span class=\"token constant\">AUTUMN</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Season</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"秋天\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"硕果累累\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Season</span> <span class=\"token constant\">WINTER</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Season</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"冬天\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"冰天雪地\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">// 额外因素：</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getSeasonName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">return</span> seasonName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getSeasonDesc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">return</span> seasonDesc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\">//toString();</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Season&#123;\"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token string\">\"seasonName='\"</span> <span class=\"token operator\">+</span> seasonName <span class=\"token operator\">+</span> <span class=\"token char\">'\\\\'</span>' <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token string\">\", seasonDesc='\"</span> <span class=\"token operator\">+</span> seasonDesc <span class=\"token operator\">+</span> <span class=\"token char\">'\\\\'</span>' <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token char\">'&#125;'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>测试类：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestSeason</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 这是一个 main 方法，是程序的入口：</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">Season</span> summer <span class=\"token operator\">=</span> <span class=\"token class-name\">Season</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SUMMER</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>summer<span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\\<span class=\"token operator\">*</span><span class=\"token operator\">/</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>summer<span class=\"token punctuation\">.</span><span class=\"token function\">getSeasonName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"jdk1_5之后使用enum关键字来创建枚举类\"><a class=\"anchor\" href=\"#jdk1_5之后使用enum关键字来创建枚举类\">#</a> JDK1_5 之后使用 enum 关键字来创建枚举类</h2>\n<p>JDK1.5 以后使用 enum 关键字创建枚举类：</p>\n<p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/657e63e35654f2386483ef6f014c3be2.png\" class=\"\"></p>\n<p>变为下面的枚举类：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">Season</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 提供枚举类的有限的 确定的对象：---\\>enum 枚举类要求对象（常量）必须放在最开始位置</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token comment\">// 多个对象之间用，进行连接，最后一个对象后面用；结束</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">SPRING</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"春天\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"春暖花开\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">SUMMER</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"夏天\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"烈日炎炎\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">AUTUMN</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"秋天\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"硕果累累\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">WINTER</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"冬天\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"冰天雪地\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 属性：</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> seasonName <span class=\"token punctuation\">;</span><span class=\"token comment\">// 季节名字</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> seasonDesc <span class=\"token punctuation\">;</span><span class=\"token comment\">// 季节描述</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">// 利用构造器对属性进行赋值操作：</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// 构造器私有化，外界不能调用这个构造器，只能 Season 内部自己调用</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Season</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> seasonName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> seasonDesc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>seasonName <span class=\"token operator\">=</span> seasonName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>seasonDesc <span class=\"token operator\">=</span> seasonDesc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">// 额外因素：</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getSeasonName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">return</span> seasonName<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getSeasonDesc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">return</span> seasonDesc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\">//toString();</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Season&#123;\"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token string\">\"seasonName='\"</span> <span class=\"token operator\">+</span> seasonName <span class=\"token operator\">+</span> <span class=\"token char\">'\\\\'</span>' <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token string\">\", seasonDesc='\"</span> <span class=\"token operator\">+</span> seasonDesc <span class=\"token operator\">+</span> <span class=\"token char\">'\\\\'</span>' <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token char\">'&#125;'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>使用枚举类：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestSeason</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 这是一个 main 方法，是程序的入口：</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">Season</span> winter <span class=\"token operator\">=</span> <span class=\"token class-name\">Season</span><span class=\"token punctuation\">.</span><span class=\"token constant\">WINTER</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>winter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">//enum 关键字对应的枚举类的上层父类是 ：java.lang.Enum</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\">// 但是我们自定义的枚举类的上层父类：Object</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Season</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSuperclass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//java.lang.Enum</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在源码中经常看到别人定义的枚举类形态：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">Season</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token constant\">SPRING</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token constant\">SUMMER</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token constant\">AUTUMN</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token constant\">WINTER</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>为什么这么简单：因为这个枚举类底层没有属性，属性，构造器，toString，get 方法都删掉不写了，然后案例来说应该</p>\n<p>写为：SPRING () 现在连（）可以省略 就变成 SPRING</p>\n<p>看到的形态就剩：常量名（对象名）</p>\n<p>案例：Thread 中的枚举类：State</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">State</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span>\\<span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        \\<span class=\"token operator\">*</span> <span class=\"token class-name\">Thread</span> state <span class=\"token keyword\">for</span> a thread which has not yet started<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            \\<span class=\"token operator\">*</span><span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token constant\">NEW</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span>\\<span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        \\<span class=\"token operator\">*</span> <span class=\"token class-name\">Thread</span> state <span class=\"token keyword\">for</span> a runnable <span class=\"token class-name\"><span class=\"token namespace\">thread<span class=\"token punctuation\">.</span></span> A</span> thread in the runnable</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            \\<span class=\"token operator\">*</span> state is executing in the <span class=\"token class-name\">Java</span> virtual machine but it may</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            \\<span class=\"token operator\">*</span> be waiting <span class=\"token keyword\">for</span> other resources from the operating system</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                \\<span class=\"token operator\">*</span> such as processor<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                \\<span class=\"token operator\">*</span><span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token constant\">RUNNABLE</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span>\\<span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        \\<span class=\"token operator\">*</span> <span class=\"token class-name\">Thread</span> state <span class=\"token keyword\">for</span> a thread blocked waiting <span class=\"token keyword\">for</span> a monitor lock<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            \\<span class=\"token operator\">*</span> <span class=\"token class-name\">A</span> thread in the blocked state is waiting <span class=\"token keyword\">for</span> a monitor lock</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                \\<span class=\"token operator\">*</span> <span class=\"token keyword\">to</span> <span class=\"token namespace\">enter</span> a <span class=\"token keyword\">synchronized</span> block<span class=\"token operator\">/</span>method or</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                \\<span class=\"token operator\">*</span> reenter a <span class=\"token keyword\">synchronized</span> block<span class=\"token operator\">/</span>method after calling</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                \\<span class=\"token operator\">*</span> <span class=\"token punctuation\">&#123;</span><span class=\"token annotation punctuation\">@link</span> <span class=\"token class-name\">Object</span>\\#<span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>wait<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                \\<span class=\"token operator\">*</span><span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token constant\">BLOCKED</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span>\\<span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        \\<span class=\"token operator\">*</span> <span class=\"token class-name\">Thread</span> state <span class=\"token keyword\">for</span> a waiting thread<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            \\<span class=\"token operator\">*</span> <span class=\"token class-name\">A</span> thread is in the waiting state due <span class=\"token keyword\">to</span> <span class=\"token namespace\">calling</span> one of the</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            \\<span class=\"token operator\">*</span> following methods<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    \\<span class=\"token operator\">*</span> \\<span class=\"token operator\">&lt;</span>ul\\<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        \\<span class=\"token operator\">*</span> \\<span class=\"token operator\">&lt;</span>li\\<span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token annotation punctuation\">@link</span> <span class=\"token class-name\">Object</span>\\#<span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>wait<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">with</span> <span class=\"token namespace\">no</span> timeout\\<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li\\<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        \\<span class=\"token operator\">*</span> \\<span class=\"token operator\">&lt;</span>li\\<span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token annotation punctuation\">@link</span> \\#<span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">with</span> <span class=\"token namespace\">no</span> timeout\\<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li\\<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        \\<span class=\"token operator\">*</span> \\<span class=\"token operator\">&lt;</span>li\\<span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token annotation punctuation\">@link</span> <span class=\"token class-name\">LockSupport</span>\\#<span class=\"token function\">park</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">LockSupport</span><span class=\"token punctuation\">.</span>park<span class=\"token punctuation\">&#125;</span>\\<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li\\<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        \\<span class=\"token operator\">*</span> \\<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul\\<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        \\<span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        \\<span class=\"token operator\">*</span> \\<span class=\"token operator\">&lt;</span>p\\<span class=\"token operator\">></span><span class=\"token class-name\">A</span> thread in the waiting state is waiting <span class=\"token keyword\">for</span> another thread <span class=\"token keyword\">to</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            \\<span class=\"token operator\">*</span> perform a particular action<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            \\<span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            \\<span class=\"token operator\">*</span> <span class=\"token class-name\">For</span> example<span class=\"token punctuation\">,</span> a thread that has called \\<span class=\"token operator\">&lt;</span>tt\\<span class=\"token operator\">></span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\\<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>tt\\<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            \\<span class=\"token operator\">*</span> on an object is waiting <span class=\"token keyword\">for</span> another thread <span class=\"token keyword\">to</span> <span class=\"token namespace\">call</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                \\<span class=\"token operator\">*</span> \\<span class=\"token operator\">&lt;</span>tt\\<span class=\"token operator\">></span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token function\">notify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\\<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>tt\\<span class=\"token operator\">></span> or \\<span class=\"token operator\">&lt;</span>tt\\<span class=\"token operator\">></span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token function\">notifyAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\\<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>tt\\<span class=\"token operator\">></span> on</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                \\<span class=\"token operator\">*</span> that <span class=\"token class-name\"><span class=\"token namespace\">object<span class=\"token punctuation\">.</span></span> A</span> thread that has called \\<span class=\"token operator\">&lt;</span>tt\\<span class=\"token operator\">></span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\\<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>tt\\<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                \\<span class=\"token operator\">*</span> is waiting <span class=\"token keyword\">for</span> a specified thread <span class=\"token keyword\">to</span> <span class=\"token namespace\">terminate<span class=\"token punctuation\">.</span></span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                    \\<span class=\"token operator\">*</span><span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                    <span class=\"token constant\">WAITING</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span>\\<span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        \\<span class=\"token operator\">*</span> <span class=\"token class-name\">Thread</span> state <span class=\"token keyword\">for</span> a waiting thread <span class=\"token keyword\">with</span> <span class=\"token namespace\">a</span> specified waiting time<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            \\<span class=\"token operator\">*</span> <span class=\"token class-name\">A</span> thread is in the timed waiting state due <span class=\"token keyword\">to</span> <span class=\"token namespace\">calling</span> one of</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            \\<span class=\"token operator\">*</span> the following methods <span class=\"token keyword\">with</span> <span class=\"token namespace\">a</span> specified positive waiting time<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    \\<span class=\"token operator\">*</span> \\<span class=\"token operator\">&lt;</span>ul\\<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        \\<span class=\"token operator\">*</span> \\<span class=\"token operator\">&lt;</span>li\\<span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token annotation punctuation\">@link</span> \\#sleep <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">&#125;</span>\\<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li\\<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        \\<span class=\"token operator\">*</span> \\<span class=\"token operator\">&lt;</span>li\\<span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token annotation punctuation\">@link</span> <span class=\"token class-name\">Object</span>\\#<span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>wait<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">with</span> <span class=\"token namespace\">timeout</span>\\<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li\\<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        \\<span class=\"token operator\">*</span> \\<span class=\"token operator\">&lt;</span>li\\<span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token annotation punctuation\">@link</span> \\#<span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">with</span> <span class=\"token namespace\">timeout</span>\\<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li\\<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        \\<span class=\"token operator\">*</span> \\<span class=\"token operator\">&lt;</span>li\\<span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token annotation punctuation\">@link</span> <span class=\"token class-name\">LockSupport</span>\\#parkNanos <span class=\"token class-name\">LockSupport</span><span class=\"token punctuation\">.</span>parkNanos<span class=\"token punctuation\">&#125;</span>\\<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li\\<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        \\<span class=\"token operator\">*</span> \\<span class=\"token operator\">&lt;</span>li\\<span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span><span class=\"token annotation punctuation\">@link</span> <span class=\"token class-name\">LockSupport</span>\\#parkUntil <span class=\"token class-name\">LockSupport</span><span class=\"token punctuation\">.</span>parkUntil<span class=\"token punctuation\">&#125;</span>\\<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li\\<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        \\<span class=\"token operator\">*</span> \\<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul\\<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        \\<span class=\"token operator\">*</span><span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token constant\">TIMED_WAITING</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span>\\<span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        \\<span class=\"token operator\">*</span> <span class=\"token class-name\">Thread</span> state <span class=\"token keyword\">for</span> a terminated thread<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            \\<span class=\"token operator\">*</span> <span class=\"token class-name\">The</span> thread has completed execution<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            \\<span class=\"token operator\">*</span><span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            <span class=\"token constant\">TERMINATED</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"enum类的常用方法\"><a class=\"anchor\" href=\"#enum类的常用方法\">#</a> Enum 类的常用方法</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestSeason</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 这是一个 main 方法，是程序的入口：</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">// 用 enum 关键字创建的 Season 枚举类上面的父类是：java.lang.Enum, 常用方法子类 Season 可以直接拿过来使用：</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">//toString ();---\\> 获取对象的名字</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">Season</span> autumn <span class=\"token operator\">=</span> <span class=\"token class-name\">Season</span><span class=\"token punctuation\">.</span><span class=\"token constant\">AUTUMN</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>autumn<span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\\<span class=\"token operator\">*</span><span class=\"token operator\">/</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//AUTUMN</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">//values: 返回枚举类对象的数组</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">Season</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> values <span class=\"token operator\">=</span> <span class=\"token class-name\">Season</span><span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Season</span> s<span class=\"token operator\">:</span>values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\\<span class=\"token operator\">*</span><span class=\"token operator\">/</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">//valueOf：通过对象名字获取这个枚举对象</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">// 注意：对象的名字必须传正确，否则抛出异常</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token class-name\">Season</span> autumn1 <span class=\"token operator\">=</span> <span class=\"token class-name\">Season</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"AUTUMN\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>autumn1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"枚举类实现接口\"><a class=\"anchor\" href=\"#枚举类实现接口\">#</a> 枚举类实现接口</h2>\n<p>定义一个接口：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">TestInterface</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>枚举类实现接口，并且重写 show 方法：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">Season</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">TestInterface</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token constant\">SPRING</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token constant\">SUMMER</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token constant\">AUTUMN</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token constant\">WINTER</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"这是Season....\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>测试类：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 这是一个 main 方法，是程序的入口：</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">Season</span> autumn <span class=\"token operator\">=</span> <span class=\"token class-name\">Season</span><span class=\"token punctuation\">.</span><span class=\"token constant\">AUTUMN</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        autumn<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">Season</span> summer <span class=\"token operator\">=</span> <span class=\"token class-name\">Season</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SUMMER</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        summer<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>上面发现所有的枚举对象，调用这个 show 方法的时候走的都是同一个方法，结果都一样：</p>\n<p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/1f3767921901f0bdaab9e90f542d92ee.png\" class=\"\"></p>\n<p>但是现在我想要：不同的对象 调用的 show 方法也不同：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">Season</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">TestInterface</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token constant\">SPRING</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"这是春天。。。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token constant\">SUMMER</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"这是夏天。。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token constant\">AUTUMN</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"这是秋天\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token constant\">WINTER</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"这是冬天\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span><span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"这是Season....\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>\\<span class=\"token operator\">*</span><span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 这是一个 main 方法，是程序的入口：</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">Season</span> autumn <span class=\"token operator\">=</span> <span class=\"token class-name\">Season</span><span class=\"token punctuation\">.</span><span class=\"token constant\">AUTUMN</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        autumn<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">Season</span> summer <span class=\"token operator\">=</span> <span class=\"token class-name\">Season</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SUMMER</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        summer<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"/2022/10/07/%E7%AC%AC15%E7%AB%A0Junit%E6%B3%A8%E8%A7%A3_%E6%9E%9A%E4%B8%BE/5739ebe7587a21e7d7144b96ec7a5833.png\" class=\"\"></p>\n<h2 id=\"实际应用\"><a class=\"anchor\" href=\"#实际应用\">#</a> 实际应用</h2>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 属性：</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Gender</span> sex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setAge</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> age<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">return</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Gender</span> <span class=\"token function\">getSex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">return</span> sex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setSex</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Gender</span> sex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sex <span class=\"token operator\">=</span> sex<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Person&#123;\"</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token string\">\"age=\"</span> <span class=\"token operator\">+</span> age <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token string\">\", name='\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token char\">'\\\\'</span>' <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token string\">\", sex='\"</span> <span class=\"token operator\">+</span> sex <span class=\"token operator\">+</span> <span class=\"token char\">'\\\\'</span>' <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token char\">'&#125;'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">Gender</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    男<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    女<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token comment\">// 这是一个 main 方法，是程序的入口：</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token class-name\">Person</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        p<span class=\"token punctuation\">.</span><span class=\"token function\">setAge</span><span class=\"token punctuation\">(</span><span class=\"token number\">19</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        p<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lili\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        p<span class=\"token punctuation\">.</span><span class=\"token function\">setSex</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Gender</span><span class=\"token punctuation\">.</span>男<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 传入枚举类 Gender 的对象：--\\> 在入口处对参数进行了限制</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>还可以通过枚举结合 switch 处理：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test02</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token comment\">// 这是一个 main 方法，是程序的入口：</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">Gender</span> sex <span class=\"token operator\">=</span> <span class=\"token class-name\">Gender</span><span class=\"token punctuation\">.</span>男<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">//switch 后面的（）中可以传入枚举类型</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">//switch 后面的（）:int,short,byte,char,String , 枚举</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>sex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">case</span> 女<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"是个女孩\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">case</span> 男<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"是个男孩\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "JavaSE"
            ]
        }
    ]
}