{
    "version": "https://jsonfeed.org/version/1",
    "title": "记录“美食”每刻 • All posts by \"rpc\" category",
    "description": "记录“美食”每刻",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2022/10/07/Distribution/RPC/",
            "url": "http://example.com/2022/10/07/Distribution/RPC/",
            "title": "RPC",
            "date_published": "2022-10-06T16:00:00.000Z",
            "content_html": "<h1 id=\"rpc\"><a class=\"anchor\" href=\"#rpc\">#</a> 【RPC】</h1>\n<h2 id=\"主要内容\"><a class=\"anchor\" href=\"#主要内容\">#</a> 主要内容</h2>\n<ol>\n<li>\n<p>项目结构变化</p>\n</li>\n<li>\n<p>RPC 简介</p>\n</li>\n<li>\n<p>RMI 实现 RPC</p>\n</li>\n<li>\n<p>HttpClient 实现 RPC</p>\n</li>\n<li>\n<p>Zookeeper 安装</p>\n</li>\n<li>\n<p>Zookeeper 客户端常用命令</p>\n</li>\n<li>\n<p>向 Zookeeper 中注册内容</p>\n</li>\n<li>\n<p>从 Zookeeper 中发现内容</p>\n</li>\n<li>\n<p>手写 RPC 框架</p>\n</li>\n</ol>\n<h2 id=\"学习目标\"><a class=\"anchor\" href=\"#学习目标\">#</a> 学习目标</h2>\n<table>\n<thead>\n<tr>\n<th>知识点</th>\n<th>要求</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>项目架构变化</td>\n<td>掌握</td>\n</tr>\n<tr>\n<td>RPC 简介</td>\n<td>掌握</td>\n</tr>\n<tr>\n<td>RMI 实现 RPC</td>\n<td>掌握</td>\n</tr>\n<tr>\n<td>HttpClient 实现 RPC</td>\n<td>了解</td>\n</tr>\n<tr>\n<td>Zookeeper 安装</td>\n<td>掌握</td>\n</tr>\n<tr>\n<td>Zookeeper 客户端常用命令</td>\n<td>掌握</td>\n</tr>\n<tr>\n<td>向 Zookeeper 中注册内容</td>\n<td>掌握</td>\n</tr>\n<tr>\n<td>从 zookeeper 中发现内容</td>\n<td>掌握</td>\n</tr>\n<tr>\n<td>手写 RPC 框架</td>\n<td>掌握</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"一-今天学什么为什么讲\"><a class=\"anchor\" href=\"#一-今天学什么为什么讲\">#</a> 一、今天学什么？为什么讲？</h3>\n<p>​\t 现在学习 RPC。后期学习的 Dubbo 是一个 RPC 框架，学习好现在的内容，学习 Dubbo 将会变得容易一些。</p>\n<h3 id=\"二-项目架构变化\"><a class=\"anchor\" href=\"#二-项目架构变化\">#</a> 二、项目架构变化</h3>\n<h4 id=\"1-单体架构\"><a class=\"anchor\" href=\"#1-单体架构\">#</a> 1     单体架构</h4>\n<h5 id=\"11-架构图\"><a class=\"anchor\" href=\"#11-架构图\">#</a> 1.1   架构图</h5>\n<p>​\t单体架构就是一个项目里面包含这个项目中全部代码。一个应用搞定全部功能。</p>\n<p>​\tDNS 服务器可以是单映射，也可以配置多个映射。</p>\n<p><img data-src=\"/2022/10/07/Distribution/RPC/rpc-01.png\" class=\"\"></p>\n<h5 id=\"12-软件代码结构\"><a class=\"anchor\" href=\"#12-软件代码结构\">#</a> 1.2   软件代码结构</h5>\n<p>​\t在单体架构项目中，团队都是通过包 (package) 进行区分每个模块。</p>\n<p>​\t总体包结构：com.msb.*. 分层包。</p>\n<pre><code>项目名：\n  -- com\n    --msb\n      -- common\n        -- utils\n      --user\n        -- controller\n        -- service\n        -- mapper\n      -- sys\n        -- controller\n        -- service\n        -- mapper\n</code></pre>\n<h4 id=\"13-优缺点\"><a class=\"anchor\" href=\"#13-优缺点\">#</a> 1.3   优缺点</h4>\n<h5 id=\"131-优点\"><a class=\"anchor\" href=\"#131-优点\">#</a> 1.3.1    优点</h5>\n<p>​\t部署简单</p>\n<p>​\t维护方便</p>\n<p>​\t成本低</p>\n<h5 id=\"132-缺点\"><a class=\"anchor\" href=\"#132-缺点\">#</a> 1.3.2    缺点</h5>\n<p>​\t当项目规模大、用户访问频率高、并发量大、数据量大时，会大大降低程序执行效率，甚至出现服务器宕机等情况。</p>\n<h4 id=\"14-适用项目\"><a class=\"anchor\" href=\"#14-适用项目\">#</a> 1.4   适用项目</h4>\n<p>传统管理项目，小型互联网项目。</p>\n<h4 id=\"2-分布式架构\"><a class=\"anchor\" href=\"#2-分布式架构\">#</a> 2     分布式架构</h4>\n<h5 id=\"21-架构图简易版\"><a class=\"anchor\" href=\"#21-架构图简易版\">#</a> 2.1   架构图（简易版）</h5>\n<p>​\t分布式架构会把一个项目按照特定要求（多按照模块或功能）拆分成多个项目，每个项目分别部署到不同的服务器上。</p>\n<p><img data-src=\"/2022/10/07/Distribution/RPC/rpc-02.png\" class=\"\"></p>\n<h5 id=\"22-软件代码结构\"><a class=\"anchor\" href=\"#22-软件代码结构\">#</a> 2.2   软件代码结构</h5>\n<pre><code>项目1：\n  --com.msb.xxx\n    -- controller\n    -- service\n    -- mapper\n项目2\n  --com.msb.mmm\n    -- controller\n    -- service\n    -- mapper\n</code></pre>\n<h4 id=\"23-优缺点\"><a class=\"anchor\" href=\"#23-优缺点\">#</a> 2.3   优缺点</h4>\n<h5 id=\"231-优点\"><a class=\"anchor\" href=\"#231-优点\">#</a> 2.3.1    优点</h5>\n<p>​\t增大了系统可用性。减少单点故障，导致整个应用不可用。</p>\n<p>​\t增加重用性。因为模块化，所以重用性更高。</p>\n<p>​\t增加可扩展性。有新的模块增加新的项目即可。</p>\n<p>​\t增加每个模块的负载能力。因为每个模块都是一个项目，所以每个模块的负载能力更强。</p>\n<h5 id=\"232-缺点\"><a class=\"anchor\" href=\"#232-缺点\">#</a> 2.3.2    缺点</h5>\n<p>​\t成本更高。</p>\n<p>​\t架构更加复杂。</p>\n<p>​\t整体响应之间变长，一些业务需要多项目通信后给出结果。</p>\n<p>​\t吞吐量更大。吞吐量 = 请求数 / 秒。</p>\n<h4 id=\"24-待解决问题\"><a class=\"anchor\" href=\"#24-待解决问题\">#</a> 2.4   待解决问题</h4>\n<p>​\t分布式架构中各个模块如何进行通信？</p>\n<p>​\t可以使用 Http 协议，也可以使用 RPC 协议通信，也可以使用其他的通信方式。我们本阶段使用的是 RPC 协议，因为它比 HTTP 更适合项目内部通信。</p>\n<h3 id=\"三-rpc简介\"><a class=\"anchor\" href=\"#三-rpc简介\">#</a> 三、RPC 简介</h3>\n<h4 id=\"1-rfc\"><a class=\"anchor\" href=\"#1-rfc\">#</a> 1     RFC</h4>\n<p>​\tRFC (Request For Comments) 是由互联网工程任务组 (IETF) 发布的文件集。文件集中每个文件都有自己唯一编号，例如：rfc1831。目前 RFC 文件由互联网协会 (Internet Society，ISOC) 赞助发型。</p>\n<p>​\tRPC 就收集到了 rfc 1831 中。可以通过下面网址查看：</p>\n<p>​\t<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kYXRhdHJhY2tlci5pZXRmLm9yZy9kb2MvcmZjMTgzMS8=\">https://datatracker.ietf.org/doc/rfc1831/</span></p>\n<h4 id=\"2-rpc\"><a class=\"anchor\" href=\"#2-rpc\">#</a> 2     RPC</h4>\n<p>​\tRPC 在 rfc 1831 中收录 ，RPC（Remote Procedure Call） 远程过程调用协议</p>\n<p>​\tRPC 协议规定允许互联网中一台主机程序调用另一台主机程序，而程序员无需对这个交互过程进行编程。在 RPC 协议中强调当 A 程序调用 B 程序中功能或方法时，A 是不知道 B 中方法具体实现的。</p>\n<p>​\tRPC 是上层协议，底层可以基于 TCP 协议，也可以基于 HTTP 协议。一般我们说 RPC 都是基于 RPC 的具体实现，如：Dubbo 框架。从广义上讲只要是满足网络中进行通讯调用都统称为 RPC，甚至 HTTP 协议都可以说是 RPC 的具体实现，但是具体分析看来 RPC 协议要比 HTTP 协议更加高效，基于 RPC 的框架功能更多。</p>\n<p>​\tRPC 协议是基于分布式架构而出现的，所以 RPC 在分布式项目中有着得天独厚的优势。</p>\n<h4 id=\"3-rpc和http对比\"><a class=\"anchor\" href=\"#3-rpc和http对比\">#</a> 3     RPC 和 HTTP 对比</h4>\n<h5 id=\"31-具体实现\"><a class=\"anchor\" href=\"#31-具体实现\">#</a> 3.1   具体实现</h5>\n<p>​\tRPC：可以基于 TCP 协议，也可以基于 HTTP 协议。</p>\n<p>​\tHTTP：基于 HTTP 协议</p>\n<h5 id=\"32-效率\"><a class=\"anchor\" href=\"#32-效率\">#</a> 3.2   效率</h5>\n<p>​\tRPC：自定义具体实现可以减少很多无用的报文内容，使得报文体积更小。</p>\n<p>​\tHTTP：如果是 HTTP 1.1 报文中很多内容都是无用的。如果是 HTTP2.0 以后和 RPC 相差不大，比 RPC 少的可能就是一些服务治理等功能。</p>\n<h5 id=\"33-连接方式\"><a class=\"anchor\" href=\"#33-连接方式\">#</a> 3.3   连接方式</h5>\n<p>​\tRPC：长连接支持。</p>\n<p>​\tHTTP：每次连接都是<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbmV2ZXJtb3Jld2FuZy9wLzg5MDY4MzMuaHRtbA==\">三次握手四次挥手</span>。</p>\n<h5 id=\"34-性能\"><a class=\"anchor\" href=\"#34-性能\">#</a> 3.4   性能</h5>\n<p>​\tRPC 可以基于很多序列化方式。如：thrift</p>\n<p>​\tHTTP 主要是通过 JSON，序列化和反序列效率更低。</p>\n<h5 id=\"35-注册中心\"><a class=\"anchor\" href=\"#35-注册中心\">#</a> 3.5   注册中心</h5>\n<p>​\tRPC ：一般 RPC 框架都带有注册中心。</p>\n<p>​\tHTTP：都是直连。</p>\n<h5 id=\"36-负载均衡\"><a class=\"anchor\" href=\"#36-负载均衡\">#</a> 3.6   负载均衡</h5>\n<p>​\tRPC：绝大多数 RPC 框架都带有负载均衡测量。</p>\n<p>​\tHTTP：一般都需要借助第三方工具。如：nginx</p>\n<h5 id=\"37-综合结论\"><a class=\"anchor\" href=\"#37-综合结论\">#</a> 3.7   综合结论</h5>\n<p>​\tRPC 框架一般都带有丰富的服务治理等功能，更适合企业内部接口调用。而 HTTP 更适合多平台之间相互调用。</p>\n<h3 id=\"四-httpclient实现rpc\"><a class=\"anchor\" href=\"#四-httpclient实现rpc\">#</a> 四、HttpClient 实现 RPC</h3>\n<h4 id=\"1-httpclient简介\"><a class=\"anchor\" href=\"#1-httpclient简介\">#</a> 1     HttpClient 简介</h4>\n<p>​\t在 JDK 中 java.net 包下提供了用户 HTTP 访问的基本功能，但是它缺少灵活性或许多应用所需要的功能。</p>\n<p>​\tHttpClient 起初是 Apache Jakarta Common 的子项目。用来提供高效的、最新的、功能丰富的支持 HTTP 协议的客户端编程工具包，并且它支持 HTTP 协议最新的版本。2007 年成为顶级项目。</p>\n<p>​\t通俗解释：HttpClient 可以实现使用 Java 代码完成标准 HTTP 请求及响应。</p>\n<h4 id=\"2-代码实现\"><a class=\"anchor\" href=\"#2-代码实现\">#</a> 2     代码实现</h4>\n<h5 id=\"21-服务端\"><a class=\"anchor\" href=\"#21-服务端\">#</a> 2.1   服务端</h5>\n<p>​\t新建项目 HttpClientServer</p>\n<h5 id=\"211-新建控制器\"><a class=\"anchor\" href=\"#211-新建控制器\">#</a> 2.1.1    新建控制器</h5>\n<p>com.msb.controller.DemoController</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Controller</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DemoController</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/demo\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@ResponseBody</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">demo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"demo\"</span><span class=\"token operator\">+</span>param<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h5 id=\"212-新建启动器\"><a class=\"anchor\" href=\"#212-新建启动器\">#</a> 2.1.2    新建启动器</h5>\n<p>​\t新建启动器</p>\n<p>com.msb.HttpClientServerApplication</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HttpClientServerApplication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpClientServerApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"22-客户端\"><a class=\"anchor\" href=\"#22-客户端\">#</a> 2.2   客户端</h4>\n<p>​\t新建 HttpClientDemo 项目</p>\n<h5 id=\"221-添加依赖\"><a class=\"anchor\" href=\"#221-添加依赖\">#</a> 2.2.1    添加依赖</h5>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.httpcomponents<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>httpclient<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>4.5.10<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h5 id=\"222-新建类\"><a class=\"anchor\" href=\"#222-新建类\">#</a> 2.2.2    新建类</h5>\n<p>​\t新建 com.msb.HttpClientDemo，编写主方法。</p>\n<h6 id=\"2221-使用get方法访问\"><a class=\"anchor\" href=\"#2221-使用get方法访问\">#</a> 2.2.2.1 使用 GET 方法访问</h6>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    \t<span class=\"token comment\">// 创建 http 工具（理解成：浏览器） 发起请求，解析响应</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">CloseableHttpClient</span> httpClient <span class=\"token operator\">=</span> <span class=\"token class-name\">HttpClients</span><span class=\"token punctuation\">.</span><span class=\"token function\">createDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// 请求路径</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">URIBuilder</span> uriBuilder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URIBuilder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:8080/demo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        uriBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">addParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"param\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"get123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\">// 创建 HttpGet 请求对象</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">HttpGet</span> get <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpGet</span><span class=\"token punctuation\">(</span>uriBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">// 创建响应对象</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">CloseableHttpResponse</span> response <span class=\"token operator\">=</span> httpClient<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>get<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// 由于响应体是字符串，因此把 HttpEntity 类型转换为字符串类型，并设置字符编码</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">String</span> result <span class=\"token operator\">=</span> <span class=\"token class-name\">EntityUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">getEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">// 输出结果</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">// 释放资源</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        response<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        httpClient<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">URISyntaxException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h6 id=\"2222-使用post方式访问\"><a class=\"anchor\" href=\"#2222-使用post方式访问\">#</a> 2.2.2.2 使用 POST 方式访问</h6>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HttpClientDemo</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        \t<span class=\"token comment\">// 创建 http 工具（理解成：浏览器） 发起请求，解析响应</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token class-name\">CloseableHttpClient</span> httpClient <span class=\"token operator\">=</span> <span class=\"token class-name\">HttpClients</span><span class=\"token punctuation\">.</span><span class=\"token function\">createDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token comment\">// 创建 HttpPOST 请求对象</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token class-name\">HttpPost</span> post <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpPost</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:8080/demo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token comment\">// 所有请求参数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NameValuePair</span><span class=\"token punctuation\">></span></span> params <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            params<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BasicNameValuePair</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"param\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token comment\">// 创建 HttpEntity 接口的文本实现类的对象，放入参数并设置编码</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token class-name\">HttpEntity</span> httpEntity <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UrlEncodedFormEntity</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">,</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token comment\">// 放入到 HttpPost 对象中</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            post<span class=\"token punctuation\">.</span><span class=\"token function\">setEntity</span><span class=\"token punctuation\">(</span>httpEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>            </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token comment\">// 创建响应对象</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token class-name\">CloseableHttpResponse</span> response <span class=\"token operator\">=</span> httpClient<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token comment\">// 由于响应体是字符串，因此把 HttpEntity 类型转换为字符串类型</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token class-name\">String</span> result <span class=\"token operator\">=</span> <span class=\"token class-name\">EntityUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">getEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token comment\">// 输出结果</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token comment\">// 释放资源</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            response<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            httpClient<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"3-jackson用法\"><a class=\"anchor\" href=\"#3-jackson用法\">#</a> 3. Jackson 用法</h4>\n<h5 id=\"31-把对象转换为json字符串\"><a class=\"anchor\" href=\"#31-把对象转换为json字符串\">#</a> 3.1   把对象转换为 json 字符串</h5>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">ObjectMapper</span> objectMapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjectMapper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">People</span> peo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">People</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>objectMapper<span class=\"token punctuation\">.</span><span class=\"token function\">writeValueAsString</span><span class=\"token punctuation\">(</span>peo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"32-把json字符串转换为对象\"><a class=\"anchor\" href=\"#32-把json字符串转换为对象\">#</a> 3.2   把 json 字符串转换为对象</h5>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">ObjectMapper</span> objectMapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjectMapper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">People</span> peo <span class=\"token operator\">=</span> objectMapper<span class=\"token punctuation\">.</span><span class=\"token function\">readValue</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">,</span> <span class=\"token class-name\">People</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"33-把json字符串转换为list集合\"><a class=\"anchor\" href=\"#33-把json字符串转换为list集合\">#</a> 3.3   把 json 字符串转换为 List 集合</h5>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">ObjectMapper</span> objectMapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjectMapper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">JavaType</span> javaType <span class=\"token operator\">=</span> objectMapper<span class=\"token punctuation\">.</span><span class=\"token function\">getTypeFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">constructParametricType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">People</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">People</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> objectMapper<span class=\"token punctuation\">.</span><span class=\"token function\">readValue</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">,</span> javaType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"4-httpclient请求包含json\"><a class=\"anchor\" href=\"#4-httpclient请求包含json\">#</a> 4     HttpClient 请求包含 JSON</h4>\n<h5 id=\"41-java代码实现\"><a class=\"anchor\" href=\"#41-java代码实现\">#</a> 4.1   java 代码实现</h5>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HttpClientDemo</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token class-name\">CloseableHttpClient</span> httpClient <span class=\"token operator\">=</span> <span class=\"token class-name\">HttpClients</span><span class=\"token punctuation\">.</span><span class=\"token function\">createDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token class-name\">HttpPost</span> post <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpPost</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:8080/demo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token class-name\">HttpEntity</span> httpEntity<span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t\t<span class=\"token class-name\">String</span> json <span class=\"token operator\">=</span> <span class=\"token string\">\"&#123;&#125;\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token class-name\">StringEntity</span> entity <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringEntity</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ContentType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">APPLICATION_JSON</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            post<span class=\"token punctuation\">.</span><span class=\"token function\">setEntity</span><span class=\"token punctuation\">(</span>entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token class-name\">CloseableHttpResponse</span> response <span class=\"token operator\">=</span> httpClient<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token class-name\">String</span> result <span class=\"token operator\">=</span> <span class=\"token class-name\">EntityUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">getEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            response<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            httpClient<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre> <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testInputSteam</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token class-name\">CloseableHttpClient</span> httpClient <span class=\"token operator\">=</span> <span class=\"token class-name\">HttpClients</span><span class=\"token punctuation\">.</span><span class=\"token function\">createDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token class-name\">URIBuilder</span> uriBuilder <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URIBuilder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:8080/demo4\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token class-name\">HttpPost</span> httpPost <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpPost</span><span class=\"token punctuation\">(</span>uriBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token comment\">// 创建集合</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> users <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            users<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"李四\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            users<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"张三\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token comment\">// 将集合对象转化成 JSON 字符串</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token class-name\">ObjectMapper</span> objectMapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjectMapper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token class-name\">String</span> <span class=\"token class-name\">UserJson</span> <span class=\"token operator\">=</span> objectMapper<span class=\"token punctuation\">.</span><span class=\"token function\">writeValueAsString</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UserJson</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token class-name\">StringEntity</span> stringEntity <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringEntity</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UserJson</span><span class=\"token punctuation\">,</span> \t\t  <span class=\"token class-name\">ContentType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">APPLICATION_JSON</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token comment\">// 设置请求体</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            httpPost<span class=\"token punctuation\">.</span><span class=\"token function\">setEntity</span><span class=\"token punctuation\">(</span>stringEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token class-name\">CloseableHttpResponse</span> response<span class=\"token operator\">=</span> httpClient<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>httpPost<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token class-name\">String</span> result <span class=\"token operator\">=</span> <span class=\"token class-name\">EntityUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">getEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            response<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            httpClient<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"5-控制器接口参数\"><a class=\"anchor\" href=\"#5-控制器接口参数\">#</a> 5     控制器接口参数</h4>\n<p>​\t@RequestBody 把请求体中流数据转换为指定的对象。多用在请求参数是 json 数据且请求的 Content-Type=”application/json”</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/demo4\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@ResponseBody</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">demo4</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">People</span><span class=\"token punctuation\">></span></span> list<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"6-ajax发送json参数写法\"><a class=\"anchor\" href=\"#6-ajax发送json参数写法\">#</a> 6   Ajax 发送 json 参数写法</h4>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var json = '[&#123;\"id\":123,\"name\":\"msb\"&#125;,&#123;\"id\":123,\"name\":\"mashibing\"&#125;]';</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> $.ajax(&#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     url:'/demo5',</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     type:'post',</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     success:function(data)&#123;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>         alert(data);</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>         for(var i = 0 ;i&lt;data.length;i++)&#123;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>             alert(data[i].id +\"  \"+data[i].name);</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>         &#125;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>     &#125;,</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>     contentType:'application/json',//请求体中内容类型</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>     dataType:'json',//响应内容类型。</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>     data:json</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> &#125;);</pre></td></tr></table></figure><h4 id=\"7-跨域\"><a class=\"anchor\" href=\"#7-跨域\">#</a> 7     跨域</h4>\n<p>​\t跨域：协议、ip、端口中只要有一个不同就是跨域请求。</p>\n<p>​\t同源策略：浏览器默认只允许 ajax 访问同源 (协议、ip、端口都相同) 内容。</p>\n<p>​\t解决同源策略：</p>\n<p>​\t在控制器接口上添加 @CrossOrigin。表示允许跨域。本质在响应头中添加 Access-Control-Allow-Origin: *</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>var json = '[&#123;\"id\":123,\"name\":\"msb\"&#125;,&#123;\"id\":456,\"name\":\"mashibing\"&#125;]';</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> $.ajax(&#123;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     url:'/demo5',</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     type:'post',</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     success:function(data)&#123;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>         alert(data);</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>         for(var i = 0 ;i&lt;data.length;i++)&#123;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>             alert(data[i].id +\"  \"+data[i].name);</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>         &#125;</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>     &#125;,</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>     contentType:'application/json',//请求体中内容类型</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>     dataType:'json',//响应内容类型。</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>     data:json</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> &#125;);</pre></td></tr></table></figure><h3 id=\"五-rmi实现rpc\"><a class=\"anchor\" href=\"#五-rmi实现rpc\">#</a> 五、RMI 实现 RPC</h3>\n<h4 id=\"1-rmi简-介\"><a class=\"anchor\" href=\"#1-rmi简-介\">#</a> 1     RMI 简 介</h4>\n<p>​\tRMI (Remote Method Invocation) 远程方法调用。</p>\n<p>​\tRMI 是从 JDK1.2 推出的功能，它可以实现在一个 Java 应用中可以像调用本地方法一样调用另一个服务器中 Java 应用（JVM）中的内容。</p>\n<p>​\tRMI 是 Java 语言的远程调用，无法实现跨语言。</p>\n<h4 id=\"2-执行流程\"><a class=\"anchor\" href=\"#2-执行流程\">#</a> 2     执行流程</h4>\n<p><img data-src=\"/2022/10/07/Distribution/RPC/rpc-03.png\" class=\"\"></p>\n<p>​\tRegistry (注册表) 是放置所有服务器对象的命名空间。 每次服务端创建一个对象时，它都会使用 bind () 或 rebind () 方法注册该对象。 这些是使用称为绑定名称的唯一名称注册的。</p>\n<p>​\t要调用远程对象，客户端需要该对象的引用。即通过服务端绑定的名称从注册表中获取对象 (lookup () 方法)。</p>\n<h4 id=\"3-api介绍\"><a class=\"anchor\" href=\"#3-api介绍\">#</a> 3     API 介绍</h4>\n<h5 id=\"31-remote\"><a class=\"anchor\" href=\"#31-remote\">#</a> 3.1   Remote</h5>\n<p>​\tjava.rmi.Remote 定义了此接口为远程调用接口。如果接口被外部调用，需要继承此接口。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Remote</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"32-remoteexception\"><a class=\"anchor\" href=\"#32-remoteexception\">#</a> 3.2   RemoteException</h4>\n<p>​\tjava.rmi.RemoteException</p>\n<p>​\t继承了 Remote 接口的接口中，如果方法是允许被远程调用的，需要抛出此异常。</p>\n<h4 id=\"33-unicastremoteobject\"><a class=\"anchor\" href=\"#33-unicastremoteobject\">#</a> 3.3   UnicastRemoteObject</h4>\n<p>​\tjava.rmi.server.UnicastRemoteObject</p>\n<p>​\t此类实现了 Remote 接口和 Serializable 接口。</p>\n<p>​\t自定义接口实现类除了实现自定义接口还需要继承此类。</p>\n<h4 id=\"34-locateregistry\"><a class=\"anchor\" href=\"#34-locateregistry\">#</a> 3.4   LocateRegistry</h4>\n<p>​\tjava.rmi.registry.LocateRegistry</p>\n<p>​\t可以通过 LocateRegistry 在本机上创建 Registry，通过特定的端口就可以访问这个 Registry。</p>\n<h4 id=\"35-naming\"><a class=\"anchor\" href=\"#35-naming\">#</a> 3.5   Naming</h4>\n<p>​\tjava.rmi.Naming</p>\n<p>​\tNaming 定义了发布内容可访问 RMI 名称。也是通过 Naming 获取到指定的远程方法。</p>\n<h4 id=\"4-代码实现\"><a class=\"anchor\" href=\"#4-代码实现\">#</a> 4     代码实现</h4>\n<h5 id=\"41-服务端创建\"><a class=\"anchor\" href=\"#41-服务端创建\">#</a> 4.1   服务端创建</h5>\n<p>​\t创建 RmiServer 项目</p>\n<h5 id=\"411-编写接口\"><a class=\"anchor\" href=\"#411-编写接口\">#</a> 4.1.1    编写接口</h5>\n<p>​\tcom.msb.service.DemoService 编写</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">DemoService</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Remote</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token class-name\">String</span> <span class=\"token function\">demo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> demo<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">RemoteException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h5 id=\"412-编写实现类\"><a class=\"anchor\" href=\"#412-编写实现类\">#</a> 4.1.2    编写实现类</h5>\n<p>​\tcom.msb.service.impl.DemoServiceImpl 编写。</p>\n<p>​\t注意：构造方法是 public 的。默认生成 protected</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DemoServiceImpl</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">UnicastRemoteObject</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">DemoService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DemoServiceImpl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">RemoteException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">demo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> demo<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">RemoteException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> demo<span class=\"token operator\">+</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h5 id=\"413-编写主方法\"><a class=\"anchor\" href=\"#413-编写主方法\">#</a> 4.1.3    编写主方法</h5>\n<p>​\t编写 com.msb.DemoServer 类，生成主方法</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DemoServiceImpl</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">UnicastRemoteObject</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">DemoService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DemoServiceImpl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">RemoteException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">demo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> demo<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">RemoteException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> demo<span class=\"token operator\">+</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DemoStart</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token comment\">//1 创建接口实现类</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token class-name\">RmiDemo</span> rmiDemo <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RmiDemoImpl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token comment\">//2 创建注册表</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token class-name\">LocateRegistry</span><span class=\"token punctuation\">.</span><span class=\"token function\">createRegistry</span><span class=\"token punctuation\">(</span><span class=\"token number\">8099</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token comment\">//3 绑定服务</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token class-name\">Naming</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rmi://localhost:8099/rmiDemo\"</span><span class=\"token punctuation\">,</span>rmiDemo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"服务器启动！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">RemoteException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">AlreadyBoundException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">MalformedURLException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h5 id=\"414-运行项目\"><a class=\"anchor\" href=\"#414-运行项目\">#</a> 4.1.4    运行项目</h5>\n<p>​\t运行后项目，项目一直处于启动状态，表示可以远程访问此项目中的远程方法。</p>\n<h4 id=\"42-创建客户端代码\"><a class=\"anchor\" href=\"#42-创建客户端代码\">#</a> 4.2   创建客户端代码</h4>\n<p>​\t创建项目 RmiClient</p>\n<h5 id=\"421-复制服务端接口\"><a class=\"anchor\" href=\"#421-复制服务端接口\">#</a> 4.2.1    复制服务端接口</h5>\n<p>​\t把服务端 com.msb.service.DemoService 粘贴到项目中</p>\n<h5 id=\"422-创建主方法类\"><a class=\"anchor\" href=\"#422-创建主方法类\">#</a> 4.2.2    创建主方法类</h5>\n<p>​\t新建 com.msb.DemoClient</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DemoServiceImpl</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">UnicastRemoteObject</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">DemoService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DemoServiceImpl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">RemoteException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">demo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> demo<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">RemoteException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> demo<span class=\"token operator\">+</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"六-zookeeper安装\"><a class=\"anchor\" href=\"#六-zookeeper安装\">#</a> 六、Zookeeper 安装</h3>\n<h4 id=\"1-zookeeper简介\"><a class=\"anchor\" href=\"#1-zookeeper简介\">#</a> 1     Zookeeper 简介</h4>\n<p>​\tzookeeper 分布式管理软件。常用它做注册中心（依赖 zookeeper 的发布 / 订阅功能）、配置文件中心、分布式锁配置、集群管理等。</p>\n<p>​\tzookeeper 一共就有两个版本。主要使用的是 java 语言写的。</p>\n<h4 id=\"2-安装\"><a class=\"anchor\" href=\"#2-安装\">#</a> 2     安装</h4>\n<h5 id=\"21-上传压缩文件\"><a class=\"anchor\" href=\"#21-上传压缩文件\">#</a> 2.1   上传压缩文件</h5>\n<p>​\t上传到 /usr/local/tmp 中</p>\n<h4 id=\"22-解压\"><a class=\"anchor\" href=\"#22-解压\">#</a> 2.2   解压</h4>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">tar</span> zxf apache-zookeeper-3.5.5-bin.tar.gz</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">cp</span> <span class=\"token parameter variable\">-r</span> apache-zookeeper-3.5.5-bin <span class=\"token punctuation\">..</span>/zookeeper</pre></td></tr></table></figure><h4 id=\"23-新建data目录\"><a class=\"anchor\" href=\"#23-新建data目录\">#</a> 2.3   新建 data 目录</h4>\n<p>进入到 zookeeper 中</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /usr/local/zookeeper</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">mkdir</span> data</pre></td></tr></table></figure><h4 id=\"24-修改配置文件\"><a class=\"anchor\" href=\"#24-修改配置文件\">#</a> 2.4   修改配置文件</h4>\n<p>进入 conf 中</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> conf</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">cp</span> zoo_sample.cfg zoo.cfg</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">vim</span> zoo.cfg</pre></td></tr></table></figure><p>修改 dataDir 为 data 文件夹路径</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">dataDir</span><span class=\"token operator\">=</span>/usr/local/zookeeper/data</pre></td></tr></table></figure><h4 id=\"25-启动zookeeper\"><a class=\"anchor\" href=\"#25-启动zookeeper\">#</a> 2.5   启动 zookeeper</h4>\n<p>进入 bin 文件夹</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /usr/local/zookeeper/bin</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>./zkServer.sh start</pre></td></tr></table></figure><p>通过 status 查看启动状态。稍微有个等待时间</p>\n<p># ./zkServer.sh status</p>\n<h3 id=\"六-zookeeper安装docker\"><a class=\"anchor\" href=\"#六-zookeeper安装docker\">#</a> 六、Zookeeper 安装 (Docker)</h3>\n<p><strong>资料：</strong></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20va2luZ2tvby9wLzg3MzI0NDguaHRtbA==\">https://www.cnblogs.com/kingkoo/p/8732448.html</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL2F2ODA4NzQ2NjY/ZnJvbT1zZWFyY2gmYW1wO3NlaWQ9MTYyOTE0NTAyNTIxMTk5OTEwNCZhbXA7c3BtX2lkX2Zyb209MzMzLjMzNy4wLjA=\">https://www.bilibili.com/video/av80874666?from=search&amp;seid=1629145025211999104&amp;spm_id_from=333.337.0.0</span></p>\n<h4 id=\"1-zookeeper简介-2\"><a class=\"anchor\" href=\"#1-zookeeper简介-2\">#</a> 1     Zookeeper 简介</h4>\n<p>​\tzookeeper 分布式管理软件。常用它做注册中心（依赖 zookeeper 的发布 / 订阅功能）、配置文件中心、分布式锁配置、集群管理等。</p>\n<p>​\tzookeeper 一共就有两个版本。主要使用的是 java 语言写的。</p>\n<h4 id=\"2-安装-2\"><a class=\"anchor\" href=\"#2-安装-2\">#</a> 2     安装</h4>\n<h5 id=\"21-拉取镜像\"><a class=\"anchor\" href=\"#21-拉取镜像\">#</a> 2.1   拉取镜像</h5>\n<ul>\n<li>\n<p>自定义 zookeeper 目录</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> /root/zookeeper</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">mkdir</span> /root/zookeeper/data <span class=\"token comment\">#原因参照上面 - 在 docker 中 data 其实也不用在宿主机行自己生成 (目前如此)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#仓库官网查看版本或者用命令直接查</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">docker</span> search zookeeper</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#拉取特定版本（3.5）</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">docker</span> pull zookeeper:3.5</pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"22-创建并启动容器\"><a class=\"anchor\" href=\"#22-创建并启动容器\">#</a> 2.2 创建并启动容器</h4>\n<p>​\t<strong>注：就目前而且 好像直接在 docker 中使用 zookeeper 不需要过多的配置，直接用命令创建吧，下面的解释先不看，具体原因后面补充</strong></p>\n<p>命令：</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--name</span> zookeeper <span class=\"token parameter variable\">-v</span> /root/zookeeper/data:/data <span class=\"token parameter variable\">-p</span> <span class=\"token number\">2181</span>:2181 <span class=\"token parameter variable\">--restart</span> always zookeeper:3.5</pre></td></tr></table></figure><ul>\n<li><code>--restart always</code> ：始终重启</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vYWdlb3ZiL3AvMTUzMjg3OTYuaHRtbA==\">https://www.cnblogs.com/ageovb/p/15328796.html</span></li>\n</ul>\n<p><strong>解释</strong></p>\n<ul>\n<li>\n<p>1、这里为啥只挂载了 data 目录 --》因为当我们 没有直接的安装压缩包时，我们的就没有配置文件，所以我们直接生成，容器中就回自动生成 conf 文件，其中就有我们需要的 一系列配置文件，我们第一次创建的时候就可以如此，我们在进<strong>行配置文件的修改完成</strong>后，要将所有配置文件放到我们  bash 目录中的 conf 文件中去。</p>\n</li>\n<li>\n<p>2、第一次进入容器</p>\n<ul>\n<li>\n<p>在 bash 目录下进入 bin 目录然后输入开启客户端命令</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./zkCli.sh</pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>3、第二次进入容器</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> zookeeper /bin/bash  <span class=\"token parameter variable\">-p</span>    端口号</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>或</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> zookeeper zkCli.sh</pre></td></tr></table></figure></li>\n</ul>\n<p><em><em>只看到这就可</em>，容器创建成功就可以直接用了，还没有出现问题。有待补充</em> *</p>\n<h4 id=\"23-修改配置文件\"><a class=\"anchor\" href=\"#23-修改配置文件\">#</a> 2.3   修改配置文件</h4>\n<ul>\n<li>配置文件来源\n<ul>\n<li>1、可以去我们的资料中直接解压出<strong> conf</strong> 目录粘贴到我们的 zookeeper 目录中去</li>\n<li>2、可以直接进行第 3 步，完事之后直接会在容器中生成。找到 conf 文件，修改其中的 zoo.cfg 文件，</li>\n</ul>\n</li>\n</ul>\n<p>进入容器后，找到 conf 中的 **zoo.cfg 文件，接下来就是修改 <strong>dataDir</strong> 路径为容器中的 data 文件目录。</p>\n<p>前提是要下载 vim ，因为容器中没有，命令是：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">apt-get</span> update</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> <span class=\"token function\">vim</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">cd</span> conf</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># 没有 zoo.cfg 就先拷贝 zoo_sample.cfg 两个其实是一个文件，内容相同</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#cp zoo_sample.cfg zoo.cfg</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">vim</span> zoo.cfg</pre></td></tr></table></figure><p>修改 dataDir 为 data 文件夹路径</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">dataDir</span><span class=\"token operator\">=</span>/usr/local/zookeeper/data</pre></td></tr></table></figure><h3 id=\"注docker集群搭建在solr笔记中\"><a class=\"anchor\" href=\"#注docker集群搭建在solr笔记中\">#</a> 注：docker 集群搭建在 solr 笔记中</h3>\n<h3 id=\"七-zookeeper客户端常用命令\"><a class=\"anchor\" href=\"#七-zookeeper客户端常用命令\">#</a> 七、Zookeeper 客户端常用命令</h3>\n<p>​\t进入到./zkCli.sh 命令行工具后，可以使用下面常用命令</p>\n<h4 id=\"1-ls\"><a class=\"anchor\" href=\"#1-ls\">#</a> 1    ls</h4>\n<p>​\tls [-s][-R] /path</p>\n<p>​\t-s 详细信息，替代老版的 ls2</p>\n<p>​\t-R 当前目录和子目录中内容都罗列出来</p>\n<p>​\t例如：ls -R / 显示根目录下所有内容</p>\n<h4 id=\"2-create\"><a class=\"anchor\" href=\"#2-create\">#</a> 2     create</h4>\n<p>​\tcreate /path [data]</p>\n<p>​\t[data] 包含内容</p>\n<p>​\t创建指定路径信息</p>\n<p>​\t例如：create /demo 创建 /demo</p>\n<h4 id=\"3-get\"><a class=\"anchor\" href=\"#3-get\">#</a> 3     get</h4>\n<p>​\tget [-s] /path</p>\n<p>​\t[-s] 详细信息</p>\n<p>​\t查看指定路径下内容。</p>\n<p>​\t例如： get -s /demo</p>\n<p><img data-src=\"/2022/10/07/Distribution/RPC/rpc-04.png\" class=\"\"></p>\n<p>​\tnull: 存放的数据</p>\n<p>​\tcZxid: 创建时 zxid (znode 每次改变时递增的事务 id)</p>\n<p>​\tctime: 创建时间戳</p>\n<p>​\tmZxid: 最近一次更新的 zxid</p>\n<p>​\tmtime: 最近一次更新的时间戳</p>\n<p>​\tpZxid: 子节点的 zxid</p>\n<p>​\tcversion: 子节点更新次数</p>\n<p>​\tdataversion: 节点数据更新次数</p>\n<p>​\taclVersion: 节点 ACL (授权信息) 的更新次数</p>\n<p>​\tephemeralOwner: 如果该节点为 ephemeral 节点 (临时，生命周期与 session 一样), ephemeralOwner 值表示与该节点绑定的 session id. 如果该节点不是 ephemeral 节点，ephemeralOwner 值为 0.</p>\n<p>​\tdataLength: 节点数据字节数</p>\n<p>​\tnumChildren: 子节点数量</p>\n<h4 id=\"4-set\"><a class=\"anchor\" href=\"#4-set\">#</a> 4     set</h4>\n<p>​\tset /path data</p>\n<p>​\t设置节点内容</p>\n<h4 id=\"5-delete\"><a class=\"anchor\" href=\"#5-delete\">#</a> 5     delete</h4>\n<p>​\tdelete /path</p>\n<p>​\t删除节点</p>\n<h3 id=\"八-向zookeeper中注册内容\"><a class=\"anchor\" href=\"#八-向zookeeper中注册内容\">#</a> 八、向 Zookeeper 中注册内容</h3>\n<p>​\t新建项目 ZookeeperClient</p>\n<h4 id=\"1-创建demo\"><a class=\"anchor\" href=\"#1-创建demo\">#</a> 1     创建 /demo</h4>\n<p>​\t使用 zookeeper 的客户端命令工具创建 /demo</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./zkCli.sh</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>create /demos</pre></td></tr></table></figure><h4 id=\"2-添加依赖\"><a class=\"anchor\" href=\"#2-添加依赖\">#</a> 2     添加依赖</h4>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.zookeeper<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>zookeeper<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.5.5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h4 id=\"3-编写代码\"><a class=\"anchor\" href=\"#3-编写代码\">#</a> 3     编写代码</h4>\n<p>​\t创建类 com.msb.MyApp。</p>\n<p>​\tZooDefs.Ids.OPEN_ACL_UNSAFE 表示权限。</p>\n<p>​\tCreateMode.PERSISTENT_SEQUENTIAL 永久存储，文件内容编号递增。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SendContent</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>             * 创建 ZooKeeper 对象</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>             * param1: zookeeper_IP + 端口号</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>             * param2: 访问超时设置 --- 时间设置长一点</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>             * param3: 通过观察者模式发出访问回复，当连接成功后，编写成功信息</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>             */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token class-name\">ZooKeeper</span> zooKeeper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ZooKeeper</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                    <span class=\"token string\">\"192.168.88.128:2181\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                    <span class=\"token number\">1000000</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                    <span class=\"token keyword\">new</span> <span class=\"token class-name\">Watcher</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">process</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WatchedEvent</span> watchedEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"获取链接\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>             * 发送内容  向 zookeeper 服务器中</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>             * param1: 发送的文件</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>             * param2: 发送的内容 (要转变成 Bytes [])</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>             * param3: 权限</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>             * param4: 内容的模式</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>             */</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token class-name\">String</span> result <span class=\"token operator\">=</span> zooKeeper<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                    <span class=\"token string\">\"/demos/rmi_address\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                    <span class=\"token string\">\"rmi:localhost:8080/demoService\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                    <span class=\"token class-name\">ZooDefs<span class=\"token punctuation\">.</span>Ids</span><span class=\"token punctuation\">.</span><span class=\"token constant\">OPEN_ACL_UNSAFE</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                    <span class=\"token class-name\">CreateMode</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PERSISTENT_SEQUENTIAL</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"result  -> \"</span><span class=\"token operator\">+</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">KeeperException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"4-查看上传数据\"><a class=\"anchor\" href=\"#4-查看上传数据\">#</a> 4     查看上传数据</h4>\n<p>​\tls -R /            : 查看列表</p>\n<p>​\tget  /demo/nn0000000002     : 查看内容</p>\n<h3 id=\"九-从zookeeper中发现内容\"><a class=\"anchor\" href=\"#九-从zookeeper中发现内容\">#</a> 九、    从 zookeeper 中发现内容</h3>\n<p>​\t在原有项目中新建一个类，类中编写主方法。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">ZooKeeper</span> zookeeper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ZooKeeper</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"192.168.32.128:2181\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Watcher</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">process</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WatchedEvent</span> watchedEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"获取连接\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 获取列表</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> zookeeper<span class=\"token punctuation\">.</span><span class=\"token function\">getChildren</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/demo\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> child <span class=\"token operator\">:</span> list<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> result <span class=\"token operator\">=</span> zookeeper<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/demo/\"</span> <span class=\"token operator\">+</span> child<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">KeeperException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"十-手写rpc框架\"><a class=\"anchor\" href=\"#十-手写rpc框架\">#</a> 十、手写 RPC 框架</h3>\n<p>​\t使用 Zookeeper 作为注册中心，RMI 作为连接技术，手写 RPC 框架。</p>\n<h4 id=\"1-创建项目parentdemo\"><a class=\"anchor\" href=\"#1-创建项目parentdemo\">#</a> 1     创建项目 ParentDemo</h4>\n<p>​\t创建父项目 ParentDemo。</p>\n<p>​\t包含 3 个聚合子项目。</p>\n<p>​\tpojo: service 中需要的实体类</p>\n<p>​\tservice：包含被 serviceimpl 和 consumer 依赖的接口。</p>\n<p>​\tserviceimpl:provider 提供的服务内容</p>\n<p>​\tconsumer：消费者，调用服务内容。</p>\n<h4 id=\"2-在父项目中添加依赖\"><a class=\"anchor\" href=\"#2-在父项目中添加依赖\">#</a> 2     在父项目中添加依赖</h4>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">ZooKeeper</span> zookeeper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ZooKeeper</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"192.168.32.128:2181\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Watcher</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">process</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WatchedEvent</span> watchedEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"获取连接\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 获取列表</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> zookeeper<span class=\"token punctuation\">.</span><span class=\"token function\">getChildren</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/demo\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> child <span class=\"token operator\">:</span> list<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> result <span class=\"token operator\">=</span> zookeeper<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/demo/\"</span> <span class=\"token operator\">+</span> child<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">KeeperException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"3-创建service项目\"><a class=\"anchor\" href=\"#3-创建service项目\">#</a> 3     创建 service 项目</h4>\n<h4 id=\"4-创建demoservice接口\"><a class=\"anchor\" href=\"#4-创建demoservice接口\">#</a> 4     创建 DemoService 接口</h4>\n<p>​\t创建 com.msb.DemoService</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">DemoService</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Remote</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token class-name\">String</span> <span class=\"token function\">demo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> param<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">RemoteException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"5-创建serviceimpl项目\"><a class=\"anchor\" href=\"#5-创建serviceimpl项目\">#</a> 5     创建 serviceimpl 项目</h4>\n<p>​\t此项目编写接口具体实现，RMI 服务发布和把信息发送到 Zookeeper 中。</p>\n<p>​\t项目结构如下：</p>\n<p>​\t在 pom.xml 中添加对 service 项目的依赖</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>service<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.msb<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.0.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h4 id=\"6-创建demoserviceimpl\"><a class=\"anchor\" href=\"#6-创建demoserviceimpl\">#</a> 6     创建 DemoServiceImpl</h4>\n<p>​\t创建 com.bjsxt.service.impl.DemoServiceImpl</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DemoServiceImpl</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">UnicastRemoteObject</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">DemoService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">DemoServiceImpl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">RemoteException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">demo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> param<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">RemoteException</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> param<span class=\"token operator\">+</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"7-创建rmirun\"><a class=\"anchor\" href=\"#7-创建rmirun\">#</a> 7     创建 RmiRun</h4>\n<p>​\t创建 com.msb.RmiRun。实现 RMI 服务的发布和 Zookeeper 消息的发布。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RmiRun</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token class-name\">DemoService</span> demoService <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DemoServiceImpl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token class-name\">LocateRegistry</span><span class=\"token punctuation\">.</span><span class=\"token function\">createRegistry</span><span class=\"token punctuation\">(</span><span class=\"token number\">8888</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token class-name\">String</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"rmi://localhost:8888/demoService\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token class-name\">Naming</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>demoService<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token class-name\">ZooKeeper</span> zookeeper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ZooKeeper</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"192.168.32.128:2181\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Watcher</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">process</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WatchedEvent</span> watchedEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"获取连接\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token class-name\">String</span> content <span class=\"token operator\">=</span> zookeeper<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/demo/demoService\"</span><span class=\"token punctuation\">,</span>url<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ZooDefs<span class=\"token punctuation\">.</span>Ids</span><span class=\"token punctuation\">.</span><span class=\"token constant\">OPEN_ACL_UNSAFE</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">CreateMode</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PERSISTENT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"服务发布成功。。。。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">AlreadyBoundException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">KeeperException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"8-创建consumer项目\"><a class=\"anchor\" href=\"#8-创建consumer项目\">#</a> 8     创建 Consumer 项目</h4>\n<p>​\t新建 consumer 项目，此项目需要从 zookeeper 中获取 rmi 信息，并调用 rmi 服务</p>\n<p>​\t在 pom.xml 中添加对 service 项目的依赖</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>service<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.msb<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.0.0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h4 id=\"9-创建接口和实现类\"><a class=\"anchor\" href=\"#9-创建接口和实现类\">#</a> 9     创建接口和实现类</h4>\n<p>​\t创建 com.msb.service.ConsumerService 接口</p>\n<p>​\t创建 com.msb.service.impl.ConsumerServiceImpl 实现类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ConsumerService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token class-name\">String</span> <span class=\"token function\">consumerService</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Service</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ConsumerServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ConsumerService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">consumerService</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> param<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token class-name\">ZooKeeper</span> zookeeper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ZooKeeper</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"192.168.32.128:2181\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Watcher</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">process</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WatchedEvent</span> watchedEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"获取连接\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> urlByte <span class=\"token operator\">=</span> zookeeper<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/demo/demoService\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token class-name\">DemoService</span> demoService <span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DemoService</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Naming</span><span class=\"token punctuation\">.</span><span class=\"token function\">lookup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>urlByte<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token class-name\">String</span> result <span class=\"token operator\">=</span> demoService<span class=\"token punctuation\">.</span><span class=\"token function\">demo</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">KeeperException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">NotBoundException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"10-创建控制器\"><a class=\"anchor\" href=\"#10-创建控制器\">#</a> 10  创建控制器</h4>\n<p>​\t创建 com.msb.controller.DemoController 控制器</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Controller</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DemoController</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">ConsumerService</span> consumerService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/demo\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@ResponseBody</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">demo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> consumerService<span class=\"token punctuation\">.</span><span class=\"token function\">consumerService</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"11-创建启动器\"><a class=\"anchor\" href=\"#11-创建启动器\">#</a> 11  创建启动器</h4>\n<p>​\t创建 com.msb.ConsumerApplication</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ConsumerApplication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConsumerApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"12-测试\"><a class=\"anchor\" href=\"#12-测试\">#</a> 12  测试</h4>\n<p>​\t在浏览器输入：<span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo4MDgwL2RlbW8/cGFyYW09ZGVtbw==\">http://localhost:8080/demo?param=demo</span></p>\n<p>​\t观察结果是否是：demo123</p>\n\n<div id=\"gitalk-container\"></div>\n<script src=\"https://cdn.bootcss.com/blueimp-md5/2.12.0/js/md5.min.js\"></script><link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"><script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n\n\t\t<script>\n\t\tvar gitalkConfig = {\"clientID\":\"eda74f740080fa01d0b5\",\"clientSecret\":\"c994dd2162a1dadaefbf078fcab49361438a7aca\",\"repo\":\"comments001\",\"owner\":\"onlymarryu\",\"admin\":[\"onlymarryu\"],\"distractionFreeMode\":true,\"proxy\":\"https://winter-rain-5b30.wudu-bk.workers.dev/https://github.com/login/oauth/access_token\"};\n\t    gitalkConfig.id = md5(location.pathname);\n\t\tvar gitalk = new Gitalk(gitalkConfig);\n\t    gitalk.render(\"gitalk-container\");\n\t    </script>",
            "tags": [
                "分布式",
                "RPC"
            ]
        }
    ]
}